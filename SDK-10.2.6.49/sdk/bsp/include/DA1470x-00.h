/*
 * Copyright (C) 2021-2022 Dialog Semiconductor.
 * This computer program includes Confidential, Proprietary Information
 * of Dialog Semiconductor. All Rights Reserved.
 *
 * @file     DA1470x-00.h
 * @brief    CMSIS HeaderFile
 * @version  1.2
 * @date     18. October 2022
 * @note     Generated by SVDConv V3.3.27 on Monday, 31.10.2022 16:08:50
 * XXX       from File 'config/embsys/Dialog_Semiconductor/DA1470x-00.xml',
 *           last modified on Tuesday, 18.10.2022 13:09:15
 */



/** @addtogroup PLA_BSP_REGISTERS
  * @{
  */


/** @addtogroup DA1470x
  * @{
  */


#ifndef DA1470X_H
#define DA1470X_H

#ifdef __cplusplus
extern "C" {
#endif


/** @addtogroup Configuration_of_CMSIS
  * @{
  */



/* =========================================================================================================================== */
/* ================                                Interrupt Number Definition                                ================ */
/* =========================================================================================================================== */

/**
 * @brief Interrupt Number Definition
 */

#if (MAIN_PROCESSOR_BUILD)

typedef enum {
/* =======================================  ARM Cortex-M33 Specific Interrupt Numbers  ======================================= */
  Reset_IRQn                = -15,              /*!< -15  Reset Vector, invoked on Power up and warm reset                     */
  NonMaskableInt_IRQn       = -14,              /*!< -14  Non maskable Interrupt, cannot be stopped or preempted               */
  HardFault_IRQn            = -13,              /*!< -13  Hard Fault, all classes of Fault                                     */
  MemoryManagement_IRQn     = -12,              /*!< -12  Memory Management, MPU mismatch, including Access Violation
                                                     and No Match                                                              */
  BusFault_IRQn             = -11,              /*!< -11  Bus Fault, Pre-Fetch-, Memory Access Fault, other address/memory
                                                     related Fault                                                             */
  UsageFault_IRQn           = -10,              /*!< -10  Usage Fault, i.e. Undef Instruction, Illegal State Transition        */
  SecureFault_IRQn          =  -9,              /*!< -9 Secure Fault Handler                                                   */
  SVCall_IRQn               =  -5,              /*!< -5 System Service Call via SVC instruction                                */
  DebugMonitor_IRQn         =  -4,              /*!< -4 Debug Monitor                                                          */
  PendSV_IRQn               =  -2,              /*!< -2 Pendable request for system service                                    */
  SysTick_IRQn              =  -1,              /*!< -1 System Tick Timer                                                      */
/* ==========================================  DA1470x Specific Interrupt Numbers  =========================================== */
  CMAC2SYS_IRQn             =   0,              /*!< 0  CMAC and mailbox interrupt request.                                    */
  SNC2SYS_IRQn              =   1,              /*!< 1  SNC M0+ interrupt to Cortex M33.                                       */
  M33_Cache_MRM_IRQn        =   2,              /*!< 2  CM33 Cache Miss Rate Monitor interrupt request.                        */
  PDC_M33_IRQn              =   3,              /*!< 3  Wakeup IRQ from PDC to CM33.                                           */
  KEY_WKUP_GPIO_IRQn        =   4,              /*!< 4  Debounced button press interrupt request.                              */
  VBUS_IRQn                 =   5,              /*!< 5  VBUS presence interrupt request.                                       */
  CHARGER_STATE_IRQn        =   6,              /*!< 6  Charger State interrupt request.                                       */
  CHARGER_ERROR_IRQn        =   7,              /*!< 7  Charger Error interrupt request.                                       */
  DCDC_BOOST_IRQn           =   8,              /*!< 8  DCDC boost controller interrupt request.                               */
  PLL48_LOCK_IRQn           =   9,              /*!< 9  PLL48 lock interrupt request. Indicates that the PLL48 is
                                                     locked at 48MHz.                                                          */
  CRYPTO_IRQn               =  10,              /*!< 10 Crypto interrupt request.                                              */
  PLL_LOCK_IRQn             =  11,              /*!< 11 PLL lock interrupt request. Indicates that PLL is locked
                                                     at 160MHz.                                                                */
  XTAL32M_RDY_IRQn          =  12,              /*!< 12 XTAL32M trimmed and ready interrupt request.                           */
  RFDIAG_IRQn               =  13,              /*!< 13 Baseband or Radio Diagnostics interrupt request.                       */
  GPIO_P0_IRQn              =  14,              /*!< 14 GPIO port 0 toggle interrupt request.                                  */
  GPIO_P1_IRQn              =  15,              /*!< 15 GPIO port 1 toggle interrupt request.                                  */
  GPIO_P2_IRQn              =  16,              /*!< 16 GPIO port 2 toggle interrupt request.                                  */
  TIMER_IRQn                =  17,              /*!< 17 TIMER interrupt request.                                               */
  TIMER2_IRQn               =  18,              /*!< 18 TIMER2 interrupt request.                                              */
  TIMER3_IRQn               =  19,              /*!< 19 TIMER3 interrupt request.                                              */
  TIMER4_IRQn               =  20,              /*!< 20 TIMER4 interrupt request.                                              */
  TIMER5_IRQn               =  21,              /*!< 21 TIMER5 interrupt request.                                              */
  TIMER6_IRQn               =  22,              /*!< 22 TIMER6 interrupt request.                                              */
  RTC_IRQn                  =  23,              /*!< 23 RTC interrupt request.                                                 */
  RTC_EVENT_IRQn            =  24,              /*!< 24 RTC event interrupt request.                                           */
  CAPTIMER_IRQn             =  25,              /*!< 25 GPIO triggered Timer Capture interrupt request.                        */
  ADC_IRQn                  =  26,              /*!< 26 General Purpose Analog-Digital Converter interrupt request.            */
  ADC2_IRQn                 =  27,              /*!< 27 Application Analog-Digital Converter interrupt request.                */
  DMA_IRQn                  =  28,              /*!< 28 General Purpose DMA interrupt request.                                 */
  UART_IRQn                 =  29,              /*!< 29 UART interrupt request.                                                */
  UART2_IRQn                =  30,              /*!< 30 UART2 interrupt request.                                               */
  UART3_IRQn                =  31,              /*!< 31 UART3 interrupt request.                                               */
  SPI_IRQn                  =  32,              /*!< 32 SPI interrupt request.                                                 */
  SPI2_IRQn                 =  33,              /*!< 33 SPI2 interrupt request.                                                */
  SPI3_IRQn                 =  34,              /*!< 34 SPI3 interrupt request.                                                */
  I2C_IRQn                  =  35,              /*!< 35 I2C interrupt request.                                                 */
  I2C2_IRQn                 =  36,              /*!< 36 I2C2 interrupt request.                                                */
  I2C3_IRQn                 =  37,              /*!< 37 I2C3 interrupt request.                                                */
  I3C_IRQn                  =  38,              /*!< 38 I3C interrupt request.                                                 */
  USB_IRQn                  =  39,              /*!< 39 USB interrupt request.                                                 */
  PCM_IRQn                  =  40,              /*!< 40 PCM interrupt request.                                                 */
  SRC_IN_IRQn               =  41,              /*!< 41 SRC input interrupt request.                                           */
  SRC_OUT_IRQn              =  42,              /*!< 42 SRC output interrupt request.                                          */
  SRC2_IN_IRQn              =  43,              /*!< 43 SRC2 input interrupt request.                                          */
  SRC2_OUT_IRQn             =  44,              /*!< 44 SRC2 output interrupt request.                                         */
  VAD_IRQn                  =  45,              /*!< 45 VAD interrupt request.                                                 */
  eMMC_IRQn                 =  46,              /*!< 46 eMMC controller interrupt request.                                     */
  SDIO_IRQn                 =  47,              /*!< 47 SDIO controller interrupt request.                                     */
  GPU_IRQn                  =  48,              /*!< 48 GPU interrupt request to Cortex M33.                                   */
  LCD_IRQn                  =  49,              /*!< 49 LCD controller interrupt request.                                      */
  DSI_IRQn                  =  50,              /*!< 50 DSI/D-PHY interrupt request.                                           */
  CHARGER_DET_IRQn          =  51,              /*!< 51 Charger detection interrupt request.                                   */
  DCACHE_MRM_IRQn           =  52,              /*!< 52 Data cache MRM interrupt request.                                      */
  CLK_CALIBRATION_IRQn      =  53,              /*!< 53 Clock calibration interrupt request.                                   */
  VSYS_GEN_IRQn             =  54,              /*!< 54 VSYS generator interrupt request.                                      */
  RESERVED55_IRQn           =  55               /*!< 55 SoftWare interrupt request.                                            */
} IRQn_Type;



/* =========================================================================================================================== */
/* ================                           Processor and Core Peripheral Section                           ================ */
/* =========================================================================================================================== */

/* ==========================  Configuration of the ARM Cortex-M33 Processor and Core Peripherals  =========================== */
#define __CM33_REV                 0x0002U      /*!< CM33 Core Revision                                                        */
#define __NVIC_PRIO_BITS               4        /*!< Number of Bits used for Priority Levels                                   */
#define __Vendor_SysTickConfig         0        /*!< Set to 1 if different SysTick Config is used                              */
#define __VTOR_PRESENT                 1        /*!< Set to 1 if CPU supports Vector Table Offset Register                     */
#define __MPU_PRESENT                  1        /*!< MPU present                                                               */
#define __FPU_PRESENT                  1        /*!< FPU present                                                               */
#define __FPU_DP                       0        /*!< Double Precision FPU                                                      */
#define __DSP_PRESENT                  1        /*!< DSP extension present                                                     */
#define __SAUREGION_PRESENT            0        /*!< SAU region present                                                        */

#elif (SNC_PROCESSOR_BUILD)

typedef enum {
/* =======================================  ARM Cortex-M0+ Specific Interrupt Numbers  ======================================= */
NMI_IRQn             = -14,                     /*!<  2 Non Maskable Interrupt.                                                */
HardFault_IRQn       = -13,                     /*!<  3 Cortex-M0 Hard Fault Interrupt.                                        */
SVCall_IRQn          =  -5,                     /*!< 11 Cortex-M0 SV Call Interrupt.                                           */
PendSV_IRQn          =  -2,                     /*!< 14 Cortex-M0 Pend SV Interrupt.                                           */
SysTick_IRQn         =  -1,                     /*!< 15 Cortex-M0 System Tick Interrupt.                                       */
/* =======================================  DA1470x SNC CM0+ Specific Interrupt Numbers  ===================================== */
SYS2SNC_IRQn         =  0,                      /*!< 0                                                                         */
CMAC2SNC_IRQn        =  1,                      /*!< 1                                                                         */
PDC_SNC_IRQn         =  2,                      /*!< 2                                                                         */
KEY_WKUP_GPIO_IRQn   =  3,                      /*!< 3                                                                         */
GPIO_P0_IRQn         =  4,                      /*!< 4                                                                         */
GPIO_P1_IRQn         =  5,                      /*!< 5                                                                         */
GPIO_P2_IRQn         =  6,                      /*!< 6                                                                         */
TIMER_IRQn           =  7,                      /*!< 7                                                                         */
TIMER3_IRQn          =  8,                      /*!< 8                                                                         */
TIMER4_IRQn          =  9,                      /*!< 9                                                                         */
TIMER5_IRQn          = 10,                      /*!< 10                                                                        */
TIMER6_IRQn          = 11,                      /*!< 11                                                                        */
RTC_IRQn             = 12,                      /*!< 12                                                                        */
RTC_EVENT_IRQn       = 13,                      /*!< 13                                                                        */
CAPTIMER_IRQn        = 14,                      /*!< 14                                                                        */
ADC_IRQn             = 15,                      /*!< 15                                                                        */
UART_IRQn            = 16,                      /*!< 16                                                                        */
UART2_IRQn           = 17,                      /*!< 17                                                                        */
UART3_IRQn           = 18,                      /*!< 18                                                                        */
SPI_IRQn             = 19,                      /*!< 19                                                                        */
SPI2_IRQn            = 20,                      /*!< 20                                                                        */
SPI3_IRQn            = 21,                      /*!< 21                                                                        */
I2C_IRQn             = 22,                      /*!< 22                                                                        */
I2C2_IRQn            = 23,                      /*!< 23                                                                        */
I2C3_IRQn            = 24,                      /*!< 24                                                                        */
I3C_IRQn             = 25,                      /*!< 25                                                                        */
PCM_IRQn             = 26,                      /*!< 26                                                                        */
SRC_IN_IRQn          = 27,                      /*!< 27                                                                        */
SRC_OUT_IRQn         = 28,                      /*!< 28                                                                        */
SRC2_IN_IRQn         = 29,                      /*!< 29                                                                        */
SRC2_OUT_IRQn        = 30,                      /*!< 30                                                                        */
VAD_IRQn             = 31                       /*!< 31                                                                        */
} IRQn_Type;



/* =========================================================================================================================== */
/* ================                           Processor and Core Peripheral Section                           ================ */
/* =========================================================================================================================== */

/* ==========================  Configuration of the ARM Cortex-M0+ Processor and Core Peripherals  =========================== */
#define __CM0_REV                 0x0000        /*!< Core Revision r2p1                                                        */
#define __NVIC_PRIO_BITS          2             /*!< Number of Bits used for Priority Levels                                   */
#define __Vendor_SysTickConfig    0             /*!< Set to 1 if different SysTick Config is used                              */

#endif /* PROCESSOR_BUILD */

/** @} */ /* End of group Configuration_of_CMSIS */

#if (MAIN_PROCESSOR_BUILD)
#include "core_cm33.h"                          /*!< ARM Cortex-M33 processor and core peripherals                             */
#include "system_DA1470x.h"                     /*!< DA1470x System                                                            */
#elif (SNC_PROCESSOR_BUILD)
#include "core_cm0plus.h"                       /*!< ARM Cortex-M0+ processor and core peripherals                             */
#include "system_DA1470x-snc.h"                 /*!< DA1470x SNC                                                               */
#endif /* PROCESSOR_BUILD */

// non-core specific code:

#ifndef __IM                                    /*!< Fallback for older CMSIS versions                                         */
  #define __IM   __I
#endif
#ifndef __OM                                    /*!< Fallback for older CMSIS versions                                         */
  #define __OM   __O
#endif
#ifndef __IOM                                   /*!< Fallback for older CMSIS versions                                         */
  #define __IOM  __IO
#endif


/* =========================================================================================================================== */
/* ================                            Device Specific Peripheral Section                             ================ */
/* =========================================================================================================================== */


/** @addtogroup Device_Peripheral_peripherals
  * @{
  */



/* =========================================================================================================================== */
/* ================                                         AES_HASH                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief AES_HASH registers (AES_HASH)
  */

typedef struct {                                /*!< (@ 0x30040000) AES_HASH Structure                                         */
  __IOM uint32_t  CRYPTO_CTRL_REG;              /*!< (@ 0x00000000) Crypto Control register                                    */
  __IOM uint32_t  CRYPTO_START_REG;             /*!< (@ 0x00000004) Crypto Start calculation                                   */
  __IOM uint32_t  CRYPTO_FETCH_ADDR_REG;        /*!< (@ 0x00000008) Crypto DMA fetch register                                  */
  __IOM uint32_t  CRYPTO_LEN_REG;               /*!< (@ 0x0000000C) Crypto Length of the input block in bytes                  */
  __IOM uint32_t  CRYPTO_DEST_ADDR_REG;         /*!< (@ 0x00000010) Crypto DMA destination memory                              */
  __IOM uint32_t  CRYPTO_STATUS_REG;            /*!< (@ 0x00000014) Crypto Status register                                     */
  __IOM uint32_t  CRYPTO_CLRIRQ_REG;            /*!< (@ 0x00000018) Crypto Clear interrupt request                             */
  __IOM uint32_t  CRYPTO_MREG0_REG;             /*!< (@ 0x0000001C) Crypto Mode depended register 0                            */
  __IOM uint32_t  CRYPTO_MREG1_REG;             /*!< (@ 0x00000020) Crypto Mode depended register 1                            */
  __IOM uint32_t  CRYPTO_MREG2_REG;             /*!< (@ 0x00000024) Crypto Mode depended register 2                            */
  __IOM uint32_t  CRYPTO_MREG3_REG;             /*!< (@ 0x00000028) Crypto Mode depended register 3                            */
  __IM  uint32_t  RESERVED[53];
  __IOM uint32_t  CRYPTO_KEYS_START;            /*!< (@ 0x00000100) Crypto First position of the AES keys storage
                                                                    memory                                                     */
} AES_HASH_Type;                                /*!< Size = 260 (0x104)                                                        */



/* =========================================================================================================================== */
/* ================                                        ANAMISC_BIF                                        ================ */
/* =========================================================================================================================== */


/**
  * @brief ANAMISC_BIF registers (ANAMISC_BIF)
  */

typedef struct {                                /*!< (@ 0x50050600) ANAMISC_BIF Structure                                      */
  __IM  uint32_t  RESERVED[4];
  __IOM uint32_t  CLK_REF_SEL_REG;              /*!< (@ 0x00000010) Select clock for oscillator calibration                    */
  __IOM uint32_t  CLK_REF_CNT_REG;              /*!< (@ 0x00000014) Count value for oscillator calibration                     */
  __IOM uint32_t  CLK_REF_VAL_REG;              /*!< (@ 0x00000018) DIVN reference cycles, lower 16 bits                       */
  __IOM uint32_t  CLK_CAL_IRQ_REG;              /*!< (@ 0x0000001C) Select clock for oscillator calibration                    */
} ANAMISC_BIF_Type;                             /*!< Size = 32 (0x20)                                                          */



/* =========================================================================================================================== */
/* ================                                           CACHE                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief CACHE registers (CACHE)
  */

typedef struct {                                /*!< (@ 0x100C0000) CACHE Structure                                            */
  __IM  uint32_t  RESERVED[8];
  __IOM uint32_t  CACHE_CTRL2_REG;              /*!< (@ 0x00000020) Cache control register 2 (only Word (32-bits)
                                                                    access supported).                                         */
  __IM  uint32_t  RESERVED1;
  __IOM uint32_t  CACHE_MRM_HITS_REG;           /*!< (@ 0x00000028) Cache MRM (Miss Rate Monitor) HITS register (only
                                                                    Word (32-bits) access supported).                          */
  __IOM uint32_t  CACHE_MRM_MISSES_REG;         /*!< (@ 0x0000002C) Cache MRM (Miss Rate Monitor) MISSES register
                                                                    (only Word (32-bits) access supported).                    */
  __IOM uint32_t  CACHE_MRM_CTRL_REG;           /*!< (@ 0x00000030) Cache MRM (Miss Rate Monitor) CONTROL register
                                                                    (only Word (32-bits) access supported).                    */
  __IOM uint32_t  CACHE_MRM_TINT_REG;           /*!< (@ 0x00000034) Cache MRM (Miss Rate Monitor) TIME INTERVAL register
                                                                    (only Word (32-bits) access supported).                    */
  __IOM uint32_t  CACHE_MRM_MISSES_THRES_REG;   /*!< (@ 0x00000038) Cache MRM (Miss Rate Monitor) THRESHOLD register
                                                                    (only Word (32-bits) access supported).                    */
  __IOM uint32_t  CACHE_MRM_HITS_THRES_REG;     /*!< (@ 0x0000003C) Cache MRM (Miss Rate Monitor) HITS THRESHOLD
                                                                    register (only Word (32-bits) access supported).           */
  __IOM uint32_t  CACHE_FLASH_REG;              /*!< (@ 0x00000040) Cache QSPI Flash program size and base address
                                                                    register (only Word (32-bits) access supported).           */
  __IM  uint32_t  RESERVED2;
  __IOM uint32_t  CACHE_MRM_HITS1WS_REG;        /*!< (@ 0x00000048) Cache MRM (Miss Rate Monitor) HITS with 1 Wait
                                                                    State register (only Word (32-bits) access
                                                                    supported).                                                */
  __IM  uint32_t  RESERVED3;
  __IOM uint32_t  SWD_RESET_REG;                /*!< (@ 0x00000050) SWD HW reset control register (only Word (32-bits)
                                                                    access supported).                                         */
} CACHE_Type;                                   /*!< Size = 84 (0x54)                                                          */



/* =========================================================================================================================== */
/* ================                                          CHARGER                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief CHARGER registers (CHARGER)
  */

typedef struct {                                /*!< (@ 0x51000600) CHARGER Structure                                          */
  __IOM uint32_t  CHARGER_CTRL_REG;             /*!< (@ 0x00000000) Charger main control register                              */
  __IM  uint32_t  RESERVED;
  __IOM uint32_t  CHARGER_STATUS_REG;           /*!< (@ 0x00000008) Charger main status register                               */
  __IOM uint32_t  CHARGER_VOLTAGE_PARAM_REG;    /*!< (@ 0x0000000C) Charger voltage settings register                          */
  __IOM uint32_t  CHARGER_CURRENT_PARAM_REG;    /*!< (@ 0x00000010) Charger current settings register                          */
  __IOM uint32_t  CHARGER_VOLTAGE_STATUS_REG;   /*!< (@ 0x00000014) Charger voltage status register                            */
  __IOM uint32_t  CHARGER_CURRENT_STATUS_REG;   /*!< (@ 0x00000018) Charger current status register                            */
  __IOM uint32_t  CHARGER_TEMPSET_PARAM_REG;    /*!< (@ 0x0000001C) Charger battery temperature settings register              */
  __IOM uint32_t  CHARGER_TEMPSET2_PARAM_REG;   /*!< (@ 0x00000020) Charger battery temperature settings register
                                                                    (Cooler, Warmer).                                          */
  __IOM uint32_t  CHARGER_PRE_CHARGE_TIMER_REG; /*!< (@ 0x00000024) Maximum pre-charge time limit register                     */
  __IOM uint32_t  CHARGER_CC_CHARGE_TIMER_REG;  /*!< (@ 0x00000028) Maximum CC-charge time limit register                      */
  __IOM uint32_t  CHARGER_CV_CHARGE_TIMER_REG;  /*!< (@ 0x0000002C) Maximum CV-charge time limit register                      */
  __IOM uint32_t  CHARGER_TOTAL_CHARGE_TIMER_REG;/*!< (@ 0x00000030) Maximum total charge time limit register                  */
  __IOM uint32_t  CHARGER_JEITA_V_CHARGE_REG;   /*!< (@ 0x00000034) JEITA-compliant Charge voltage settings register           */
  __IOM uint32_t  CHARGER_JEITA_V_PRECHARGE_REG;/*!< (@ 0x00000038) JEITA-compliant Pre-Charge voltage settings register       */
  __IOM uint32_t  CHARGER_JEITA_V_REPLENISH_REG;/*!< (@ 0x0000003C) JEITA-compliant Replenish settings register                */
  __IOM uint32_t  CHARGER_JEITA_V_OVP_REG;      /*!< (@ 0x00000040) JEITA-compliant OVP settings register                      */
  __IOM uint32_t  CHARGER_JEITA_CURRENT_REG;    /*!< (@ 0x00000044) JEITA-compliant current settings register                  */
  __IOM uint32_t  CHARGER_JEITA_CURRENT2_REG;   /*!< (@ 0x00000048) JEITA-compliant current settings register for
                                                                    'Cooler' and 'Warmer' zones                                */
  __IOM uint32_t  CHARGER_VBAT_COMP_TIMER_REG;  /*!< (@ 0x0000004C) Main Vbat comparator timer register                        */
  __IOM uint32_t  CHARGER_VOVP_COMP_TIMER_REG;  /*!< (@ 0x00000050) Vbat OVP comparator timer register                         */
  __IOM uint32_t  CHARGER_TDIE_COMP_TIMER_REG;  /*!< (@ 0x00000054) Die temperature comparator timer register                  */
  __IOM uint32_t  CHARGER_TBAT_MON_TIMER_REG;   /*!< (@ 0x00000058) Battery temperature monitor interval timer register        */
  __IOM uint32_t  CHARGER_TBAT_COMP_TIMER_REG;  /*!< (@ 0x0000005C) Battery temperature (main) comparator timer register       */
  __IOM uint32_t  CHARGER_THOT_COMP_TIMER_REG;  /*!< (@ 0x00000060) Battery temperature comparator timer register
                                                                    for 'Hot' zone                                             */
  __IOM uint32_t  CHARGER_PWR_UP_TIMER_REG;     /*!< (@ 0x00000064) Charger power-up settling timer register                   */
  __IOM uint32_t  CHARGER_STATE_IRQ_MASK_REG;   /*!< (@ 0x00000068) Mask register of Charger FSM IRQs                          */
  __IOM uint32_t  CHARGER_ERROR_IRQ_MASK_REG;   /*!< (@ 0x0000006C) Mask register of Charger Error IRQs                        */
  __IOM uint32_t  CHARGER_STATE_IRQ_STATUS_REG; /*!< (@ 0x00000070) Status register of Charger FSM IRQs                        */
  __IOM uint32_t  CHARGER_ERROR_IRQ_STATUS_REG; /*!< (@ 0x00000074) Status register of Charger Error IRQs                      */
  __IOM uint32_t  CHARGER_STATE_IRQ_CLR_REG;    /*!< (@ 0x00000078) Interrupt clear register of Charger FSM IRQs               */
  __IOM uint32_t  CHARGER_ERROR_IRQ_CLR_REG;    /*!< (@ 0x0000007C) Interrupt clear register of Charger Error IRQs             */
  __IOM uint32_t  CHARGER_LOCK_REG;             /*!< (@ 0x00000080) Charger HW lock register                                   */
  __IOM uint32_t  CHARGER_SWLOCK_REG;           /*!< (@ 0x00000084) Charger SW lock register                                   */
} CHARGER_Type;                                 /*!< Size = 136 (0x88)                                                         */



/* =========================================================================================================================== */
/* ================                                          CHG_DET                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief CHG_DET registers (CHG_DET)
  */

typedef struct {                                /*!< (@ 0x50040300) CHG_DET Structure                                          */
  __IOM uint32_t  CHG_DET_FSM_CTRL_REG;         /*!< (@ 0x00000000) Charge detection FSM control register                      */
  __IOM uint32_t  CHG_DET_FSM_STATUS_REG;       /*!< (@ 0x00000004) Charge detection FSM status register                       */
  __IOM uint32_t  CHG_DET_SW_CTRL_REG;          /*!< (@ 0x00000008) Charge detection manual (SW-based) mode control
                                                                    register                                                   */
  __IOM uint32_t  CHG_DET_STATUS_REG;           /*!< (@ 0x0000000C) Charge detection status register holding the
                                                                    comparator outputs                                         */
  __IOM uint32_t  CHG_DET_ADC_CTRL_REG;         /*!< (@ 0x00000010) Charge detection ADC control register                      */
  __IOM uint32_t  CHG_DET_TIMER_REG;            /*!< (@ 0x00000014) Charge detection timer register (used in the
                                                                    FSM)                                                       */
  __IOM uint32_t  CHG_DET_DCD_TIMER_REG;        /*!< (@ 0x00000018) Charge detection DCD time-out timer register
                                                                    (used in the FSM)                                          */
  __IOM uint32_t  CHG_DET_IRQ_MASK_REG;         /*!< (@ 0x0000001C) Charge detection IRQ mask register                         */
  __IOM uint32_t  CHG_DET_IRQ_STATUS_REG;       /*!< (@ 0x00000020) Charge detection IRQ status register                       */
  __IOM uint32_t  CHG_DET_IRQ_CLEAR_REG;        /*!< (@ 0x00000024) Charge detection IRQ clear register                        */
} CHG_DET_Type;                                 /*!< Size = 40 (0x28)                                                          */



/* =========================================================================================================================== */
/* ================                                       CHIP_VERSION                                        ================ */
/* =========================================================================================================================== */


/**
  * @brief CHIP_VERSION registers (CHIP_VERSION)
  */

typedef struct {                                /*!< (@ 0x50040000) CHIP_VERSION Structure                                     */
  __IOM uint32_t  CHIP_ID1_REG;                 /*!< (@ 0x00000000) Chip identification register 1.                            */
  __IOM uint32_t  CHIP_ID2_REG;                 /*!< (@ 0x00000004) Chip identification register 2.                            */
  __IOM uint32_t  CHIP_ID3_REG;                 /*!< (@ 0x00000008) Chip identification register 3.                            */
  __IOM uint32_t  CHIP_ID4_REG;                 /*!< (@ 0x0000000C) Chip identification register 4.                            */
  __IOM uint32_t  CHIP_SWC_REG;                 /*!< (@ 0x00000010) Software compatibility register.                           */
  __IOM uint32_t  CHIP_REVISION_REG;            /*!< (@ 0x00000014) Chip revision register.                                    */
  __IM  uint32_t  RESERVED[56];
  __IOM uint32_t  CHIP_TEST1_REG;               /*!< (@ 0x000000F8) Chip test register 1.                                      */
  __IOM uint32_t  CHIP_TEST2_REG;               /*!< (@ 0x000000FC) Chip test register 2.                                      */
} CHIP_VERSION_Type;                            /*!< Size = 256 (0x100)                                                        */



/* =========================================================================================================================== */
/* ================                                          CRG_AUD                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief CRG_AUD registers (CRG_AUD)
  */

typedef struct {                                /*!< (@ 0x50030000) CRG_AUD Structure                                          */
  __IM  uint32_t  RESERVED[16];
  __IOM uint32_t  PCM_DIV_REG;                  /*!< (@ 0x00000040) PCM divider and enables                                    */
  __IOM uint32_t  PCM_FDIV_REG;                 /*!< (@ 0x00000044) PCM fractional division register                           */
  __IOM uint32_t  PDM_DIV_REG;                  /*!< (@ 0x00000048) PDM divider and enables                                    */
  __IOM uint32_t  SRC_DIV_REG;                  /*!< (@ 0x0000004C) SRC divider and enables                                    */
} CRG_AUD_Type;                                 /*!< Size = 80 (0x50)                                                          */



/* =========================================================================================================================== */
/* ================                                         CRG_CTRL                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief CRG_CTRL registers (CRG_CTRL)
  */

typedef struct {                                /*!< (@ 0x50060000) CRG_CTRL Structure                                         */
  __IM  uint32_t  RESERVED;
  __IOM uint32_t  CLK_PDCTRL_REG;               /*!< (@ 0x00000004) Clock control settings for PD_CTRL                         */
} CRG_CTRL_Type;                                /*!< Size = 8 (0x8)                                                            */



/* =========================================================================================================================== */
/* ================                                          CRG_GPU                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief CRG_GPU registers (CRG_GPU)
  */

typedef struct {                                /*!< (@ 0x51001000) CRG_GPU Structure                                          */
  __IM  uint32_t  RESERVED;
  __IOM uint32_t  CLK_GPU_REG;                  /*!< (@ 0x00000004) Control register for clocks in PD_GPU                      */
} CRG_GPU_Type;                                 /*!< Size = 8 (0x8)                                                            */



/* =========================================================================================================================== */
/* ================                                          CRG_SNC                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief CRG_SNC registers (CRG_SNC)
  */

typedef struct {                                /*!< (@ 0x50020900) CRG_SNC Structure                                          */
  __IM  uint32_t  RESERVED;
  __IOM uint32_t  CLK_SNC_REG;                  /*!< (@ 0x00000004) Peripheral divider register                                */
  __IOM uint32_t  SET_CLK_SNC_REG;              /*!< (@ 0x00000008) Peripheral divider register SET register. Reads
                                                                    back 0x0000                                                */
  __IOM uint32_t  RESET_CLK_SNC_REG;            /*!< (@ 0x0000000C) Peripheral divider register RESET register. Reads
                                                                    back 0x0000                                                */
} CRG_SNC_Type;                                 /*!< Size = 16 (0x10)                                                          */



/* =========================================================================================================================== */
/* ================                                          CRG_SYS                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief CRG_SYS registers (CRG_SYS)
  */

typedef struct {                                /*!< (@ 0x50040400) CRG_SYS Structure                                          */
  __IOM uint32_t  CLK_SYS_REG;                  /*!< (@ 0x00000000) Peripheral divider register                                */
  __IM  uint32_t  RESERVED;
  __IOM uint32_t  SET_CLK_SYS_REG;              /*!< (@ 0x00000008) Peripheral divider SET register                            */
  __IOM uint32_t  RESET_CLK_SYS_REG;            /*!< (@ 0x0000000C) Peripheral divider RESET register                          */
  __IOM uint32_t  BATCHECK_REG;                 /*!< (@ 0x00000010) BATCHECK_REG                                               */
} CRG_SYS_Type;                                 /*!< Size = 20 (0x14)                                                          */



/* =========================================================================================================================== */
/* ================                                          CRG_TOP                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief CRG_TOP registers (CRG_TOP)
  */

typedef struct {                                /*!< (@ 0x50000000) CRG_TOP Structure                                          */
  __IOM uint32_t  CLK_AMBA_REG;                 /*!< (@ 0x00000000) HCLK, PCLK, divider and clock gates                        */
  __IOM uint32_t  CLK_CMAC_SWITCH_REG;          /*!< (@ 0x00000004) Clock switching register for CMAC clock domain             */
  __IM  uint32_t  RESERVED;
  __IOM uint32_t  RST_CTRL_REG;                 /*!< (@ 0x0000000C) Reset control register                                     */
  __IOM uint32_t  CLK_RADIO_REG;                /*!< (@ 0x00000010) Radio PLL control register                                 */
  __IOM uint32_t  CLK_CTRL_REG;                 /*!< (@ 0x00000014) Clock control register                                     */
  __IOM uint32_t  CLK_TMR_REG;                  /*!< (@ 0x00000018) Clock control for the timers                               */
  __IOM uint32_t  CLK_SWITCH2XTAL_REG;          /*!< (@ 0x0000001C) Switches clock from RC32M to XTAL32M                       */
  __IOM uint32_t  PMU_CTRL_REG;                 /*!< (@ 0x00000020) Power Management Unit control register                     */
  __IOM uint32_t  SYS_CTRL_REG;                 /*!< (@ 0x00000024) System Control register                                    */
  __IOM uint32_t  SYS_STAT_REG;                 /*!< (@ 0x00000028) System status register                                     */
  __IOM uint32_t  CLK_SNC_CTRL_REG;             /*!< (@ 0x0000002C) CLK_SNC_CTRL_REG                                           */
  __IOM uint32_t  SLP_MAP_REG;                  /*!< (@ 0x00000030) Map signals on GPIOs during sleep                          */
  __IOM uint32_t  LCD_EXT_CTRL_REG;             /*!< (@ 0x00000034) LCD_EXT_CTRL_REG                                           */
  __IM  uint32_t  RESERVED1;
  __IOM uint32_t  CLK_RCLP_REG;                 /*!< (@ 0x0000003C) 32/512 kHz RC oscillator register                          */
  __IOM uint32_t  CLK_XTAL32K_REG;              /*!< (@ 0x00000040) 32 kHz XTAL oscillator register                            */
  __IOM uint32_t  CLK_RCHS_REG;                 /*!< (@ 0x00000044) Fast RC control register                                   */
  __IOM uint32_t  CLK_RCX_REG;                  /*!< (@ 0x00000048) RCX-oscillator control register                            */
  __IOM uint32_t  CLK_RTCDIV_REG;               /*!< (@ 0x0000004C) Divisor for RTC 100Hz clock                                */
  __IOM uint32_t  BANDGAP_REG;                  /*!< (@ 0x00000050) bandgap trimming                                           */
  __IOM uint32_t  VBUS_IRQ_MASK_REG;            /*!< (@ 0x00000054) IRQ masking                                                */
  __IOM uint32_t  VBUS_IRQ_CLEAR_REG;           /*!< (@ 0x00000058) Clear pending IRQ register                                 */
  __IM  uint32_t  RESERVED2;
  __IOM uint32_t  BOD_CTRL_REG;                 /*!< (@ 0x00000060) Brown Out Detection control register                       */
  __IOM uint32_t  BOD_STATUS_REG;               /*!< (@ 0x00000064) BOD_STATUS_REG                                             */
  __IM  uint32_t  RESERVED3[2];
  __IOM uint32_t  P0_PAD_LATCH_REG;             /*!< (@ 0x00000070) Control the state retention of the GPIO ports              */
  __IOM uint32_t  P0_SET_PAD_LATCH_REG;         /*!< (@ 0x00000074) Control the state retention of the GPIO ports              */
  __IOM uint32_t  P0_RESET_PAD_LATCH_REG;       /*!< (@ 0x00000078) Control the state retention of the GPIO ports              */
  __IOM uint32_t  P1_PAD_LATCH_REG;             /*!< (@ 0x0000007C) Control the state retention of the GPIO ports              */
  __IOM uint32_t  P1_SET_PAD_LATCH_REG;         /*!< (@ 0x00000080) Control the state retention of the GPIO ports              */
  __IOM uint32_t  P1_RESET_PAD_LATCH_REG;       /*!< (@ 0x00000084) Control the state retention of the GPIO ports              */
  __IOM uint32_t  P2_PAD_LATCH_REG;             /*!< (@ 0x00000088) Control the state retention of the GPIO ports              */
  __IOM uint32_t  P2_SET_PAD_LATCH_REG;         /*!< (@ 0x0000008C) Control the state retention of the GPIO ports              */
  __IOM uint32_t  P2_RESET_PAD_LATCH_REG;       /*!< (@ 0x00000090) Control the state retention of the GPIO ports              */
  __IOM uint32_t  POR_CTRL_REG;                 /*!< (@ 0x00000094) Controls the POR on VBAT                                   */
  __IOM uint32_t  POR_PIN_REG;                  /*!< (@ 0x00000098) Selects a GPIO pin for POR generation                      */
  __IOM uint32_t  POR_TIMER_REG;                /*!< (@ 0x0000009C) Time for POR to happen                                     */
  __IM  uint32_t  RESERVED4[7];
  __IOM uint32_t  RESET_STAT_REG;               /*!< (@ 0x000000BC) Reset status register                                      */
  __IOM uint32_t  RAM_PWR_CTRL_REG;             /*!< (@ 0x000000C0) Control power state of System RAMS                         */
  __IM  uint32_t  RESERVED5[2];
  __IOM uint32_t  SECURE_BOOT_REG;              /*!< (@ 0x000000CC) Controls secure booting                                    */
  __IM  uint32_t  RESERVED6;
  __IOM uint32_t  DISCHARGE_RAIL_REG;           /*!< (@ 0x000000D4) Immediate rail resetting. There is no LDO/DCDC
                                                                    gating                                                     */
  __IM  uint32_t  RESERVED7[2];
  __IOM uint32_t  WAKEUP_HIBERN_REG;            /*!< (@ 0x000000E0) WAKEUP_HIBERN_REG                                          */
  __IOM uint32_t  SW_V18F_REG;                  /*!< (@ 0x000000E4) SW_V18F_REG                                                */
  __IOM uint32_t  BIAS_VREF_SEL_REG;            /*!< (@ 0x000000E8) BIAS_VREF_SEL_REG                                          */
  __IOM uint32_t  ANA_STATUS_REG;               /*!< (@ 0x000000EC) Analog Signals Status Register                             */
  __IOM uint32_t  POWER_CTRL_REG;               /*!< (@ 0x000000F0) Power control register                                     */
  __IOM uint32_t  PMU_SLEEP_REG;                /*!< (@ 0x000000F4) Configures the sleep/wakeup strategy                       */
  __IOM uint32_t  POWER_LVL_REG;                /*!< (@ 0x000000F8) POWER_LVL_REG                                              */
} CRG_TOP_Type;                                 /*!< Size = 252 (0xfc)                                                         */



/* =========================================================================================================================== */
/* ================                                         CRG_VSYS                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief CRG_VSYS registers (CRG_VSYS)
  */

typedef struct {                                /*!< (@ 0x50000B00) CRG_VSYS Structure                                         */
  __IOM uint32_t  VSYS_GEN_CTRL_REG;            /*!< (@ 0x00000000) VSYS_GEN_CTRL_REG                                          */
  __IOM uint32_t  VSYS_GEN_IRQ_STATUS_REG;      /*!< (@ 0x00000004) VSYS_GEN_IRQ_STATUS_REG                                    */
  __IOM uint32_t  VSYS_GEN_IRQ_CLEAR_REG;       /*!< (@ 0x00000008) VSYS_GEN_IRQ_CLEAR_REG                                     */
  __IOM uint32_t  VSYS_GEN_IRQ_MASK_REG;        /*!< (@ 0x0000000C) VSYS_GEN_IRQ_MASK_REG                                      */
} CRG_VSYS_Type;                                /*!< Size = 16 (0x10)                                                          */



/* =========================================================================================================================== */
/* ================                                         CRG_XTAL                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief CRG_XTAL registers (CRG_XTAL)
  */

typedef struct {                                /*!< (@ 0x50050400) CRG_XTAL Structure                                         */
  __IOM uint32_t  XTAL32M_START_REG;            /*!< (@ 0x00000000) Trim values for XTAL32M in START state of startup          */
  __IOM uint32_t  XTAL32M_SETTLE_REG;           /*!< (@ 0x00000004) Trim values for XTAL32M in SETTLE state of startup         */
  __IOM uint32_t  XTAL32M_TRIM_REG;             /*!< (@ 0x00000008) Trim values for XTAL32M in RUNNING state                   */
  __IOM uint32_t  XTAL32M_CAP_MEAS_REG;         /*!< (@ 0x0000000C) Capacitance measure circuit control                        */
  __IOM uint32_t  XTAL32M_FSM_REG;              /*!< (@ 0x00000010) Startup state machine configuration                        */
  __IOM uint32_t  XTAL32M_CTRL_REG;             /*!< (@ 0x00000014) Xtal32m control register                                   */
  __IOM uint32_t  XTAL32M_IRQ_CTRL_REG;         /*!< (@ 0x00000018) Xtal32m Interrupt control register                         */
  __IM  uint32_t  RESERVED[2];
  __IOM uint32_t  XTAL32M_STAT0_REG;            /*!< (@ 0x00000024) XTAL32M status register                                    */
  __IOM uint32_t  XTAL32M_IRQ_STAT_REG;         /*!< (@ 0x00000028) XTAL32M IRQ status register                                */
  __IM  uint32_t  RESERVED1[13];
  __IOM uint32_t  PLL_SYS_CTRL1_REG;            /*!< (@ 0x00000060) System PLL control register 1.                             */
  __IOM uint32_t  PLL_SYS_CTRL2_REG;            /*!< (@ 0x00000064) System PLL control register 2.                             */
  __IOM uint32_t  PLL_SYS_CTRL3_REG;            /*!< (@ 0x00000068) System PLL control register 3.                             */
  __IM  uint32_t  RESERVED2;
  __IOM uint32_t  PLL_SYS_STATUS_REG;           /*!< (@ 0x00000070) System PLL status register.                                */
  __IOM uint32_t  PLL_USB_CTRL1_REG;            /*!< (@ 0x00000074) USB PLL control register 1.                                */
  __IOM uint32_t  PLL_USB_CTRL2_REG;            /*!< (@ 0x00000078) USB PLL control register 2.                                */
  __IOM uint32_t  PLL_USB_CTRL3_REG;            /*!< (@ 0x0000007C) USB PLL control register 3.                                */
  __IOM uint32_t  PLL_USB_STATUS_REG;           /*!< (@ 0x00000080) USB PLL status register.                                   */
  __IM  uint32_t  RESERVED3[3];
  __IOM uint32_t  SYS_IRQ_CTRL_REG;             /*!< (@ 0x00000090) System IRQ control register                                */
  __IOM uint32_t  SET_SYS_IRQ_CTRL_REG;         /*!< (@ 0x00000094) System IRQ SET register                                    */
  __IOM uint32_t  RESET_SYS_IRQ_CTRL_REG;       /*!< (@ 0x00000098) System IRQ RESET register                                  */
} CRG_XTAL_Type;                                /*!< Size = 156 (0x9c)                                                         */



/* =========================================================================================================================== */
/* ================                                          DCACHE                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief DCACHE registers (DCACHE)
  */

typedef struct {                                /*!< (@ 0x30100000) DCACHE Structure                                           */
  __IOM uint32_t  DCACHE_CTRL_REG;              /*!< (@ 0x00000000) Dcache Control register                                    */
  __IOM uint32_t  DCACHE_BASE_ADDR_REG;         /*!< (@ 0x00000004) Dcache base address for cacheable region                   */
  __IOM uint32_t  DCACHE_MRM_HITS_REG;          /*!< (@ 0x00000008) Dcache MRM (Miss Rate Monitor) HITS register               */
  __IOM uint32_t  DCACHE_MRM_MISSES_REG;        /*!< (@ 0x0000000C) Dcache MRM (Miss Rate Monitor) MISSES register             */
  __IOM uint32_t  DCACHE_MRM_EVICTS_REG;        /*!< (@ 0x00000010) Dcache MRM (Miss Rate Monitor) EVICTS register             */
  __IOM uint32_t  DCACHE_MRM_CTRL_REG;          /*!< (@ 0x00000014) Dcache MRM (Miss Rate Monitor) CONTROL register            */
  __IOM uint32_t  DCACHE_MRM_TINT_REG;          /*!< (@ 0x00000018) Dcache MRM (Miss Rate Monitor) TIME INTERVAL
                                                                    register                                                   */
  __IOM uint32_t  DCACHE_MRM_MISSES_THRES_REG;  /*!< (@ 0x0000001C) Dcache MRM (Miss Rate Monitor) THRESHOLD register          */
  __IOM uint32_t  DCACHE_MRM_HITS_THRES_REG;    /*!< (@ 0x00000020) Dcache MRM (Miss Rate Monitor) HITS THRESHOLD
                                                                    register                                                   */
  __IOM uint32_t  DCACHE_MRM_EVICTS_THRES_REG;  /*!< (@ 0x00000024) Dcache MRM (Miss Rate Monitor) EVICTS THRESHOLD
                                                                    register                                                   */
} DCACHE_Type;                                  /*!< Size = 40 (0x28)                                                          */



/* =========================================================================================================================== */
/* ================                                           DCDC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief DCDC registers (DCDC)
  */

typedef struct {                                /*!< (@ 0x50000300) DCDC Structure                                             */
  __IOM uint32_t  BUCK_CTRL_REG;                /*!< (@ 0x00000000) DCDC Buck Control Register                                 */
} DCDC_Type;                                    /*!< Size = 4 (0x4)                                                            */



/* =========================================================================================================================== */
/* ================                                        DCDC_BOOST                                         ================ */
/* =========================================================================================================================== */


/**
  * @brief DCDC_BOOST registers (DCDC_BOOST)
  */

typedef struct {                                /*!< (@ 0x50000500) DCDC_BOOST Structure                                       */
  __IOM uint32_t  VLED_PWR_CTRL_REG;            /*!< (@ 0x00000000) VLED Power Control Register                                */
  __IOM uint32_t  VLED_PWR_STATUS_REG;          /*!< (@ 0x00000004) VLED Power Status Register                                 */
  __IOM uint32_t  BOOST_CTRL_REG0;              /*!< (@ 0x00000008) DCDC Boost Control Register                                */
  __IOM uint32_t  BOOST_CTRL_REG1;              /*!< (@ 0x0000000C) DCDC Boost Second Control Register                         */
  __IM  uint32_t  RESERVED;
  __IOM uint32_t  BOOST_STATUS_REG;             /*!< (@ 0x00000014) DCDC Boost Status Register                                 */
} DCDC_BOOST_Type;                              /*!< Size = 24 (0x18)                                                          */



/* =========================================================================================================================== */
/* ================                                            DMA                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief DMA registers (DMA)
  */

typedef struct {                                /*!< (@ 0x51000400) DMA Structure                                              */
  __IOM uint32_t  DMA0_A_START_REG;             /*!< (@ 0x00000000) Source address register of DMA channel 0                   */
  __IOM uint32_t  DMA0_B_START_REG;             /*!< (@ 0x00000004) Destination address register of DMA channel 0              */
  __IOM uint32_t  DMA0_INT_REG;                 /*!< (@ 0x00000008) Interrupt length register of DMA channel 0                 */
  __IOM uint32_t  DMA0_LEN_REG;                 /*!< (@ 0x0000000C) Transfer length register of DMA channel 0                  */
  __IOM uint32_t  DMA0_CTRL_REG;                /*!< (@ 0x00000010) Control register of DMA channel 0                          */
  __IOM uint32_t  DMA0_IDX_REG;                 /*!< (@ 0x00000014) Index pointer register of DMA channel 0                    */
  __IM  uint32_t  RESERVED[2];
  __IOM uint32_t  DMA1_A_START_REG;             /*!< (@ 0x00000020) Source address register of DMA channel 1                   */
  __IOM uint32_t  DMA1_B_START_REG;             /*!< (@ 0x00000024) Destination address register of DMA channel 1              */
  __IOM uint32_t  DMA1_INT_REG;                 /*!< (@ 0x00000028) Interrupt length register of DMA channel 1                 */
  __IOM uint32_t  DMA1_LEN_REG;                 /*!< (@ 0x0000002C) Transfer length register of DMA channel 1                  */
  __IOM uint32_t  DMA1_CTRL_REG;                /*!< (@ 0x00000030) Control register of DMA channel 1                          */
  __IOM uint32_t  DMA1_IDX_REG;                 /*!< (@ 0x00000034) Index pointer register of DMA channel 1                    */
  __IM  uint32_t  RESERVED1[2];
  __IOM uint32_t  DMA2_A_START_REG;             /*!< (@ 0x00000040) Source address register of DMA channel 2                   */
  __IOM uint32_t  DMA2_B_START_REG;             /*!< (@ 0x00000044) Destination address register of DMA channel 2              */
  __IOM uint32_t  DMA2_INT_REG;                 /*!< (@ 0x00000048) Interrupt length register of DMA channel 2                 */
  __IOM uint32_t  DMA2_LEN_REG;                 /*!< (@ 0x0000004C) Transfer length register of DMA channel 2                  */
  __IOM uint32_t  DMA2_CTRL_REG;                /*!< (@ 0x00000050) Control register of DMA channel 2                          */
  __IOM uint32_t  DMA2_IDX_REG;                 /*!< (@ 0x00000054) Index pointer register of DMA channel 2                    */
  __IM  uint32_t  RESERVED2[2];
  __IOM uint32_t  DMA3_A_START_REG;             /*!< (@ 0x00000060) Source address register of DMA channel 3                   */
  __IOM uint32_t  DMA3_B_START_REG;             /*!< (@ 0x00000064) Destination address register of DMA channel 3              */
  __IOM uint32_t  DMA3_INT_REG;                 /*!< (@ 0x00000068) Interrupt length register of DMA channel 3                 */
  __IOM uint32_t  DMA3_LEN_REG;                 /*!< (@ 0x0000006C) Transfer length register of DMA channel 3                  */
  __IOM uint32_t  DMA3_CTRL_REG;                /*!< (@ 0x00000070) Control register of DMA channel 3                          */
  __IOM uint32_t  DMA3_IDX_REG;                 /*!< (@ 0x00000074) Index pointer register of DMA channel 3                    */
  __IM  uint32_t  RESERVED3[2];
  __IOM uint32_t  DMA4_A_START_REG;             /*!< (@ 0x00000080) Source address register of DMA channel 4                   */
  __IOM uint32_t  DMA4_B_START_REG;             /*!< (@ 0x00000084) Destination address register of DMA channel 4              */
  __IOM uint32_t  DMA4_INT_REG;                 /*!< (@ 0x00000088) Interrupt length register of DMA channel 4                 */
  __IOM uint32_t  DMA4_LEN_REG;                 /*!< (@ 0x0000008C) Transfer length register of DMA channel 4                  */
  __IOM uint32_t  DMA4_CTRL_REG;                /*!< (@ 0x00000090) Control register of DMA channel 4                          */
  __IOM uint32_t  DMA4_IDX_REG;                 /*!< (@ 0x00000094) Index pointer register of DMA channel 4                    */
  __IM  uint32_t  RESERVED4[2];
  __IOM uint32_t  DMA5_A_START_REG;             /*!< (@ 0x000000A0) Source address register of DMA channel 5                   */
  __IOM uint32_t  DMA5_B_START_REG;             /*!< (@ 0x000000A4) Destination address register of DMA channel 5              */
  __IOM uint32_t  DMA5_INT_REG;                 /*!< (@ 0x000000A8) Interrupt length register of DMA channel 5                 */
  __IOM uint32_t  DMA5_LEN_REG;                 /*!< (@ 0x000000AC) Transfer length register of DMA channel 5                  */
  __IOM uint32_t  DMA5_CTRL_REG;                /*!< (@ 0x000000B0) Control register of DMA channel 5                          */
  __IOM uint32_t  DMA5_IDX_REG;                 /*!< (@ 0x000000B4) Index pointer register of DMA channel 5                    */
  __IM  uint32_t  RESERVED5[2];
  __IOM uint32_t  DMA6_A_START_REG;             /*!< (@ 0x000000C0) Source address register of DMA channel 6                   */
  __IOM uint32_t  DMA6_B_START_REG;             /*!< (@ 0x000000C4) Destination address register of DMA channel 6              */
  __IOM uint32_t  DMA6_INT_REG;                 /*!< (@ 0x000000C8) Interrupt length register of DMA channel 6                 */
  __IOM uint32_t  DMA6_LEN_REG;                 /*!< (@ 0x000000CC) Transfer length register of DMA channel 6                  */
  __IOM uint32_t  DMA6_CTRL_REG;                /*!< (@ 0x000000D0) Control register of DMA channel 6                          */
  __IOM uint32_t  DMA6_IDX_REG;                 /*!< (@ 0x000000D4) Index pointer register of DMA channel 6                    */
  __IM  uint32_t  RESERVED6[2];
  __IOM uint32_t  DMA7_A_START_REG;             /*!< (@ 0x000000E0) Source address register of DMA channel 7                   */
  __IOM uint32_t  DMA7_B_START_REG;             /*!< (@ 0x000000E4) Destination address register of DMA channel 7              */
  __IOM uint32_t  DMA7_INT_REG;                 /*!< (@ 0x000000E8) Interrupt length register of DMA channel 7                 */
  __IOM uint32_t  DMA7_LEN_REG;                 /*!< (@ 0x000000EC) Transfer length register of DMA channel 7                  */
  __IOM uint32_t  DMA7_CTRL_REG;                /*!< (@ 0x000000F0) Control register of DMA channel 7                          */
  __IOM uint32_t  DMA7_IDX_REG;                 /*!< (@ 0x000000F4) Index pointer register of DMA channel 7                    */
  __IM  uint32_t  RESERVED7[2];
  __IOM uint32_t  DMA_REQ_MUX_REG;              /*!< (@ 0x00000100) DMA channels peripherals mapping register                  */
  __IOM uint32_t  DMA_INT_STATUS_REG;           /*!< (@ 0x00000104) DMA Interrupt status register                              */
  __IOM uint32_t  DMA_CLEAR_INT_REG;            /*!< (@ 0x00000108) DMA Interrupt clear register                               */
  __IOM uint32_t  DMA_INT_MASK_REG;             /*!< (@ 0x0000010C) DMA Interrupt mask register                                */
  __IOM uint32_t  DMA_SET_INT_MASK_REG;         /*!< (@ 0x00000110) DMA Set Interrupt mask register                            */
  __IOM uint32_t  DMA_RESET_INT_MASK_REG;       /*!< (@ 0x00000114) DMA Reset Interrupt mask register                          */
} DMA_Type;                                     /*!< Size = 280 (0x118)                                                        */



/* =========================================================================================================================== */
/* ================                                           EMMC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief EMMC registers (EMMC)
  */

typedef struct {                                /*!< (@ 0x30058000) EMMC Structure                                             */
  __IOM uint32_t  EMMC_SDMASA_R_REG;            /*!< (@ 0x00000000) This register is used to configure a 32-bit Block
                                                                    Count or an SDMA System Address based on
                                                                    the Host Version 4 Enable bit in the Host
                                                                    Control 2 register. This register is applicable
                                                                    for both SD and eMMC modes.                                */
  __IOM uint16_t  EMMC_BLOCKSIZE_R_REG;         /*!< (@ 0x00000004) This register is used to configure an SDMA buffer
                                                                    boundary and the number of bytes in a data
                                                                    block. This register is applicable for both
                                                                    SD and eMMC modes.                                         */
  __IOM uint16_t  EMMC_BLOCKCOUNT_R_REG;        /*!< (@ 0x00000006) This register is used to configure the number
                                                                    of data blocks. This register is applicable
                                                                    for both SD and eMMC modes.                                */
  __IOM uint32_t  EMMC_ARGUMENT_R_REG;          /*!< (@ 0x00000008) This register is used to configure the SD/eMMC
                                                                    command argument.                                          */
  __IOM uint16_t  EMMC_XFER_MODE_R_REG;         /*!< (@ 0x0000000C) This register is used to control the operation
                                                                    of data transfers for an SD/eMMC mode. The
                                                                    Host driver sets this register before issuing
                                                                    a command that transfers data.                             */
  __IOM uint16_t  EMMC_CMD_R_REG;               /*!< (@ 0x0000000E) This register is used to provide the information
                                                                    related to a command and a response packet.
                                                                    This register is applicable for an SD/eMMC
                                                                    mode.                                                      */
  __IOM uint32_t  EMMC_RESP01_R_REG;            /*!< (@ 0x00000010) This register stores 39-08 bits of the Response
                                                                    Field for an SD/eMMC mode. The response
                                                                    for an SD/eMMC command can be a maximum
                                                                    of 128 bits. These 128 bits are segregated
                                                                    into four 32-bit registers: RESP01_R, RESP23_R,
                                                                    RESP45_R and RESP67_R.                                     */
  __IOM uint32_t  EMMC_RESP23_R_REG;            /*!< (@ 0x00000014) This register stores 71-40 bits of the Response
                                                                    Field for an SD/eMMC mode. This register
                                                                    is used to store the response from the cards.
                                                                    The response can be a maximum of 128 bits.
                                                                    These 128 bits are segregated into four
                                                                    32-bit registers: RESP01_R, RESP23_R, RESP45_R
                                                                    and RESP67_R.                                              */
  __IOM uint32_t  EMMC_RESP45_R_REG;            /*!< (@ 0x00000018) This register stores 103-72 bits of the Response
                                                                    Field for an SD/eMMC mode. The response
                                                                    for SD/eMMC command can be a maximum of
                                                                    128 bits. These 128 bits are segregated
                                                                    into four 32-bit registers: RESP01_R, RESP23_R,
                                                                    RESP45_R and RESP67_R.                                     */
  __IOM uint32_t  EMMC_RESP67_R_REG;            /*!< (@ 0x0000001C) This register stores 135-104 bits of the Response
                                                                    Field for an SD/eMMC mode. The SD/eMMC response
                                                                    can be a maximum of 128 bis. These 128 bits
                                                                    are segregated into four 32-bit registers:
                                                                    RESP01_R, RESP23_R, RESP45_R and RESP67_R.                 */
  __IOM uint32_t  EMMC_BUF_DATA_R_REG;          /*!< (@ 0x00000020) This register is used to access the packet buffer.
                                                                    This register is applicable for an SD/eMMC/UHS-II
                                                                    mode.                                                      */
  __IOM uint32_t  EMMC_PSTATE_REG;              /*!< (@ 0x00000024) This register indicates the present status of
                                                                    the Host Controller. This register is applicable
                                                                    for an SD/eMMC/UHS-II mode.                                */
  __IOM uint8_t   EMMC_HOST_CTRL1_R_REG;        /*!< (@ 0x00000028) This register is used to control the operation
                                                                    of the Host Controller. This register is
                                                                    applicable for an SD/eMMC/UHS-II mode.                     */
  __IOM uint8_t   EMMC_PWR_CTRL_R_REG;          /*!< (@ 0x00000029) This register is used to control the bus power
                                                                    for the Card. This register is applicable
                                                                    for an SD, eMMC, and UHS-II modes.                         */
  __IOM uint8_t   EMMC_BGAP_CTRL_R_REG;         /*!< (@ 0x0000002A) This register is used by the host driver to control
                                                                    any operation related to Block Gap. This
                                                                    register is applicable for an SD/eMMC/UHS-II
                                                                    mode.                                                      */
  __IOM uint8_t   EMMC_WUP_CTRL_R_REG;          /*!< (@ 0x0000002B) This register is mandatory for the Host Controller,
                                                                    but the wakeup functionality depends on
                                                                    the Host Controller system hardware and
                                                                    software. The Host Driver maintains voltage
                                                                    on the SD Bus by setting the SD Bus Power
                                                                    to 1 in the Power Control Register, while
                                                                    a wake-up event through the Card Interrupt
                                                                    is desired.                                                */
  __IOM uint16_t  EMMC_CLK_CTRL_R_REG;          /*!< (@ 0x0000002C) This register controls SDCLK (card clock) in
                                                                    an SD/eMMC mode and RCLK in the UHS-II mode.
                                                                    This register is applicable for an SD/eMMC/UHS-II
                                                                    mode.                                                      */
  __IOM uint8_t   EMMC_TOUT_CTRL_R_REG;         /*!< (@ 0x0000002E) This register is used to set the Data Timeout
                                                                    Counter value for an SD/eMMC mode according
                                                                    to the timer clock defined by the Capabilities
                                                                    register, while initializig the Host Controller.           */
  __IOM uint8_t   EMMC_SW_RST_R_REG;            /*!< (@ 0x0000002F) This register is used to generate a reset pulse
                                                                    by writing 1 to each bit of this register.
                                                                    After completing the reset, the Host Controller
                                                                    clears each bit. As it takes some time to
                                                                    complete a software reset, the Host Driver
                                                                    confirms that these bits are 0. This register
                                                                    is applicable for an SD/eMMC/UHS-II mode.
                                                                    Note: See Software Reset section in the
                                                                    DWC_mshc Databook for additional details.                  */
  __IOM uint16_t  EMMC_NORMAL_INT_STAT_R_REG;   /*!< (@ 0x00000030) This register reflects the status of the Normal
                                                                    Interrupt. This register is applicable for
                                                                    an SD/eMMC/UHS-II mode.                                    */
  __IOM uint16_t  EMMC_ERROR_INT_STAT_R_REG;    /*!< (@ 0x00000032) This register enables an interrupt when the Error
                                                                    Interrupt Status Enable is enabled and at
                                                                    least one of the statuses is set to 1. Writing
                                                                    to 1 clears the bit and writing to 0 retains
                                                                    the bit unchanged. Signals defined in this
                                                                    register can be enabled by the Error Interrupt
                                                                    Status Enable register, but not by the Error
                                                                    Interrupt Signal Enable register. More than
                                                                    one status can be cleared with a single
                                                                    register write. This register is applicable
                                                                    for an SD/eMMC/UHS-II mode.                                */
  __IOM uint16_t  EMMC_NORMAL_INT_STAT_EN_R_REG;/*!< (@ 0x00000034) This register enables the Interrupt Status for
                                                                    Normal Interrupt Status register (NORMAL_INT_STAT_R)
                                                                    when NORMAL_INT_STAT_R is set to 1. This
                                                                    register is applicable for an SD/eMMC/UHS-II
                                                                    mode.                                                      */
  __IOM uint16_t  EMMC_ERROR_INT_STAT_EN_R_REG; /*!< (@ 0x00000036) This register sets the Interrupt Status for Error
                                                                    Interrupt Status register (ERROR_INT_STAT_R),
                                                                    when ERROR_INT_STAT_EN_R is set to 1. This
                                                                    register is applicable for an SD/eMMC/UHS-II
                                                                    mode.                                                      */
  __IOM uint16_t  EMMC_NORMAL_INT_SIGNAL_EN_R_REG;/*!< (@ 0x00000038) This register is used to select the interrupt
                                                                    status that is indicated to the Host System
                                                                    as the interrupt. All these status bits
                                                                    share the same 1-bit interrupt line. Setting
                                                                    any of these bits to 1, enables interrupt
                                                                    generation. This register is applicable
                                                                    for an SD/eMMC/UHS-II mode.                                */
  __IOM uint16_t  EMMC_ERROR_INT_SIGNAL_EN_R_REG;/*!< (@ 0x0000003A) This register is used to select the interrupt
                                                                    status that is notified to the Host System
                                                                    as an interrupt. All these status bits share
                                                                    the same 1-bit interrupt line. Setting any
                                                                    of these bits to 1 enables interrupt generation.
                                                                    This register is applicable for an SD/eMMC/UHS-II
                                                                    mode.                                                      */
  __IOM uint16_t  EMMC_AUTO_CMD_STAT_R_REG;     /*!< (@ 0x0000003C) This register is used to indicate the CMD12 response
                                                                    error of Auto CMD12, and the CMD23 response
                                                                    error of Auto CMD23. The Host driver can
                                                                    determine the kind of Auto CMD12/CMD23 errors
                                                                    that can occur in this register. Auto CMD23
                                                                    errors are indicated in bit 04-01. This
                                                                    register is valid only when Auto CMD Error
                                                                    is set. This register is applicable for
                                                                    an SD/eMMC mode.                                           */
  __IOM uint16_t  EMMC_HOST_CTRL2_R_REG;        /*!< (@ 0x0000003E) This register is used to control how the Host
                                                                    Controller operates. This register is applicable
                                                                    for an SD/eMMC/UHS-II mode.                                */
  __IOM uint32_t  EMMC_CAPABILITIES1_R_REG;     /*!< (@ 0x00000040) This register provides the Host Driver with information
                                                                    specific to the Host Controller implementation.
                                                                    The host controller may implement these
                                                                    values as fixed or loaded from the flash
                                                                    memory during power on initialization. Capabilities
                                                                    register is segregated into two 32-bit registers:
                                                                    CAPABILITIES1_R and CAPABILITIES2_R. The
                                                                    CAPABILITIES1_R register is the lower part
                                                                    of Capabilities register.                                  */
  __IOM uint32_t  EMMC_CAPABILITIES2_R_REG;     /*!< (@ 0x00000044) This register provides the Host Driver with information
                                                                    specific to the Host Controller implementation.
                                                                    The host controller may implement these
                                                                    values as fixed or as loaded from flash
                                                                    memory during power on initialization. Capabilities
                                                                    register is segregated into two 32-bit registers,
                                                                    namely CAPABILITIES1_R and CAPABILITIES2_R.
                                                                    The CAPABILITIES2_R register is upper part
                                                                    of Capabilities register.                                  */
  __IOM uint32_t  EMMC_CURR_CAPABILITIES1_R_REG;/*!< (@ 0x00000048) This register indicate the maximum current capability
                                                                    for each voltage, for VDD1. The value is
                                                                    meaningful if the Voltage Support is set
                                                                    in the Capabilities register. If this information
                                                                    is supplied by the Host System through another
                                                                    method, all the Maximum Current Capabilities
                                                                    registers are set to 0.                                    */
  __IOM uint32_t  EMMC_CURR_CAPABILITIES2_R_REG;/*!< (@ 0x0000004C) This register indicates the maximum current capability
                                                                    for each voltage (for VDD2). The value is
                                                                    meaningful if Voltage Support is set in
                                                                    the Capabilities register. If this information
                                                                    is supplied by the Host System through another
                                                                    method, all the Maximum Current Capabilities
                                                                    registers are set to 0.                                    */
  __IOM uint16_t  EMMC_FORCE_AUTO_CMD_STAT_R_REG;/*!< (@ 0x00000050) The register is not a physically implemented
                                                                    but is an address at which the Auto CMD
                                                                    Error Status register can be written. This
                                                                    register is applicable for an SD/eMMC mode.
                                                                    1 : Sets each bit of the Auto CMD Error
                                                                    Status register. 0 : No effect.                            */
  __IOM uint16_t  EMMC_FORCE_ERROR_INT_STAT_R_REG;/*!< (@ 0x00000052) This register is not physically implemented but
                                                                    is an address at which the Error Interrupt
                                                                    Status register can be written. The effect
                                                                    of a write to this address is reflected
                                                                    in the Error Interrupt Status register if
                                                                    the corresponding bit of the Error Interrupt
                                                                    Status Enable register is set. This register
                                                                    is applicable for an SD/eMMC/UHS-II mode.                  */
  __IOM uint8_t   EMMC_ADMA_ERR_STAT_R_REG;     /*!< (@ 0x00000054) This register stores the ADMA state during an
                                                                    ADMA error. This register is applicable
                                                                    for an SD/eMMC/UHS-II mode.                                */
  __IM  uint8_t   RESERVED;
  __IM  uint16_t  RESERVED1;
  __IOM uint32_t  EMMC_ADMA_SA_LOW_R_REG;       /*!< (@ 0x00000058) This register holds the lower 32-bit system address
                                                                    for DMA transfer. This register is applicable
                                                                    for an SD/eMMC/UHS-II mode.                                */
  __IM  uint32_t  RESERVED2;
  __IOM uint16_t  EMMC_PRESET_INIT_R_REG;       /*!< (@ 0x00000060) This register defines Preset Value for Initialization
                                                                    in SD/eMMC mode.                                           */
  __IOM uint16_t  EMMC_PRESET_DS_R_REG;         /*!< (@ 0x00000062) This register defines Preset Value for Default
                                                                    Speed mode in SD mode.                                     */
  __IOM uint16_t  EMMC_PRESET_HS_R_REG;         /*!< (@ 0x00000064) This register defines Preset Value for High Speed
                                                                    mode in SD mode.                                           */
  __IOM uint16_t  EMMC_PRESET_SDR12_R_REG;      /*!< (@ 0x00000066) This register defines Preset Value for SDR12
                                                                    and Legacy speed mode in SD and eMMC mode
                                                                    respectively.                                              */
  __IOM uint16_t  EMMC_PRESET_SDR25_R_REG;      /*!< (@ 0x00000068) This register defines Preset Value for SDR25
                                                                    and High Speed SDR speed mode in SD and
                                                                    eMMC mode respectively.                                    */
  __IOM uint16_t  EMMC_PRESET_SDR50_R_REG;      /*!< (@ 0x0000006A) This register defines Preset Value for SDR50
                                                                    speed mode in SD mode.                                     */
  __IOM uint16_t  EMMC_PRESET_SDR104_R_REG;     /*!< (@ 0x0000006C) This register defines Preset Value for SDR104
                                                                    and HS200 speed modes in the SD and eMMC
                                                                    modes, respectively.                                       */
  __IOM uint16_t  EMMC_PRESET_DDR50_R_REG;      /*!< (@ 0x0000006E) This register defines the Preset Value for DDR50
                                                                    and High Speed DDR speed modes in the SD
                                                                    and eMMC modes, respectively.                              */
  __IM  uint32_t  RESERVED3;
  __IOM uint16_t  EMMC_PRESET_UHS2_R_REG;       /*!< (@ 0x00000074) This register is used to hold the preset value
                                                                    for UHS-II and HS400 speed modes in the
                                                                    SD and eMMC modes, respectively.                           */
  __IM  uint16_t  RESERVED4;
  __IM  uint32_t  RESERVED5[27];
  __IM  uint16_t  RESERVED6;
  __IOM uint16_t  EMMC_P_EMBEDDED_CNTRL_REG;    /*!< (@ 0x000000E6) This register points to the location of UHS-II
                                                                    embedded control registers.                                */
  __IOM uint16_t  EMMC_P_VENDOR_SPECIFIC_AREA_REG;/*!< (@ 0x000000E8) This register used as a pointer for the Vendor
                                                                    Specific Area 1.                                           */
  __IOM uint16_t  EMMC_P_VNDR2_SPECIFIC_AREA_REG;/*!< (@ 0x000000EA) This register is used as a pointer for the Vendor
                                                                    Specific Area 2.                                           */
  __IM  uint32_t  RESERVED7[4];
  __IOM uint16_t  EMMC_SLOT_INTR_STATUS_R_REG;  /*!< (@ 0x000000FC) This register indicates the Interrupt status
                                                                    of each slot.                                              */
  __IOM uint16_t  EMMC_HOST_CNTRL_VERS_R_REG;   /*!< (@ 0x000000FE) This register is used to indicate the Host Controller
                                                                    Version number.                                            */
  __IM  uint32_t  RESERVED8[33];
  __IOM uint32_t  EMMC_CQCAP_REG;               /*!< (@ 0x00000184) This register indicates the capabilities of the
                                                                    command queuing engine.                                    */
  __IM  uint32_t  RESERVED9[222];
  __IOM uint32_t  EMMC_VER_ID_R_REG;            /*!< (@ 0x00000500) This register reflects the current release number
                                                                    of eMMC.                                                   */
  __IOM uint32_t  EMMC_VER_TYPE_R_REG;          /*!< (@ 0x00000504) This register reflects the current release type
                                                                    of eMMC.                                                   */
  __IOM uint8_t   EMMC_CTRL_R_REG;              /*!< (@ 0x00000508) This register is used to control the operation
                                                                    of EMMC Controller.                                        */
  __IM  uint8_t   RESERVED10;
  __IM  uint16_t  RESERVED11;
  __IM  uint32_t  RESERVED12;
  __IOM uint8_t   EMMC_MBIU_CTRL_R_REG;         /*!< (@ 0x00000510) This register is used to select the valid burst
                                                                    types that the AHB Master bus interface
                                                                    can generate. When more than one bit is
                                                                    set the master selects the burst it prefers
                                                                    among those that are enabled in this register.             */
  __IM  uint8_t   RESERVED13;
  __IM  uint16_t  RESERVED14;
  __IM  uint32_t  RESERVED15[6];
  __IOM uint16_t  EMMC_EMMC_CTRL_R_REG;         /*!< (@ 0x0000052C) This register is used to control the eMMC operation.       */
  __IOM uint16_t  EMMC_BOOT_CTRL_R_REG;         /*!< (@ 0x0000052E) This register is used to control the eMMC Boot
                                                                    operation.                                                 */
  __IM  uint32_t  RESERVED16[4];
  __IOM uint32_t  EMMC_AT_CTRL_R_REG;           /*!< (@ 0x00000540) This register controls some aspects of tuning
                                                                    and auto-tuning features. Do not program
                                                                    this register when HOST_CTRL2_R.SAMPLE_CLK_SEL
                                                                    is 1.                                                      */
  __IOM uint32_t  EMMC_AT_STAT_R_REG;           /*!< (@ 0x00000544) Register to read the Center, Left and Right codes
                                                                    used by tuning and auto-tuning engines.
                                                                    Center code field is also used for software
                                                                    managed tuning.                                            */
  __IM  uint32_t  RESERVED17[649];
  __IOM uint32_t  EMMC_EMBEDDED_CTRL_R_REG;     /*!< (@ 0x00000F6C) This register controls the embedded device. When
                                                                    the Host Controller is connected to a removable
                                                                    device, this register is not used.                         */
} EMMC_Type;                                    /*!< Size = 3952 (0xf70)                                                       */



/* =========================================================================================================================== */
/* ================                                           GPADC                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief GPADC registers (GPADC)
  */

typedef struct {                                /*!< (@ 0x50020800) GPADC Structure                                            */
  __IOM uint32_t  GP_ADC_CTRL_REG;              /*!< (@ 0x00000000) General Purpose ADC Control Register                       */
  __IOM uint32_t  GP_ADC_CTRL2_REG;             /*!< (@ 0x00000004) General Purpose ADC Second Control Register                */
  __IOM uint32_t  GP_ADC_CTRL3_REG;             /*!< (@ 0x00000008) General Purpose ADC Third Control Register                 */
  __IOM uint32_t  GP_ADC_SEL_REG;               /*!< (@ 0x0000000C) General Purpose ADC Input Selection Register               */
  __IOM uint32_t  GP_ADC_OFFP_REG;              /*!< (@ 0x00000010) General Purpose ADC Positive Offset Register               */
  __IOM uint32_t  GP_ADC_OFFN_REG;              /*!< (@ 0x00000014) General Purpose ADC Negative Offset Register               */
  __IOM uint32_t  GP_ADC_TRIM_REG;              /*!< (@ 0x00000018) General Purpose ADC Trim Register                          */
  __IOM uint32_t  GP_ADC_CLEAR_INT_REG;         /*!< (@ 0x0000001C) General Purpose ADC Clear Interrupt Register               */
  __IOM uint32_t  GP_ADC_RESULT_REG;            /*!< (@ 0x00000020) General Purpose ADC Result Register                        */
} GPADC_Type;                                   /*!< Size = 36 (0x24)                                                          */



/* =========================================================================================================================== */
/* ================                                           GPIO                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief GPIO registers (GPIO)
  */

typedef struct {                                /*!< (@ 0x50050100) GPIO Structure                                             */
  __IOM uint32_t  P0_DATA_REG;                  /*!< (@ 0x00000000) P0 Data input / output Register                            */
  __IOM uint32_t  P1_DATA_REG;                  /*!< (@ 0x00000004) P1 Data input / output Register                            */
  __IOM uint32_t  P2_DATA_REG;                  /*!< (@ 0x00000008) P2 Data input / output Register                            */
  __IOM uint32_t  P0_SET_DATA_REG;              /*!< (@ 0x0000000C) P0 Set port pins Register                                  */
  __IOM uint32_t  P1_SET_DATA_REG;              /*!< (@ 0x00000010) P1 Set port pins Register                                  */
  __IOM uint32_t  P2_SET_DATA_REG;              /*!< (@ 0x00000014) P1 Set port pins Register                                  */
  __IOM uint32_t  P0_RESET_DATA_REG;            /*!< (@ 0x00000018) P0 Reset port pins Register                                */
  __IOM uint32_t  P1_RESET_DATA_REG;            /*!< (@ 0x0000001C) P1 Reset port pins Register                                */
  __IOM uint32_t  P2_RESET_DATA_REG;            /*!< (@ 0x00000020) P0 Reset port pins Register                                */
  __IOM uint32_t  P0_00_MODE_REG;               /*!< (@ 0x00000024) P0_00 Mode Register                                        */
  __IOM uint32_t  P0_01_MODE_REG;               /*!< (@ 0x00000028) P0_01 Mode Register                                        */
  __IOM uint32_t  P0_02_MODE_REG;               /*!< (@ 0x0000002C) P0_02 Mode Register                                        */
  __IOM uint32_t  P0_03_MODE_REG;               /*!< (@ 0x00000030) P0_03 Mode Register                                        */
  __IOM uint32_t  P0_04_MODE_REG;               /*!< (@ 0x00000034) P0_04 Mode Register                                        */
  __IOM uint32_t  P0_05_MODE_REG;               /*!< (@ 0x00000038) P0_05 Mode Register                                        */
  __IOM uint32_t  P0_06_MODE_REG;               /*!< (@ 0x0000003C) P0_06 Mode Register                                        */
  __IOM uint32_t  P0_07_MODE_REG;               /*!< (@ 0x00000040) P0_07 Mode Register                                        */
  __IOM uint32_t  P0_08_MODE_REG;               /*!< (@ 0x00000044) P0_08 Mode Register                                        */
  __IOM uint32_t  P0_09_MODE_REG;               /*!< (@ 0x00000048) P0_09 Mode Register                                        */
  __IOM uint32_t  P0_10_MODE_REG;               /*!< (@ 0x0000004C) P0_10 Mode Register                                        */
  __IOM uint32_t  P0_11_MODE_REG;               /*!< (@ 0x00000050) P0_11 Mode Register                                        */
  __IOM uint32_t  P0_12_MODE_REG;               /*!< (@ 0x00000054) P0_12 Mode Register                                        */
  __IOM uint32_t  P0_13_MODE_REG;               /*!< (@ 0x00000058) P0_13 Mode Register                                        */
  __IOM uint32_t  P0_14_MODE_REG;               /*!< (@ 0x0000005C) P0_14 Mode Register                                        */
  __IOM uint32_t  P0_15_MODE_REG;               /*!< (@ 0x00000060) P0_15 Mode Register                                        */
  __IOM uint32_t  P0_16_MODE_REG;               /*!< (@ 0x00000064) P0_16 Mode Register                                        */
  __IOM uint32_t  P0_17_MODE_REG;               /*!< (@ 0x00000068) P0_17 Mode Register                                        */
  __IOM uint32_t  P0_18_MODE_REG;               /*!< (@ 0x0000006C) P0_18 Mode Register                                        */
  __IOM uint32_t  P0_19_MODE_REG;               /*!< (@ 0x00000070) P0_19 Mode Register                                        */
  __IOM uint32_t  P0_20_MODE_REG;               /*!< (@ 0x00000074) P0_20 Mode Register                                        */
  __IOM uint32_t  P0_21_MODE_REG;               /*!< (@ 0x00000078) P0_21 Mode Register                                        */
  __IOM uint32_t  P0_22_MODE_REG;               /*!< (@ 0x0000007C) P0_22 Mode Register                                        */
  __IOM uint32_t  P0_23_MODE_REG;               /*!< (@ 0x00000080) P0_23 Mode Register                                        */
  __IOM uint32_t  P0_24_MODE_REG;               /*!< (@ 0x00000084) P0_24 Mode Register                                        */
  __IOM uint32_t  P0_25_MODE_REG;               /*!< (@ 0x00000088) P0_25 Mode Register                                        */
  __IOM uint32_t  P0_26_MODE_REG;               /*!< (@ 0x0000008C) P0_26 Mode Register                                        */
  __IOM uint32_t  P0_27_MODE_REG;               /*!< (@ 0x00000090) P0_27 Mode Register                                        */
  __IOM uint32_t  P0_28_MODE_REG;               /*!< (@ 0x00000094) P0_28 Mode Register                                        */
  __IOM uint32_t  P0_29_MODE_REG;               /*!< (@ 0x00000098) P0_29 Mode Register                                        */
  __IOM uint32_t  P0_30_MODE_REG;               /*!< (@ 0x0000009C) P0_30 Mode Register                                        */
  __IOM uint32_t  P0_31_MODE_REG;               /*!< (@ 0x000000A0) P0_31 Mode Register                                        */
  __IOM uint32_t  P1_00_MODE_REG;               /*!< (@ 0x000000A4) P1_00 Mode Register                                        */
  __IOM uint32_t  P1_01_MODE_REG;               /*!< (@ 0x000000A8) P1_01 Mode Register                                        */
  __IOM uint32_t  P1_02_MODE_REG;               /*!< (@ 0x000000AC) P1_02 Mode Register                                        */
  __IOM uint32_t  P1_03_MODE_REG;               /*!< (@ 0x000000B0) P1_03 Mode Register                                        */
  __IOM uint32_t  P1_04_MODE_REG;               /*!< (@ 0x000000B4) P1_04 Mode Register                                        */
  __IOM uint32_t  P1_05_MODE_REG;               /*!< (@ 0x000000B8) P1_05 Mode Register                                        */
  __IOM uint32_t  P1_06_MODE_REG;               /*!< (@ 0x000000BC) P1_06 Mode Register                                        */
  __IOM uint32_t  P1_07_MODE_REG;               /*!< (@ 0x000000C0) P1_07 Mode Register                                        */
  __IOM uint32_t  P1_08_MODE_REG;               /*!< (@ 0x000000C4) P1_08 Mode Register                                        */
  __IOM uint32_t  P1_09_MODE_REG;               /*!< (@ 0x000000C8) P1_09 Mode Register                                        */
  __IOM uint32_t  P1_10_MODE_REG;               /*!< (@ 0x000000CC) P1_10 Mode Register                                        */
  __IOM uint32_t  P1_11_MODE_REG;               /*!< (@ 0x000000D0) P1_11 Mode Register                                        */
  __IOM uint32_t  P1_12_MODE_REG;               /*!< (@ 0x000000D4) P1_12 Mode Register                                        */
  __IOM uint32_t  P1_13_MODE_REG;               /*!< (@ 0x000000D8) P1_13 Mode Register                                        */
  __IOM uint32_t  P1_14_MODE_REG;               /*!< (@ 0x000000DC) P1_14 Mode Register                                        */
  __IOM uint32_t  P1_15_MODE_REG;               /*!< (@ 0x000000E0) P1_15 Mode Register                                        */
  __IOM uint32_t  P1_16_MODE_REG;               /*!< (@ 0x000000E4) P1_16 Mode Register                                        */
  __IOM uint32_t  P1_17_MODE_REG;               /*!< (@ 0x000000E8) P1_17 Mode Register                                        */
  __IOM uint32_t  P1_18_MODE_REG;               /*!< (@ 0x000000EC) P1_18 Mode Register                                        */
  __IOM uint32_t  P1_19_MODE_REG;               /*!< (@ 0x000000F0) P1_19 Mode Register                                        */
  __IOM uint32_t  P1_20_MODE_REG;               /*!< (@ 0x000000F4) P1_20 Mode Register                                        */
  __IOM uint32_t  P1_21_MODE_REG;               /*!< (@ 0x000000F8) P1_21 Mode Register                                        */
  __IOM uint32_t  P1_22_MODE_REG;               /*!< (@ 0x000000FC) P1_22 Mode Register                                        */
  __IOM uint32_t  P1_23_MODE_REG;               /*!< (@ 0x00000100) P1_23 Mode Register                                        */
  __IOM uint32_t  P1_24_MODE_REG;               /*!< (@ 0x00000104) P1_24 Mode Register                                        */
  __IOM uint32_t  P1_25_MODE_REG;               /*!< (@ 0x00000108) P1_25 Mode Register                                        */
  __IOM uint32_t  P1_26_MODE_REG;               /*!< (@ 0x0000010C) P1_26 Mode Register                                        */
  __IOM uint32_t  P1_27_MODE_REG;               /*!< (@ 0x00000110) P1_27 Mode Register                                        */
  __IOM uint32_t  P1_28_MODE_REG;               /*!< (@ 0x00000114) P1_28 Mode Register                                        */
  __IOM uint32_t  P1_29_MODE_REG;               /*!< (@ 0x00000118) P1_29 Mode Register                                        */
  __IOM uint32_t  P1_30_MODE_REG;               /*!< (@ 0x0000011C) P1_30 Mode Register                                        */
  __IOM uint32_t  P1_31_MODE_REG;               /*!< (@ 0x00000120) P1_31 Mode Register                                        */
  __IOM uint32_t  P2_00_MODE_REG;               /*!< (@ 0x00000124) P2_00 Mode Register                                        */
  __IOM uint32_t  P2_01_MODE_REG;               /*!< (@ 0x00000128) P2_01 Mode Register                                        */
  __IOM uint32_t  P2_02_MODE_REG;               /*!< (@ 0x0000012C) P2_02 Mode Register                                        */
  __IOM uint32_t  P2_03_MODE_REG;               /*!< (@ 0x00000130) P2_03 Mode Register                                        */
  __IOM uint32_t  P2_04_MODE_REG;               /*!< (@ 0x00000134) P2_04 Mode Register                                        */
  __IOM uint32_t  P2_05_MODE_REG;               /*!< (@ 0x00000138) P2_05 Mode Register                                        */
  __IOM uint32_t  P2_06_MODE_REG;               /*!< (@ 0x0000013C) P2_06 Mode Register                                        */
  __IOM uint32_t  P2_07_MODE_REG;               /*!< (@ 0x00000140) P2_07 Mode Register                                        */
  __IOM uint32_t  P2_08_MODE_REG;               /*!< (@ 0x00000144) P2_08 Mode Register                                        */
  __IOM uint32_t  P2_09_MODE_REG;               /*!< (@ 0x00000148) P2_09 Mode Register                                        */
  __IOM uint32_t  P2_10_MODE_REG;               /*!< (@ 0x0000014C) P2_10 Mode Register                                        */
  __IOM uint32_t  P2_11_MODE_REG;               /*!< (@ 0x00000150) P2_11 Mode Register                                        */
  __IOM uint32_t  P2_12_MODE_REG;               /*!< (@ 0x00000154) P2_12 Mode Register                                        */
  __IOM uint32_t  P2_13_MODE_REG;               /*!< (@ 0x00000158) P2_13 Mode Register                                        */
  __IOM uint32_t  P2_14_MODE_REG;               /*!< (@ 0x0000015C) P2_14 Mode Register                                        */
  __IOM uint32_t  P0_PADPWR_CTRL_REG;           /*!< (@ 0x00000160) P0 Output Power Control Register                           */
  __IOM uint32_t  P1_PADPWR_CTRL_REG;           /*!< (@ 0x00000164) P1 Output Power Control Register                           */
  __IOM uint32_t  P2_PADPWR_CTRL_REG;           /*!< (@ 0x00000168) P2 Output Power Control Register                           */
  __IOM uint32_t  GPIO_CLK_SEL_REG;             /*!< (@ 0x0000016C) Select which clock to map on ports P0/P1                   */
  __IOM uint32_t  P0_WEAK_CTRL_REG;             /*!< (@ 0x00000170) P0 Weak Pads Control Register                              */
  __IOM uint32_t  P1_WEAK_CTRL_REG;             /*!< (@ 0x00000174) P1 Weak Pads Control Register                              */
  __IOM uint32_t  P2_WEAK_CTRL_REG;             /*!< (@ 0x00000178) P2 Weak Pads Control Register                              */
  __IOM uint32_t  LCDC_MAP_CTRL_REG;            /*!< (@ 0x0000017C) LCDC mapping control Register                              */
  __IOM uint32_t  PAD_DRIVE_CTRL_REG;           /*!< (@ 0x00000180) Pad drive control for SPI3/eMMC                            */
} GPIO_Type;                                    /*!< Size = 388 (0x184)                                                        */



/* =========================================================================================================================== */
/* ================                                           GPREG                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief GPREG registers (GPREG)
  */

typedef struct {                                /*!< (@ 0x50040100) GPREG Structure                                            */
  __IOM uint32_t  SET_FREEZE_REG;               /*!< (@ 0x00000000) Controls freezing of various timers/counters
                                                                    (incl. DMA and USB).                                       */
  __IOM uint32_t  RESET_FREEZE_REG;             /*!< (@ 0x00000004) Controls unfreezing of various timers/counters
                                                                    (incl. DMA and USB).                                       */
  __IOM uint32_t  DEBUG_REG;                    /*!< (@ 0x00000008) Various debug information register.                        */
  __IOM uint32_t  GP_STATUS_REG;                /*!< (@ 0x0000000C) General purpose system status register.                    */
  __IM  uint32_t  RESERVED[2];
  __IOM uint32_t  USBPAD_REG;                   /*!< (@ 0x00000018) USB pads control register                                  */
} GPREG_Type;                                   /*!< Size = 28 (0x1c)                                                          */



/* =========================================================================================================================== */
/* ================                                         GPU_CORE                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief GPU_CORE registers (GPU_CORE)
  */

typedef struct {                                /*!< (@ 0x51001200) GPU_CORE Structure                                         */
  __IOM uint32_t  D2_CONTROL;                   /*!< (@ 0x00000000) #0: Geometry control register. This register
                                                                    controls the pixel enumeration and selection
                                                                    units, deciding which pixels are part of
                                                                    the geometry. Each geometry limiter can
                                                                    be enabled (default is disabled) by setting
                                                                    one of the enable bits. Note that disabled
                                                                    limiters are always read as 1.0. Limiters
                                                                    are grouped into three pairs of quadratic
                                                                    limiters, each of which can be coupled to
                                                                    track a quadractic instead of a linear equation.
                                                                    Note that in case of a coupled limiter only
                                                                    the first should ha                                        */
  __IOM uint32_t  D2_CONTROL2;                  /*!< (@ 0x00000004) #1: Surface control register. This register controls
                                                                    the colorization, texturing and blending
                                                                    units, deciding what color a pixel should
                                                                    have. By default, the pixel color source
                                                                    is D2_COLOR1 but setting pattern or texture
                                                                    enable changes this. When using texturemapping
                                                                    filtering and clamping, control bits are
                                                                    used to specify details for the fetching
                                                                    of texels. Texture formats are defined by
                                                                    the read format. Writeback frame buffer
                                                                    formats are defined by the write format.
                                                                    The standard GPU uses a                                    */
  __IOM uint32_t  D2_CONTROL3;                  /*!< (@ 0x00000008) #2: Burst length limit control register. This
                                                                    register controls the burst length limit
                                                                    for the master bus interfaces. Log2 of the
                                                                    burst length limit: 0 - 2^0 = single transfer;
                                                                    2 - 2^2 = max burst length 4; 3 - 2^3 =
                                                                    max burst length 8; 4 - 2^4 = max burst
                                                                    length 16. Valid values depend on the protocol
                                                                    of the used bus interface.                                 */
  __IM  uint32_t  RESERVED;
  __IOM uint32_t  D2_L1START;                   /*!< (@ 0x00000010) #4: Limiter1 start value. All limiter registers
                                                                    are *write only*, reading will return undefined
                                                                    results. Limiters must be enabled (see D2_CONTROL)
                                                                    to produce an output value. In addition
                                                                    to the 6 geometry limiters there are two
                                                                    special UV-Limiters (see Texture registers).
                                                                    The start value is a 16:16 fixedpoint number
                                                                    valid at the first pixel of the bounding
                                                                    box.                                                       */
  __IOM uint32_t  D2_L2START;                   /*!< (@ 0x00000014) #5: Limiter2 start value. See D2_L1START                   */
  __IOM uint32_t  D2_L3START;                   /*!< (@ 0x00000018) #6: Limiter3 start value. See D2_L1START                   */
  __IOM uint32_t  D2_L4START;                   /*!< (@ 0x0000001C) #7: Limiter4 start value. See D2_L1START                   */
  __IOM uint32_t  D2_L5START;                   /*!< (@ 0x00000020) #8: Limiter5 start value. See D2_L1START                   */
  __IOM uint32_t  D2_L6START;                   /*!< (@ 0x00000024) #9: Limiter6 start value. See D2_L1START                   */
  __IOM uint32_t  D2_L1XADD;                    /*!< (@ 0x00000028) #10: Limiter1 X-Axis increment. The xadd value
                                                                    is the 16:16 fixedpoint difference between
                                                                    two samples with a distance of 1 pix along
                                                                    the x axis.                                                */
  __IOM uint32_t  D2_L2XADD;                    /*!< (@ 0x0000002C) #11: Limiter2 X-Axis increment. See D2_L1XADD              */
  __IOM uint32_t  D2_L3XADD;                    /*!< (@ 0x00000030) #12: Limiter3 X-Axis increment                             */
  __IOM uint32_t  D2_L4XADD;                    /*!< (@ 0x00000034) #13: Limiter4 X-Axis increment. See D2_L1XADD              */
  __IOM uint32_t  D2_L5XADD;                    /*!< (@ 0x00000038) #14: Limiter5 X-Axis increment. See D2_L1XADD              */
  __IOM uint32_t  D2_L6XADD;                    /*!< (@ 0x0000003C) #15: Limiter6 X-Axis increment. See D2_L1XADD              */
  __IOM uint32_t  D2_L1YADD;                    /*!< (@ 0x00000040) #16: Limiter1 Y-Axis increment. The yadd value
                                                                    is the 16:16 fixedpoint difference between
                                                                    two samples with a distance of 1 pixel along
                                                                    the y axis.                                                */
  __IOM uint32_t  D2_L2YADD;                    /*!< (@ 0x00000044) #17: Limiter2 Y-Axis increment. See D2_L1YADD              */
  __IOM uint32_t  D2_L3YADD;                    /*!< (@ 0x00000048) #18: Limiter3 Y-Axis increment. See D2_L1YADD              */
  __IOM uint32_t  D2_L4YADD;                    /*!< (@ 0x0000004C) #19: Limiter4 Y-Axis increment. See D2_L1YADD              */
  __IOM uint32_t  D2_L5YADD;                    /*!< (@ 0x00000050) #20: Limiter5 Y-Axis increment. See D2_L1YADD              */
  __IOM uint32_t  D2_L6YADD;                    /*!< (@ 0x00000054) #21: Limiter6 Y-Axis increment. See D2_L1YADD              */
  __IOM uint32_t  D2_L1BAND;                    /*!< (@ 0x00000058) #22: Limiter1 band width parameter. Postfilter
                                                                    - first two limiter outputs can be routed
                                                                    through an additional unit before clamping
                                                                    to mirror their gradient and form a 'band'
                                                                    instead of the usual 'halfplane'. When band
                                                                    output filtering is enabled for limiter1
                                                                    (D2C_BAND1ENABLE see D2_CONTROL), this register
                                                                    stores the 16:16 fixedpoint inner width
                                                                    of band region.                                            */
  __IOM uint32_t  D2_L2BAND;                    /*!< (@ 0x0000005C) #23: Limiter2 band width parameter. See D2_L1BAND          */
  __IM  uint32_t  RESERVED1;
  __IOM uint32_t  D2_COLOR1;                    /*!< (@ 0x00000064) #25: Base color register. All color registers
                                                                    are *write only*, reading will return undefined
                                                                    results. When using textures the two color
                                                                    registers (D2_COLOR1 and D2_COLOR2) are
                                                                    still used to modify the color value read
                                                                    from texture memory. The equation applied
                                                                    to each of the four color channels (when
                                                                    texture mapping) is: (c2-c1)*tex+c1. To
                                                                    keep the unmodified texture data c1 has
                                                                    to be 0 and c2 has to be 1, meaning 0x00000000
                                                                    and 0xffffffff for D2_COLOR1 and D2_COLOR2
                                                                    respectively. Color is                                     */
  __IOM uint32_t  D2_COLOR2;                    /*!< (@ 0x00000068) #26: Secondary color register. Secondary color
                                                                    is relevant only when rendering patterns,
                                                                    textures or using a D2C_BC2 blendmode (see
                                                                    D2_CONTROL2).                                              */
  __IM  uint32_t  RESERVED2[2];
  __IOM uint32_t  D2_PATTERN;                   /*!< (@ 0x00000074) #29: Pattern register. Each bit in the pattern
                                                                    register is interpreted as a reference to
                                                                    one of two color registers (0bit = D2_COLOR1,
                                                                    1bit = D2_COLOR2 ).                                        */
  __IOM uint32_t  D2_SIZE;                      /*!< (@ 0x00000078) #30: Bounding box dimension                                */
  __IOM uint32_t  D2_PITCH;                     /*!< (@ 0x0000007C) #31: Framebuffer pitch and spanstore delay                 */
  __IOM uint32_t  D2_ORIGIN;                    /*!< (@ 0x00000080) #32: Address of the first pixel in framebuffer.
                                                                    Writing to D2_ORIGIN will trigger GPU to
                                                                    start rendering.                                           */
  __IM  uint32_t  RESERVED3[3];
  __IOM uint32_t  D2_LUSTART;                   /*!< (@ 0x00000090) #36: U Limiter start value. The start value is
                                                                    a 16:16 fixedpoint number valid at the first
                                                                    pixel of the bounding box.                                 */
  __IOM uint32_t  D2_LUXADD;                    /*!< (@ 0x00000094) #37: U Limiter X-Axis increment. The add value
                                                                    for U is the 16:16 fixedpoint difference
                                                                    between two samples with a distance of 1
                                                                    pixel along the x axis.                                    */
  __IOM uint32_t  D2_LUYADD;                    /*!< (@ 0x00000098) #38: U Limiter Y-Axis increment. The add value
                                                                    for U is the 16:16 fixedpoint difference
                                                                    between two samples with a distance of 1
                                                                    pixel along the y axis.                                    */
  __IOM uint32_t  D2_LVSTARTI;                  /*!< (@ 0x0000009C) #39: V Limiter start value integer part                    */
  __IOM uint32_t  D2_LVSTARTF;                  /*!< (@ 0x000000A0) #40: V Limiter start value fractional part. The
                                                                    start value is a 32:16 fixedpoint number
                                                                    valid at the first pixel of the bounding
                                                                    box.                                                       */
  __IOM uint32_t  D2_LVXADDI;                   /*!< (@ 0x000000A4) #41: V Limiter X-Axis increment integer part.
                                                                    The add value for V is the 32:16 fixedpoint
                                                                    difference between two samples with a distance
                                                                    of 1 pixel along the x axis.                               */
  __IOM uint32_t  D2_LVYADDI;                   /*!< (@ 0x000000A8) #42: V Limiter Y-Axis increment integer part.
                                                                    The add value for V is the 32:16 fixedpoint
                                                                    difference between two samples with a distance
                                                                    of 1 pixel along the y axis.                               */
  __IOM uint32_t  D2_LVYXADDF;                  /*!< (@ 0x000000AC) #43: V Limiter X and Y increment fractional parts          */
  __IM  uint32_t  RESERVED4;
  __IOM uint32_t  D2_TEXPITCH;                  /*!< (@ 0x000000B4) #45: Texels per texture line&Pitch is equal or
                                                                    bigger than texture width.                                 */
  __IOM uint32_t  D2_TEXMASK;                   /*!< (@ 0x000000B8) #46: Texture size or texture address mask. Depending
                                                                    on the clamping mode this register encodes
                                                                    the clamp limit or wrap mask.                              */
  __IOM uint32_t  D2_TEXORIGIN;                 /*!< (@ 0x000000BC) #47: Texture base address. All texture registers
                                                                    are *write only*, reading will return undefined
                                                                    results. Patterns and textures require a
                                                                    1D or 2D index (UV Coordinate) at every
                                                                    pixel. Specialized UV-Limiters are available
                                                                    to generate these. Address of the upper
                                                                    left corner texel. Addresses inside the
                                                                    framebuffer can be used as valid texture
                                                                    origin as well.                                            */
  __IOM uint32_t  D2_IRQCTL;                    /*!< (@ 0x000000C0) #48: Interrupt control register. The GPU features
                                                                    three sources for interrupts. They can be
                                                                    enabled and cleared individually. Enumeration
                                                                    finished - this interrupt is issued after
                                                                    every enumeration has finished. An enumeration
                                                                    is triggered by writing to D2_ORIGIN. This
                                                                    interrupt can be used if the CPU sets up
                                                                    all registers and waits for the enumeration
                                                                    to finish. It should not be used if the
                                                                    display list reader is active. Dlist finished
                                                                    - this interrupt is issued if the display
                                                                    list reader                                                */
  __IOM uint32_t  D2_CACHECTL;                  /*!< (@ 0x000000C4) #49: Cache control register. Internal caches
                                                                    can be enabled/disabled and flushed using
                                                                    this register. Note that caches will be
                                                                    disabled if a value without its enable bits
                                                                    set is written to D2_CACHECTL.                             */
  __IOM uint32_t  D2_DLISTSTART;                /*!< (@ 0x000000C8) #50: Displaylist start address. Setting a new
                                                                    displaylist base address (writing to D2_DLISTSTART)
                                                                    *triggers* execution of the new dlist. Execution
                                                                    will stop only when a new list is set or
                                                                    the list terminates. Note that once the
                                                                    display list is started, the display list
                                                                    reader is the master for all register writes
                                                                    to the core: No register write must be done
                                                                    via the slave bus as long as the display
                                                                    list execution is ongoing. Otherwise, commands
                                                                    from the display list may be lost and rendering
                                                                                                                               */
  __IOM uint32_t  D2_PERFCOUNT1;                /*!< (@ 0x000000CC) #51: Performance counter. Writing to the D2_PERFCOUNT1
                                                                    register resets the first internal performance
                                                                    counter to the specified value. Reading
                                                                    returns the actual performance count. GPU
                                                                    will increment the count every time the
                                                                    event selected by D2_PERFTRIGGER lower 16
                                                                    bits triggers.                                             */
  __IOM uint32_t  D2_PERFCOUNT2;                /*!< (@ 0x000000D0) #52: Performance counter. Writing to the D2_PERFCOUNT2
                                                                    register resets the second internal performance
                                                                    counter to the specified value. GPU will
                                                                    increment the count every time the event
                                                                    selected by D2_PERFTRIGGER upper 16 bits
                                                                    triggers.                                                  */
  __IOM uint32_t  D2_PERFTRIGGER;               /*!< (@ 0x000000D4) #53: Performance counters control register. Select
                                                                    the internal event that will increment D2_PERFCOUNT1
                                                                    respectively D2_PERFCOUNT2 register. Possible
                                                                    event values: D2PC_NONE - disable performance
                                                                    counter (0), D2PC_GPUCYCLES - GPU active
                                                                    cycles (1), D2PC_FBREADS - framebuffer read
                                                                    access (2), D2PC_FBWRITES - framebuffer
                                                                    write access (3), D2PC_TXREADS - texture
                                                                    read access (4), D2PC_INVPIXELS - invisible
                                                                    pixels (enumerated but selected with alpha
                                                                    0%) (5), D2PC_INVPIXELS_MISS - invisible
                                                                    pixels                                                     */
  __IOM uint32_t  D2_TEXCLUT;                   /*!< (@ 0x000000D8) #54: Color Lookup Table for the indexed texture
                                                                    format 16x24bit&Triggers a write into the
                                                                    CLUT if CLUT size is 16 x 24bit.                           */
  __IOM uint32_t  D2_TEXCLUT_ADDR;              /*!< (@ 0x000000DC) #55: Color Lookup Table write address for the
                                                                    indexed texture format 256x32 bit. Start
                                                                    address for consecutive writes to D2_TEXCLUT_DATA
                                                                    if CLUT size is 256x32 bit.                                */
  __IOM uint32_t  D2_TEXCLUT_DATA;              /*!< (@ 0x000000E0) #56: Color Lookup Table write data for the indexed
                                                                    texture format 256x32 bit. Writes one 32
                                                                    bit color value into the CLUT if CLUT size
                                                                    is 256x32 bit. The write address is given
                                                                    by D2_TEXCLUT_ADDR and increments by 1 after
                                                                    each data write. bits[15..0] - first color
                                                                    value RGB565 if CLUTFORMAT = rgb565 for
                                                                    index*2. bits[31..16] - second color value
                                                                    RGB565 if CLUTFORMAT = rgb565 for index*2+1.
                                                                    See also D2_CONTROL2                                       */
  __IOM uint32_t  D2_TEXCLUT_OFFSET;            /*!< (@ 0x000000E4) #57: Offset to the texture index for the indexed
                                                                    texture formats i8, i4, i2 and i1. The index
                                                                    offset is combined with the texture index
                                                                    by a bitwise OR operation. For subbyte texture
                                                                    formats the CLUT can be divided into parts
                                                                    with different color sets.                                 */
  __IOM uint32_t  D2_COLKEY;                    /*!< (@ 0x000000E8) #58: Color key value. The R, G, and B components
                                                                    of the internal color representation of
                                                                    a texel is compared with the color key.
                                                                    If the values are equal then A, R, G, and
                                                                    B are set to 0 (transparent), else A is
                                                                    set to 1. Color keying can be enabled by
                                                                    setting bit D2C_COLKEY_ENABLE in D2_CONTROL2               */
  __IM  uint32_t  RESERVED5;
  __IOM uint32_t  D2_HWREVISION;                /*!< (@ 0x000000F0) #1: Hardware version and feature set ID. Read
                                                                    this (constant) register to identify the
                                                                    present hardware revision and feature set.
                                                                    HW Revision ID structure: Bits[28..16] HWFEATURES
                                                                    - Features. D/AVE Type: 0 - D/AVE2DT-S,
                                                                    1 - D/AVE2DT-L. Feature Bits: the feature
                                                                    set is defined by the feature bits. The
                                                                    reset value depends on the hardware configuration.         */
  __IOM uint32_t  D2_STATUS;                    /*!< (@ 0x000000F4) #0: Status control register. The current GPU
                                                                    status can be polled by reading this register.
                                                                    It contains a combination of the following
                                                                    bits. Source interface bus error: 001 -
                                                                    MFB interface, 010 - MTX interface, 100
                                                                    - MDL interface. Depending on the hardware
                                                                    featureset (see D2_HWREVISION) some bits
                                                                    might be irrelevant on a specific HW platform.             */
} GPU_CORE_Type;                                /*!< Size = 248 (0xf8)                                                         */



/* =========================================================================================================================== */
/* ================                                          GPU_REG                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief GPU_REG registers (GPU_REG)
  */

typedef struct {                                /*!< (@ 0x51001100) GPU_REG Structure                                          */
  __IOM uint32_t  GPU_CTRL_REG;                 /*!< (@ 0x00000000) GPU_CTRL_REG                                               */
} GPU_REG_Type;                                 /*!< Size = 4 (0x4)                                                            */



/* =========================================================================================================================== */
/* ================                                            I2C                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief I2C registers (I2C)
  */

typedef struct {                                /*!< (@ 0x50020600) I2C Structure                                              */
  __IOM uint32_t  I2C_CON_REG;                  /*!< (@ 0x00000000) I2C Control Register                                       */
  __IOM uint32_t  I2C_TAR_REG;                  /*!< (@ 0x00000004) I2C Target Address Register                                */
  __IOM uint32_t  I2C_SAR_REG;                  /*!< (@ 0x00000008) I2C Slave Address Register                                 */
  __IOM uint32_t  I2C_HS_MADDR_REG;             /*!< (@ 0x0000000C) I2C High Speed Master Mode Code Address Register           */
  __IOM uint32_t  I2C_DATA_CMD_REG;             /*!< (@ 0x00000010) I2C Rx/Tx Data Buffer and Command Register                 */
  __IOM uint32_t  I2C_SS_SCL_HCNT_REG;          /*!< (@ 0x00000014) Standard Speed I2C Clock SCL High Count Register           */
  __IOM uint32_t  I2C_SS_SCL_LCNT_REG;          /*!< (@ 0x00000018) Standard Speed I2C Clock SCL Low Count Register            */
  __IOM uint32_t  I2C_FS_SCL_HCNT_REG;          /*!< (@ 0x0000001C) Fast Speed I2C Clock SCL High Count Register               */
  __IOM uint32_t  I2C_FS_SCL_LCNT_REG;          /*!< (@ 0x00000020) Fast Speed I2C Clock SCL Low Count Register                */
  __IOM uint32_t  I2C_HS_SCL_HCNT_REG;          /*!< (@ 0x00000024) High Speed I2C Clock SCL High Count Register               */
  __IOM uint32_t  I2C_HS_SCL_LCNT_REG;          /*!< (@ 0x00000028) High Speed I2C Clock SCL Low Count Register                */
  __IOM uint32_t  I2C_INTR_STAT_REG;            /*!< (@ 0x0000002C) I2C Interrupt Status Register                              */
  __IOM uint32_t  I2C_INTR_MASK_REG;            /*!< (@ 0x00000030) I2C Interrupt Mask Register                                */
  __IOM uint32_t  I2C_RAW_INTR_STAT_REG;        /*!< (@ 0x00000034) I2C Raw Interrupt Status Register                          */
  __IOM uint32_t  I2C_RX_TL_REG;                /*!< (@ 0x00000038) I2C Receive FIFO Threshold Register                        */
  __IOM uint32_t  I2C_TX_TL_REG;                /*!< (@ 0x0000003C) I2C Transmit FIFO Threshold Register                       */
  __IOM uint32_t  I2C_CLR_INTR_REG;             /*!< (@ 0x00000040) Clear Combined and Individual Interrupt Register           */
  __IOM uint32_t  I2C_CLR_RX_UNDER_REG;         /*!< (@ 0x00000044) Clear RX_UNDER Interrupt Register                          */
  __IOM uint32_t  I2C_CLR_RX_OVER_REG;          /*!< (@ 0x00000048) Clear RX_OVER Interrupt Register                           */
  __IOM uint32_t  I2C_CLR_TX_OVER_REG;          /*!< (@ 0x0000004C) Clear TX_OVER Interrupt Register                           */
  __IOM uint32_t  I2C_CLR_RD_REQ_REG;           /*!< (@ 0x00000050) Clear RD_REQ Interrupt Register                            */
  __IOM uint32_t  I2C_CLR_TX_ABRT_REG;          /*!< (@ 0x00000054) Clear TX_ABRT Interrupt Register                           */
  __IOM uint32_t  I2C_CLR_RX_DONE_REG;          /*!< (@ 0x00000058) Clear RX_DONE Interrupt Register                           */
  __IOM uint32_t  I2C_CLR_ACTIVITY_REG;         /*!< (@ 0x0000005C) Clear ACTIVITY Interrupt Register                          */
  __IOM uint32_t  I2C_CLR_STOP_DET_REG;         /*!< (@ 0x00000060) Clear STOP_DET Interrupt Register                          */
  __IOM uint32_t  I2C_CLR_START_DET_REG;        /*!< (@ 0x00000064) Clear START_DET Interrupt Register                         */
  __IOM uint32_t  I2C_CLR_GEN_CALL_REG;         /*!< (@ 0x00000068) Clear GEN_CALL Interrupt Register                          */
  __IOM uint32_t  I2C_ENABLE_REG;               /*!< (@ 0x0000006C) I2C Enable Register                                        */
  __IOM uint32_t  I2C_STATUS_REG;               /*!< (@ 0x00000070) I2C Status Register                                        */
  __IOM uint32_t  I2C_TXFLR_REG;                /*!< (@ 0x00000074) I2C Transmit FIFO Level Register                           */
  __IOM uint32_t  I2C_RXFLR_REG;                /*!< (@ 0x00000078) I2C Receive FIFO Level Register                            */
  __IOM uint32_t  I2C_SDA_HOLD_REG;             /*!< (@ 0x0000007C) I2C SDA Hold Time Length Register                          */
  __IOM uint32_t  I2C_TX_ABRT_SOURCE_REG;       /*!< (@ 0x00000080) I2C Transmit Abort Source Register                         */
  __IM  uint32_t  RESERVED;
  __IOM uint32_t  I2C_DMA_CR_REG;               /*!< (@ 0x00000088) DMA Control Register                                       */
  __IOM uint32_t  I2C_DMA_TDLR_REG;             /*!< (@ 0x0000008C) DMA Transmit Data Level Register                           */
  __IOM uint32_t  I2C_DMA_RDLR_REG;             /*!< (@ 0x00000090) I2C Receive Data Level Register                            */
  __IOM uint32_t  I2C_SDA_SETUP_REG;            /*!< (@ 0x00000094) I2C SDA Setup Register                                     */
  __IOM uint32_t  I2C_ACK_GENERAL_CALL_REG;     /*!< (@ 0x00000098) I2C ACK General Call Register                              */
  __IOM uint32_t  I2C_ENABLE_STATUS_REG;        /*!< (@ 0x0000009C) I2C Enable Status Register                                 */
  __IOM uint32_t  I2C_IC_FS_SPKLEN_REG;         /*!< (@ 0x000000A0) I2C SS and FS spike suppression limit Size                 */
  __IOM uint32_t  I2C_IC_HS_SPKLEN_REG;         /*!< (@ 0x000000A4) I2C HS spike suppression limit Size                        */
} I2C_Type;                                     /*!< Size = 168 (0xa8)                                                         */



/* =========================================================================================================================== */
/* ================                                           I2C2                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief I2C2 registers (I2C2)
  */

typedef struct {                                /*!< (@ 0x50020700) I2C2 Structure                                             */
  __IOM uint32_t  I2C2_CON_REG;                 /*!< (@ 0x00000000) I2C Control Register                                       */
  __IOM uint32_t  I2C2_TAR_REG;                 /*!< (@ 0x00000004) I2C Target Address Register                                */
  __IOM uint32_t  I2C2_SAR_REG;                 /*!< (@ 0x00000008) I2C Slave Address Register                                 */
  __IOM uint32_t  I2C2_HS_MADDR_REG;            /*!< (@ 0x0000000C) I2C High Speed Master Mode Code Address Register           */
  __IOM uint32_t  I2C2_DATA_CMD_REG;            /*!< (@ 0x00000010) I2C Rx/Tx Data Buffer and Command Register                 */
  __IOM uint32_t  I2C2_SS_SCL_HCNT_REG;         /*!< (@ 0x00000014) Standard Speed I2C Clock SCL High Count Register           */
  __IOM uint32_t  I2C2_SS_SCL_LCNT_REG;         /*!< (@ 0x00000018) Standard Speed I2C Clock SCL Low Count Register            */
  __IOM uint32_t  I2C2_FS_SCL_HCNT_REG;         /*!< (@ 0x0000001C) Fast Speed I2C Clock SCL High Count Register               */
  __IOM uint32_t  I2C2_FS_SCL_LCNT_REG;         /*!< (@ 0x00000020) Fast Speed I2C Clock SCL Low Count Register                */
  __IOM uint32_t  I2C2_HS_SCL_HCNT_REG;         /*!< (@ 0x00000024) High Speed I2C Clock SCL High Count Register               */
  __IOM uint32_t  I2C2_HS_SCL_LCNT_REG;         /*!< (@ 0x00000028) High Speed I2C Clock SCL Low Count Register                */
  __IOM uint32_t  I2C2_INTR_STAT_REG;           /*!< (@ 0x0000002C) I2C Interrupt Status Register                              */
  __IOM uint32_t  I2C2_INTR_MASK_REG;           /*!< (@ 0x00000030) I2C Interrupt Mask Register                                */
  __IOM uint32_t  I2C2_RAW_INTR_STAT_REG;       /*!< (@ 0x00000034) I2C Raw Interrupt Status Register                          */
  __IOM uint32_t  I2C2_RX_TL_REG;               /*!< (@ 0x00000038) I2C Receive FIFO Threshold Register                        */
  __IOM uint32_t  I2C2_TX_TL_REG;               /*!< (@ 0x0000003C) I2C Transmit FIFO Threshold Register                       */
  __IOM uint32_t  I2C2_CLR_INTR_REG;            /*!< (@ 0x00000040) Clear Combined and Individual Interrupt Register           */
  __IOM uint32_t  I2C2_CLR_RX_UNDER_REG;        /*!< (@ 0x00000044) Clear RX_UNDER Interrupt Register                          */
  __IOM uint32_t  I2C2_CLR_RX_OVER_REG;         /*!< (@ 0x00000048) Clear RX_OVER Interrupt Register                           */
  __IOM uint32_t  I2C2_CLR_TX_OVER_REG;         /*!< (@ 0x0000004C) Clear TX_OVER Interrupt Register                           */
  __IOM uint32_t  I2C2_CLR_RD_REQ_REG;          /*!< (@ 0x00000050) Clear RD_REQ Interrupt Register                            */
  __IOM uint32_t  I2C2_CLR_TX_ABRT_REG;         /*!< (@ 0x00000054) Clear TX_ABRT Interrupt Register                           */
  __IOM uint32_t  I2C2_CLR_RX_DONE_REG;         /*!< (@ 0x00000058) Clear RX_DONE Interrupt Register                           */
  __IOM uint32_t  I2C2_CLR_ACTIVITY_REG;        /*!< (@ 0x0000005C) Clear ACTIVITY Interrupt Register                          */
  __IOM uint32_t  I2C2_CLR_STOP_DET_REG;        /*!< (@ 0x00000060) Clear STOP_DET Interrupt Register                          */
  __IOM uint32_t  I2C2_CLR_START_DET_REG;       /*!< (@ 0x00000064) Clear START_DET Interrupt Register                         */
  __IOM uint32_t  I2C2_CLR_GEN_CALL_REG;        /*!< (@ 0x00000068) Clear GEN_CALL Interrupt Register                          */
  __IOM uint32_t  I2C2_ENABLE_REG;              /*!< (@ 0x0000006C) I2C Enable Register                                        */
  __IOM uint32_t  I2C2_STATUS_REG;              /*!< (@ 0x00000070) I2C Status Register                                        */
  __IOM uint32_t  I2C2_TXFLR_REG;               /*!< (@ 0x00000074) I2C Transmit FIFO Level Register                           */
  __IOM uint32_t  I2C2_RXFLR_REG;               /*!< (@ 0x00000078) I2C Receive FIFO Level Register                            */
  __IOM uint32_t  I2C2_SDA_HOLD_REG;            /*!< (@ 0x0000007C) I2C SDA Hold Time Length Register                          */
  __IOM uint32_t  I2C2_TX_ABRT_SOURCE_REG;      /*!< (@ 0x00000080) I2C Transmit Abort Source Register                         */
  __IM  uint32_t  RESERVED;
  __IOM uint32_t  I2C2_DMA_CR_REG;              /*!< (@ 0x00000088) DMA Control Register                                       */
  __IOM uint32_t  I2C2_DMA_TDLR_REG;            /*!< (@ 0x0000008C) DMA Transmit Data Level Register                           */
  __IOM uint32_t  I2C2_DMA_RDLR_REG;            /*!< (@ 0x00000090) I2C Receive Data Level Register                            */
  __IOM uint32_t  I2C2_SDA_SETUP_REG;           /*!< (@ 0x00000094) I2C SDA Setup Register                                     */
  __IOM uint32_t  I2C2_ACK_GENERAL_CALL_REG;    /*!< (@ 0x00000098) I2C ACK General Call Register                              */
  __IOM uint32_t  I2C2_ENABLE_STATUS_REG;       /*!< (@ 0x0000009C) I2C Enable Status Register                                 */
  __IOM uint32_t  I2C2_IC_FS_SPKLEN_REG;        /*!< (@ 0x000000A0) I2C SS and FS spike suppression limit Size                 */
  __IOM uint32_t  I2C2_IC_HS_SPKLEN_REG;        /*!< (@ 0x000000A4) I2C HS spike suppression limit Size                        */
} I2C2_Type;                                    /*!< Size = 168 (0xa8)                                                         */



/* =========================================================================================================================== */
/* ================                                           I2C3                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief I2C3 registers (I2C3)
  */

typedef struct {                                /*!< (@ 0x50020500) I2C3 Structure                                             */
  __IOM uint32_t  I2C3_CON_REG;                 /*!< (@ 0x00000000) I2C Control Register                                       */
  __IOM uint32_t  I2C3_TAR_REG;                 /*!< (@ 0x00000004) I2C Target Address Register                                */
  __IOM uint32_t  I2C3_SAR_REG;                 /*!< (@ 0x00000008) I2C Slave Address Register                                 */
  __IOM uint32_t  I2C3_HS_MADDR_REG;            /*!< (@ 0x0000000C) I2C High Speed Master Mode Code Address Register           */
  __IOM uint32_t  I2C3_DATA_CMD_REG;            /*!< (@ 0x00000010) I2C Rx/Tx Data Buffer and Command Register                 */
  __IOM uint32_t  I2C3_SS_SCL_HCNT_REG;         /*!< (@ 0x00000014) Standard Speed I2C Clock SCL High Count Register           */
  __IOM uint32_t  I2C3_SS_SCL_LCNT_REG;         /*!< (@ 0x00000018) Standard Speed I2C Clock SCL Low Count Register            */
  __IOM uint32_t  I2C3_FS_SCL_HCNT_REG;         /*!< (@ 0x0000001C) Fast Speed I2C Clock SCL High Count Register               */
  __IOM uint32_t  I2C3_FS_SCL_LCNT_REG;         /*!< (@ 0x00000020) Fast Speed I2C Clock SCL Low Count Register                */
  __IOM uint32_t  I2C3_HS_SCL_HCNT_REG;         /*!< (@ 0x00000024) High Speed I2C Clock SCL High Count Register               */
  __IOM uint32_t  I2C3_HS_SCL_LCNT_REG;         /*!< (@ 0x00000028) High Speed I2C Clock SCL Low Count Register                */
  __IOM uint32_t  I2C3_INTR_STAT_REG;           /*!< (@ 0x0000002C) I2C Interrupt Status Register                              */
  __IOM uint32_t  I2C3_INTR_MASK_REG;           /*!< (@ 0x00000030) I2C Interrupt Mask Register                                */
  __IOM uint32_t  I2C3_RAW_INTR_STAT_REG;       /*!< (@ 0x00000034) I2C Raw Interrupt Status Register                          */
  __IOM uint32_t  I2C3_RX_TL_REG;               /*!< (@ 0x00000038) I2C Receive FIFO Threshold Register                        */
  __IOM uint32_t  I2C3_TX_TL_REG;               /*!< (@ 0x0000003C) I2C Transmit FIFO Threshold Register                       */
  __IOM uint32_t  I2C3_CLR_INTR_REG;            /*!< (@ 0x00000040) Clear Combined and Individual Interrupt Register           */
  __IOM uint32_t  I2C3_CLR_RX_UNDER_REG;        /*!< (@ 0x00000044) Clear RX_UNDER Interrupt Register                          */
  __IOM uint32_t  I2C3_CLR_RX_OVER_REG;         /*!< (@ 0x00000048) Clear RX_OVER Interrupt Register                           */
  __IOM uint32_t  I2C3_CLR_TX_OVER_REG;         /*!< (@ 0x0000004C) Clear TX_OVER Interrupt Register                           */
  __IOM uint32_t  I2C3_CLR_RD_REQ_REG;          /*!< (@ 0x00000050) Clear RD_REQ Interrupt Register                            */
  __IOM uint32_t  I2C3_CLR_TX_ABRT_REG;         /*!< (@ 0x00000054) Clear TX_ABRT Interrupt Register                           */
  __IOM uint32_t  I2C3_CLR_RX_DONE_REG;         /*!< (@ 0x00000058) Clear RX_DONE Interrupt Register                           */
  __IOM uint32_t  I2C3_CLR_ACTIVITY_REG;        /*!< (@ 0x0000005C) Clear ACTIVITY Interrupt Register                          */
  __IOM uint32_t  I2C3_CLR_STOP_DET_REG;        /*!< (@ 0x00000060) Clear STOP_DET Interrupt Register                          */
  __IOM uint32_t  I2C3_CLR_START_DET_REG;       /*!< (@ 0x00000064) Clear START_DET Interrupt Register                         */
  __IOM uint32_t  I2C3_CLR_GEN_CALL_REG;        /*!< (@ 0x00000068) Clear GEN_CALL Interrupt Register                          */
  __IOM uint32_t  I2C3_ENABLE_REG;              /*!< (@ 0x0000006C) I2C Enable Register                                        */
  __IOM uint32_t  I2C3_STATUS_REG;              /*!< (@ 0x00000070) I2C Status Register                                        */
  __IOM uint32_t  I2C3_TXFLR_REG;               /*!< (@ 0x00000074) I2C Transmit FIFO Level Register                           */
  __IOM uint32_t  I2C3_RXFLR_REG;               /*!< (@ 0x00000078) I2C Receive FIFO Level Register                            */
  __IOM uint32_t  I2C3_SDA_HOLD_REG;            /*!< (@ 0x0000007C) I2C SDA Hold Time Length Register                          */
  __IOM uint32_t  I2C3_TX_ABRT_SOURCE_REG;      /*!< (@ 0x00000080) I2C Transmit Abort Source Register                         */
  __IM  uint32_t  RESERVED;
  __IOM uint32_t  I2C3_DMA_CR_REG;              /*!< (@ 0x00000088) DMA Control Register                                       */
  __IOM uint32_t  I2C3_DMA_TDLR_REG;            /*!< (@ 0x0000008C) DMA Transmit Data Level Register                           */
  __IOM uint32_t  I2C3_DMA_RDLR_REG;            /*!< (@ 0x00000090) I2C Receive Data Level Register                            */
  __IOM uint32_t  I2C3_SDA_SETUP_REG;           /*!< (@ 0x00000094) I2C SDA Setup Register                                     */
  __IOM uint32_t  I2C3_ACK_GENERAL_CALL_REG;    /*!< (@ 0x00000098) I2C ACK General Call Register                              */
  __IOM uint32_t  I2C3_ENABLE_STATUS_REG;       /*!< (@ 0x0000009C) I2C Enable Status Register                                 */
  __IOM uint32_t  I2C3_IC_FS_SPKLEN_REG;        /*!< (@ 0x000000A0) I2C SS and FS spike suppression limit Size                 */
  __IOM uint32_t  I2C3_IC_HS_SPKLEN_REG;        /*!< (@ 0x000000A4) I2C HS spike suppression limit Size                        */
} I2C3_Type;                                    /*!< Size = 168 (0xa8)                                                         */



/* =========================================================================================================================== */
/* ================                                            I3C                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief I3C registers (I3C)
  */

typedef struct {                                /*!< (@ 0x50020C00) I3C Structure                                              */
  __IOM uint32_t  I3C_DEVICE_CTRL_REG;          /*!< (@ 0x00000000) Device Control Register                                    */
  __IOM uint32_t  I3C_DEVICE_ADDR_REG;          /*!< (@ 0x00000004) Device Address Register                                    */
  __IOM uint32_t  I3C_HW_CAPABILITY_REG;        /*!< (@ 0x00000008) Hardware Capability register                               */
  __IOM uint32_t  I3C_COMMAND_QUEUE_PORT_REG;   /*!< (@ 0x0000000C) COMMAND_QUEUE_PORT                                         */
  __IOM uint32_t  I3C_RESPONSE_QUEUE_PORT_REG;  /*!< (@ 0x00000010) RESPONSE_QUEUE_PORT                                        */
  __IOM uint32_t  I3C_RX_TX_DATA_PORT_REG;      /*!< (@ 0x00000014) Receive and Transmit Data Port Register                    */
  __IOM uint32_t  I3C_IBI_QUEUE_STATUS_DATA_REG;/*!< (@ 0x00000018) In-Band Interrupt Queue Status and Data Register           */
  __IOM uint32_t  I3C_QUEUE_THLD_CTRL_REG;      /*!< (@ 0x0000001C) Queue Threshold Control Register                           */
  __IOM uint32_t  I3C_DATA_BUFFER_THLD_CTRL_REG;/*!< (@ 0x00000020) Data Buffer Threshold Control Register                     */
  __IOM uint32_t  I3C_IBI_QUEUE_CTRL_REG;       /*!< (@ 0x00000024) IBI Queue Control Register                                 */
  __IM  uint32_t  RESERVED[2];
  __IOM uint32_t  I3C_IBI_SIR_REQ_REJECT_REG;   /*!< (@ 0x00000030) IBI SIR Request Rejection Control Register                 */
  __IOM uint32_t  I3C_RESET_CTRL_REG;           /*!< (@ 0x00000034) Reset Control Register                                     */
  __IOM uint32_t  I3C_SLV_EVENT_STATUS_REG;     /*!< (@ 0x00000038) Slave Event Status Register                                */
  __IOM uint32_t  I3C_INTR_STATUS_REG;          /*!< (@ 0x0000003C) Interrupt Status Register                                  */
  __IOM uint32_t  I3C_INTR_STATUS_EN_REG;       /*!< (@ 0x00000040) Interrupt Status Enable Register                           */
  __IOM uint32_t  I3C_INTR_SIGNAL_EN_REG;       /*!< (@ 0x00000044) Interrupt Signal Enable Register                           */
  __IOM uint32_t  I3C_INTR_FORCE_REG;           /*!< (@ 0x00000048) Interrupt Force Enable Register                            */
  __IOM uint32_t  I3C_QUEUE_STATUS_LEVEL_REG;   /*!< (@ 0x0000004C) Queue Status Level Register                                */
  __IOM uint32_t  I3C_DATA_BUFFER_STAT_LEVEL_REG;/*!< (@ 0x00000050) Data Buffer Status Level Register                         */
  __IOM uint32_t  I3C_PRESENT_STATE_REG;        /*!< (@ 0x00000054) Present State Register                                     */
  __IM  uint32_t  RESERVED1;
  __IOM uint32_t  I3C_DEVICE_ADDR_TABLE_PTR_REG;/*!< (@ 0x0000005C) Pointer for Device Address Table Registers                 */
  __IOM uint32_t  I3C_DEV_CHAR_TABLE_POINTER_REG;/*!< (@ 0x00000060) Pointer for Device Characteristics Table                  */
  __IM  uint32_t  RESERVED2[2];
  __IOM uint32_t  I3C_VENDOR_SPECIFIC_REG_PTR_REG;/*!< (@ 0x0000006C) Pointer for Vendor specific Registers                    */
  __IM  uint32_t  RESERVED3[16];
  __IOM uint32_t  I3C_DEVICE_CTRL_EXTENDED_REG; /*!< (@ 0x000000B0) Device Control Extended Register                           */
  __IOM uint32_t  I3C_SCL_I3C_OD_TIMING_REG;    /*!< (@ 0x000000B4) SCL I3C Open Drain Timing Register                         */
  __IOM uint32_t  I3C_SCL_I3C_PP_TIMING_REG;    /*!< (@ 0x000000B8) SCL I3C Push Pull Timing Register                          */
  __IOM uint32_t  I3C_SCL_I2C_FM_TIMING_REG;    /*!< (@ 0x000000BC) SCL I2C Fast Mode Timing Register                          */
  __IOM uint32_t  I3C_SCL_I2C_FMP_TIMING_REG;   /*!< (@ 0x000000C0) SCL I2C Fast Mode Plus Timing Register                     */
  __IM  uint32_t  RESERVED4;
  __IOM uint32_t  I3C_SCL_EXT_LCNT_TIMING_REG;  /*!< (@ 0x000000C8) SCL Extended Low Count Timing Register                     */
  __IOM uint32_t  I3C_SCL_EXT_TERMN_LCNT_TIME_REG;/*!< (@ 0x000000CC) SCL Termination Bit Low count Timing Register            */
  __IOM uint32_t  I3C_SDA_HOLD_DLY_TIMING_REG;  /*!< (@ 0x000000D0) SDA Hold Delay Timing Register                             */
  __IOM uint32_t  I3C_BUS_FREE_AVAIL_TIMING_REG;/*!< (@ 0x000000D4) Bus Free Timing Register                                   */
  __IM  uint32_t  RESERVED5[2];
  __IOM uint32_t  I3C_VER_ID_REG;               /*!< (@ 0x000000E0) I3C Version ID Register                                    */
  __IOM uint32_t  I3C_VER_TYPE_REG;             /*!< (@ 0x000000E4) I3C Version Type Register                                  */
  __IOM uint32_t  I3C_QUEUE_SIZE_CAPABILITY_REG;/*!< (@ 0x000000E8) I3C Queue Size Capability Register                         */
  __IM  uint32_t  RESERVED6[69];
  __IOM uint32_t  I3C_DEV_CHAR_TABLE1_LOC1_REG; /*!< (@ 0x00000200) Device Characteristic Table Location-1 of Device1          */
  __IOM uint32_t  I3C_DEV_CHAR_TABLE1_LOC2_REG; /*!< (@ 0x00000204) Device Characteristic Table Location-2 of Device1          */
  __IOM uint32_t  I3C_DEV_CHAR_TABLE1_LOC3_REG; /*!< (@ 0x00000208) Device Characteristic Table Location-3 of Device1          */
  __IOM uint32_t  I3C_DEV_CHAR_TABLE1_LOC4_REG; /*!< (@ 0x0000020C) Device Characteristic Table Location-4 of Device1          */
  __IOM uint32_t  I3C_DEV_CHAR_TABLE2_LOC1_REG; /*!< (@ 0x00000210) Device Characteristic Table Location-1 of Device2          */
  __IOM uint32_t  I3C_DEV_CHAR_TABLE2_LOC2_REG; /*!< (@ 0x00000214) Device Characteristic Table Location-2 of Device2          */
  __IOM uint32_t  I3C_DEV_CHAR_TABLE2_LOC3_REG; /*!< (@ 0x00000218) Device Characteristic Table Location-3 of Device2          */
  __IOM uint32_t  I3C_DEV_CHAR_TABLE2_LOC4_REG; /*!< (@ 0x0000021C) Device Characteristic Table Location-4 of Device2          */
  __IOM uint32_t  I3C_DEV_CHAR_TABLE3_LOC1_REG; /*!< (@ 0x00000220) Device Characteristic Table Location-1 of Device3          */
  __IOM uint32_t  I3C_DEV_CHAR_TABLE3_LOC2_REG; /*!< (@ 0x00000224) Device Characteristic Table Location-2 of Device3          */
  __IOM uint32_t  I3C_DEV_CHAR_TABLE3_LOC3_REG; /*!< (@ 0x00000228) Device Characteristic Table Location-3 of Device3          */
  __IOM uint32_t  I3C_DEV_CHAR_TABLE3_LOC4_REG; /*!< (@ 0x0000022C) Device Characteristic Table Location-4 of Device3          */
  __IOM uint32_t  I3C_DEV_CHAR_TABLE4_LOC1_REG; /*!< (@ 0x00000230) Device Characteristic Table Location-1 of Device4          */
  __IOM uint32_t  I3C_DEV_CHAR_TABLE4_LOC2_REG; /*!< (@ 0x00000234) Device Characteristic Table Location-2 of Device4          */
  __IOM uint32_t  I3C_DEV_CHAR_TABLE4_LOC3_REG; /*!< (@ 0x00000238) Device Characteristic Table Location-3 of Device4          */
  __IOM uint32_t  I3C_DEV_CHAR_TABLE4_LOC4_REG; /*!< (@ 0x0000023C) Device Characteristic Table Location-4 of Device4          */
  __IOM uint32_t  I3C_DEV_CHAR_TABLE5_LOC1_REG; /*!< (@ 0x00000240) Device Characteristic Table Location-1 of Device5          */
  __IOM uint32_t  I3C_DEV_CHAR_TABLE5_LOC2_REG; /*!< (@ 0x00000244) Device Characteristic Table Location-2 of Device5          */
  __IOM uint32_t  I3C_DEV_CHAR_TABLE5_LOC3_REG; /*!< (@ 0x00000248) Device Characteristic Table Location-3 of Device5          */
  __IOM uint32_t  I3C_DEV_CHAR_TABLE5_LOC4_REG; /*!< (@ 0x0000024C) Device Characteristic Table Location-4 of Device5          */
  __IOM uint32_t  I3C_DEV_CHAR_TABLE6_LOC1_REG; /*!< (@ 0x00000250) Device Characteristic Table Location-1 of Device6          */
  __IOM uint32_t  I3C_DEV_CHAR_TABLE6_LOC2_REG; /*!< (@ 0x00000254) Device Characteristic Table Location-2 of Device6          */
  __IOM uint32_t  I3C_DEV_CHAR_TABLE6_LOC3_REG; /*!< (@ 0x00000258) Device Characteristic Table Location-3 of Device6          */
  __IOM uint32_t  I3C_DEV_CHAR_TABLE6_LOC4_REG; /*!< (@ 0x0000025C) Device Characteristic Table Location-4 of Device6          */
  __IOM uint32_t  I3C_DEV_CHAR_TABLE7_LOC1_REG; /*!< (@ 0x00000260) Device Characteristic Table Location-1 of Device7          */
  __IOM uint32_t  I3C_DEV_CHAR_TABLE7_LOC2_REG; /*!< (@ 0x00000264) Device Characteristic Table Location-2 of Device7          */
  __IOM uint32_t  I3C_DEV_CHAR_TABLE7_LOC3_REG; /*!< (@ 0x00000268) Device Characteristic Table Location-3 of Device7          */
  __IOM uint32_t  I3C_DEV_CHAR_TABLE7_LOC4_REG; /*!< (@ 0x0000026C) Device Characteristic Table Location-4 of Device7          */
  __IOM uint32_t  I3C_DEV_CHAR_TABLE8_LOC1_REG; /*!< (@ 0x00000270) Device Characteristic Table Location-1 of Device8          */
  __IOM uint32_t  I3C_DEV_CHAR_TABLE8_LOC2_REG; /*!< (@ 0x00000274) Device Characteristic Table Location-2 of Device8          */
  __IOM uint32_t  I3C_DEV_CHAR_TABLE8_LOC3_REG; /*!< (@ 0x00000278) Device Characteristic Table Location-3 of Device8          */
  __IOM uint32_t  I3C_DEV_CHAR_TABLE8_LOC4_REG; /*!< (@ 0x0000027C) Device Characteristic Table Location-4 of Device8          */
  __IOM uint32_t  I3C_DEV_ADDR_TABLE_LOC1_REG;  /*!< (@ 0x00000280) Device Address Table of Device1                            */
  __IOM uint32_t  I3C_DEV_ADDR_TABLE_LOC2_REG;  /*!< (@ 0x00000284) Device Address Table of Device2                            */
  __IOM uint32_t  I3C_DEV_ADDR_TABLE_LOC3_REG;  /*!< (@ 0x00000288) Device Address Table of Device3                            */
  __IOM uint32_t  I3C_DEV_ADDR_TABLE_LOC4_REG;  /*!< (@ 0x0000028C) Device Address Table of Device4                            */
  __IOM uint32_t  I3C_DEV_ADDR_TABLE_LOC5_REG;  /*!< (@ 0x00000290) Device Address Table of Device5                            */
  __IOM uint32_t  I3C_DEV_ADDR_TABLE_LOC6_REG;  /*!< (@ 0x00000294) Device Address Table of Device6                            */
  __IOM uint32_t  I3C_DEV_ADDR_TABLE_LOC7_REG;  /*!< (@ 0x00000298) Device Address Table of Device7                            */
  __IOM uint32_t  I3C_DEV_ADDR_TABLE_LOC8_REG;  /*!< (@ 0x0000029C) Device Address Table of Device8                            */
} I3C_Type;                                     /*!< Size = 672 (0x2a0)                                                        */



/* =========================================================================================================================== */
/* ================                                           LCDC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief LCDC registers (LCDC)
  */

typedef struct {                                /*!< (@ 0x30030000) LCDC Structure                                             */
  __IOM uint32_t  LCDC_MODE_REG;                /*!< (@ 0x00000000) Display Mode                                               */
  __IOM uint32_t  LCDC_CLKCTRL_REG;             /*!< (@ 0x00000004) Clock Divider                                              */
  __IOM uint32_t  LCDC_BGCOLOR_REG;             /*!< (@ 0x00000008) Background Color                                           */
  __IOM uint32_t  LCDC_RESXY_REG;               /*!< (@ 0x0000000C) Resolution X,Y                                             */
  __IM  uint32_t  RESERVED;
  __IOM uint32_t  LCDC_FRONTPORCHXY_REG;        /*!< (@ 0x00000014) Front Porch X and Y                                        */
  __IOM uint32_t  LCDC_BLANKINGXY_REG;          /*!< (@ 0x00000018) Blanking X and Y                                           */
  __IOM uint32_t  LCDC_BACKPORCHXY_REG;         /*!< (@ 0x0000001C) Back Porch X and Y                                         */
  __IM  uint32_t  RESERVED1;
  __IOM uint32_t  LCDC_STARTXY_REG;             /*!< (@ 0x00000024) Specifies the start position of the very first
                                                                    frame                                                      */
  __IOM uint32_t  LCDC_DBIB_CFG_REG;            /*!< (@ 0x00000028) MIPI DBIB Config Register                                  */
  __IOM uint32_t  LCDC_GPIO_REG;                /*!< (@ 0x0000002C) General Purpose IO (8-bits)                                */
  __IOM uint32_t  LCDC_LAYER0_MODE_REG;         /*!< (@ 0x00000030) Layer0 Mode                                                */
  __IOM uint32_t  LCDC_LAYER0_STARTXY_REG;      /*!< (@ 0x00000034) Layer0 Start XY                                            */
  __IOM uint32_t  LCDC_LAYER0_SIZEXY_REG;       /*!< (@ 0x00000038) Layer0 Size XY                                             */
  __IOM uint32_t  LCDC_LAYER0_BASEADDR_REG;     /*!< (@ 0x0000003C) Layer0 Base Addr                                           */
  __IOM uint32_t  LCDC_LAYER0_STRIDE_REG;       /*!< (@ 0x00000040) Layer0 Stride                                              */
  __IOM uint32_t  LCDC_LAYER0_RESXY_REG;        /*!< (@ 0x00000044) Layer0 Res XY                                              */
  __IM  uint32_t  RESERVED2[2];
  __IOM uint32_t  LCDC_LAYER1_MODE_REG;         /*!< (@ 0x00000050) Layer1 Mode                                                */
  __IOM uint32_t  LCDC_LAYER1_STARTXY_REG;      /*!< (@ 0x00000054) Layer0 Start XY                                            */
  __IOM uint32_t  LCDC_LAYER1_SIZEXY_REG;       /*!< (@ 0x00000058) Layer1 Size XY                                             */
  __IOM uint32_t  LCDC_LAYER1_BASEADDR_REG;     /*!< (@ 0x0000005C) Layer1 Base Addr                                           */
  __IOM uint32_t  LCDC_LAYER1_STRIDE_REG;       /*!< (@ 0x00000060) Layer1 Stride                                              */
  __IOM uint32_t  LCDC_LAYER1_RESXY_REG;        /*!< (@ 0x00000064) Layer1 Res XY                                              */
  __IM  uint32_t  RESERVED3[32];
  __IOM uint32_t  LCDC_DBIB_CMD_REG;            /*!< (@ 0x000000E8) MIPI DBIB Command Register                                 */
  __IOM uint32_t  LCDC_DBIB_RDAT_REG;           /*!< (@ 0x000000EC) Data read by DBI Type-B/SPI interface                      */
  __IOM uint32_t  LCDC_CONF_REG;                /*!< (@ 0x000000F0) Supported config                                           */
  __IOM uint32_t  LCDC_IDREG_REG;               /*!< (@ 0x000000F4) Identification Register                                    */
  __IOM uint32_t  LCDC_INTERRUPT_REG;           /*!< (@ 0x000000F8) Interrupt Register                                         */
  __IOM uint32_t  LCDC_STATUS_REG;              /*!< (@ 0x000000FC) Status Register                                            */
  __IOM uint32_t  LCDC_COLMOD_REG;              /*!< (@ 0x00000100) Color mode status register                                 */
  __IM  uint32_t  RESERVED4[32];
  __IOM uint32_t  LCDC_CRC_REG;                 /*!< (@ 0x00000184) CRC check                                                  */
  __IM  uint32_t  RESERVED5[6];
  __IOM uint32_t  LCDC_FMTCTRL_REG;             /*!< (@ 0x000001A0) DBI and JDI format control                                 */
  __IOM uint32_t  LCDC_FMTCTRL_2_REG;           /*!< (@ 0x000001A4) DBI and JDI format control                                 */
  __IOM uint32_t  LCDC_CLKCTRL_CG_REG;          /*!< (@ 0x000001A8) Controls the CLock Gaters and the routing of
                                                                    format and pixel clock                                     */
  __IOM uint32_t  LCDC_FMTCTRL_3_REG;           /*!< (@ 0x000001AC) JDI format control                                         */
  __IM  uint32_t  RESERVED6[148];
  __IOM uint32_t  LCDC_PALETTE_BASE;            /*!< (@ 0x00000400) Global palette/gamma correction                            */
  __IM  uint32_t  RESERVED7[254];
  __IOM uint32_t  LCDC_PALETTE_255;             /*!< (@ 0x000007FC) Global palette/gamma correction                            */
} LCDC_Type;                                    /*!< Size = 2048 (0x800)                                                       */



/* =========================================================================================================================== */
/* ================                                          MEMCTRL                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief MEMCTRL registers (MEMCTRL)
  */

typedef struct {                                /*!< (@ 0x50050000) MEMCTRL Structure                                          */
  __IM  uint32_t  RESERVED;
  __IOM uint32_t  MEM_PRIO_ARB1_4_REG;          /*!< (@ 0x00000004) Priority Control Register for arbiter 1, 2, 3
                                                                    and 4                                                      */
  __IOM uint32_t  MEM_PRIO_ARB5_8_REG;          /*!< (@ 0x00000008) Priority Control Register for arbiter 5, 6, 7
                                                                    and 8                                                      */
  __IM  uint32_t  RESERVED1;
  __IOM uint32_t  MEM_STALL_REG;                /*!< (@ 0x00000010) Maximum Stall cycles Control Register                      */
  __IOM uint32_t  MEM_STATUS_REG;               /*!< (@ 0x00000014) Memory Arbiter Status Register                             */
  __IOM uint32_t  MEM_STATUS2_REG;              /*!< (@ 0x00000018) RAM cells Status Register                                  */
  __IM  uint32_t  RESERVED2;
  __IOM uint32_t  CMI_CODE_BASE_REG;            /*!< (@ 0x00000020) CMAC code Base Address Register                            */
  __IOM uint32_t  CMI_DATA_BASE_REG;            /*!< (@ 0x00000024) CMAC data Base Address Register                            */
  __IOM uint32_t  CMI_SHARED_BASE_REG;          /*!< (@ 0x00000028) CMAC shared data Base Address Register                     */
  __IOM uint32_t  CMI_END_REG;                  /*!< (@ 0x0000002C) CMAC end Address Register                                  */
  __IOM uint32_t  CMAC_STATUS_REG;              /*!< (@ 0x00000030) Memory Arbiter Status Register                             */
  __IM  uint32_t  RESERVED3[15];
  __IOM uint32_t  BUSY_SET_REG;                 /*!< (@ 0x00000070) BSR Set Register                                           */
  __IOM uint32_t  BUSY_SET_REG2;                /*!< (@ 0x00000074) BSR2 Set Register                                          */
  __IOM uint32_t  BUSY_RESET_REG;               /*!< (@ 0x00000078) BSR Reset Register                                         */
  __IOM uint32_t  BUSY_RESET_REG2;              /*!< (@ 0x0000007C) BSR2 Reset Register                                        */
  __IOM uint32_t  BUSY_STAT_REG;                /*!< (@ 0x00000080) BSR Status Register                                        */
  __IOM uint32_t  BUSY_STAT_REG2;               /*!< (@ 0x00000084) BSR2 Status Register                                       */
} MEMCTRL_Type;                                 /*!< Size = 136 (0x88)                                                         */



/* =========================================================================================================================== */
/* ================                                          OQSPIF                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief OQSPIF registers (OQSPIF)
  */

typedef struct {                                /*!< (@ 0x36000000) OQSPIF Structure                                           */
  __IOM uint32_t  OQSPIF_CTRLBUS_REG;           /*!< (@ 0x00000000) SPI Bus control register for the Manual mode               */
  __IOM uint32_t  OQSPIF_CTRLMODE_REG;          /*!< (@ 0x00000004) Mode Control register                                      */
  __IOM uint32_t  OQSPIF_RECVDATA_REG;          /*!< (@ 0x00000008) Received data for the Manual mode                          */
  __IOM uint32_t  OQSPIF_BURSTCMDA_REG;         /*!< (@ 0x0000000C) The way of reading in Auto mode (command register
                                                                    A)                                                         */
  __IOM uint32_t  OQSPIF_BURSTCMDB_REG;         /*!< (@ 0x00000010) The way of reading in Auto mode (command register
                                                                    B)                                                         */
  __IOM uint32_t  OQSPIF_STATUS_REG;            /*!< (@ 0x00000014) The status register of the OSPI controller                 */
  __IOM uint32_t  OQSPIF_WRITEDATA_REG;         /*!< (@ 0x00000018) Write data to SPI Bus for the Manual mode                  */
  __IOM uint32_t  OQSPIF_READDATA_REG;          /*!< (@ 0x0000001C) Read data from SPI Bus for the Manual mode                 */
  __IOM uint32_t  OQSPIF_DUMMYDATA_REG;         /*!< (@ 0x00000020) Send dummy clocks to SPI Bus for the Manual mode           */
  __IOM uint32_t  OQSPIF_ERASECTRL_REG;         /*!< (@ 0x00000024) OSPI Erase control register                                */
  __IOM uint32_t  OQSPIF_ERASECMDA_REG;         /*!< (@ 0x00000028) The way of erasing in Auto mode (command register
                                                                    A)                                                         */
  __IOM uint32_t  OQSPIF_ERASECMDB_REG;         /*!< (@ 0x0000002C) The way of erasing in Auto mode (command register
                                                                    B)                                                         */
  __IOM uint32_t  OQSPIF_ERASECMDC_REG;         /*!< (@ 0x00000030) The way of erasing in Auto mode (command register
                                                                    C)                                                         */
  __IOM uint32_t  OQSPIF_BURSTBRK_REG;          /*!< (@ 0x00000034) Read break sequence in Auto mode                           */
  __IOM uint32_t  OQSPIF_STATUSCMD_REG;         /*!< (@ 0x00000038) The way of reading the status of external device
                                                                    in Auto mode                                               */
  __IOM uint32_t  OQSPIF_CHCKERASE_REG;         /*!< (@ 0x0000003C) Check erase progress in Auto mode                          */
  __IOM uint32_t  OQSPIF_GP_REG;                /*!< (@ 0x00000040) OSPI General Purpose control register                      */
  __IM  uint32_t  RESERVED[47];
  __IOM uint32_t  OQSPIF_CTR_CTRL_REG;          /*!< (@ 0x00000100) Control register for the decryption engine of
                                                                    the OSPIC                                                  */
  __IOM uint32_t  OQSPIF_CTR_SADDR_REG;         /*!< (@ 0x00000104) Start address of the encrypted content in the
                                                                    OSPI flash                                                 */
  __IOM uint32_t  OQSPIF_CTR_EADDR_REG;         /*!< (@ 0x00000108) End address of the encrypted content in the OSPI
                                                                    flash                                                      */
  __IOM uint32_t  OQSPIF_CTR_NONCE_0_3_REG;     /*!< (@ 0x0000010C) Nonce bytes 0 to 3 for the AES-CTR algorithm               */
  __IOM uint32_t  OQSPIF_CTR_NONCE_4_7_REG;     /*!< (@ 0x00000110) Nonce bytes 4 to 7 for the AES-CTR algorithm               */
  __IOM uint32_t  OQSPIF_CTR_KEY_0_3_REG;       /*!< (@ 0x00000114) Key bytes 0 to 3 for the AES-CTR algorithm                 */
  __IOM uint32_t  OQSPIF_CTR_KEY_4_7_REG;       /*!< (@ 0x00000118) Key bytes 4 to 7 for the AES-CTR algorithm                 */
  __IOM uint32_t  OQSPIF_CTR_KEY_8_11_REG;      /*!< (@ 0x0000011C) Key bytes 8 to 11 for the AES-CTR algorithm                */
  __IOM uint32_t  OQSPIF_CTR_KEY_12_15_REG;     /*!< (@ 0x00000120) Key bytes 12 to 15 for the AES-CTR algorithm               */
  __IOM uint32_t  OQSPIF_CTR_KEY_16_19_REG;     /*!< (@ 0x00000124) Key bytes 16 to 19 for the AES-CTR algorithm               */
  __IOM uint32_t  OQSPIF_CTR_KEY_20_23_REG;     /*!< (@ 0x00000128) Key bytes 20 to 23 for the AES-CTR algorithm               */
  __IOM uint32_t  OQSPIF_CTR_KEY_24_27_REG;     /*!< (@ 0x0000012C) Key bytes 24 to 27 for the AES-CTR algorithm               */
  __IOM uint32_t  OQSPIF_CTR_KEY_28_31_REG;     /*!< (@ 0x00000130) Key bytes 28 to 31 for the AES-CTR algorithm               */
} OQSPIF_Type;                                  /*!< Size = 308 (0x134)                                                        */



/* =========================================================================================================================== */
/* ================                                           OTPC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief OTPC registers (OTPC)
  */

typedef struct {                                /*!< (@ 0x30070000) OTPC Structure                                             */
  __IOM uint32_t  OTPC_MODE_REG;                /*!< (@ 0x00000000) Mode register                                              */
  __IOM uint32_t  OTPC_STAT_REG;                /*!< (@ 0x00000004) Status register                                            */
  __IOM uint32_t  OTPC_PADDR_REG;               /*!< (@ 0x00000008) The address of the word that will be programmed,
                                                                    when the PROG mode is used.                                */
  __IOM uint32_t  OTPC_PWORD_REG;               /*!< (@ 0x0000000C) The 32-bit word that will be programmed, when
                                                                    the PROG mode is used.                                     */
  __IOM uint32_t  OTPC_TIM1_REG;                /*!< (@ 0x00000010) Various timing parameters of the OTP cell.                 */
  __IOM uint32_t  OTPC_TIM2_REG;                /*!< (@ 0x00000014) Various timing parameters of the OTP cell.                 */
} OTPC_Type;                                    /*!< Size = 24 (0x18)                                                          */



/* =========================================================================================================================== */
/* ================                                           PCM1                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief PCM1 registers (PCM1)
  */

typedef struct {                                /*!< (@ 0x50030300) PCM1 Structure                                             */
  __IOM uint32_t  PCM1_CTRL_REG;                /*!< (@ 0x00000000) PCM1 Control register                                      */
  __IOM uint32_t  PCM1_IN1_REG;                 /*!< (@ 0x00000004) PCM1 data in 1                                             */
  __IOM uint32_t  PCM1_IN2_REG;                 /*!< (@ 0x00000008) PCM1 data in 2                                             */
  __IOM uint32_t  PCM1_OUT1_REG;                /*!< (@ 0x0000000C) PCM1 data out 1                                            */
  __IOM uint32_t  PCM1_OUT2_REG;                /*!< (@ 0x00000010) PCM1 data out 2                                            */
} PCM1_Type;                                    /*!< Size = 20 (0x14)                                                          */



/* =========================================================================================================================== */
/* ================                                            PDC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief PDC registers (PDC)
  */

typedef struct {                                /*!< (@ 0x50000200) PDC Structure                                              */
  __IOM uint32_t  PDC_CTRL0_REG;                /*!< (@ 0x00000000) PDC control register                                       */
  __IOM uint32_t  PDC_CTRL1_REG;                /*!< (@ 0x00000004) PDC control register                                       */
  __IOM uint32_t  PDC_CTRL2_REG;                /*!< (@ 0x00000008) PDC control register                                       */
  __IOM uint32_t  PDC_CTRL3_REG;                /*!< (@ 0x0000000C) PDC control register                                       */
  __IOM uint32_t  PDC_CTRL4_REG;                /*!< (@ 0x00000010) PDC control register                                       */
  __IOM uint32_t  PDC_CTRL5_REG;                /*!< (@ 0x00000014) PDC control register                                       */
  __IOM uint32_t  PDC_CTRL6_REG;                /*!< (@ 0x00000018) PDC control register                                       */
  __IOM uint32_t  PDC_CTRL7_REG;                /*!< (@ 0x0000001C) PDC control register                                       */
  __IOM uint32_t  PDC_CTRL8_REG;                /*!< (@ 0x00000020) PDC control register                                       */
  __IOM uint32_t  PDC_CTRL9_REG;                /*!< (@ 0x00000024) PDC control register                                       */
  __IOM uint32_t  PDC_CTRL10_REG;               /*!< (@ 0x00000028) PDC control register                                       */
  __IOM uint32_t  PDC_CTRL11_REG;               /*!< (@ 0x0000002C) PDC control register                                       */
  __IOM uint32_t  PDC_CTRL12_REG;               /*!< (@ 0x00000030) PDC control register                                       */
  __IOM uint32_t  PDC_CTRL13_REG;               /*!< (@ 0x00000034) PDC control register                                       */
  __IOM uint32_t  PDC_CTRL14_REG;               /*!< (@ 0x00000038) PDC control register                                       */
  __IOM uint32_t  PDC_CTRL15_REG;               /*!< (@ 0x0000003C) PDC control register                                       */
  __IM  uint32_t  RESERVED[16];
  __IOM uint32_t  PDC_ACKNOWLEDGE_REG;          /*!< (@ 0x00000080) Clear a pending PDC bit                                    */
  __IOM uint32_t  PDC_PENDING_REG;              /*!< (@ 0x00000084) Shows any pending wakup event                              */
  __IOM uint32_t  PDC_PENDING_SNC_REG;          /*!< (@ 0x00000088) Shows any pending IRQ to SNC                               */
  __IOM uint32_t  PDC_PENDING_CM33_REG;         /*!< (@ 0x0000008C) Shows any pending IRQ to CM33                              */
  __IOM uint32_t  PDC_PENDING_CMAC_REG;         /*!< (@ 0x00000090) Shows any pending IRQ to CMAC                              */
  __IOM uint32_t  PDC_SET_PENDING_REG;          /*!< (@ 0x00000094) Set a pending PDC bit                                      */
} PDC_Type;                                     /*!< Size = 152 (0x98)                                                         */



/* =========================================================================================================================== */
/* ================                                          PWMLED                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief PWMLED registers (PWMLED)
  */

typedef struct {                                /*!< (@ 0x50010600) PWMLED Structure                                           */
  __IOM uint32_t  LEDS_PWM_CTRL_REG;            /*!< (@ 0x00000000) LED PWM control register                                   */
  __IOM uint32_t  LEDS_STATUS_REG;              /*!< (@ 0x00000004) LEDS status register                                       */
  __IOM uint32_t  LED1_PWM_CONF_REG;            /*!< (@ 0x00000008) Defines duty cycle and load sel for LED1                   */
  __IOM uint32_t  LED2_PWM_CONF_REG;            /*!< (@ 0x0000000C) Defines duty cycle and load sel for LED2                   */
  __IOM uint32_t  LED3_PWM_CONF_REG;            /*!< (@ 0x00000010) Defines duty cycle and load sel for LED3                   */
  __IOM uint32_t  LEDS_DRV_CTRL_REG;            /*!< (@ 0x00000014) LED driver control register                                */
  __IOM uint32_t  LEDS_FREQUENCY_REG;           /*!< (@ 0x00000018) Defines the frequency of all the LEDs                      */
  __IOM uint32_t  LED_LOAD_SEL_REG;             /*!< (@ 0x0000001C) Load sel for LEDS                                          */
  __IOM uint32_t  LED_CURR_TRIM_REG;            /*!< (@ 0x00000020) Trim values for LEDS                                       */
} PWMLED_Type;                                  /*!< Size = 36 (0x24)                                                          */



/* =========================================================================================================================== */
/* ================                                           QSPIC                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief QSPIC registers (QSPIC)
  */

typedef struct {                                /*!< (@ 0x46000000) QSPIC Structure                                            */
  __IOM uint32_t  QSPIC_CTRLBUS_REG;            /*!< (@ 0x00000000) SPI Bus control register for the Manual mode               */
  __IOM uint32_t  QSPIC_CTRLMODE_REG;           /*!< (@ 0x00000004) Mode control register                                      */
  __IOM uint32_t  QSPIC_RECVDATA_REG;           /*!< (@ 0x00000008) Received data for the Manual mode                          */
  __IOM uint32_t  QSPIC_BURSTCMDA_REG;          /*!< (@ 0x0000000C) The way of reading in Auto mode (command register
                                                                    A)                                                         */
  __IOM uint32_t  QSPIC_BURSTCMDB_REG;          /*!< (@ 0x00000010) The way of reading in Auto mode (command register
                                                                    B)                                                         */
  __IOM uint32_t  QSPIC_STATUS_REG;             /*!< (@ 0x00000014) The status register of the QSPI controller                 */
  __IOM uint32_t  QSPIC_WRITEDATA_REG;          /*!< (@ 0x00000018) Write data to SPI Bus for the Manual mode                  */
  __IOM uint32_t  QSPIC_READDATA_REG;           /*!< (@ 0x0000001C) Read data from SPI Bus for the Manual mode                 */
  __IOM uint32_t  QSPIC_DUMMYDATA_REG;          /*!< (@ 0x00000020) Send dummy clocks to SPI Bus for the Manual mode           */
  __IOM uint32_t  QSPIC_ERASECTRL_REG;          /*!< (@ 0x00000024) Erase control register                                     */
  __IOM uint32_t  QSPIC_ERASECMDA_REG;          /*!< (@ 0x00000028) The way of erasing in Auto mode (command register
                                                                    A)                                                         */
  __IOM uint32_t  QSPIC_ERASECMDB_REG;          /*!< (@ 0x0000002C) The way of erasing in Auto mode (command register
                                                                    B)                                                         */
  __IOM uint32_t  QSPIC_BURSTBRK_REG;           /*!< (@ 0x00000030) Read break sequence in Auto mode                           */
  __IOM uint32_t  QSPIC_STATUSCMD_REG;          /*!< (@ 0x00000034) The way of reading the status of external device
                                                                    in Auto mode                                               */
  __IOM uint32_t  QSPIC_CHCKERASE_REG;          /*!< (@ 0x00000038) Check erase progress in Auto mode                          */
  __IOM uint32_t  QSPIC_GP_REG;                 /*!< (@ 0x0000003C) General purpose QSPIC register                             */
  __IOM uint32_t  QSPIC_AWRITECMD_REG;          /*!< (@ 0x00000040) The way of writing in Auto mode when the external
                                                                    device is a serial SRAM                                    */
  __IOM uint32_t  QSPIC_MEMBLEN_REG;            /*!< (@ 0x00000044) External memory burst length configuration                 */
} QSPIC_Type;                                   /*!< Size = 72 (0x48)                                                          */



/* =========================================================================================================================== */
/* ================                                          QSPIC2                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief QSPIC2 registers (QSPIC2)
  */

typedef struct {                                /*!< (@ 0x26000000) QSPIC2 Structure                                           */
  __IOM uint32_t  QSPIC2_CTRLBUS_REG;           /*!< (@ 0x00000000) SPI Bus control register for the Manual mode               */
  __IOM uint32_t  QSPIC2_CTRLMODE_REG;          /*!< (@ 0x00000004) Mode control register                                      */
  __IOM uint32_t  QSPIC2_RECVDATA_REG;          /*!< (@ 0x00000008) Received data for the Manual mode                          */
  __IOM uint32_t  QSPIC2_BURSTCMDA_REG;         /*!< (@ 0x0000000C) The way of reading in Auto mode (command register
                                                                    A)                                                         */
  __IOM uint32_t  QSPIC2_BURSTCMDB_REG;         /*!< (@ 0x00000010) The way of reading in Auto mode (command register
                                                                    B)                                                         */
  __IOM uint32_t  QSPIC2_STATUS_REG;            /*!< (@ 0x00000014) The status register of the QSPI controller                 */
  __IOM uint32_t  QSPIC2_WRITEDATA_REG;         /*!< (@ 0x00000018) Write data to SPI Bus for the Manual mode                  */
  __IOM uint32_t  QSPIC2_READDATA_REG;          /*!< (@ 0x0000001C) Read data from SPI Bus for the Manual mode                 */
  __IOM uint32_t  QSPIC2_DUMMYDATA_REG;         /*!< (@ 0x00000020) Send dummy clocks to SPI Bus for the Manual mode           */
  __IOM uint32_t  QSPIC2_ERASECTRL_REG;         /*!< (@ 0x00000024) Erase control register                                     */
  __IOM uint32_t  QSPIC2_ERASECMDA_REG;         /*!< (@ 0x00000028) The way of erasing in Auto mode (command register
                                                                    A)                                                         */
  __IOM uint32_t  QSPIC2_ERASECMDB_REG;         /*!< (@ 0x0000002C) The way of erasing in Auto mode (command register
                                                                    B)                                                         */
  __IOM uint32_t  QSPIC2_BURSTBRK_REG;          /*!< (@ 0x00000030) Read break sequence in Auto mode                           */
  __IOM uint32_t  QSPIC2_STATUSCMD_REG;         /*!< (@ 0x00000034) The way of reading the status of external device
                                                                    in Auto mode                                               */
  __IOM uint32_t  QSPIC2_CHCKERASE_REG;         /*!< (@ 0x00000038) Check erase progress in Auto mode                          */
  __IOM uint32_t  QSPIC2_GP_REG;                /*!< (@ 0x0000003C) General purpose QSPIC2 register                            */
  __IOM uint32_t  QSPIC2_AWRITECMD_REG;         /*!< (@ 0x00000040) The way of writing in Auto mode when the external
                                                                    device is a serial SRAM                                    */
  __IOM uint32_t  QSPIC2_MEMBLEN_REG;           /*!< (@ 0x00000044) External memory burst length configuration                 */
} QSPIC2_Type;                                  /*!< Size = 72 (0x48)                                                          */



/* =========================================================================================================================== */
/* ================                                            RTC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief RTC registers (RTC)
  */

typedef struct {                                /*!< (@ 0x50000800) RTC Structure                                              */
  __IOM uint32_t  RTC_CONTROL_REG;              /*!< (@ 0x00000000) RTC Control Register                                       */
  __IOM uint32_t  RTC_HOUR_MODE_REG;            /*!< (@ 0x00000004) RTC Hour Mode Register                                     */
  __IOM uint32_t  RTC_TIME_REG;                 /*!< (@ 0x00000008) RTC Time Register                                          */
  __IOM uint32_t  RTC_CALENDAR_REG;             /*!< (@ 0x0000000C) RTC Calendar Register                                      */
  __IOM uint32_t  RTC_TIME_ALARM_REG;           /*!< (@ 0x00000010) RTC Time Alarm Register                                    */
  __IOM uint32_t  RTC_CALENDAR_ALARM_REG;       /*!< (@ 0x00000014) RTC Calendar Alram Register                                */
  __IOM uint32_t  RTC_ALARM_ENABLE_REG;         /*!< (@ 0x00000018) RTC Alarm Enable Register                                  */
  __IOM uint32_t  RTC_EVENT_FLAGS_REG;          /*!< (@ 0x0000001C) RTC Event Flags Register                                   */
  __IOM uint32_t  RTC_INTERRUPT_ENABLE_REG;     /*!< (@ 0x00000020) RTC Interrupt Enable Register                              */
  __IOM uint32_t  RTC_INTERRUPT_DISABLE_REG;    /*!< (@ 0x00000024) RTC Interrupt Disable Register                             */
  __IOM uint32_t  RTC_INTERRUPT_MASK_REG;       /*!< (@ 0x00000028) RTC Interrupt Mask Register                                */
  __IOM uint32_t  RTC_STATUS_REG;               /*!< (@ 0x0000002C) RTC Status Register                                        */
  __IOM uint32_t  RTC_KEEP_RTC_REG;             /*!< (@ 0x00000030) RTC Keep RTC Register                                      */
  __IM  uint32_t  RESERVED[19];
  __IOM uint32_t  RTC_EVENT_CTRL_REG;           /*!< (@ 0x00000080) RTC Event Control Register                                 */
  __IM  uint32_t  RESERVED1;
  __IOM uint32_t  RTC_PDC_EVENT_PERIOD_REG;     /*!< (@ 0x00000088) RTC PDC Event Period Register                              */
  __IOM uint32_t  RTC_PDC_EVENT_CLEAR_REG;      /*!< (@ 0x0000008C) RTC PDC Event Clear Register                               */
  __IM  uint32_t  RESERVED2;
  __IOM uint32_t  RTC_PDC_EVENT_CNT_REG;        /*!< (@ 0x00000094) RTC PDC Event Counter Register                             */
} RTC_Type;                                     /*!< Size = 152 (0x98)                                                         */



/* =========================================================================================================================== */
/* ================                                           SDADC                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief SDADC registers (SDADC)
  */

typedef struct {                                /*!< (@ 0x50040500) SDADC Structure                                            */
  __IOM uint32_t  SDADC_CTRL_REG;               /*!< (@ 0x00000000) Sigma Delta ADC Control Register                           */
  __IOM uint32_t  SDADC_PGA_CTRL_REG;           /*!< (@ 0x00000004) Sigma Delta ADC PGA Control Registers                      */
  __IM  uint32_t  RESERVED;
  __IOM uint32_t  SDADC_CLEAR_INT_REG;          /*!< (@ 0x0000000C) Sigma Delta ADC Clear Interrupt Register                   */
  __IOM uint32_t  SDADC_RESULT_REG;             /*!< (@ 0x00000010) Sigma Delta ADC Result Register                            */
  __IOM uint32_t  SDADC_AUDIO_FILT_REG;         /*!< (@ 0x00000014) Sigma Delta ADC Audio Filter Register                      */
} SDADC_Type;                                   /*!< Size = 24 (0x18)                                                          */



/* =========================================================================================================================== */
/* ================                                            SNC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief SNC registers (SNC)
  */

typedef struct {                                /*!< (@ 0x50021000) SNC Structure                                              */
  __IOM uint32_t  SNC_STATUS_REG;               /*!< (@ 0x00000000) Sensor Node Status Register                                */
  __IOM uint32_t  SNC_WDOG_REG;                 /*!< (@ 0x00000004) Sensor Node Watchdog Register                              */
} SNC_Type;                                     /*!< Size = 8 (0x8)                                                            */



/* =========================================================================================================================== */
/* ================                                            SPI                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief SPI registers (SPI)
  */

typedef struct {                                /*!< (@ 0x50020300) SPI Structure                                              */
  __IOM uint32_t  SPI_CTRL_REG;                 /*!< (@ 0x00000000) Spi control register                                       */
  __IOM uint32_t  SPI_CONFIG_REG;               /*!< (@ 0x00000004) Spi control register                                       */
  __IOM uint32_t  SPI_CLOCK_REG;                /*!< (@ 0x00000008) Spi clock register                                         */
  __IOM uint32_t  SPI_FIFO_CONFIG_REG;          /*!< (@ 0x0000000C) Spi fifo configuration register                            */
  __IOM uint32_t  SPI_IRQ_MASK_REG;             /*!< (@ 0x00000010) Spi interrupt mask register                                */
  __IOM uint32_t  SPI_STATUS_REG;               /*!< (@ 0x00000014) Spi status register                                        */
  __IOM uint32_t  SPI_FIFO_STATUS_REG;          /*!< (@ 0x00000018) SPI RX/TX fifo status register                             */
  __IOM uint32_t  SPI_FIFO_READ_REG;            /*!< (@ 0x0000001C) Spi RX fifo read register                                  */
  __IOM uint32_t  SPI_FIFO_WRITE_REG;           /*!< (@ 0x00000020) Spi TX fifo wtite register                                 */
  __IOM uint32_t  SPI_CS_CONFIG_REG;            /*!< (@ 0x00000024) Spi cs configuration register                              */
  __IM  uint32_t  RESERVED;
  __IOM uint32_t  SPI_TXBUFFER_FORCE_REG;       /*!< (@ 0x0000002C) SPI TX buffer force low value                              */
} SPI_Type;                                     /*!< Size = 48 (0x30)                                                          */



/* =========================================================================================================================== */
/* ================                                           SPI2                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief SPI2 registers (SPI2)
  */

typedef struct {                                /*!< (@ 0x50020400) SPI2 Structure                                             */
  __IOM uint32_t  SPI2_CTRL_REG;                /*!< (@ 0x00000000) Spi control register                                       */
  __IOM uint32_t  SPI2_CONFIG_REG;              /*!< (@ 0x00000004) Spi control register                                       */
  __IOM uint32_t  SPI2_CLOCK_REG;               /*!< (@ 0x00000008) Spi clock register                                         */
  __IOM uint32_t  SPI2_FIFO_CONFIG_REG;         /*!< (@ 0x0000000C) Spi fifo configuration register                            */
  __IOM uint32_t  SPI2_IRQ_MASK_REG;            /*!< (@ 0x00000010) Spi interrupt mask register                                */
  __IOM uint32_t  SPI2_STATUS_REG;              /*!< (@ 0x00000014) Spi status register                                        */
  __IOM uint32_t  SPI2_FIFO_STATUS_REG;         /*!< (@ 0x00000018) SPI RX/TX fifo status register                             */
  __IOM uint32_t  SPI2_FIFO_READ_REG;           /*!< (@ 0x0000001C) Spi RX fifo read register                                  */
  __IOM uint32_t  SPI2_FIFO_WRITE_REG;          /*!< (@ 0x00000020) Spi TX fifo wtite register                                 */
  __IOM uint32_t  SPI2_CS_CONFIG_REG;           /*!< (@ 0x00000024) Spi cs configuration register                              */
  __IM  uint32_t  RESERVED;
  __IOM uint32_t  SPI2_TXBUFFER_FORCE_REG;      /*!< (@ 0x0000002C) SPI TX buffer force low value                              */
} SPI2_Type;                                    /*!< Size = 48 (0x30)                                                          */



/* =========================================================================================================================== */
/* ================                                           SPI3                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief SPI3 registers (SPI3)
  */

typedef struct {                                /*!< (@ 0x51000200) SPI3 Structure                                             */
  __IOM uint32_t  SPI3_CTRL_REG;                /*!< (@ 0x00000000) Spi control register                                       */
  __IOM uint32_t  SPI3_CONFIG_REG;              /*!< (@ 0x00000004) Spi control register                                       */
  __IOM uint32_t  SPI3_CLOCK_REG;               /*!< (@ 0x00000008) Spi clock register                                         */
  __IOM uint32_t  SPI3_FIFO_CONFIG_REG;         /*!< (@ 0x0000000C) Spi fifo configuration register                            */
  __IOM uint32_t  SPI3_IRQ_MASK_REG;            /*!< (@ 0x00000010) Spi interrupt mask register                                */
  __IOM uint32_t  SPI3_STATUS_REG;              /*!< (@ 0x00000014) Spi status register                                        */
  __IOM uint32_t  SPI3_FIFO_STATUS_REG;         /*!< (@ 0x00000018) SPI RX/TX fifo status register                             */
  __IOM uint32_t  SPI3_FIFO_READ_REG;           /*!< (@ 0x0000001C) Spi RX fifo read register                                  */
  __IOM uint32_t  SPI3_FIFO_WRITE_REG;          /*!< (@ 0x00000020) Spi TX fifo wtite register                                 */
  __IOM uint32_t  SPI3_CS_CONFIG_REG;           /*!< (@ 0x00000024) Spi cs configuration register                              */
  __IM  uint32_t  RESERVED;
  __IOM uint32_t  SPI3_TXBUFFER_FORCE_REG;      /*!< (@ 0x0000002C) SPI TX buffer force low value                              */
} SPI3_Type;                                    /*!< Size = 48 (0x30)                                                          */



/* =========================================================================================================================== */
/* ================                                           SRC1                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief SRC1 registers (SRC1)
  */

typedef struct {                                /*!< (@ 0x50030100) SRC1 Structure                                             */
  __IOM uint32_t  SRC1_CTRL_REG;                /*!< (@ 0x00000000) SRC control register                                       */
  __IOM uint32_t  SRC1_IN_FS_REG;               /*!< (@ 0x00000004) SRC Sample input rate                                      */
  __IOM uint32_t  SRC1_OUT_FS_REG;              /*!< (@ 0x00000008) SRC Sample output rate                                     */
  __IOM uint32_t  SRC1_IN1_REG;                 /*!< (@ 0x0000000C) SRC data in 1                                              */
  __IOM uint32_t  SRC1_IN2_REG;                 /*!< (@ 0x00000010) SRC data in 2                                              */
  __IOM uint32_t  SRC1_OUT1_REG;                /*!< (@ 0x00000014) SRC data out 1                                             */
  __IOM uint32_t  SRC1_OUT2_REG;                /*!< (@ 0x00000018) SRC data out 2                                             */
  __IOM uint32_t  SRC1_MUX_REG;                 /*!< (@ 0x0000001C) SRC mux register                                           */
  __IOM uint32_t  SRC1_COEF10_SET1_REG;         /*!< (@ 0x00000020) SRC coefficient 1,0 set 1                                  */
  __IOM uint32_t  SRC1_COEF32_SET1_REG;         /*!< (@ 0x00000024) SRC coefficient 3,2 set 1                                  */
  __IOM uint32_t  SRC1_COEF54_SET1_REG;         /*!< (@ 0x00000028) SRC coefficient 5,4 set 1                                  */
  __IOM uint32_t  SRC1_COEF76_SET1_REG;         /*!< (@ 0x0000002C) SRC coefficient 7,6 set 1                                  */
  __IOM uint32_t  SRC1_COEF98_SET1_REG;         /*!< (@ 0x00000030) SRC coefficient 9,8 set 1                                  */
  __IOM uint32_t  SRC1_COEF0A_SET1_REG;         /*!< (@ 0x00000034) SRC coefficient 10 set 1                                   */
} SRC1_Type;                                    /*!< Size = 56 (0x38)                                                          */



/* =========================================================================================================================== */
/* ================                                           SRC2                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief SRC2 registers (SRC2)
  */

typedef struct {                                /*!< (@ 0x50030200) SRC2 Structure                                             */
  __IOM uint32_t  SRC2_CTRL_REG;                /*!< (@ 0x00000000) SRC control register                                       */
  __IOM uint32_t  SRC2_IN_FS_REG;               /*!< (@ 0x00000004) SRC Sample input rate                                      */
  __IOM uint32_t  SRC2_OUT_FS_REG;              /*!< (@ 0x00000008) SRC Sample output rate                                     */
  __IOM uint32_t  SRC2_IN1_REG;                 /*!< (@ 0x0000000C) SRC data in 1                                              */
  __IOM uint32_t  SRC2_IN2_REG;                 /*!< (@ 0x00000010) SRC data in 2                                              */
  __IOM uint32_t  SRC2_OUT1_REG;                /*!< (@ 0x00000014) SRC data out 1                                             */
  __IOM uint32_t  SRC2_OUT2_REG;                /*!< (@ 0x00000018) SRC data out 2                                             */
  __IOM uint32_t  SRC2_MUX_REG;                 /*!< (@ 0x0000001C) SRC mux register                                           */
  __IOM uint32_t  SRC2_COEF10_SET1_REG;         /*!< (@ 0x00000020) SRC coefficient 1,0 set 1                                  */
  __IOM uint32_t  SRC2_COEF32_SET1_REG;         /*!< (@ 0x00000024) SRC coefficient 3,2 set 1                                  */
  __IOM uint32_t  SRC2_COEF54_SET1_REG;         /*!< (@ 0x00000028) SRC coefficient 5,4 set 1                                  */
  __IOM uint32_t  SRC2_COEF76_SET1_REG;         /*!< (@ 0x0000002C) SRC coefficient 7,6 set 1                                  */
  __IOM uint32_t  SRC2_COEF98_SET1_REG;         /*!< (@ 0x00000030) SRC coefficient 9,8 set 1                                  */
  __IOM uint32_t  SRC2_COEF0A_SET1_REG;         /*!< (@ 0x00000034) SRC coefficient 10 set 1                                   */
} SRC2_Type;                                    /*!< Size = 56 (0x38)                                                          */



/* =========================================================================================================================== */
/* ================                                         SYS_WDOG                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief SYS_WDOG registers (SYS_WDOG)
  */

typedef struct {                                /*!< (@ 0x50000700) SYS_WDOG Structure                                         */
  __IOM uint32_t  WATCHDOG_REG;                 /*!< (@ 0x00000000) Watchdog timer register.                                   */
  __IOM uint32_t  WATCHDOG_CTRL_REG;            /*!< (@ 0x00000004) Watchdog control register.                                 */
} SYS_WDOG_Type;                                /*!< Size = 8 (0x8)                                                            */



/* =========================================================================================================================== */
/* ================                                          SYSBUS                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief SYSBUS registers (SYSBUS)
  */

typedef struct {                                /*!< (@ 0x30020000) SYSBUS Structure                                           */
  __IOM uint32_t  AHB_DMA_PL1_REG;              /*!< (@ 0x00000000) AHB-DMA layer priority level LCD                           */
  __IOM uint32_t  AHB_DMA_PL2_REG;              /*!< (@ 0x00000004) AHB-DMA layer priority level GPU                           */
  __IOM uint32_t  AHB_DMA_PL3_REG;              /*!< (@ 0x00000008) AHB-DMA layer Priority level GEN-DMA                       */
  __IOM uint32_t  AHB_DMA_PL4_REG;              /*!< (@ 0x0000000C) AHB-DMA layer Priority level CRYPTO-DMA                    */
  __IOM uint32_t  AHB_DMA_PL5_REG;              /*!< (@ 0x00000010) AHB-DMA layer Priority level MMC                           */
  __IM  uint32_t  RESERVED;
  __IOM uint32_t  AHB_DMA_PL7_REG;              /*!< (@ 0x00000018) AHB-DMA layer Priority level AHB-S to AHB_DMA
                                                                    arbiter registers                                          */
  __IM  uint32_t  RESERVED1[11];
  __IOM uint32_t  AHB_DMA_DFLT_MASTER_REG;      /*!< (@ 0x00000048) Default master ID number (AHB DMA layer only)              */
  __IOM uint32_t  AHB_DMA_WTEN_REG;             /*!< (@ 0x0000004C) Weighted-Token Arbitration Scheme Enable (AHB
                                                                    DMA layer only)                                            */
  __IOM uint32_t  AHB_DMA_TCL_REG;              /*!< (@ 0x00000050) Master clock refresh period (AHB DMA layer only)           */
  __IOM uint32_t  AHB_DMA_CCLM1_REG;            /*!< (@ 0x00000054) LCD Master clock tokens                                    */
  __IOM uint32_t  AHB_DMA_CCLM2_REG;            /*!< (@ 0x00000058) GPU Master clock tokens                                    */
  __IOM uint32_t  AHB_DMA_CCLM3_REG;            /*!< (@ 0x0000005C) GEN-DMA Master clock tokens                                */
  __IOM uint32_t  AHB_DMA_CCLM4_REG;            /*!< (@ 0x00000060) CRYPTO-DMA Master clock tokens                             */
  __IOM uint32_t  AHB_DMA_CCLM5_REG;            /*!< (@ 0x00000064) MMC Master clock tokens                                    */
  __IM  uint32_t  RESERVED2;
  __IOM uint32_t  AHB_DMA_CCLM7_REG;            /*!< (@ 0x0000006C) AHB-S Master clock tokens                                  */
  __IM  uint32_t  RESERVED3[8];
  __IOM uint32_t  AHB_DMA_VERSION_REG;          /*!< (@ 0x00000090) Version ID (AHB DMA layer only)                            */
} SYSBUS_Type;                                  /*!< Size = 148 (0x94)                                                         */



/* =========================================================================================================================== */
/* ================                                        SYSBUS_ICM                                         ================ */
/* =========================================================================================================================== */


/**
  * @brief SYSBUS_ICM registers (SYSBUS_ICM)
  */

typedef struct {                                /*!< (@ 0x50040600) SYSBUS_ICM Structure                                       */
  __IOM uint32_t  QSPIFL2_ARB_REG;              /*!< (@ 0x00000000) QSPIFL2_ARB_REG                                            */
  __IOM uint32_t  QSPIRAM_ARB_REG;              /*!< (@ 0x00000004) QSPIRAM_ARB_REG                                            */
  __IOM uint32_t  AHBREG_ARB_REG;               /*!< (@ 0x00000008) AHBREG_ARB_REG                                             */
  __IOM uint32_t  APBF_ARB_REG;                 /*!< (@ 0x0000000C) APBF_ARB_REG                                               */
  __IOM uint32_t  APB_ARB_REG;                  /*!< (@ 0x00000010) APB_ARB_REG                                                */
} SYSBUS_ICM_Type;                              /*!< Size = 20 (0x14)                                                          */



/* =========================================================================================================================== */
/* ================                                           TIMER                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief TIMER registers (TIMER)
  */

typedef struct {                                /*!< (@ 0x50010000) TIMER Structure                                            */
  __IOM uint32_t  TIMER_CTRL_REG;               /*!< (@ 0x00000000) Timer control register                                     */
  __IOM uint32_t  TIMER_TIMER_VAL_REG;          /*!< (@ 0x00000004) Timer counter value                                        */
  __IOM uint32_t  TIMER_STATUS_REG;             /*!< (@ 0x00000008) Timer status register                                      */
  __IOM uint32_t  TIMER_GPIO1_CONF_REG;         /*!< (@ 0x0000000C) Timer gpio1 selection                                      */
  __IOM uint32_t  TIMER_GPIO2_CONF_REG;         /*!< (@ 0x00000010) Timer gpio2 selection                                      */
  __IOM uint32_t  TIMER_SETTINGS_REG;           /*!< (@ 0x00000014) Timer reload value and Delay in shot mode                  */
  __IOM uint32_t  TIMER_SHOTWIDTH_REG;          /*!< (@ 0x00000018) Timer Shot duration in shot mode                           */
  __IM  uint32_t  RESERVED;
  __IOM uint32_t  TIMER_CAPTURE_GPIO1_REG;      /*!< (@ 0x00000020) Timer value for event on GPIO1                             */
  __IOM uint32_t  TIMER_CAPTURE_GPIO2_REG;      /*!< (@ 0x00000024) Timer value for event on GPIO2                             */
  __IOM uint32_t  TIMER_PRESCALER_VAL_REG;      /*!< (@ 0x00000028) Timer prescaler counter valuew                             */
  __IOM uint32_t  TIMER_PWM_CTRL_REG;           /*!< (@ 0x0000002C) Timer pwm frequency register                               */
  __IM  uint32_t  RESERVED1;
  __IOM uint32_t  TIMER_GPIO3_CONF_REG;         /*!< (@ 0x00000034) Timer gpio3 selection                                      */
  __IOM uint32_t  TIMER_GPIO4_CONF_REG;         /*!< (@ 0x00000038) Timer gpio4 selection                                      */
  __IOM uint32_t  TIMER_CAPTURE_GPIO3_REG;      /*!< (@ 0x0000003C) Timer value for event on GPIO1                             */
  __IOM uint32_t  TIMER_CAPTURE_GPIO4_REG;      /*!< (@ 0x00000040) Timer value for event on GPIO1                             */
  __IOM uint32_t  TIMER_PULSE_CNT_CTRL_REG;     /*!< (@ 0x00000044) Timer pulse counter ctrl register                          */
  __IOM uint32_t  TIMER_ONESHOT_TRIGGER_REG;    /*!< (@ 0x00000048) Timer oneshot trigger register                             */
  __IOM uint32_t  TIMER_PWM_SYNC_REG;           /*!< (@ 0x0000004C) Timer pwm synchronisation register                         */
  __IM  uint32_t  RESERVED2;
  __IOM uint32_t  TIMER_CLEAR_IRQ_REG;          /*!< (@ 0x00000054) Timer clear interrupt                                      */
  __IOM uint32_t  TIMER_CLEAR_IRQ_PULSE_REG;    /*!< (@ 0x00000058) Timer clear pulse interrupt                                */
} TIMER_Type;                                   /*!< Size = 92 (0x5c)                                                          */



/* =========================================================================================================================== */
/* ================                                          TIMER2                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief TIMER2 registers (TIMER2)
  */

typedef struct {                                /*!< (@ 0x50010100) TIMER2 Structure                                           */
  __IOM uint32_t  TIMER2_CTRL_REG;              /*!< (@ 0x00000000) Timer control register                                     */
  __IOM uint32_t  TIMER2_TIMER_VAL_REG;         /*!< (@ 0x00000004) Timer counter value                                        */
  __IOM uint32_t  TIMER2_STATUS_REG;            /*!< (@ 0x00000008) Timer status register                                      */
  __IOM uint32_t  TIMER2_GPIO1_CONF_REG;        /*!< (@ 0x0000000C) Timer gpio1 selection                                      */
  __IOM uint32_t  TIMER2_GPIO2_CONF_REG;        /*!< (@ 0x00000010) Timer gpio2 selection                                      */
  __IOM uint32_t  TIMER2_SETTINGS_REG;          /*!< (@ 0x00000014) Timer reload value and Delay in shot mode                  */
  __IOM uint32_t  TIMER2_SHOTWIDTH_REG;         /*!< (@ 0x00000018) Timer Shot duration in shot mode                           */
  __IM  uint32_t  RESERVED;
  __IOM uint32_t  TIMER2_CAPTURE_GPIO1_REG;     /*!< (@ 0x00000020) Timer value for event on GPIO1                             */
  __IOM uint32_t  TIMER2_CAPTURE_GPIO2_REG;     /*!< (@ 0x00000024) Timer value for event on GPIO2                             */
  __IOM uint32_t  TIMER2_PRESCALER_VAL_REG;     /*!< (@ 0x00000028) Timer prescaler counter value                              */
  __IOM uint32_t  TIMER2_PWM_CTRL_REG;          /*!< (@ 0x0000002C) Timer pwm frequency register                               */
  __IM  uint32_t  RESERVED1[5];
  __IOM uint32_t  TIMER2_PULSE_CNT_CTRL_REG;    /*!< (@ 0x00000044) Timer pulse counter ctrl register                          */
  __IM  uint32_t  RESERVED2[3];
  __IOM uint32_t  TIMER2_CLEAR_IRQ_REG;         /*!< (@ 0x00000054) Timer clear interrupt                                      */
  __IOM uint32_t  TIMER2_CLEAR_IRQ_PULSE_REG;   /*!< (@ 0x00000058) Timer clear pulse interrupt                                */
} TIMER2_Type;                                  /*!< Size = 92 (0x5c)                                                          */



/* =========================================================================================================================== */
/* ================                                          TIMER3                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief TIMER3 registers (TIMER3)
  */

typedef struct {                                /*!< (@ 0x50010200) TIMER3 Structure                                           */
  __IOM uint32_t  TIMER3_CTRL_REG;              /*!< (@ 0x00000000) Timer control register                                     */
  __IOM uint32_t  TIMER3_TIMER_VAL_REG;         /*!< (@ 0x00000004) Timer counter value                                        */
  __IOM uint32_t  TIMER3_STATUS_REG;            /*!< (@ 0x00000008) Timer status register                                      */
  __IOM uint32_t  TIMER3_GPIO1_CONF_REG;        /*!< (@ 0x0000000C) Timer gpio1 selection                                      */
  __IOM uint32_t  TIMER3_GPIO2_CONF_REG;        /*!< (@ 0x00000010) Timer gpio2 selection                                      */
  __IOM uint32_t  TIMER3_SETTINGS_REG;          /*!< (@ 0x00000014) Timer reload value and Delay in shot mode                  */
  __IOM uint32_t  TIMER3_SHOTWIDTH_REG;         /*!< (@ 0x00000018) Timer Shot duration in shot mode                           */
  __IM  uint32_t  RESERVED;
  __IOM uint32_t  TIMER3_CAPTURE_GPIO1_REG;     /*!< (@ 0x00000020) Timer value for event on GPIO1                             */
  __IOM uint32_t  TIMER3_CAPTURE_GPIO2_REG;     /*!< (@ 0x00000024) Timer value for event on GPIO2                             */
  __IOM uint32_t  TIMER3_PRESCALER_VAL_REG;     /*!< (@ 0x00000028) Timer prescaler counter value                              */
  __IOM uint32_t  TIMER3_PWM_CTRL_REG;          /*!< (@ 0x0000002C) Timer pwm frequency register                               */
  __IM  uint32_t  RESERVED1[5];
  __IOM uint32_t  TIMER3_PULSE_CNT_CTRL_REG;    /*!< (@ 0x00000044) Timer pulse counter ctrl register                          */
  __IM  uint32_t  RESERVED2[3];
  __IOM uint32_t  TIMER3_CLEAR_IRQ_REG;         /*!< (@ 0x00000054) Timer clear interrupt                                      */
  __IOM uint32_t  TIMER3_CLEAR_IRQ_PULSE_REG;   /*!< (@ 0x00000058) Timer clear pulse interrupt                                */
} TIMER3_Type;                                  /*!< Size = 92 (0x5c)                                                          */



/* =========================================================================================================================== */
/* ================                                          TIMER4                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief TIMER4 registers (TIMER4)
  */

typedef struct {                                /*!< (@ 0x50010300) TIMER4 Structure                                           */
  __IOM uint32_t  TIMER4_CTRL_REG;              /*!< (@ 0x00000000) Timer control register                                     */
  __IOM uint32_t  TIMER4_TIMER_VAL_REG;         /*!< (@ 0x00000004) Timer counter value                                        */
  __IOM uint32_t  TIMER4_STATUS_REG;            /*!< (@ 0x00000008) Timer status register                                      */
  __IOM uint32_t  TIMER4_GPIO1_CONF_REG;        /*!< (@ 0x0000000C) Timer gpio1 selection                                      */
  __IOM uint32_t  TIMER4_GPIO2_CONF_REG;        /*!< (@ 0x00000010) Timer gpio2 selection                                      */
  __IOM uint32_t  TIMER4_SETTINGS_REG;          /*!< (@ 0x00000014) Timer reload value and Delay in shot mode                  */
  __IOM uint32_t  TIMER4_SHOTWIDTH_REG;         /*!< (@ 0x00000018) Timer Shot duration in shot mode                           */
  __IM  uint32_t  RESERVED;
  __IOM uint32_t  TIMER4_CAPTURE_GPIO1_REG;     /*!< (@ 0x00000020) Timer value for event on GPIO1                             */
  __IOM uint32_t  TIMER4_CAPTURE_GPIO2_REG;     /*!< (@ 0x00000024) Timer value for event on GPIO2                             */
  __IOM uint32_t  TIMER4_PRESCALER_VAL_REG;     /*!< (@ 0x00000028) Timer prescaler counter valuew                             */
  __IOM uint32_t  TIMER4_PWM_CTRL_REG;          /*!< (@ 0x0000002C) Timer pwm frequency register                               */
  __IM  uint32_t  RESERVED1;
  __IOM uint32_t  TIMER4_GPIO3_CONF_REG;        /*!< (@ 0x00000034) Timer gpio3 selection                                      */
  __IOM uint32_t  TIMER4_GPIO4_CONF_REG;        /*!< (@ 0x00000038) Timer gpio4 selection                                      */
  __IOM uint32_t  TIMER4_CAPTURE_GPIO3_REG;     /*!< (@ 0x0000003C) Timer value for event on GPIO1                             */
  __IOM uint32_t  TIMER4_CAPTURE_GPIO4_REG;     /*!< (@ 0x00000040) Timer value for event on GPIO1                             */
  __IOM uint32_t  TIMER4_PULSE_CNT_CTRL_REG;    /*!< (@ 0x00000044) Timer pulse counter ctrl register                          */
  __IOM uint32_t  TIMER4_ONESHOT_TRIGGER_REG;   /*!< (@ 0x00000048) Timer oneshot trigger register                             */
  __IM  uint32_t  RESERVED2;
  __IOM uint32_t  TIMER4_CLEAR_GPIO_EVENT_REG;  /*!< (@ 0x00000050) Timer clear gpio event register                            */
  __IOM uint32_t  TIMER4_CLEAR_IRQ_REG;         /*!< (@ 0x00000054) Timer clear interrupt                                      */
  __IOM uint32_t  TIMER4_CLEAR_IRQ_PULSE_REG;   /*!< (@ 0x00000058) Timer clear pulse interrupt                                */
} TIMER4_Type;                                  /*!< Size = 92 (0x5c)                                                          */



/* =========================================================================================================================== */
/* ================                                          TIMER5                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief TIMER5 registers (TIMER5)
  */

typedef struct {                                /*!< (@ 0x50010400) TIMER5 Structure                                           */
  __IOM uint32_t  TIMER5_CTRL_REG;              /*!< (@ 0x00000000) Timer control register                                     */
  __IOM uint32_t  TIMER5_TIMER_VAL_REG;         /*!< (@ 0x00000004) Timer counter value                                        */
  __IOM uint32_t  TIMER5_STATUS_REG;            /*!< (@ 0x00000008) Timer status register                                      */
  __IOM uint32_t  TIMER5_GPIO1_CONF_REG;        /*!< (@ 0x0000000C) Timer gpio1 selection                                      */
  __IOM uint32_t  TIMER5_GPIO2_CONF_REG;        /*!< (@ 0x00000010) Timer gpio2 selection                                      */
  __IOM uint32_t  TIMER5_SETTINGS_REG;          /*!< (@ 0x00000014) Timer reload value and Delay in shot mode                  */
  __IOM uint32_t  TIMER5_SHOTWIDTH_REG;         /*!< (@ 0x00000018) Timer Shot duration in shot mode                           */
  __IM  uint32_t  RESERVED;
  __IOM uint32_t  TIMER5_CAPTURE_GPIO1_REG;     /*!< (@ 0x00000020) Timer value for event on GPIO1                             */
  __IOM uint32_t  TIMER5_CAPTURE_GPIO2_REG;     /*!< (@ 0x00000024) Timer value for event on GPIO2                             */
  __IOM uint32_t  TIMER5_PRESCALER_VAL_REG;     /*!< (@ 0x00000028) Timer prescaler counter value                              */
  __IOM uint32_t  TIMER5_PWM_CTRL_REG;          /*!< (@ 0x0000002C) Timer pwm frequency register                               */
  __IM  uint32_t  RESERVED1[5];
  __IOM uint32_t  TIMER5_PULSE_CNT_CTRL_REG;    /*!< (@ 0x00000044) Timer pulse counter ctrl register                          */
  __IM  uint32_t  RESERVED2[3];
  __IOM uint32_t  TIMER5_CLEAR_IRQ_REG;         /*!< (@ 0x00000054) Timer clear interrupt                                      */
  __IOM uint32_t  TIMER5_CLEAR_IRQ_PULSE_REG;   /*!< (@ 0x00000058) Timer clear pulse interrupt                                */
} TIMER5_Type;                                  /*!< Size = 92 (0x5c)                                                          */



/* =========================================================================================================================== */
/* ================                                          TIMER6                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief TIMER6 registers (TIMER6)
  */

typedef struct {                                /*!< (@ 0x50010500) TIMER6 Structure                                           */
  __IOM uint32_t  TIMER6_CTRL_REG;              /*!< (@ 0x00000000) Timer control register                                     */
  __IOM uint32_t  TIMER6_TIMER_VAL_REG;         /*!< (@ 0x00000004) Timer counter value                                        */
  __IOM uint32_t  TIMER6_STATUS_REG;            /*!< (@ 0x00000008) Timer status register                                      */
  __IOM uint32_t  TIMER6_GPIO1_CONF_REG;        /*!< (@ 0x0000000C) Timer gpio1 selection                                      */
  __IOM uint32_t  TIMER6_GPIO2_CONF_REG;        /*!< (@ 0x00000010) Timer gpio2 selection                                      */
  __IOM uint32_t  TIMER6_SETTINGS_REG;          /*!< (@ 0x00000014) Timer reload value and Delay in shot mode                  */
  __IOM uint32_t  TIMER6_SHOTWIDTH_REG;         /*!< (@ 0x00000018) Timer Shot duration in shot mode                           */
  __IM  uint32_t  RESERVED;
  __IOM uint32_t  TIMER6_CAPTURE_GPIO1_REG;     /*!< (@ 0x00000020) Timer value for event on GPIO1                             */
  __IOM uint32_t  TIMER6_CAPTURE_GPIO2_REG;     /*!< (@ 0x00000024) Timer value for event on GPIO2                             */
  __IOM uint32_t  TIMER6_PRESCALER_VAL_REG;     /*!< (@ 0x00000028) Timer prescaler counter value                              */
  __IOM uint32_t  TIMER6_PWM_CTRL_REG;          /*!< (@ 0x0000002C) Timer pwm frequency register                               */
  __IM  uint32_t  RESERVED1[5];
  __IOM uint32_t  TIMER6_PULSE_CNT_CTRL_REG;    /*!< (@ 0x00000044) Timer pulse counter ctrl register                          */
  __IM  uint32_t  RESERVED2[3];
  __IOM uint32_t  TIMER6_CLEAR_IRQ_REG;         /*!< (@ 0x00000054) Timer clear interrupt                                      */
  __IOM uint32_t  TIMER6_CLEAR_IRQ_PULSE_REG;   /*!< (@ 0x00000058) Timer clear pulse interrupt                                */
} TIMER6_Type;                                  /*!< Size = 92 (0x5c)                                                          */



/* =========================================================================================================================== */
/* ================                                           UART                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief UART registers (UART)
  */

typedef struct {                                /*!< (@ 0x50020000) UART Structure                                             */
  __IOM uint32_t  UART_RBR_THR_DLL_REG;         /*!< (@ 0x00000000) Receive Buffer Register                                    */
  __IOM uint32_t  UART_IER_DLH_REG;             /*!< (@ 0x00000004) Interrupt Enable Register                                  */
  __IOM uint32_t  UART_IIR_FCR_REG;             /*!< (@ 0x00000008) Interrupt Identification Register/FIFO Control
                                                                    Register                                                   */
  __IOM uint32_t  UART_LCR_REG;                 /*!< (@ 0x0000000C) Line Control Register                                      */
  __IOM uint32_t  UART_MCR_REG;                 /*!< (@ 0x00000010) Modem Control Register                                     */
  __IOM uint32_t  UART_LSR_REG;                 /*!< (@ 0x00000014) Line Status Register                                       */
  __IM  uint32_t  RESERVED;
  __IOM uint32_t  UART_SCR_REG;                 /*!< (@ 0x0000001C) Scratchpad Register                                        */
  __IM  uint32_t  RESERVED1[4];
  __IOM uint32_t  UART_SRBR_STHR0_REG;          /*!< (@ 0x00000030) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART_SRBR_STHR1_REG;          /*!< (@ 0x00000034) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART_SRBR_STHR2_REG;          /*!< (@ 0x00000038) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART_SRBR_STHR3_REG;          /*!< (@ 0x0000003C) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART_SRBR_STHR4_REG;          /*!< (@ 0x00000040) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART_SRBR_STHR5_REG;          /*!< (@ 0x00000044) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART_SRBR_STHR6_REG;          /*!< (@ 0x00000048) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART_SRBR_STHR7_REG;          /*!< (@ 0x0000004C) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART_SRBR_STHR8_REG;          /*!< (@ 0x00000050) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART_SRBR_STHR9_REG;          /*!< (@ 0x00000054) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART_SRBR_STHR10_REG;         /*!< (@ 0x00000058) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART_SRBR_STHR11_REG;         /*!< (@ 0x0000005C) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART_SRBR_STHR12_REG;         /*!< (@ 0x00000060) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART_SRBR_STHR13_REG;         /*!< (@ 0x00000064) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART_SRBR_STHR14_REG;         /*!< (@ 0x00000068) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART_SRBR_STHR15_REG;         /*!< (@ 0x0000006C) Shadow Receive/Transmit Buffer Register                    */
  __IM  uint32_t  RESERVED2[3];
  __IOM uint32_t  UART_USR_REG;                 /*!< (@ 0x0000007C) UART Status register.                                      */
  __IOM uint32_t  UART_TFL_REG;                 /*!< (@ 0x00000080) Transmit FIFO Level                                        */
  __IOM uint32_t  UART_RFL_REG;                 /*!< (@ 0x00000084) Receive FIFO Level.                                        */
  __IOM uint32_t  UART_SRR_REG;                 /*!< (@ 0x00000088) Software Reset Register.                                   */
  __IM  uint32_t  RESERVED3;
  __IOM uint32_t  UART_SBCR_REG;                /*!< (@ 0x00000090) Shadow Break Control Register                              */
  __IOM uint32_t  UART_SDMAM_REG;               /*!< (@ 0x00000094) Shadow DMA Mode                                            */
  __IOM uint32_t  UART_SFE_REG;                 /*!< (@ 0x00000098) Shadow FIFO Enable                                         */
  __IOM uint32_t  UART_SRT_REG;                 /*!< (@ 0x0000009C) Shadow RCVR Trigger                                        */
  __IOM uint32_t  UART_STET_REG;                /*!< (@ 0x000000A0) Shadow TX Empty Trigger                                    */
  __IOM uint32_t  UART_HTX_REG;                 /*!< (@ 0x000000A4) Halt TX                                                    */
  __IOM uint32_t  UART_DMASA_REG;               /*!< (@ 0x000000A8) DMA Software Acknowledge                                   */
  __IM  uint32_t  RESERVED4[5];
  __IOM uint32_t  UART_DLF_REG;                 /*!< (@ 0x000000C0) Divisor Latch Fraction Register                            */
  __IM  uint32_t  RESERVED5[13];
  __IOM uint32_t  UART_UCV_REG;                 /*!< (@ 0x000000F8) Component Version                                          */
  __IOM uint32_t  UART_CTR_REG;                 /*!< (@ 0x000000FC) Component Type Register                                    */
} UART_Type;                                    /*!< Size = 256 (0x100)                                                        */



/* =========================================================================================================================== */
/* ================                                           UART2                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief UART2 registers (UART2)
  */

typedef struct {                                /*!< (@ 0x50020100) UART2 Structure                                            */
  __IOM uint32_t  UART2_RBR_THR_DLL_REG;        /*!< (@ 0x00000000) Receive Buffer Register                                    */
  __IOM uint32_t  UART2_IER_DLH_REG;            /*!< (@ 0x00000004) Interrupt Enable Register                                  */
  __IOM uint32_t  UART2_IIR_FCR_REG;            /*!< (@ 0x00000008) Interrupt Identification Register/FIFO Control
                                                                    Register                                                   */
  __IOM uint32_t  UART2_LCR_REG;                /*!< (@ 0x0000000C) Line Control Register                                      */
  __IOM uint32_t  UART2_MCR_REG;                /*!< (@ 0x00000010) Modem Control Register                                     */
  __IOM uint32_t  UART2_LSR_REG;                /*!< (@ 0x00000014) Line Status Register                                       */
  __IOM uint32_t  UART2_MSR_REG;                /*!< (@ 0x00000018) Modem Status Register                                      */
  __IOM uint32_t  UART2_SCR_REG;                /*!< (@ 0x0000001C) Scratchpad Register                                        */
  __IM  uint32_t  RESERVED[4];
  __IOM uint32_t  UART2_SRBR_STHR0_REG;         /*!< (@ 0x00000030) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART2_SRBR_STHR1_REG;         /*!< (@ 0x00000034) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART2_SRBR_STHR2_REG;         /*!< (@ 0x00000038) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART2_SRBR_STHR3_REG;         /*!< (@ 0x0000003C) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART2_SRBR_STHR4_REG;         /*!< (@ 0x00000040) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART2_SRBR_STHR5_REG;         /*!< (@ 0x00000044) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART2_SRBR_STHR6_REG;         /*!< (@ 0x00000048) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART2_SRBR_STHR7_REG;         /*!< (@ 0x0000004C) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART2_SRBR_STHR8_REG;         /*!< (@ 0x00000050) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART2_SRBR_STHR9_REG;         /*!< (@ 0x00000054) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART2_SRBR_STHR10_REG;        /*!< (@ 0x00000058) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART2_SRBR_STHR11_REG;        /*!< (@ 0x0000005C) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART2_SRBR_STHR12_REG;        /*!< (@ 0x00000060) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART2_SRBR_STHR13_REG;        /*!< (@ 0x00000064) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART2_SRBR_STHR14_REG;        /*!< (@ 0x00000068) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART2_SRBR_STHR15_REG;        /*!< (@ 0x0000006C) Shadow Receive/Transmit Buffer Register                    */
  __IM  uint32_t  RESERVED1[3];
  __IOM uint32_t  UART2_USR_REG;                /*!< (@ 0x0000007C) UART Status register.                                      */
  __IOM uint32_t  UART2_TFL_REG;                /*!< (@ 0x00000080) Transmit FIFO Level                                        */
  __IOM uint32_t  UART2_RFL_REG;                /*!< (@ 0x00000084) Receive FIFO Level.                                        */
  __IOM uint32_t  UART2_SRR_REG;                /*!< (@ 0x00000088) Software Reset Register.                                   */
  __IOM uint32_t  UART2_SRTS_REG;               /*!< (@ 0x0000008C) Shadow Request to Send                                     */
  __IOM uint32_t  UART2_SBCR_REG;               /*!< (@ 0x00000090) Shadow Break Control Register                              */
  __IOM uint32_t  UART2_SDMAM_REG;              /*!< (@ 0x00000094) Shadow DMA Mode                                            */
  __IOM uint32_t  UART2_SFE_REG;                /*!< (@ 0x00000098) Shadow FIFO Enable                                         */
  __IOM uint32_t  UART2_SRT_REG;                /*!< (@ 0x0000009C) Shadow RCVR Trigger                                        */
  __IOM uint32_t  UART2_STET_REG;               /*!< (@ 0x000000A0) Shadow TX Empty Trigger                                    */
  __IOM uint32_t  UART2_HTX_REG;                /*!< (@ 0x000000A4) Halt TX                                                    */
  __IOM uint32_t  UART2_DMASA_REG;              /*!< (@ 0x000000A8) DMA Software Acknowledge                                   */
  __IM  uint32_t  RESERVED2[5];
  __IOM uint32_t  UART2_DLF_REG;                /*!< (@ 0x000000C0) Divisor Latch Fraction Register                            */
  __IOM uint32_t  UART2_RAR_REG;                /*!< (@ 0x000000C4) Receive Address Register                                   */
  __IOM uint32_t  UART2_TAR_REG;                /*!< (@ 0x000000C8) Transmit Address Register                                  */
  __IOM uint32_t  UART2_LCR_EXT;                /*!< (@ 0x000000CC) Line Extended Control Register                             */
  __IM  uint32_t  RESERVED3[10];
  __IOM uint32_t  UART2_UCV_REG;                /*!< (@ 0x000000F8) Component Version                                          */
  __IOM uint32_t  UART2_CTR_REG;                /*!< (@ 0x000000FC) Component Type Register                                    */
} UART2_Type;                                   /*!< Size = 256 (0x100)                                                        */



/* =========================================================================================================================== */
/* ================                                           UART3                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief UART3 registers (UART3)
  */

typedef struct {                                /*!< (@ 0x50020200) UART3 Structure                                            */
  __IOM uint32_t  UART3_RBR_THR_DLL_REG;        /*!< (@ 0x00000000) Receive Buffer Register                                    */
  __IOM uint32_t  UART3_IER_DLH_REG;            /*!< (@ 0x00000004) Interrupt Enable Register                                  */
  __IOM uint32_t  UART3_IIR_FCR_REG;            /*!< (@ 0x00000008) Interrupt Identification Register/FIFO Control
                                                                    Register                                                   */
  __IOM uint32_t  UART3_LCR_REG;                /*!< (@ 0x0000000C) Line Control Register                                      */
  __IOM uint32_t  UART3_MCR_REG;                /*!< (@ 0x00000010) Modem Control Register                                     */
  __IOM uint32_t  UART3_LSR_REG;                /*!< (@ 0x00000014) Line Status Register                                       */
  __IOM uint32_t  UART3_MSR_REG;                /*!< (@ 0x00000018) Modem Status Register                                      */
  __IOM uint32_t  UART3_CONFIG_REG;             /*!< (@ 0x0000001C) ISO7816 Config Register                                    */
  __IM  uint32_t  RESERVED[4];
  __IOM uint32_t  UART3_SRBR_STHR0_REG;         /*!< (@ 0x00000030) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART3_SRBR_STHR1_REG;         /*!< (@ 0x00000034) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART3_SRBR_STHR2_REG;         /*!< (@ 0x00000038) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART3_SRBR_STHR3_REG;         /*!< (@ 0x0000003C) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART3_SRBR_STHR4_REG;         /*!< (@ 0x00000040) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART3_SRBR_STHR5_REG;         /*!< (@ 0x00000044) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART3_SRBR_STHR6_REG;         /*!< (@ 0x00000048) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART3_SRBR_STHR7_REG;         /*!< (@ 0x0000004C) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART3_SRBR_STHR8_REG;         /*!< (@ 0x00000050) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART3_SRBR_STHR9_REG;         /*!< (@ 0x00000054) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART3_SRBR_STHR10_REG;        /*!< (@ 0x00000058) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART3_SRBR_STHR11_REG;        /*!< (@ 0x0000005C) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART3_SRBR_STHR12_REG;        /*!< (@ 0x00000060) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART3_SRBR_STHR13_REG;        /*!< (@ 0x00000064) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART3_SRBR_STHR14_REG;        /*!< (@ 0x00000068) Shadow Receive/Transmit Buffer Register                    */
  __IOM uint32_t  UART3_SRBR_STHR15_REG;        /*!< (@ 0x0000006C) Shadow Receive/Transmit Buffer Register                    */
  __IM  uint32_t  RESERVED1[3];
  __IOM uint32_t  UART3_USR_REG;                /*!< (@ 0x0000007C) UART Status register.                                      */
  __IOM uint32_t  UART3_TFL_REG;                /*!< (@ 0x00000080) Transmit FIFO Level                                        */
  __IOM uint32_t  UART3_RFL_REG;                /*!< (@ 0x00000084) Receive FIFO Level.                                        */
  __IOM uint32_t  UART3_SRR_REG;                /*!< (@ 0x00000088) Software Reset Register.                                   */
  __IOM uint32_t  UART3_SRTS_REG;               /*!< (@ 0x0000008C) Shadow Request to Send                                     */
  __IOM uint32_t  UART3_SBCR_REG;               /*!< (@ 0x00000090) Shadow Break Control Register                              */
  __IOM uint32_t  UART3_SDMAM_REG;              /*!< (@ 0x00000094) Shadow DMA Mode                                            */
  __IOM uint32_t  UART3_SFE_REG;                /*!< (@ 0x00000098) Shadow FIFO Enable                                         */
  __IOM uint32_t  UART3_SRT_REG;                /*!< (@ 0x0000009C) Shadow RCVR Trigger                                        */
  __IOM uint32_t  UART3_STET_REG;               /*!< (@ 0x000000A0) Shadow TX Empty Trigger                                    */
  __IOM uint32_t  UART3_HTX_REG;                /*!< (@ 0x000000A4) Halt TX                                                    */
  __IOM uint32_t  UART3_DMASA_REG;              /*!< (@ 0x000000A8) DMA Software Acknowledge                                   */
  __IM  uint32_t  RESERVED2[5];
  __IOM uint32_t  UART3_DLF_REG;                /*!< (@ 0x000000C0) Divisor Latch Fraction Register                            */
  __IOM uint32_t  UART3_RAR_REG;                /*!< (@ 0x000000C4) Receive Address Register                                   */
  __IOM uint32_t  UART3_TAR_REG;                /*!< (@ 0x000000C8) Transmit Address Register                                  */
  __IOM uint32_t  UART3_LCR_EXT;                /*!< (@ 0x000000CC) Line Extended Control Register                             */
  __IM  uint32_t  RESERVED3[4];
  __IOM uint32_t  UART3_CTRL_REG;               /*!< (@ 0x000000E0) ISO7816 Control Register                                   */
  __IOM uint32_t  UART3_TIMER_REG;              /*!< (@ 0x000000E4) ISO7816 Timer Register                                     */
  __IOM uint32_t  UART3_ERR_CTRL_REG;           /*!< (@ 0x000000E8) ISO7816 Error Signal Control Register                      */
  __IOM uint32_t  UART3_IRQ_STATUS_REG;         /*!< (@ 0x000000EC) ISO7816 Interrupt Status Register                          */
  __IM  uint32_t  RESERVED4[2];
  __IOM uint32_t  UART3_UCV_REG;                /*!< (@ 0x000000F8) Component Version                                          */
  __IOM uint32_t  UART3_CTR_REG;                /*!< (@ 0x000000FC) Component Type Register                                    */
} UART3_Type;                                   /*!< Size = 256 (0x100)                                                        */



/* =========================================================================================================================== */
/* ================                                            USB                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief USB registers (USB)
  */

typedef struct {                                /*!< (@ 0x51000000) USB Structure                                              */
  __IOM uint32_t  USB_MCTRL_REG;                /*!< (@ 0x00000000) Main Control Register)                                     */
  __IOM uint32_t  USB_XCVDIAG_REG;              /*!< (@ 0x00000004) Transceiver diagnostic Register (for test purpose
                                                                    only)                                                      */
  __IOM uint32_t  USB_TCR_REG;                  /*!< (@ 0x00000008) Transceiver configuration Register                         */
  __IOM uint32_t  USB_UTR_REG;                  /*!< (@ 0x0000000C) USB test Register (for test purpose only)                  */
  __IOM uint32_t  USB_FAR_REG;                  /*!< (@ 0x00000010) Function Address Register                                  */
  __IOM uint32_t  USB_NFSR_REG;                 /*!< (@ 0x00000014) Node Functional State Register                             */
  __IOM uint32_t  USB_MAEV_REG;                 /*!< (@ 0x00000018) Main Event Register                                        */
  __IOM uint32_t  USB_MAMSK_REG;                /*!< (@ 0x0000001C) Main Mask Register                                         */
  __IOM uint32_t  USB_ALTEV_REG;                /*!< (@ 0x00000020) Alternate Event Register                                   */
  __IOM uint32_t  USB_ALTMSK_REG;               /*!< (@ 0x00000024) Alternate Mask Register                                    */
  __IOM uint32_t  USB_TXEV_REG;                 /*!< (@ 0x00000028) Transmit Event Register                                    */
  __IOM uint32_t  USB_TXMSK_REG;                /*!< (@ 0x0000002C) Transmit Mask Register                                     */
  __IOM uint32_t  USB_RXEV_REG;                 /*!< (@ 0x00000030) Receive Event Register                                     */
  __IOM uint32_t  USB_RXMSK_REG;                /*!< (@ 0x00000034) Receive Mask Register                                      */
  __IOM uint32_t  USB_NAKEV_REG;                /*!< (@ 0x00000038) NAK Event Register                                         */
  __IOM uint32_t  USB_NAKMSK_REG;               /*!< (@ 0x0000003C) NAK Mask Register                                          */
  __IOM uint32_t  USB_FWEV_REG;                 /*!< (@ 0x00000040) FIFO Warning Event Register                                */
  __IOM uint32_t  USB_FWMSK_REG;                /*!< (@ 0x00000044) FIFO Warning Mask Register                                 */
  __IOM uint32_t  USB_FNH_REG;                  /*!< (@ 0x00000048) Frame Number High Byte Register                            */
  __IOM uint32_t  USB_FNL_REG;                  /*!< (@ 0x0000004C) Frame Number Low Byte Register                             */
  __IM  uint32_t  RESERVED[11];
  __IOM uint32_t  USB_UX20CDR_REG;              /*!< (@ 0x0000007C) Transceiver 2.0 Configuration and Diagnostics
                                                                    Register(for test purpose only)                            */
  __IOM uint32_t  USB_EPC0_REG;                 /*!< (@ 0x00000080) Endpoint Control 0 Register                                */
  __IOM uint32_t  USB_TXD0_REG;                 /*!< (@ 0x00000084) Transmit Data 0 Register                                   */
  __IOM uint32_t  USB_TXS0_REG;                 /*!< (@ 0x00000088) Transmit Status 0 Register                                 */
  __IOM uint32_t  USB_TXC0_REG;                 /*!< (@ 0x0000008C) Transmit command 0 Register                                */
  __IOM uint32_t  USB_EP0_NAK_REG;              /*!< (@ 0x00000090) EP0 INNAK and OUTNAK Register                              */
  __IOM uint32_t  USB_RXD0_REG;                 /*!< (@ 0x00000094) Receive Data 0 Register                                    */
  __IOM uint32_t  USB_RXS0_REG;                 /*!< (@ 0x00000098) Receive Status 0 Register                                  */
  __IOM uint32_t  USB_RXC0_REG;                 /*!< (@ 0x0000009C) Receive Command 0 Register                                 */
  __IOM uint32_t  USB_EPC1_REG;                 /*!< (@ 0x000000A0) Endpoint Control Register 1                                */
  __IOM uint32_t  USB_TXD1_REG;                 /*!< (@ 0x000000A4) Transmit Data Register 1                                   */
  __IOM uint32_t  USB_TXS1_REG;                 /*!< (@ 0x000000A8) Transmit Status Register 1                                 */
  __IOM uint32_t  USB_TXC1_REG;                 /*!< (@ 0x000000AC) Transmit Command Register 1                                */
  __IOM uint32_t  USB_EPC2_REG;                 /*!< (@ 0x000000B0) Endpoint Control Register 2                                */
  __IOM uint32_t  USB_RXD1_REG;                 /*!< (@ 0x000000B4) Receive Data Register,1                                    */
  __IOM uint32_t  USB_RXS1_REG;                 /*!< (@ 0x000000B8) Receive Status Register 1                                  */
  __IOM uint32_t  USB_RXC1_REG;                 /*!< (@ 0x000000BC) Receive Command Register 1                                 */
  __IOM uint32_t  USB_EPC3_REG;                 /*!< (@ 0x000000C0) Endpoint Control Register 3                                */
  __IOM uint32_t  USB_TXD2_REG;                 /*!< (@ 0x000000C4) Transmit Data Register 2                                   */
  __IOM uint32_t  USB_TXS2_REG;                 /*!< (@ 0x000000C8) Transmit Status Register 2                                 */
  __IOM uint32_t  USB_TXC2_REG;                 /*!< (@ 0x000000CC) Transmit Command Register 2                                */
  __IOM uint32_t  USB_EPC4_REG;                 /*!< (@ 0x000000D0) Endpoint Control Register 4                                */
  __IOM uint32_t  USB_RXD2_REG;                 /*!< (@ 0x000000D4) Receive Data Register 2                                    */
  __IOM uint32_t  USB_RXS2_REG;                 /*!< (@ 0x000000D8) Receive Status Register 2                                  */
  __IOM uint32_t  USB_RXC2_REG;                 /*!< (@ 0x000000DC) Receive Command Register 2                                 */
  __IOM uint32_t  USB_EPC5_REG;                 /*!< (@ 0x000000E0) Endpoint Control Register 5                                */
  __IOM uint32_t  USB_TXD3_REG;                 /*!< (@ 0x000000E4) Transmit Data Register 3                                   */
  __IOM uint32_t  USB_TXS3_REG;                 /*!< (@ 0x000000E8) Transmit Status Register 3                                 */
  __IOM uint32_t  USB_TXC3_REG;                 /*!< (@ 0x000000EC) Transmit Command Register 3                                */
  __IOM uint32_t  USB_EPC6_REG;                 /*!< (@ 0x000000F0) Endpoint Control Register 6                                */
  __IOM uint32_t  USB_RXD3_REG;                 /*!< (@ 0x000000F4) Receive Data Register 3                                    */
  __IOM uint32_t  USB_RXS3_REG;                 /*!< (@ 0x000000F8) Receive Status Register 3                                  */
  __IOM uint32_t  USB_RXC3_REG;                 /*!< (@ 0x000000FC) Receive Command Register 3                                 */
  __IM  uint32_t  RESERVED1[40];
  __IOM uint32_t  USB_DMA_CTRL_REG;             /*!< (@ 0x000001A0) USB DMA control register                                   */
  __IM  uint32_t  RESERVED2[2];
  __IOM uint32_t  USB_CHARGER_STAT_REG;         /*!< (@ 0x000001AC) USB Charger Status Register                                */
} USB_Type;                                     /*!< Size = 432 (0x1b0)                                                        */



/* =========================================================================================================================== */
/* ================                                            VAD                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief VAD registers (VAD)
  */

typedef struct {                                /*!< (@ 0x50000C00) VAD Structure                                              */
  __IOM uint32_t  VAD_CTRL0_REG;                /*!< (@ 0x00000000) VAD Control Register 0                                     */
  __IOM uint32_t  VAD_CTRL1_REG;                /*!< (@ 0x00000004) VAD Control Register 1                                     */
  __IOM uint32_t  VAD_CTRL2_REG;                /*!< (@ 0x00000008) VAD Control Register 2                                     */
  __IOM uint32_t  VAD_CTRL3_REG;                /*!< (@ 0x0000000C) VAD Control Register 3                                     */
  __IOM uint32_t  VAD_CTRL4_REG;                /*!< (@ 0x00000010) VAD Control Register 4                                     */
  __IM  uint32_t  RESERVED[3];
  __IOM uint32_t  VAD_STATUS_REG;               /*!< (@ 0x00000020) VAD Status Register                                        */
} VAD_Type;                                     /*!< Size = 36 (0x24)                                                          */



/* =========================================================================================================================== */
/* ================                                          WAKEUP                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief WAKEUP registers (WAKEUP)
  */

typedef struct {                                /*!< (@ 0x50000900) WAKEUP Structure                                           */
  __IOM uint32_t  WKUP_CTRL_REG;                /*!< (@ 0x00000000) Control register for the wakeup counter                    */
  __IOM uint32_t  WKUP_RESET_IRQ_REG;           /*!< (@ 0x00000004) Reset wakeup interrupt                                     */
  __IOM uint32_t  WKUP_SELECT_P0_REG;           /*!< (@ 0x00000008) Select which inputs from P0 port can trigger
                                                                    wkup counter                                               */
  __IOM uint32_t  WKUP_SELECT_P1_REG;           /*!< (@ 0x0000000C) Select which inputs from P1 port can trigger
                                                                    wkup counter                                               */
  __IOM uint32_t  WKUP_SELECT_P2_REG;           /*!< (@ 0x00000010) Select which inputs from P2 port can trigger
                                                                    wkup counter                                               */
  __IOM uint32_t  WKUP_POL_P0_REG;              /*!< (@ 0x00000014) select the sesitivity polarity for each P0 input           */
  __IOM uint32_t  WKUP_POL_P1_REG;              /*!< (@ 0x00000018) select the sesitivity polarity for each P1 input           */
  __IOM uint32_t  WKUP_POL_P2_REG;              /*!< (@ 0x0000001C) select the sesitivity polarity for each P2 input           */
  __IOM uint32_t  WKUP_STATUS_P0_REG;           /*!< (@ 0x00000020) Event status register for P0                               */
  __IOM uint32_t  WKUP_STATUS_P1_REG;           /*!< (@ 0x00000024) Event status register for P1                               */
  __IOM uint32_t  WKUP_STATUS_P2_REG;           /*!< (@ 0x00000028) Event status register for P2                               */
  __IOM uint32_t  WKUP_CLEAR_P0_REG;            /*!< (@ 0x0000002C) Clear event register for P0                                */
  __IOM uint32_t  WKUP_CLEAR_P1_REG;            /*!< (@ 0x00000030) Clear event register for P1                                */
  __IOM uint32_t  WKUP_CLEAR_P2_REG;            /*!< (@ 0x00000034) Clear event register for P2                                */
  __IOM uint32_t  WKUP_SEL_GPIO_P0_REG;         /*!< (@ 0x00000038) Enable fast wakeup and enable GPIO_P0_IRQ                  */
  __IOM uint32_t  WKUP_SEL_GPIO_P1_REG;         /*!< (@ 0x0000003C) Enable fast wakeup and enable GPIO_P1_IRQ                  */
  __IOM uint32_t  WKUP_SEL_GPIO_P2_REG;         /*!< (@ 0x00000040) Enable fast wakeup and enable GPIO_P2_IRQ                  */
  __IOM uint32_t  WKUP_SEL1_GPIO_P0_REG;        /*!< (@ 0x00000044) Configure to generate level or edge sensitive
                                                                    IRQ on P0 events                                           */
  __IOM uint32_t  WKUP_SEL1_GPIO_P1_REG;        /*!< (@ 0x00000048) Configure to generate level or edge sensitive
                                                                    IRQ on P1 events                                           */
  __IOM uint32_t  WKUP_SEL1_GPIO_P2_REG;        /*!< (@ 0x0000004C) Configure to generate level or edge sensitive
                                                                    IRQ on P2 events                                           */
} WAKEUP_Type;                                  /*!< Size = 80 (0x50)                                                          */


/** @} */ /* End of group Device_Peripheral_peripherals */


/* =========================================================================================================================== */
/* ================                          Device Specific Peripheral Address Map                           ================ */
/* =========================================================================================================================== */


/** @addtogroup Device_Peripheral_peripheralAddr
  * @{
  */

#define AES_HASH_BASE               0x30040000UL
#define ANAMISC_BIF_BASE            0x50050600UL
#define CACHE_BASE                  0x100C0000UL
#define CHARGER_BASE                0x51000600UL
#define CHG_DET_BASE                0x50040300UL
#define CHIP_VERSION_BASE           0x50040000UL
#define CRG_AUD_BASE                0x50030000UL
#define CRG_CTRL_BASE               0x50060000UL
#define CRG_GPU_BASE                0x51001000UL
#define CRG_SNC_BASE                0x50020900UL
#define CRG_SYS_BASE                0x50040400UL
#define CRG_TOP_BASE                0x50000000UL
#define CRG_VSYS_BASE               0x50000B00UL
#define CRG_XTAL_BASE               0x50050400UL
#define DCACHE_BASE                 0x30100000UL
#define DCDC_BASE                   0x50000300UL
#define DCDC_BOOST_BASE             0x50000500UL
#define DMA_BASE                    0x51000400UL
#define EMMC_BASE                   0x30058000UL
#define GPADC_BASE                  0x50020800UL
#define GPIO_BASE                   0x50050100UL
#define GPREG_BASE                  0x50040100UL
#define GPU_CORE_BASE               0x51001200UL
#define GPU_REG_BASE                0x51001100UL
#define I2C_BASE                    0x50020600UL
#define I2C2_BASE                   0x50020700UL
#define I2C3_BASE                   0x50020500UL
#define I3C_BASE                    0x50020C00UL
#define LCDC_BASE                   0x30030000UL
#define MEMCTRL_BASE                0x50050000UL
#define OQSPIF_BASE                 0x36000000UL
#define OTPC_BASE                   0x30070000UL
#define PCM1_BASE                   0x50030300UL
#define PDC_BASE                    0x50000200UL
#define PWMLED_BASE                 0x50010600UL
#define QSPIC_BASE                  0x46000000UL
#define QSPIC2_BASE                 0x26000000UL
#define RTC_BASE                    0x50000800UL
#define SDADC_BASE                  0x50040500UL
#define SNC_BASE                    0x50021000UL
#define SPI_BASE                    0x50020300UL
#define SPI2_BASE                   0x50020400UL
#define SPI3_BASE                   0x51000200UL
#define SRC1_BASE                   0x50030100UL
#define SRC2_BASE                   0x50030200UL
#define SYS_WDOG_BASE               0x50000700UL
#define SYSBUS_BASE                 0x30020000UL
#define SYSBUS_ICM_BASE             0x50040600UL
#define TIMER_BASE                  0x50010000UL
#define TIMER2_BASE                 0x50010100UL
#define TIMER3_BASE                 0x50010200UL
#define TIMER4_BASE                 0x50010300UL
#define TIMER5_BASE                 0x50010400UL
#define TIMER6_BASE                 0x50010500UL
#define UART_BASE                   0x50020000UL
#define UART2_BASE                  0x50020100UL
#define UART3_BASE                  0x50020200UL
#define USB_BASE                    0x51000000UL
#define VAD_BASE                    0x50000C00UL
#define WAKEUP_BASE                 0x50000900UL

/** @} */ /* End of group Device_Peripheral_peripheralAddr */


/* =========================================================================================================================== */
/* ================                                  Peripheral declaration                                   ================ */
/* =========================================================================================================================== */


/** @addtogroup Device_Peripheral_declaration
  * @{
  */

#define AES_HASH                    ((AES_HASH_Type*)          AES_HASH_BASE)
#define ANAMISC_BIF                 ((ANAMISC_BIF_Type*)       ANAMISC_BIF_BASE)
#define CACHE                       ((CACHE_Type*)             CACHE_BASE)
#define CHARGER                     ((CHARGER_Type*)           CHARGER_BASE)
#define CHG_DET                     ((CHG_DET_Type*)           CHG_DET_BASE)
#define CHIP_VERSION                ((CHIP_VERSION_Type*)      CHIP_VERSION_BASE)
#define CRG_AUD                     ((CRG_AUD_Type*)           CRG_AUD_BASE)
#define CRG_CTRL                    ((CRG_CTRL_Type*)          CRG_CTRL_BASE)
#define CRG_GPU                     ((CRG_GPU_Type*)           CRG_GPU_BASE)
#define CRG_SNC                     ((CRG_SNC_Type*)           CRG_SNC_BASE)
#define CRG_SYS                     ((CRG_SYS_Type*)           CRG_SYS_BASE)
#define CRG_TOP                     ((CRG_TOP_Type*)           CRG_TOP_BASE)
#define CRG_VSYS                    ((CRG_VSYS_Type*)          CRG_VSYS_BASE)
#define CRG_XTAL                    ((CRG_XTAL_Type*)          CRG_XTAL_BASE)
#define DCACHE                      ((DCACHE_Type*)            DCACHE_BASE)
#define DCDC                        ((DCDC_Type*)              DCDC_BASE)
#define DCDC_BOOST                  ((DCDC_BOOST_Type*)        DCDC_BOOST_BASE)
#define DMA                         ((DMA_Type*)               DMA_BASE)
#define EMMC                        ((EMMC_Type*)              EMMC_BASE)
#define GPADC                       ((GPADC_Type*)             GPADC_BASE)
#define GPIO                        ((GPIO_Type*)              GPIO_BASE)
#define GPREG                       ((GPREG_Type*)             GPREG_BASE)
#define GPU_CORE                    ((GPU_CORE_Type*)          GPU_CORE_BASE)
#define GPU_REG                     ((GPU_REG_Type*)           GPU_REG_BASE)
#define I2C                         ((I2C_Type*)               I2C_BASE)
#define I2C2                        ((I2C2_Type*)              I2C2_BASE)
#define I2C3                        ((I2C3_Type*)              I2C3_BASE)
#define I3C                         ((I3C_Type*)               I3C_BASE)
#define LCDC                        ((LCDC_Type*)              LCDC_BASE)
#define MEMCTRL                     ((MEMCTRL_Type*)           MEMCTRL_BASE)
#define OQSPIF                      ((OQSPIF_Type*)            OQSPIF_BASE)
#define OTPC                        ((OTPC_Type*)              OTPC_BASE)
#define PCM1                        ((PCM1_Type*)              PCM1_BASE)
#define PDC                         ((PDC_Type*)               PDC_BASE)
#define PWMLED                      ((PWMLED_Type*)            PWMLED_BASE)
#define QSPIC                       ((QSPIC_Type*)             QSPIC_BASE)
#define QSPIC2                      ((QSPIC2_Type*)            QSPIC2_BASE)
#define RTC                         ((RTC_Type*)               RTC_BASE)
#define SDADC                       ((SDADC_Type*)             SDADC_BASE)
#define SNC                         ((SNC_Type*)               SNC_BASE)
#define SPI                         ((SPI_Type*)               SPI_BASE)
#define SPI2                        ((SPI2_Type*)              SPI2_BASE)
#define SPI3                        ((SPI3_Type*)              SPI3_BASE)
#define SRC1                        ((SRC1_Type*)              SRC1_BASE)
#define SRC2                        ((SRC2_Type*)              SRC2_BASE)
#define SYS_WDOG                    ((SYS_WDOG_Type*)          SYS_WDOG_BASE)
#define SYSBUS                      ((SYSBUS_Type*)            SYSBUS_BASE)
#define SYSBUS_ICM                  ((SYSBUS_ICM_Type*)        SYSBUS_ICM_BASE)
#define TIMER                       ((TIMER_Type*)             TIMER_BASE)
#define TIMER2                      ((TIMER2_Type*)            TIMER2_BASE)
#define TIMER3                      ((TIMER3_Type*)            TIMER3_BASE)
#define TIMER4                      ((TIMER4_Type*)            TIMER4_BASE)
#define TIMER5                      ((TIMER5_Type*)            TIMER5_BASE)
#define TIMER6                      ((TIMER6_Type*)            TIMER6_BASE)
#define UART                        ((UART_Type*)              UART_BASE)
#define UART2                       ((UART2_Type*)             UART2_BASE)
#define UART3                       ((UART3_Type*)             UART3_BASE)
#define USB                         ((USB_Type*)               USB_BASE)
#define VAD                         ((VAD_Type*)               VAD_BASE)
#define WAKEUP                      ((WAKEUP_Type*)            WAKEUP_BASE)

/** @} */ /* End of group Device_Peripheral_declaration */


/* =========================================================================================================================== */
/* ================                                Pos/Mask Peripheral Section                                ================ */
/* =========================================================================================================================== */


/** @addtogroup PosMask_peripherals
  * @{
  */



/* =========================================================================================================================== */
/* ================                                         AES_HASH                                          ================ */
/* =========================================================================================================================== */

/* ===================================================  CRYPTO_CLRIRQ_REG  =================================================== */
#define AES_HASH_CRYPTO_CLRIRQ_REG_CRYPTO_CLRIRQ_Pos (0UL)          /*!< CRYPTO_CLRIRQ (Bit 0)                                 */
#define AES_HASH_CRYPTO_CLRIRQ_REG_CRYPTO_CLRIRQ_Msk (0x1UL)        /*!< CRYPTO_CLRIRQ (Bitfield-Mask: 0x01)                   */
/* ====================================================  CRYPTO_CTRL_REG  ==================================================== */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_AES_KEXP_Pos (17UL)         /*!< CRYPTO_AES_KEXP (Bit 17)                              */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_AES_KEXP_Msk (0x20000UL)    /*!< CRYPTO_AES_KEXP (Bitfield-Mask: 0x01)                 */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_MORE_IN_Pos (16UL)          /*!< CRYPTO_MORE_IN (Bit 16)                               */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_MORE_IN_Msk (0x10000UL)     /*!< CRYPTO_MORE_IN (Bitfield-Mask: 0x01)                  */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_HASH_OUT_LEN_Pos (10UL)     /*!< CRYPTO_HASH_OUT_LEN (Bit 10)                          */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_HASH_OUT_LEN_Msk (0xfc00UL) /*!< CRYPTO_HASH_OUT_LEN (Bitfield-Mask: 0x3f)             */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_HASH_SEL_Pos (9UL)          /*!< CRYPTO_HASH_SEL (Bit 9)                               */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_HASH_SEL_Msk (0x200UL)      /*!< CRYPTO_HASH_SEL (Bitfield-Mask: 0x01)                 */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_IRQ_EN_Pos (8UL)            /*!< CRYPTO_IRQ_EN (Bit 8)                                 */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_IRQ_EN_Msk (0x100UL)        /*!< CRYPTO_IRQ_EN (Bitfield-Mask: 0x01)                   */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_ENCDEC_Pos (7UL)            /*!< CRYPTO_ENCDEC (Bit 7)                                 */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_ENCDEC_Msk (0x80UL)         /*!< CRYPTO_ENCDEC (Bitfield-Mask: 0x01)                   */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_AES_KEY_SZ_Pos (5UL)        /*!< CRYPTO_AES_KEY_SZ (Bit 5)                             */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_AES_KEY_SZ_Msk (0x60UL)     /*!< CRYPTO_AES_KEY_SZ (Bitfield-Mask: 0x03)               */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_OUT_MD_Pos (4UL)            /*!< CRYPTO_OUT_MD (Bit 4)                                 */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_OUT_MD_Msk (0x10UL)         /*!< CRYPTO_OUT_MD (Bitfield-Mask: 0x01)                   */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_ALG_MD_Pos (2UL)            /*!< CRYPTO_ALG_MD (Bit 2)                                 */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_ALG_MD_Msk (0xcUL)          /*!< CRYPTO_ALG_MD (Bitfield-Mask: 0x03)                   */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_ALG_Pos (0UL)               /*!< CRYPTO_ALG (Bit 0)                                    */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_ALG_Msk (0x3UL)             /*!< CRYPTO_ALG (Bitfield-Mask: 0x03)                      */
/* =================================================  CRYPTO_DEST_ADDR_REG  ================================================== */
#define AES_HASH_CRYPTO_DEST_ADDR_REG_CRYPTO_DEST_ADDR_Pos (0UL)    /*!< CRYPTO_DEST_ADDR (Bit 0)                              */
#define AES_HASH_CRYPTO_DEST_ADDR_REG_CRYPTO_DEST_ADDR_Msk (0xffffffffUL) /*!< CRYPTO_DEST_ADDR (Bitfield-Mask: 0xffffffff)    */
/* =================================================  CRYPTO_FETCH_ADDR_REG  ================================================= */
#define AES_HASH_CRYPTO_FETCH_ADDR_REG_CRYPTO_FETCH_ADDR_Pos (0UL)  /*!< CRYPTO_FETCH_ADDR (Bit 0)                             */
#define AES_HASH_CRYPTO_FETCH_ADDR_REG_CRYPTO_FETCH_ADDR_Msk (0xffffffffUL) /*!< CRYPTO_FETCH_ADDR (Bitfield-Mask: 0xffffffff) */
/* ===================================================  CRYPTO_KEYS_START  =================================================== */
#define AES_HASH_CRYPTO_KEYS_START_CRYPTO_KEY_X_Pos (0UL)           /*!< CRYPTO_KEY_X (Bit 0)                                  */
#define AES_HASH_CRYPTO_KEYS_START_CRYPTO_KEY_X_Msk (0xffffffffUL)  /*!< CRYPTO_KEY_X (Bitfield-Mask: 0xffffffff)              */
/* ====================================================  CRYPTO_LEN_REG  ===================================================== */
#define AES_HASH_CRYPTO_LEN_REG_CRYPTO_LEN_Pos (0UL)                /*!< CRYPTO_LEN (Bit 0)                                    */
#define AES_HASH_CRYPTO_LEN_REG_CRYPTO_LEN_Msk (0xffffffUL)         /*!< CRYPTO_LEN (Bitfield-Mask: 0xffffff)                  */
/* ===================================================  CRYPTO_MREG0_REG  ==================================================== */
#define AES_HASH_CRYPTO_MREG0_REG_CRYPTO_MREG0_Pos (0UL)            /*!< CRYPTO_MREG0 (Bit 0)                                  */
#define AES_HASH_CRYPTO_MREG0_REG_CRYPTO_MREG0_Msk (0xffffffffUL)   /*!< CRYPTO_MREG0 (Bitfield-Mask: 0xffffffff)              */
/* ===================================================  CRYPTO_MREG1_REG  ==================================================== */
#define AES_HASH_CRYPTO_MREG1_REG_CRYPTO_MREG1_Pos (0UL)            /*!< CRYPTO_MREG1 (Bit 0)                                  */
#define AES_HASH_CRYPTO_MREG1_REG_CRYPTO_MREG1_Msk (0xffffffffUL)   /*!< CRYPTO_MREG1 (Bitfield-Mask: 0xffffffff)              */
/* ===================================================  CRYPTO_MREG2_REG  ==================================================== */
#define AES_HASH_CRYPTO_MREG2_REG_CRYPTO_MREG2_Pos (0UL)            /*!< CRYPTO_MREG2 (Bit 0)                                  */
#define AES_HASH_CRYPTO_MREG2_REG_CRYPTO_MREG2_Msk (0xffffffffUL)   /*!< CRYPTO_MREG2 (Bitfield-Mask: 0xffffffff)              */
/* ===================================================  CRYPTO_MREG3_REG  ==================================================== */
#define AES_HASH_CRYPTO_MREG3_REG_CRYPTO_MREG3_Pos (0UL)            /*!< CRYPTO_MREG3 (Bit 0)                                  */
#define AES_HASH_CRYPTO_MREG3_REG_CRYPTO_MREG3_Msk (0xffffffffUL)   /*!< CRYPTO_MREG3 (Bitfield-Mask: 0xffffffff)              */
/* ===================================================  CRYPTO_START_REG  ==================================================== */
#define AES_HASH_CRYPTO_START_REG_CRYPTO_START_Pos (0UL)            /*!< CRYPTO_START (Bit 0)                                  */
#define AES_HASH_CRYPTO_START_REG_CRYPTO_START_Msk (0x1UL)          /*!< CRYPTO_START (Bitfield-Mask: 0x01)                    */
/* ===================================================  CRYPTO_STATUS_REG  =================================================== */
#define AES_HASH_CRYPTO_STATUS_REG_CRYPTO_IRQ_ST_Pos (2UL)          /*!< CRYPTO_IRQ_ST (Bit 2)                                 */
#define AES_HASH_CRYPTO_STATUS_REG_CRYPTO_IRQ_ST_Msk (0x4UL)        /*!< CRYPTO_IRQ_ST (Bitfield-Mask: 0x01)                   */
#define AES_HASH_CRYPTO_STATUS_REG_CRYPTO_WAIT_FOR_IN_Pos (1UL)     /*!< CRYPTO_WAIT_FOR_IN (Bit 1)                            */
#define AES_HASH_CRYPTO_STATUS_REG_CRYPTO_WAIT_FOR_IN_Msk (0x2UL)   /*!< CRYPTO_WAIT_FOR_IN (Bitfield-Mask: 0x01)              */
#define AES_HASH_CRYPTO_STATUS_REG_CRYPTO_INACTIVE_Pos (0UL)        /*!< CRYPTO_INACTIVE (Bit 0)                               */
#define AES_HASH_CRYPTO_STATUS_REG_CRYPTO_INACTIVE_Msk (0x1UL)      /*!< CRYPTO_INACTIVE (Bitfield-Mask: 0x01)                 */


/* =========================================================================================================================== */
/* ================                                        ANAMISC_BIF                                        ================ */
/* =========================================================================================================================== */

/* ====================================================  CLK_CAL_IRQ_REG  ==================================================== */
#define ANAMISC_BIF_CLK_CAL_IRQ_REG_CLK_CAL_IRQ_CLR_Pos (2UL)       /*!< CLK_CAL_IRQ_CLR (Bit 2)                               */
#define ANAMISC_BIF_CLK_CAL_IRQ_REG_CLK_CAL_IRQ_CLR_Msk (0x4UL)     /*!< CLK_CAL_IRQ_CLR (Bitfield-Mask: 0x01)                 */
#define ANAMISC_BIF_CLK_CAL_IRQ_REG_CLK_CAL_IRQ_STATUS_Pos (1UL)    /*!< CLK_CAL_IRQ_STATUS (Bit 1)                            */
#define ANAMISC_BIF_CLK_CAL_IRQ_REG_CLK_CAL_IRQ_STATUS_Msk (0x2UL)  /*!< CLK_CAL_IRQ_STATUS (Bitfield-Mask: 0x01)              */
#define ANAMISC_BIF_CLK_CAL_IRQ_REG_CLK_CAL_IRQ_EN_Pos (0UL)        /*!< CLK_CAL_IRQ_EN (Bit 0)                                */
#define ANAMISC_BIF_CLK_CAL_IRQ_REG_CLK_CAL_IRQ_EN_Msk (0x1UL)      /*!< CLK_CAL_IRQ_EN (Bitfield-Mask: 0x01)                  */
/* ====================================================  CLK_REF_CNT_REG  ==================================================== */
#define ANAMISC_BIF_CLK_REF_CNT_REG_REF_CNT_VAL_Pos (0UL)           /*!< REF_CNT_VAL (Bit 0)                                   */
#define ANAMISC_BIF_CLK_REF_CNT_REG_REF_CNT_VAL_Msk (0xffffUL)      /*!< REF_CNT_VAL (Bitfield-Mask: 0xffff)                   */
/* ====================================================  CLK_REF_SEL_REG  ==================================================== */
#define ANAMISC_BIF_CLK_REF_SEL_REG_CAL_CLK_SEL_Pos (5UL)           /*!< CAL_CLK_SEL (Bit 5)                                   */
#define ANAMISC_BIF_CLK_REF_SEL_REG_CAL_CLK_SEL_Msk (0xe0UL)        /*!< CAL_CLK_SEL (Bitfield-Mask: 0x07)                     */
#define ANAMISC_BIF_CLK_REF_SEL_REG_EXT_CNT_EN_SEL_Pos (4UL)        /*!< EXT_CNT_EN_SEL (Bit 4)                                */
#define ANAMISC_BIF_CLK_REF_SEL_REG_EXT_CNT_EN_SEL_Msk (0x10UL)     /*!< EXT_CNT_EN_SEL (Bitfield-Mask: 0x01)                  */
#define ANAMISC_BIF_CLK_REF_SEL_REG_REF_CAL_START_Pos (3UL)         /*!< REF_CAL_START (Bit 3)                                 */
#define ANAMISC_BIF_CLK_REF_SEL_REG_REF_CAL_START_Msk (0x8UL)       /*!< REF_CAL_START (Bitfield-Mask: 0x01)                   */
#define ANAMISC_BIF_CLK_REF_SEL_REG_REF_CLK_SEL_Pos (0UL)           /*!< REF_CLK_SEL (Bit 0)                                   */
#define ANAMISC_BIF_CLK_REF_SEL_REG_REF_CLK_SEL_Msk (0x7UL)         /*!< REF_CLK_SEL (Bitfield-Mask: 0x07)                     */
/* ====================================================  CLK_REF_VAL_REG  ==================================================== */
#define ANAMISC_BIF_CLK_REF_VAL_REG_XTAL_CNT_VAL_Pos (0UL)          /*!< XTAL_CNT_VAL (Bit 0)                                  */
#define ANAMISC_BIF_CLK_REF_VAL_REG_XTAL_CNT_VAL_Msk (0xffffffffUL) /*!< XTAL_CNT_VAL (Bitfield-Mask: 0xffffffff)              */


/* =========================================================================================================================== */
/* ================                                           CACHE                                           ================ */
/* =========================================================================================================================== */

/* ====================================================  CACHE_CTRL2_REG  ==================================================== */
#define CACHE_CACHE_CTRL2_REG_CACHE_READY_Pos (21UL)                /*!< CACHE_READY (Bit 21)                                  */
#define CACHE_CACHE_CTRL2_REG_CACHE_READY_Msk (0x200000UL)          /*!< CACHE_READY (Bitfield-Mask: 0x01)                     */
#define CACHE_CACHE_CTRL2_REG_CACHE_RAM_INIT_Pos (20UL)             /*!< CACHE_RAM_INIT (Bit 20)                               */
#define CACHE_CACHE_CTRL2_REG_CACHE_RAM_INIT_Msk (0x100000UL)       /*!< CACHE_RAM_INIT (Bitfield-Mask: 0x01)                  */
#define CACHE_CACHE_CTRL2_REG_CACHE_FLUSHED_Pos (19UL)              /*!< CACHE_FLUSHED (Bit 19)                                */
#define CACHE_CACHE_CTRL2_REG_CACHE_FLUSHED_Msk (0x80000UL)         /*!< CACHE_FLUSHED (Bitfield-Mask: 0x01)                   */
#define CACHE_CACHE_CTRL2_REG_CACHE_FLUSH_DISABLE_Pos (18UL)        /*!< CACHE_FLUSH_DISABLE (Bit 18)                          */
#define CACHE_CACHE_CTRL2_REG_CACHE_FLUSH_DISABLE_Msk (0x40000UL)   /*!< CACHE_FLUSH_DISABLE (Bitfield-Mask: 0x01)             */
#define CACHE_CACHE_CTRL2_REG_CACHE_USE_FULL_DB_RANGE_Pos (16UL)    /*!< CACHE_USE_FULL_DB_RANGE (Bit 16)                      */
#define CACHE_CACHE_CTRL2_REG_CACHE_USE_FULL_DB_RANGE_Msk (0x30000UL) /*!< CACHE_USE_FULL_DB_RANGE (Bitfield-Mask: 0x03)       */
#define CACHE_CACHE_CTRL2_REG_CACHE_MHCLKEN_DISABLE_Pos (15UL)      /*!< CACHE_MHCLKEN_DISABLE (Bit 15)                        */
#define CACHE_CACHE_CTRL2_REG_CACHE_MHCLKEN_DISABLE_Msk (0x8000UL)  /*!< CACHE_MHCLKEN_DISABLE (Bitfield-Mask: 0x01)           */
#define CACHE_CACHE_CTRL2_REG_CACHE_CWF_DISABLE_Pos (14UL)          /*!< CACHE_CWF_DISABLE (Bit 14)                            */
#define CACHE_CACHE_CTRL2_REG_CACHE_CWF_DISABLE_Msk (0x4000UL)      /*!< CACHE_CWF_DISABLE (Bitfield-Mask: 0x01)               */
#define CACHE_CACHE_CTRL2_REG_CACHE_CGEN_Pos (13UL)                 /*!< CACHE_CGEN (Bit 13)                                   */
#define CACHE_CACHE_CTRL2_REG_CACHE_CGEN_Msk (0x2000UL)             /*!< CACHE_CGEN (Bitfield-Mask: 0x01)                      */
#define CACHE_CACHE_CTRL2_REG_CACHE_WEN_Pos (12UL)                  /*!< CACHE_WEN (Bit 12)                                    */
#define CACHE_CACHE_CTRL2_REG_CACHE_WEN_Msk (0x1000UL)              /*!< CACHE_WEN (Bitfield-Mask: 0x01)                       */
#define CACHE_CACHE_CTRL2_REG_CACHE_LEN_Pos (0UL)                   /*!< CACHE_LEN (Bit 0)                                     */
#define CACHE_CACHE_CTRL2_REG_CACHE_LEN_Msk (0xfffUL)               /*!< CACHE_LEN (Bitfield-Mask: 0xfff)                      */
/* ====================================================  CACHE_FLASH_REG  ==================================================== */
#define CACHE_CACHE_FLASH_REG_FLASH_REGION_BASE_Pos (16UL)          /*!< FLASH_REGION_BASE (Bit 16)                            */
#define CACHE_CACHE_FLASH_REG_FLASH_REGION_BASE_Msk (0xffff0000UL)  /*!< FLASH_REGION_BASE (Bitfield-Mask: 0xffff)             */
#define CACHE_CACHE_FLASH_REG_FLASH_REGION_OFFSET_Pos (4UL)         /*!< FLASH_REGION_OFFSET (Bit 4)                           */
#define CACHE_CACHE_FLASH_REG_FLASH_REGION_OFFSET_Msk (0xfff0UL)    /*!< FLASH_REGION_OFFSET (Bitfield-Mask: 0xfff)            */
#define CACHE_CACHE_FLASH_REG_FLASH_REGION_SIZE_Pos (0UL)           /*!< FLASH_REGION_SIZE (Bit 0)                             */
#define CACHE_CACHE_FLASH_REG_FLASH_REGION_SIZE_Msk (0xfUL)         /*!< FLASH_REGION_SIZE (Bitfield-Mask: 0x0f)               */
/* ==================================================  CACHE_MRM_CTRL_REG  =================================================== */
#define CACHE_CACHE_MRM_CTRL_REG_MRM_IRQ_HITS_THRES_STATUS_Pos (4UL) /*!< MRM_IRQ_HITS_THRES_STATUS (Bit 4)                    */
#define CACHE_CACHE_MRM_CTRL_REG_MRM_IRQ_HITS_THRES_STATUS_Msk (0x10UL) /*!< MRM_IRQ_HITS_THRES_STATUS (Bitfield-Mask: 0x01)   */
#define CACHE_CACHE_MRM_CTRL_REG_MRM_IRQ_MISSES_THRES_STATUS_Pos (3UL) /*!< MRM_IRQ_MISSES_THRES_STATUS (Bit 3)                */
#define CACHE_CACHE_MRM_CTRL_REG_MRM_IRQ_MISSES_THRES_STATUS_Msk (0x8UL) /*!< MRM_IRQ_MISSES_THRES_STATUS (Bitfield-Mask: 0x01) */
#define CACHE_CACHE_MRM_CTRL_REG_MRM_IRQ_TINT_STATUS_Pos (2UL)      /*!< MRM_IRQ_TINT_STATUS (Bit 2)                           */
#define CACHE_CACHE_MRM_CTRL_REG_MRM_IRQ_TINT_STATUS_Msk (0x4UL)    /*!< MRM_IRQ_TINT_STATUS (Bitfield-Mask: 0x01)             */
#define CACHE_CACHE_MRM_CTRL_REG_MRM_IRQ_MASK_Pos (1UL)             /*!< MRM_IRQ_MASK (Bit 1)                                  */
#define CACHE_CACHE_MRM_CTRL_REG_MRM_IRQ_MASK_Msk (0x2UL)           /*!< MRM_IRQ_MASK (Bitfield-Mask: 0x01)                    */
#define CACHE_CACHE_MRM_CTRL_REG_MRM_START_Pos (0UL)                /*!< MRM_START (Bit 0)                                     */
#define CACHE_CACHE_MRM_CTRL_REG_MRM_START_Msk (0x1UL)              /*!< MRM_START (Bitfield-Mask: 0x01)                       */
/* =================================================  CACHE_MRM_HITS1WS_REG  ================================================= */
#define CACHE_CACHE_MRM_HITS1WS_REG_MRM_HITS1WS_Pos (0UL)           /*!< MRM_HITS1WS (Bit 0)                                   */
#define CACHE_CACHE_MRM_HITS1WS_REG_MRM_HITS1WS_Msk (0xffffffffUL)  /*!< MRM_HITS1WS (Bitfield-Mask: 0xffffffff)               */
/* ==================================================  CACHE_MRM_HITS_REG  =================================================== */
#define CACHE_CACHE_MRM_HITS_REG_MRM_HITS_Pos (0UL)                 /*!< MRM_HITS (Bit 0)                                      */
#define CACHE_CACHE_MRM_HITS_REG_MRM_HITS_Msk (0xffffffffUL)        /*!< MRM_HITS (Bitfield-Mask: 0xffffffff)                  */
/* ===============================================  CACHE_MRM_HITS_THRES_REG  ================================================ */
#define CACHE_CACHE_MRM_HITS_THRES_REG_MRM_HITS_THRES_Pos (0UL)     /*!< MRM_HITS_THRES (Bit 0)                                */
#define CACHE_CACHE_MRM_HITS_THRES_REG_MRM_HITS_THRES_Msk (0xffffffffUL) /*!< MRM_HITS_THRES (Bitfield-Mask: 0xffffffff)       */
/* =================================================  CACHE_MRM_MISSES_REG  ================================================== */
#define CACHE_CACHE_MRM_MISSES_REG_MRM_MISSES_Pos (0UL)             /*!< MRM_MISSES (Bit 0)                                    */
#define CACHE_CACHE_MRM_MISSES_REG_MRM_MISSES_Msk (0xffffffffUL)    /*!< MRM_MISSES (Bitfield-Mask: 0xffffffff)                */
/* ==============================================  CACHE_MRM_MISSES_THRES_REG  =============================================== */
#define CACHE_CACHE_MRM_MISSES_THRES_REG_MRM_MISSES_THRES_Pos (0UL) /*!< MRM_MISSES_THRES (Bit 0)                              */
#define CACHE_CACHE_MRM_MISSES_THRES_REG_MRM_MISSES_THRES_Msk (0xffffffffUL) /*!< MRM_MISSES_THRES (Bitfield-Mask: 0xffffffff) */
/* ==================================================  CACHE_MRM_TINT_REG  =================================================== */
#define CACHE_CACHE_MRM_TINT_REG_MRM_TINT_Pos (0UL)                 /*!< MRM_TINT (Bit 0)                                      */
#define CACHE_CACHE_MRM_TINT_REG_MRM_TINT_Msk (0x7ffffUL)           /*!< MRM_TINT (Bitfield-Mask: 0x7ffff)                     */
/* =====================================================  SWD_RESET_REG  ===================================================== */
#define CACHE_SWD_RESET_REG_SWD_HW_RESET_REQ_Pos (0UL)              /*!< SWD_HW_RESET_REQ (Bit 0)                              */
#define CACHE_SWD_RESET_REG_SWD_HW_RESET_REQ_Msk (0x1UL)            /*!< SWD_HW_RESET_REQ (Bitfield-Mask: 0x01)                */


/* =========================================================================================================================== */
/* ================                                          CHARGER                                          ================ */
/* =========================================================================================================================== */

/* ==============================================  CHARGER_CC_CHARGE_TIMER_REG  ============================================== */
#define CHARGER_CHARGER_CC_CHARGE_TIMER_REG_CC_CHARGE_TIMER_Pos (16UL) /*!< CC_CHARGE_TIMER (Bit 16)                           */
#define CHARGER_CHARGER_CC_CHARGE_TIMER_REG_CC_CHARGE_TIMER_Msk (0x7fff0000UL) /*!< CC_CHARGE_TIMER (Bitfield-Mask: 0x7fff)    */
#define CHARGER_CHARGER_CC_CHARGE_TIMER_REG_MAX_CC_CHARGE_TIME_Pos (0UL) /*!< MAX_CC_CHARGE_TIME (Bit 0)                       */
#define CHARGER_CHARGER_CC_CHARGE_TIMER_REG_MAX_CC_CHARGE_TIME_Msk (0x7fffUL) /*!< MAX_CC_CHARGE_TIME (Bitfield-Mask: 0x7fff)  */
/* ===================================================  CHARGER_CTRL_REG  ==================================================== */
#define CHARGER_CHARGER_CTRL_REG_EOC_TRIGGER_Pos (28UL)             /*!< EOC_TRIGGER (Bit 28)                                  */
#define CHARGER_CHARGER_CTRL_REG_EOC_TRIGGER_Msk (0x10000000UL)     /*!< EOC_TRIGGER (Bitfield-Mask: 0x01)                     */
#define CHARGER_CHARGER_CTRL_REG_EOC_INTERVAL_CHECK_TIMER_Pos (22UL) /*!< EOC_INTERVAL_CHECK_TIMER (Bit 22)                    */
#define CHARGER_CHARGER_CTRL_REG_EOC_INTERVAL_CHECK_TIMER_Msk (0xfc00000UL) /*!< EOC_INTERVAL_CHECK_TIMER (Bitfield-Mask: 0x3f) */
#define CHARGER_CHARGER_CTRL_REG_EOC_INTERVAL_CHECK_THRES_Pos (16UL) /*!< EOC_INTERVAL_CHECK_THRES (Bit 16)                    */
#define CHARGER_CHARGER_CTRL_REG_EOC_INTERVAL_CHECK_THRES_Msk (0x3f0000UL) /*!< EOC_INTERVAL_CHECK_THRES (Bitfield-Mask: 0x3f) */
#define CHARGER_CHARGER_CTRL_REG_REPLENISH_MODE_Pos (15UL)          /*!< REPLENISH_MODE (Bit 15)                               */
#define CHARGER_CHARGER_CTRL_REG_REPLENISH_MODE_Msk (0x8000UL)      /*!< REPLENISH_MODE (Bitfield-Mask: 0x01)                  */
#define CHARGER_CHARGER_CTRL_REG_PRE_CHARGE_MODE_Pos (14UL)         /*!< PRE_CHARGE_MODE (Bit 14)                              */
#define CHARGER_CHARGER_CTRL_REG_PRE_CHARGE_MODE_Msk (0x4000UL)     /*!< PRE_CHARGE_MODE (Bitfield-Mask: 0x01)                 */
#define CHARGER_CHARGER_CTRL_REG_CHARGE_LOOP_HOLD_Pos (13UL)        /*!< CHARGE_LOOP_HOLD (Bit 13)                             */
#define CHARGER_CHARGER_CTRL_REG_CHARGE_LOOP_HOLD_Msk (0x2000UL)    /*!< CHARGE_LOOP_HOLD (Bitfield-Mask: 0x01)                */
#define CHARGER_CHARGER_CTRL_REG_JEITA_SUPPORT_DISABLED_Pos (12UL)  /*!< JEITA_SUPPORT_DISABLED (Bit 12)                       */
#define CHARGER_CHARGER_CTRL_REG_JEITA_SUPPORT_DISABLED_Msk (0x1000UL) /*!< JEITA_SUPPORT_DISABLED (Bitfield-Mask: 0x01)       */
#define CHARGER_CHARGER_CTRL_REG_TBAT_MONITOR_MODE_Pos (10UL)       /*!< TBAT_MONITOR_MODE (Bit 10)                            */
#define CHARGER_CHARGER_CTRL_REG_TBAT_MONITOR_MODE_Msk (0xc00UL)    /*!< TBAT_MONITOR_MODE (Bitfield-Mask: 0x03)               */
#define CHARGER_CHARGER_CTRL_REG_CHARGE_TIMERS_HALT_ENABLE_Pos (9UL) /*!< CHARGE_TIMERS_HALT_ENABLE (Bit 9)                    */
#define CHARGER_CHARGER_CTRL_REG_CHARGE_TIMERS_HALT_ENABLE_Msk (0x200UL) /*!< CHARGE_TIMERS_HALT_ENABLE (Bitfield-Mask: 0x01)  */
#define CHARGER_CHARGER_CTRL_REG_STOP_CHARGE_TIMERS_Pos (8UL)       /*!< STOP_CHARGE_TIMERS (Bit 8)                            */
#define CHARGER_CHARGER_CTRL_REG_STOP_CHARGE_TIMERS_Msk (0x100UL)   /*!< STOP_CHARGE_TIMERS (Bitfield-Mask: 0x01)              */
#define CHARGER_CHARGER_CTRL_REG_NTC_LOW_DISABLE_Pos (7UL)          /*!< NTC_LOW_DISABLE (Bit 7)                               */
#define CHARGER_CHARGER_CTRL_REG_NTC_LOW_DISABLE_Msk (0x80UL)       /*!< NTC_LOW_DISABLE (Bitfield-Mask: 0x01)                 */
#define CHARGER_CHARGER_CTRL_REG_TBAT_PROT_ENABLE_Pos (6UL)         /*!< TBAT_PROT_ENABLE (Bit 6)                              */
#define CHARGER_CHARGER_CTRL_REG_TBAT_PROT_ENABLE_Msk (0x40UL)      /*!< TBAT_PROT_ENABLE (Bitfield-Mask: 0x01)                */
#define CHARGER_CHARGER_CTRL_REG_TDIE_ERROR_RESUME_Pos (5UL)        /*!< TDIE_ERROR_RESUME (Bit 5)                             */
#define CHARGER_CHARGER_CTRL_REG_TDIE_ERROR_RESUME_Msk (0x20UL)     /*!< TDIE_ERROR_RESUME (Bitfield-Mask: 0x01)               */
#define CHARGER_CHARGER_CTRL_REG_TDIE_PROT_ENABLE_Pos (4UL)         /*!< TDIE_PROT_ENABLE (Bit 4)                              */
#define CHARGER_CHARGER_CTRL_REG_TDIE_PROT_ENABLE_Msk (0x10UL)      /*!< TDIE_PROT_ENABLE (Bitfield-Mask: 0x01)                */
#define CHARGER_CHARGER_CTRL_REG_CHARGER_RESUME_Pos (3UL)           /*!< CHARGER_RESUME (Bit 3)                                */
#define CHARGER_CHARGER_CTRL_REG_CHARGER_RESUME_Msk (0x8UL)         /*!< CHARGER_RESUME (Bitfield-Mask: 0x01)                  */
#define CHARGER_CHARGER_CTRL_REG_CHARGER_BYPASS_Pos (2UL)           /*!< CHARGER_BYPASS (Bit 2)                                */
#define CHARGER_CHARGER_CTRL_REG_CHARGER_BYPASS_Msk (0x4UL)         /*!< CHARGER_BYPASS (Bitfield-Mask: 0x01)                  */
#define CHARGER_CHARGER_CTRL_REG_CHARGE_START_Pos (1UL)             /*!< CHARGE_START (Bit 1)                                  */
#define CHARGER_CHARGER_CTRL_REG_CHARGE_START_Msk (0x2UL)           /*!< CHARGE_START (Bitfield-Mask: 0x01)                    */
#define CHARGER_CHARGER_CTRL_REG_CHARGER_ENABLE_Pos (0UL)           /*!< CHARGER_ENABLE (Bit 0)                                */
#define CHARGER_CHARGER_CTRL_REG_CHARGER_ENABLE_Msk (0x1UL)         /*!< CHARGER_ENABLE (Bitfield-Mask: 0x01)                  */
/* ===============================================  CHARGER_CURRENT_PARAM_REG  =============================================== */
#define CHARGER_CHARGER_CURRENT_PARAM_REG_I_EOC_DOUBLE_RANGE_Pos (15UL) /*!< I_EOC_DOUBLE_RANGE (Bit 15)                       */
#define CHARGER_CHARGER_CURRENT_PARAM_REG_I_EOC_DOUBLE_RANGE_Msk (0x8000UL) /*!< I_EOC_DOUBLE_RANGE (Bitfield-Mask: 0x01)      */
#define CHARGER_CHARGER_CURRENT_PARAM_REG_I_END_OF_CHARGE_Pos (12UL) /*!< I_END_OF_CHARGE (Bit 12)                             */
#define CHARGER_CHARGER_CURRENT_PARAM_REG_I_END_OF_CHARGE_Msk (0x7000UL) /*!< I_END_OF_CHARGE (Bitfield-Mask: 0x07)            */
#define CHARGER_CHARGER_CURRENT_PARAM_REG_I_PRECHARGE_Pos (6UL)     /*!< I_PRECHARGE (Bit 6)                                   */
#define CHARGER_CHARGER_CURRENT_PARAM_REG_I_PRECHARGE_Msk (0xfc0UL) /*!< I_PRECHARGE (Bitfield-Mask: 0x3f)                     */
#define CHARGER_CHARGER_CURRENT_PARAM_REG_I_CHARGE_Pos (0UL)        /*!< I_CHARGE (Bit 0)                                      */
#define CHARGER_CHARGER_CURRENT_PARAM_REG_I_CHARGE_Msk (0x3fUL)     /*!< I_CHARGE (Bitfield-Mask: 0x3f)                        */
/* ==============================================  CHARGER_CURRENT_STATUS_REG  =============================================== */
#define CHARGER_CHARGER_CURRENT_STATUS_REG_I_PRECHARGE_SET_Pos (6UL) /*!< I_PRECHARGE_SET (Bit 6)                              */
#define CHARGER_CHARGER_CURRENT_STATUS_REG_I_PRECHARGE_SET_Msk (0xfc0UL) /*!< I_PRECHARGE_SET (Bitfield-Mask: 0x3f)            */
#define CHARGER_CHARGER_CURRENT_STATUS_REG_I_CHARGE_SET_Pos (0UL)   /*!< I_CHARGE_SET (Bit 0)                                  */
#define CHARGER_CHARGER_CURRENT_STATUS_REG_I_CHARGE_SET_Msk (0x3fUL) /*!< I_CHARGE_SET (Bitfield-Mask: 0x3f)                   */
/* ==============================================  CHARGER_CV_CHARGE_TIMER_REG  ============================================== */
#define CHARGER_CHARGER_CV_CHARGE_TIMER_REG_CV_CHARGE_TIMER_Pos (16UL) /*!< CV_CHARGE_TIMER (Bit 16)                           */
#define CHARGER_CHARGER_CV_CHARGE_TIMER_REG_CV_CHARGE_TIMER_Msk (0x7fff0000UL) /*!< CV_CHARGE_TIMER (Bitfield-Mask: 0x7fff)    */
#define CHARGER_CHARGER_CV_CHARGE_TIMER_REG_MAX_CV_CHARGE_TIME_Pos (0UL) /*!< MAX_CV_CHARGE_TIME (Bit 0)                       */
#define CHARGER_CHARGER_CV_CHARGE_TIMER_REG_MAX_CV_CHARGE_TIME_Msk (0x7fffUL) /*!< MAX_CV_CHARGE_TIME (Bitfield-Mask: 0x7fff)  */
/* ===============================================  CHARGER_ERROR_IRQ_CLR_REG  =============================================== */
#define CHARGER_CHARGER_ERROR_IRQ_CLR_REG_TBAT_ERROR_IRQ_CLR_Pos (6UL) /*!< TBAT_ERROR_IRQ_CLR (Bit 6)                         */
#define CHARGER_CHARGER_ERROR_IRQ_CLR_REG_TBAT_ERROR_IRQ_CLR_Msk (0x40UL) /*!< TBAT_ERROR_IRQ_CLR (Bitfield-Mask: 0x01)        */
#define CHARGER_CHARGER_ERROR_IRQ_CLR_REG_TDIE_ERROR_IRQ_CLR_Pos (5UL) /*!< TDIE_ERROR_IRQ_CLR (Bit 5)                         */
#define CHARGER_CHARGER_ERROR_IRQ_CLR_REG_TDIE_ERROR_IRQ_CLR_Msk (0x20UL) /*!< TDIE_ERROR_IRQ_CLR (Bitfield-Mask: 0x01)        */
#define CHARGER_CHARGER_ERROR_IRQ_CLR_REG_VBAT_OVP_ERROR_IRQ_CLR_Pos (4UL) /*!< VBAT_OVP_ERROR_IRQ_CLR (Bit 4)                 */
#define CHARGER_CHARGER_ERROR_IRQ_CLR_REG_VBAT_OVP_ERROR_IRQ_CLR_Msk (0x10UL) /*!< VBAT_OVP_ERROR_IRQ_CLR (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_ERROR_IRQ_CLR_REG_TOTAL_CHARGE_TIMEOUT_IRQ_CLR_Pos (3UL) /*!< TOTAL_CHARGE_TIMEOUT_IRQ_CLR (Bit 3)     */
#define CHARGER_CHARGER_ERROR_IRQ_CLR_REG_TOTAL_CHARGE_TIMEOUT_IRQ_CLR_Msk (0x8UL) /*!< TOTAL_CHARGE_TIMEOUT_IRQ_CLR (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_ERROR_IRQ_CLR_REG_CV_CHARGE_TIMEOUT_IRQ_CLR_Pos (2UL) /*!< CV_CHARGE_TIMEOUT_IRQ_CLR (Bit 2)           */
#define CHARGER_CHARGER_ERROR_IRQ_CLR_REG_CV_CHARGE_TIMEOUT_IRQ_CLR_Msk (0x4UL) /*!< CV_CHARGE_TIMEOUT_IRQ_CLR (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_ERROR_IRQ_CLR_REG_CC_CHARGE_TIMEOUT_IRQ_CLR_Pos (1UL) /*!< CC_CHARGE_TIMEOUT_IRQ_CLR (Bit 1)           */
#define CHARGER_CHARGER_ERROR_IRQ_CLR_REG_CC_CHARGE_TIMEOUT_IRQ_CLR_Msk (0x2UL) /*!< CC_CHARGE_TIMEOUT_IRQ_CLR (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_ERROR_IRQ_CLR_REG_PRECHARGE_TIMEOUT_IRQ_CLR_Pos (0UL) /*!< PRECHARGE_TIMEOUT_IRQ_CLR (Bit 0)           */
#define CHARGER_CHARGER_ERROR_IRQ_CLR_REG_PRECHARGE_TIMEOUT_IRQ_CLR_Msk (0x1UL) /*!< PRECHARGE_TIMEOUT_IRQ_CLR (Bitfield-Mask: 0x01) */
/* ==============================================  CHARGER_ERROR_IRQ_MASK_REG  =============================================== */
#define CHARGER_CHARGER_ERROR_IRQ_MASK_REG_TBAT_ERROR_IRQ_EN_Pos (6UL) /*!< TBAT_ERROR_IRQ_EN (Bit 6)                          */
#define CHARGER_CHARGER_ERROR_IRQ_MASK_REG_TBAT_ERROR_IRQ_EN_Msk (0x40UL) /*!< TBAT_ERROR_IRQ_EN (Bitfield-Mask: 0x01)         */
#define CHARGER_CHARGER_ERROR_IRQ_MASK_REG_TDIE_ERROR_IRQ_EN_Pos (5UL) /*!< TDIE_ERROR_IRQ_EN (Bit 5)                          */
#define CHARGER_CHARGER_ERROR_IRQ_MASK_REG_TDIE_ERROR_IRQ_EN_Msk (0x20UL) /*!< TDIE_ERROR_IRQ_EN (Bitfield-Mask: 0x01)         */
#define CHARGER_CHARGER_ERROR_IRQ_MASK_REG_VBAT_OVP_ERROR_IRQ_EN_Pos (4UL) /*!< VBAT_OVP_ERROR_IRQ_EN (Bit 4)                  */
#define CHARGER_CHARGER_ERROR_IRQ_MASK_REG_VBAT_OVP_ERROR_IRQ_EN_Msk (0x10UL) /*!< VBAT_OVP_ERROR_IRQ_EN (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_ERROR_IRQ_MASK_REG_TOTAL_CHARGE_TIMEOUT_IRQ_EN_Pos (3UL) /*!< TOTAL_CHARGE_TIMEOUT_IRQ_EN (Bit 3)      */
#define CHARGER_CHARGER_ERROR_IRQ_MASK_REG_TOTAL_CHARGE_TIMEOUT_IRQ_EN_Msk (0x8UL) /*!< TOTAL_CHARGE_TIMEOUT_IRQ_EN (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_ERROR_IRQ_MASK_REG_CV_CHARGE_TIMEOUT_IRQ_EN_Pos (2UL) /*!< CV_CHARGE_TIMEOUT_IRQ_EN (Bit 2)            */
#define CHARGER_CHARGER_ERROR_IRQ_MASK_REG_CV_CHARGE_TIMEOUT_IRQ_EN_Msk (0x4UL) /*!< CV_CHARGE_TIMEOUT_IRQ_EN (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_ERROR_IRQ_MASK_REG_CC_CHARGE_TIMEOUT_IRQ_EN_Pos (1UL) /*!< CC_CHARGE_TIMEOUT_IRQ_EN (Bit 1)            */
#define CHARGER_CHARGER_ERROR_IRQ_MASK_REG_CC_CHARGE_TIMEOUT_IRQ_EN_Msk (0x2UL) /*!< CC_CHARGE_TIMEOUT_IRQ_EN (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_ERROR_IRQ_MASK_REG_PRECHARGE_TIMEOUT_IRQ_EN_Pos (0UL) /*!< PRECHARGE_TIMEOUT_IRQ_EN (Bit 0)            */
#define CHARGER_CHARGER_ERROR_IRQ_MASK_REG_PRECHARGE_TIMEOUT_IRQ_EN_Msk (0x1UL) /*!< PRECHARGE_TIMEOUT_IRQ_EN (Bitfield-Mask: 0x01) */
/* =============================================  CHARGER_ERROR_IRQ_STATUS_REG  ============================================== */
#define CHARGER_CHARGER_ERROR_IRQ_STATUS_REG_TBAT_ERROR_IRQ_Pos (6UL) /*!< TBAT_ERROR_IRQ (Bit 6)                              */
#define CHARGER_CHARGER_ERROR_IRQ_STATUS_REG_TBAT_ERROR_IRQ_Msk (0x40UL) /*!< TBAT_ERROR_IRQ (Bitfield-Mask: 0x01)             */
#define CHARGER_CHARGER_ERROR_IRQ_STATUS_REG_TDIE_ERROR_IRQ_Pos (5UL) /*!< TDIE_ERROR_IRQ (Bit 5)                              */
#define CHARGER_CHARGER_ERROR_IRQ_STATUS_REG_TDIE_ERROR_IRQ_Msk (0x20UL) /*!< TDIE_ERROR_IRQ (Bitfield-Mask: 0x01)             */
#define CHARGER_CHARGER_ERROR_IRQ_STATUS_REG_VBAT_OVP_ERROR_IRQ_Pos (4UL) /*!< VBAT_OVP_ERROR_IRQ (Bit 4)                      */
#define CHARGER_CHARGER_ERROR_IRQ_STATUS_REG_VBAT_OVP_ERROR_IRQ_Msk (0x10UL) /*!< VBAT_OVP_ERROR_IRQ (Bitfield-Mask: 0x01)     */
#define CHARGER_CHARGER_ERROR_IRQ_STATUS_REG_TOTAL_CHARGE_TIMEOUT_IRQ_Pos (3UL) /*!< TOTAL_CHARGE_TIMEOUT_IRQ (Bit 3)          */
#define CHARGER_CHARGER_ERROR_IRQ_STATUS_REG_TOTAL_CHARGE_TIMEOUT_IRQ_Msk (0x8UL) /*!< TOTAL_CHARGE_TIMEOUT_IRQ (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_ERROR_IRQ_STATUS_REG_CV_CHARGE_TIMEOUT_IRQ_Pos (2UL) /*!< CV_CHARGE_TIMEOUT_IRQ (Bit 2)                */
#define CHARGER_CHARGER_ERROR_IRQ_STATUS_REG_CV_CHARGE_TIMEOUT_IRQ_Msk (0x4UL) /*!< CV_CHARGE_TIMEOUT_IRQ (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_ERROR_IRQ_STATUS_REG_CC_CHARGE_TIMEOUT_IRQ_Pos (1UL) /*!< CC_CHARGE_TIMEOUT_IRQ (Bit 1)                */
#define CHARGER_CHARGER_ERROR_IRQ_STATUS_REG_CC_CHARGE_TIMEOUT_IRQ_Msk (0x2UL) /*!< CC_CHARGE_TIMEOUT_IRQ (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_ERROR_IRQ_STATUS_REG_PRECHARGE_TIMEOUT_IRQ_Pos (0UL) /*!< PRECHARGE_TIMEOUT_IRQ (Bit 0)                */
#define CHARGER_CHARGER_ERROR_IRQ_STATUS_REG_PRECHARGE_TIMEOUT_IRQ_Msk (0x1UL) /*!< PRECHARGE_TIMEOUT_IRQ (Bitfield-Mask: 0x01) */
/* ==============================================  CHARGER_JEITA_CURRENT2_REG  =============================================== */
#define CHARGER_CHARGER_JEITA_CURRENT2_REG_I_PRECHARGE_TWARMER_Pos (18UL) /*!< I_PRECHARGE_TWARMER (Bit 18)                    */
#define CHARGER_CHARGER_JEITA_CURRENT2_REG_I_PRECHARGE_TWARMER_Msk (0xfc0000UL) /*!< I_PRECHARGE_TWARMER (Bitfield-Mask: 0x3f) */
#define CHARGER_CHARGER_JEITA_CURRENT2_REG_I_PRECHARGE_TCOOLER_Pos (12UL) /*!< I_PRECHARGE_TCOOLER (Bit 12)                    */
#define CHARGER_CHARGER_JEITA_CURRENT2_REG_I_PRECHARGE_TCOOLER_Msk (0x3f000UL) /*!< I_PRECHARGE_TCOOLER (Bitfield-Mask: 0x3f)  */
#define CHARGER_CHARGER_JEITA_CURRENT2_REG_I_CHARGE_TWARMER_Pos (6UL) /*!< I_CHARGE_TWARMER (Bit 6)                            */
#define CHARGER_CHARGER_JEITA_CURRENT2_REG_I_CHARGE_TWARMER_Msk (0xfc0UL) /*!< I_CHARGE_TWARMER (Bitfield-Mask: 0x3f)          */
#define CHARGER_CHARGER_JEITA_CURRENT2_REG_I_CHARGE_TCOOLER_Pos (0UL) /*!< I_CHARGE_TCOOLER (Bit 0)                            */
#define CHARGER_CHARGER_JEITA_CURRENT2_REG_I_CHARGE_TCOOLER_Msk (0x3fUL) /*!< I_CHARGE_TCOOLER (Bitfield-Mask: 0x3f)           */
/* ===============================================  CHARGER_JEITA_CURRENT_REG  =============================================== */
#define CHARGER_CHARGER_JEITA_CURRENT_REG_I_PRECHARGE_TWARM_Pos (18UL) /*!< I_PRECHARGE_TWARM (Bit 18)                         */
#define CHARGER_CHARGER_JEITA_CURRENT_REG_I_PRECHARGE_TWARM_Msk (0xfc0000UL) /*!< I_PRECHARGE_TWARM (Bitfield-Mask: 0x3f)      */
#define CHARGER_CHARGER_JEITA_CURRENT_REG_I_PRECHARGE_TCOOL_Pos (12UL) /*!< I_PRECHARGE_TCOOL (Bit 12)                         */
#define CHARGER_CHARGER_JEITA_CURRENT_REG_I_PRECHARGE_TCOOL_Msk (0x3f000UL) /*!< I_PRECHARGE_TCOOL (Bitfield-Mask: 0x3f)       */
#define CHARGER_CHARGER_JEITA_CURRENT_REG_I_CHARGE_TWARM_Pos (6UL)  /*!< I_CHARGE_TWARM (Bit 6)                                */
#define CHARGER_CHARGER_JEITA_CURRENT_REG_I_CHARGE_TWARM_Msk (0xfc0UL) /*!< I_CHARGE_TWARM (Bitfield-Mask: 0x3f)               */
#define CHARGER_CHARGER_JEITA_CURRENT_REG_I_CHARGE_TCOOL_Pos (0UL)  /*!< I_CHARGE_TCOOL (Bit 0)                                */
#define CHARGER_CHARGER_JEITA_CURRENT_REG_I_CHARGE_TCOOL_Msk (0x3fUL) /*!< I_CHARGE_TCOOL (Bitfield-Mask: 0x3f)                */
/* ==============================================  CHARGER_JEITA_V_CHARGE_REG  =============================================== */
#define CHARGER_CHARGER_JEITA_V_CHARGE_REG_V_CHARGE_TWARMER_Pos (18UL) /*!< V_CHARGE_TWARMER (Bit 18)                          */
#define CHARGER_CHARGER_JEITA_V_CHARGE_REG_V_CHARGE_TWARMER_Msk (0xfc0000UL) /*!< V_CHARGE_TWARMER (Bitfield-Mask: 0x3f)       */
#define CHARGER_CHARGER_JEITA_V_CHARGE_REG_V_CHARGE_TCOOLER_Pos (12UL) /*!< V_CHARGE_TCOOLER (Bit 12)                          */
#define CHARGER_CHARGER_JEITA_V_CHARGE_REG_V_CHARGE_TCOOLER_Msk (0x3f000UL) /*!< V_CHARGE_TCOOLER (Bitfield-Mask: 0x3f)        */
#define CHARGER_CHARGER_JEITA_V_CHARGE_REG_V_CHARGE_TWARM_Pos (6UL) /*!< V_CHARGE_TWARM (Bit 6)                                */
#define CHARGER_CHARGER_JEITA_V_CHARGE_REG_V_CHARGE_TWARM_Msk (0xfc0UL) /*!< V_CHARGE_TWARM (Bitfield-Mask: 0x3f)              */
#define CHARGER_CHARGER_JEITA_V_CHARGE_REG_V_CHARGE_TCOOL_Pos (0UL) /*!< V_CHARGE_TCOOL (Bit 0)                                */
#define CHARGER_CHARGER_JEITA_V_CHARGE_REG_V_CHARGE_TCOOL_Msk (0x3fUL) /*!< V_CHARGE_TCOOL (Bitfield-Mask: 0x3f)               */
/* ================================================  CHARGER_JEITA_V_OVP_REG  ================================================ */
#define CHARGER_CHARGER_JEITA_V_OVP_REG_V_OVP_TWARMER_Pos (18UL)    /*!< V_OVP_TWARMER (Bit 18)                                */
#define CHARGER_CHARGER_JEITA_V_OVP_REG_V_OVP_TWARMER_Msk (0xfc0000UL) /*!< V_OVP_TWARMER (Bitfield-Mask: 0x3f)                */
#define CHARGER_CHARGER_JEITA_V_OVP_REG_V_OVP_TCOOLER_Pos (12UL)    /*!< V_OVP_TCOOLER (Bit 12)                                */
#define CHARGER_CHARGER_JEITA_V_OVP_REG_V_OVP_TCOOLER_Msk (0x3f000UL) /*!< V_OVP_TCOOLER (Bitfield-Mask: 0x3f)                 */
#define CHARGER_CHARGER_JEITA_V_OVP_REG_V_OVP_TWARM_Pos (6UL)       /*!< V_OVP_TWARM (Bit 6)                                   */
#define CHARGER_CHARGER_JEITA_V_OVP_REG_V_OVP_TWARM_Msk (0xfc0UL)   /*!< V_OVP_TWARM (Bitfield-Mask: 0x3f)                     */
#define CHARGER_CHARGER_JEITA_V_OVP_REG_V_OVP_TCOOL_Pos (0UL)       /*!< V_OVP_TCOOL (Bit 0)                                   */
#define CHARGER_CHARGER_JEITA_V_OVP_REG_V_OVP_TCOOL_Msk (0x3fUL)    /*!< V_OVP_TCOOL (Bitfield-Mask: 0x3f)                     */
/* =============================================  CHARGER_JEITA_V_PRECHARGE_REG  ============================================= */
#define CHARGER_CHARGER_JEITA_V_PRECHARGE_REG_V_PRECHARGE_TWARMER_Pos (18UL) /*!< V_PRECHARGE_TWARMER (Bit 18)                 */
#define CHARGER_CHARGER_JEITA_V_PRECHARGE_REG_V_PRECHARGE_TWARMER_Msk (0xfc0000UL) /*!< V_PRECHARGE_TWARMER (Bitfield-Mask: 0x3f) */
#define CHARGER_CHARGER_JEITA_V_PRECHARGE_REG_V_PRECHARGE_TCOOLER_Pos (12UL) /*!< V_PRECHARGE_TCOOLER (Bit 12)                 */
#define CHARGER_CHARGER_JEITA_V_PRECHARGE_REG_V_PRECHARGE_TCOOLER_Msk (0x3f000UL) /*!< V_PRECHARGE_TCOOLER (Bitfield-Mask: 0x3f) */
#define CHARGER_CHARGER_JEITA_V_PRECHARGE_REG_V_PRECHARGE_TWARM_Pos (6UL) /*!< V_PRECHARGE_TWARM (Bit 6)                       */
#define CHARGER_CHARGER_JEITA_V_PRECHARGE_REG_V_PRECHARGE_TWARM_Msk (0xfc0UL) /*!< V_PRECHARGE_TWARM (Bitfield-Mask: 0x3f)     */
#define CHARGER_CHARGER_JEITA_V_PRECHARGE_REG_V_PRECHARGE_TCOOL_Pos (0UL) /*!< V_PRECHARGE_TCOOL (Bit 0)                       */
#define CHARGER_CHARGER_JEITA_V_PRECHARGE_REG_V_PRECHARGE_TCOOL_Msk (0x3fUL) /*!< V_PRECHARGE_TCOOL (Bitfield-Mask: 0x3f)      */
/* =============================================  CHARGER_JEITA_V_REPLENISH_REG  ============================================= */
#define CHARGER_CHARGER_JEITA_V_REPLENISH_REG_V_REPLENISH_TWARMER_Pos (18UL) /*!< V_REPLENISH_TWARMER (Bit 18)                 */
#define CHARGER_CHARGER_JEITA_V_REPLENISH_REG_V_REPLENISH_TWARMER_Msk (0xfc0000UL) /*!< V_REPLENISH_TWARMER (Bitfield-Mask: 0x3f) */
#define CHARGER_CHARGER_JEITA_V_REPLENISH_REG_V_REPLENISH_TCOOLER_Pos (12UL) /*!< V_REPLENISH_TCOOLER (Bit 12)                 */
#define CHARGER_CHARGER_JEITA_V_REPLENISH_REG_V_REPLENISH_TCOOLER_Msk (0x3f000UL) /*!< V_REPLENISH_TCOOLER (Bitfield-Mask: 0x3f) */
#define CHARGER_CHARGER_JEITA_V_REPLENISH_REG_V_REPLENISH_TWARM_Pos (6UL) /*!< V_REPLENISH_TWARM (Bit 6)                       */
#define CHARGER_CHARGER_JEITA_V_REPLENISH_REG_V_REPLENISH_TWARM_Msk (0xfc0UL) /*!< V_REPLENISH_TWARM (Bitfield-Mask: 0x3f)     */
#define CHARGER_CHARGER_JEITA_V_REPLENISH_REG_V_REPLENISH_TCOOL_Pos (0UL) /*!< V_REPLENISH_TCOOL (Bit 0)                       */
#define CHARGER_CHARGER_JEITA_V_REPLENISH_REG_V_REPLENISH_TCOOL_Msk (0x3fUL) /*!< V_REPLENISH_TCOOL (Bitfield-Mask: 0x3f)      */
/* ===================================================  CHARGER_LOCK_REG  ==================================================== */
#define CHARGER_CHARGER_LOCK_REG_CHARGER_SWLOCK_EN_Pos (15UL)       /*!< CHARGER_SWLOCK_EN (Bit 15)                            */
#define CHARGER_CHARGER_LOCK_REG_CHARGER_SWLOCK_EN_Msk (0x8000UL)   /*!< CHARGER_SWLOCK_EN (Bitfield-Mask: 0x01)               */
#define CHARGER_CHARGER_LOCK_REG_JEITA_I_CHARGE2_LOCK_Pos (14UL)    /*!< JEITA_I_CHARGE2_LOCK (Bit 14)                         */
#define CHARGER_CHARGER_LOCK_REG_JEITA_I_CHARGE2_LOCK_Msk (0x4000UL) /*!< JEITA_I_CHARGE2_LOCK (Bitfield-Mask: 0x01)           */
#define CHARGER_CHARGER_LOCK_REG_JEITA_I_CHARGE_LOCK_Pos (13UL)     /*!< JEITA_I_CHARGE_LOCK (Bit 13)                          */
#define CHARGER_CHARGER_LOCK_REG_JEITA_I_CHARGE_LOCK_Msk (0x2000UL) /*!< JEITA_I_CHARGE_LOCK (Bitfield-Mask: 0x01)             */
#define CHARGER_CHARGER_LOCK_REG_JEITA_V_OVP_LOCK_Pos (12UL)        /*!< JEITA_V_OVP_LOCK (Bit 12)                             */
#define CHARGER_CHARGER_LOCK_REG_JEITA_V_OVP_LOCK_Msk (0x1000UL)    /*!< JEITA_V_OVP_LOCK (Bitfield-Mask: 0x01)                */
#define CHARGER_CHARGER_LOCK_REG_JEITA_V_PRECHARGE_LOCK_Pos (11UL)  /*!< JEITA_V_PRECHARGE_LOCK (Bit 11)                       */
#define CHARGER_CHARGER_LOCK_REG_JEITA_V_PRECHARGE_LOCK_Msk (0x800UL) /*!< JEITA_V_PRECHARGE_LOCK (Bitfield-Mask: 0x01)        */
#define CHARGER_CHARGER_LOCK_REG_JEITA_V_CHARGE_LOCK_Pos (10UL)     /*!< JEITA_V_CHARGE_LOCK (Bit 10)                          */
#define CHARGER_CHARGER_LOCK_REG_JEITA_V_CHARGE_LOCK_Msk (0x400UL)  /*!< JEITA_V_CHARGE_LOCK (Bitfield-Mask: 0x01)             */
#define CHARGER_CHARGER_LOCK_REG_TOTAL_CHARGE_TIMEOUT_LOCK_Pos (9UL) /*!< TOTAL_CHARGE_TIMEOUT_LOCK (Bit 9)                    */
#define CHARGER_CHARGER_LOCK_REG_TOTAL_CHARGE_TIMEOUT_LOCK_Msk (0x200UL) /*!< TOTAL_CHARGE_TIMEOUT_LOCK (Bitfield-Mask: 0x01)  */
#define CHARGER_CHARGER_LOCK_REG_CV_CHARGE_TIMEOUT_LOCK_Pos (8UL)   /*!< CV_CHARGE_TIMEOUT_LOCK (Bit 8)                        */
#define CHARGER_CHARGER_LOCK_REG_CV_CHARGE_TIMEOUT_LOCK_Msk (0x100UL) /*!< CV_CHARGE_TIMEOUT_LOCK (Bitfield-Mask: 0x01)        */
#define CHARGER_CHARGER_LOCK_REG_CC_CHARGE_TIMEOUT_LOCK_Pos (7UL)   /*!< CC_CHARGE_TIMEOUT_LOCK (Bit 7)                        */
#define CHARGER_CHARGER_LOCK_REG_CC_CHARGE_TIMEOUT_LOCK_Msk (0x80UL) /*!< CC_CHARGE_TIMEOUT_LOCK (Bitfield-Mask: 0x01)         */
#define CHARGER_CHARGER_LOCK_REG_PRECHARGE_TIMEOUT_LOCK_Pos (6UL)   /*!< PRECHARGE_TIMEOUT_LOCK (Bit 6)                        */
#define CHARGER_CHARGER_LOCK_REG_PRECHARGE_TIMEOUT_LOCK_Msk (0x40UL) /*!< PRECHARGE_TIMEOUT_LOCK (Bitfield-Mask: 0x01)         */
#define CHARGER_CHARGER_LOCK_REG_TEMPSET2_PARAM_LOCK_Pos (5UL)      /*!< TEMPSET2_PARAM_LOCK (Bit 5)                           */
#define CHARGER_CHARGER_LOCK_REG_TEMPSET2_PARAM_LOCK_Msk (0x20UL)   /*!< TEMPSET2_PARAM_LOCK (Bitfield-Mask: 0x01)             */
#define CHARGER_CHARGER_LOCK_REG_TEMPSET_PARAM_LOCK_Pos (4UL)       /*!< TEMPSET_PARAM_LOCK (Bit 4)                            */
#define CHARGER_CHARGER_LOCK_REG_TEMPSET_PARAM_LOCK_Msk (0x10UL)    /*!< TEMPSET_PARAM_LOCK (Bitfield-Mask: 0x01)              */
#define CHARGER_CHARGER_LOCK_REG_CURRENT_PARAM_LOCK_Pos (3UL)       /*!< CURRENT_PARAM_LOCK (Bit 3)                            */
#define CHARGER_CHARGER_LOCK_REG_CURRENT_PARAM_LOCK_Msk (0x8UL)     /*!< CURRENT_PARAM_LOCK (Bitfield-Mask: 0x01)              */
#define CHARGER_CHARGER_LOCK_REG_VOLTAGE_PARAM_LOCK_Pos (2UL)       /*!< VOLTAGE_PARAM_LOCK (Bit 2)                            */
#define CHARGER_CHARGER_LOCK_REG_VOLTAGE_PARAM_LOCK_Msk (0x4UL)     /*!< VOLTAGE_PARAM_LOCK (Bitfield-Mask: 0x01)              */
#define CHARGER_CHARGER_LOCK_REG_CHARGER_TEST_CTRL_LOCK_Pos (1UL)   /*!< CHARGER_TEST_CTRL_LOCK (Bit 1)                        */
#define CHARGER_CHARGER_LOCK_REG_CHARGER_TEST_CTRL_LOCK_Msk (0x2UL) /*!< CHARGER_TEST_CTRL_LOCK (Bitfield-Mask: 0x01)          */
#define CHARGER_CHARGER_LOCK_REG_CHARGER_CTRL_LOCK_Pos (0UL)        /*!< CHARGER_CTRL_LOCK (Bit 0)                             */
#define CHARGER_CHARGER_LOCK_REG_CHARGER_CTRL_LOCK_Msk (0x1UL)      /*!< CHARGER_CTRL_LOCK (Bitfield-Mask: 0x01)               */
/* =============================================  CHARGER_PRE_CHARGE_TIMER_REG  ============================================== */
#define CHARGER_CHARGER_PRE_CHARGE_TIMER_REG_PRE_CHARGE_TIMER_Pos (16UL) /*!< PRE_CHARGE_TIMER (Bit 16)                        */
#define CHARGER_CHARGER_PRE_CHARGE_TIMER_REG_PRE_CHARGE_TIMER_Msk (0x7fff0000UL) /*!< PRE_CHARGE_TIMER (Bitfield-Mask: 0x7fff) */
#define CHARGER_CHARGER_PRE_CHARGE_TIMER_REG_MAX_PRE_CHARGE_TIME_Pos (0UL) /*!< MAX_PRE_CHARGE_TIME (Bit 0)                    */
#define CHARGER_CHARGER_PRE_CHARGE_TIMER_REG_MAX_PRE_CHARGE_TIME_Msk (0x7fffUL) /*!< MAX_PRE_CHARGE_TIME (Bitfield-Mask: 0x7fff) */
/* ===============================================  CHARGER_PWR_UP_TIMER_REG  ================================================ */
#define CHARGER_CHARGER_PWR_UP_TIMER_REG_CHARGER_PWR_UP_TIMER_Pos (16UL) /*!< CHARGER_PWR_UP_TIMER (Bit 16)                    */
#define CHARGER_CHARGER_PWR_UP_TIMER_REG_CHARGER_PWR_UP_TIMER_Msk (0x1f0000UL) /*!< CHARGER_PWR_UP_TIMER (Bitfield-Mask: 0x1f) */
#define CHARGER_CHARGER_PWR_UP_TIMER_REG_CHARGER_PWR_UP_SETTLING_Pos (0UL) /*!< CHARGER_PWR_UP_SETTLING (Bit 0)                */
#define CHARGER_CHARGER_PWR_UP_TIMER_REG_CHARGER_PWR_UP_SETTLING_Msk (0x1fUL) /*!< CHARGER_PWR_UP_SETTLING (Bitfield-Mask: 0x1f) */
/* ===============================================  CHARGER_STATE_IRQ_CLR_REG  =============================================== */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_CV_TO_PRECHARGE_IRQ_CLR_Pos (11UL) /*!< CV_TO_PRECHARGE_IRQ_CLR (Bit 11)             */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_CV_TO_PRECHARGE_IRQ_CLR_Msk (0x800UL) /*!< CV_TO_PRECHARGE_IRQ_CLR (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_CC_TO_PRECHARGE_IRQ_CLR_Pos (10UL) /*!< CC_TO_PRECHARGE_IRQ_CLR (Bit 10)             */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_CC_TO_PRECHARGE_IRQ_CLR_Msk (0x400UL) /*!< CC_TO_PRECHARGE_IRQ_CLR (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_CV_TO_CC_IRQ_CLR_Pos (9UL) /*!< CV_TO_CC_IRQ_CLR (Bit 9)                             */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_CV_TO_CC_IRQ_CLR_Msk (0x200UL) /*!< CV_TO_CC_IRQ_CLR (Bitfield-Mask: 0x01)           */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_TBAT_STATUS_UPDATE_IRQ_CLR_Pos (8UL) /*!< TBAT_STATUS_UPDATE_IRQ_CLR (Bit 8)         */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_TBAT_STATUS_UPDATE_IRQ_CLR_Msk (0x100UL) /*!< TBAT_STATUS_UPDATE_IRQ_CLR (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_TBAT_PROT_TO_PRECHARGE_IRQ_CLR_Pos (7UL) /*!< TBAT_PROT_TO_PRECHARGE_IRQ_CLR (Bit 7) */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_TBAT_PROT_TO_PRECHARGE_IRQ_CLR_Msk (0x80UL) /*!< TBAT_PROT_TO_PRECHARGE_IRQ_CLR (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_TDIE_PROT_TO_PRECHARGE_IRQ_CLR_Pos (6UL) /*!< TDIE_PROT_TO_PRECHARGE_IRQ_CLR (Bit 6) */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_TDIE_PROT_TO_PRECHARGE_IRQ_CLR_Msk (0x40UL) /*!< TDIE_PROT_TO_PRECHARGE_IRQ_CLR (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_EOC_TO_PRECHARGE_IRQ_CLR_Pos (5UL) /*!< EOC_TO_PRECHARGE_IRQ_CLR (Bit 5)             */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_EOC_TO_PRECHARGE_IRQ_CLR_Msk (0x20UL) /*!< EOC_TO_PRECHARGE_IRQ_CLR (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_CV_TO_EOC_IRQ_CLR_Pos (4UL) /*!< CV_TO_EOC_IRQ_CLR (Bit 4)                           */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_CV_TO_EOC_IRQ_CLR_Msk (0x10UL) /*!< CV_TO_EOC_IRQ_CLR (Bitfield-Mask: 0x01)          */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_CC_TO_EOC_IRQ_CLR_Pos (3UL) /*!< CC_TO_EOC_IRQ_CLR (Bit 3)                           */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_CC_TO_EOC_IRQ_CLR_Msk (0x8UL) /*!< CC_TO_EOC_IRQ_CLR (Bitfield-Mask: 0x01)           */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_CC_TO_CV_IRQ_CLR_Pos (2UL) /*!< CC_TO_CV_IRQ_CLR (Bit 2)                             */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_CC_TO_CV_IRQ_CLR_Msk (0x4UL) /*!< CC_TO_CV_IRQ_CLR (Bitfield-Mask: 0x01)             */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_PRECHARGE_TO_CC_IRQ_CLR_Pos (1UL) /*!< PRECHARGE_TO_CC_IRQ_CLR (Bit 1)               */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_PRECHARGE_TO_CC_IRQ_CLR_Msk (0x2UL) /*!< PRECHARGE_TO_CC_IRQ_CLR (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_DISABLED_TO_PRECHARGE_IRQ_CLR_Pos (0UL) /*!< DISABLED_TO_PRECHARGE_IRQ_CLR (Bit 0)   */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_DISABLED_TO_PRECHARGE_IRQ_CLR_Msk (0x1UL) /*!< DISABLED_TO_PRECHARGE_IRQ_CLR (Bitfield-Mask: 0x01) */
/* ==============================================  CHARGER_STATE_IRQ_MASK_REG  =============================================== */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_CV_TO_PRECHARGE_IRQ_EN_Pos (11UL) /*!< CV_TO_PRECHARGE_IRQ_EN (Bit 11)              */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_CV_TO_PRECHARGE_IRQ_EN_Msk (0x800UL) /*!< CV_TO_PRECHARGE_IRQ_EN (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_CC_TO_PRECHARGE_IRQ_EN_Pos (10UL) /*!< CC_TO_PRECHARGE_IRQ_EN (Bit 10)              */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_CC_TO_PRECHARGE_IRQ_EN_Msk (0x400UL) /*!< CC_TO_PRECHARGE_IRQ_EN (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_CV_TO_CC_IRQ_EN_Pos (9UL) /*!< CV_TO_CC_IRQ_EN (Bit 9)                              */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_CV_TO_CC_IRQ_EN_Msk (0x200UL) /*!< CV_TO_CC_IRQ_EN (Bitfield-Mask: 0x01)            */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_TBAT_STATUS_UPDATE_IRQ_EN_Pos (8UL) /*!< TBAT_STATUS_UPDATE_IRQ_EN (Bit 8)          */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_TBAT_STATUS_UPDATE_IRQ_EN_Msk (0x100UL) /*!< TBAT_STATUS_UPDATE_IRQ_EN (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_TBAT_PROT_TO_PRECHARGE_IRQ_EN_Pos (7UL) /*!< TBAT_PROT_TO_PRECHARGE_IRQ_EN (Bit 7)  */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_TBAT_PROT_TO_PRECHARGE_IRQ_EN_Msk (0x80UL) /*!< TBAT_PROT_TO_PRECHARGE_IRQ_EN (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_TDIE_PROT_TO_PRECHARGE_IRQ_EN_Pos (6UL) /*!< TDIE_PROT_TO_PRECHARGE_IRQ_EN (Bit 6)  */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_TDIE_PROT_TO_PRECHARGE_IRQ_EN_Msk (0x40UL) /*!< TDIE_PROT_TO_PRECHARGE_IRQ_EN (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_EOC_TO_PRECHARGE_IRQ_EN_Pos (5UL) /*!< EOC_TO_PRECHARGE_IRQ_EN (Bit 5)              */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_EOC_TO_PRECHARGE_IRQ_EN_Msk (0x20UL) /*!< EOC_TO_PRECHARGE_IRQ_EN (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_CV_TO_EOC_IRQ_EN_Pos (4UL) /*!< CV_TO_EOC_IRQ_EN (Bit 4)                            */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_CV_TO_EOC_IRQ_EN_Msk (0x10UL) /*!< CV_TO_EOC_IRQ_EN (Bitfield-Mask: 0x01)           */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_CC_TO_EOC_IRQ_EN_Pos (3UL) /*!< CC_TO_EOC_IRQ_EN (Bit 3)                            */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_CC_TO_EOC_IRQ_EN_Msk (0x8UL) /*!< CC_TO_EOC_IRQ_EN (Bitfield-Mask: 0x01)            */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_CC_TO_CV_IRQ_EN_Pos (2UL) /*!< CC_TO_CV_IRQ_EN (Bit 2)                              */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_CC_TO_CV_IRQ_EN_Msk (0x4UL) /*!< CC_TO_CV_IRQ_EN (Bitfield-Mask: 0x01)              */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_PRECHARGE_TO_CC_IRQ_EN_Pos (1UL) /*!< PRECHARGE_TO_CC_IRQ_EN (Bit 1)                */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_PRECHARGE_TO_CC_IRQ_EN_Msk (0x2UL) /*!< PRECHARGE_TO_CC_IRQ_EN (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_DISABLED_TO_PRECHARGE_IRQ_EN_Pos (0UL) /*!< DISABLED_TO_PRECHARGE_IRQ_EN (Bit 0)    */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_DISABLED_TO_PRECHARGE_IRQ_EN_Msk (0x1UL) /*!< DISABLED_TO_PRECHARGE_IRQ_EN (Bitfield-Mask: 0x01) */
/* =============================================  CHARGER_STATE_IRQ_STATUS_REG  ============================================== */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_CV_TO_PRECHARGE_IRQ_Pos (11UL) /*!< CV_TO_PRECHARGE_IRQ (Bit 11)                  */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_CV_TO_PRECHARGE_IRQ_Msk (0x800UL) /*!< CV_TO_PRECHARGE_IRQ (Bitfield-Mask: 0x01)  */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_CC_TO_PRECHARGE_IRQ_Pos (10UL) /*!< CC_TO_PRECHARGE_IRQ (Bit 10)                  */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_CC_TO_PRECHARGE_IRQ_Msk (0x400UL) /*!< CC_TO_PRECHARGE_IRQ (Bitfield-Mask: 0x01)  */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_CV_TO_CC_IRQ_Pos (9UL) /*!< CV_TO_CC_IRQ (Bit 9)                                  */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_CV_TO_CC_IRQ_Msk (0x200UL) /*!< CV_TO_CC_IRQ (Bitfield-Mask: 0x01)                */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_TBAT_STATUS_UPDATE_IRQ_Pos (8UL) /*!< TBAT_STATUS_UPDATE_IRQ (Bit 8)              */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_TBAT_STATUS_UPDATE_IRQ_Msk (0x100UL) /*!< TBAT_STATUS_UPDATE_IRQ (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_TBAT_PROT_TO_PRECHARGE_IRQ_Pos (7UL) /*!< TBAT_PROT_TO_PRECHARGE_IRQ (Bit 7)      */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_TBAT_PROT_TO_PRECHARGE_IRQ_Msk (0x80UL) /*!< TBAT_PROT_TO_PRECHARGE_IRQ (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_TDIE_PROT_TO_PRECHARGE_IRQ_Pos (6UL) /*!< TDIE_PROT_TO_PRECHARGE_IRQ (Bit 6)      */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_TDIE_PROT_TO_PRECHARGE_IRQ_Msk (0x40UL) /*!< TDIE_PROT_TO_PRECHARGE_IRQ (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_EOC_TO_PRECHARGE_IRQ_Pos (5UL) /*!< EOC_TO_PRECHARGE_IRQ (Bit 5)                  */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_EOC_TO_PRECHARGE_IRQ_Msk (0x20UL) /*!< EOC_TO_PRECHARGE_IRQ (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_CV_TO_EOC_IRQ_Pos (4UL) /*!< CV_TO_EOC_IRQ (Bit 4)                                */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_CV_TO_EOC_IRQ_Msk (0x10UL) /*!< CV_TO_EOC_IRQ (Bitfield-Mask: 0x01)               */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_CC_TO_EOC_IRQ_Pos (3UL) /*!< CC_TO_EOC_IRQ (Bit 3)                                */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_CC_TO_EOC_IRQ_Msk (0x8UL) /*!< CC_TO_EOC_IRQ (Bitfield-Mask: 0x01)                */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_CC_TO_CV_IRQ_Pos (2UL) /*!< CC_TO_CV_IRQ (Bit 2)                                  */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_CC_TO_CV_IRQ_Msk (0x4UL) /*!< CC_TO_CV_IRQ (Bitfield-Mask: 0x01)                  */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_PRECHARGE_TO_CC_IRQ_Pos (1UL) /*!< PRECHARGE_TO_CC_IRQ (Bit 1)                    */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_PRECHARGE_TO_CC_IRQ_Msk (0x2UL) /*!< PRECHARGE_TO_CC_IRQ (Bitfield-Mask: 0x01)    */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_DISABLED_TO_PRECHARGE_IRQ_Pos (0UL) /*!< DISABLED_TO_PRECHARGE_IRQ (Bit 0)        */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_DISABLED_TO_PRECHARGE_IRQ_Msk (0x1UL) /*!< DISABLED_TO_PRECHARGE_IRQ (Bitfield-Mask: 0x01) */
/* ==================================================  CHARGER_STATUS_REG  =================================================== */
#define CHARGER_CHARGER_STATUS_REG_OVP_EVENTS_DEBOUNCE_CNT_Pos (26UL) /*!< OVP_EVENTS_DEBOUNCE_CNT (Bit 26)                    */
#define CHARGER_CHARGER_STATUS_REG_OVP_EVENTS_DEBOUNCE_CNT_Msk (0x1c000000UL) /*!< OVP_EVENTS_DEBOUNCE_CNT (Bitfield-Mask: 0x07) */
#define CHARGER_CHARGER_STATUS_REG_EOC_EVENTS_DEBOUNCE_CNT_Pos (23UL) /*!< EOC_EVENTS_DEBOUNCE_CNT (Bit 23)                    */
#define CHARGER_CHARGER_STATUS_REG_EOC_EVENTS_DEBOUNCE_CNT_Msk (0x3800000UL) /*!< EOC_EVENTS_DEBOUNCE_CNT (Bitfield-Mask: 0x07) */
#define CHARGER_CHARGER_STATUS_REG_TDIE_ERROR_DEBOUNCE_CNT_Pos (20UL) /*!< TDIE_ERROR_DEBOUNCE_CNT (Bit 20)                    */
#define CHARGER_CHARGER_STATUS_REG_TDIE_ERROR_DEBOUNCE_CNT_Msk (0x700000UL) /*!< TDIE_ERROR_DEBOUNCE_CNT (Bitfield-Mask: 0x07) */
#define CHARGER_CHARGER_STATUS_REG_CHARGER_JEITA_STATE_Pos (16UL)   /*!< CHARGER_JEITA_STATE (Bit 16)                          */
#define CHARGER_CHARGER_STATUS_REG_CHARGER_JEITA_STATE_Msk (0xf0000UL) /*!< CHARGER_JEITA_STATE (Bitfield-Mask: 0x0f)          */
#define CHARGER_CHARGER_STATUS_REG_CHARGER_STATE_Pos (12UL)         /*!< CHARGER_STATE (Bit 12)                                */
#define CHARGER_CHARGER_STATUS_REG_CHARGER_STATE_Msk (0xf000UL)     /*!< CHARGER_STATE (Bitfield-Mask: 0x0f)                   */
#define CHARGER_CHARGER_STATUS_REG_TBAT_STATUS_Pos (9UL)            /*!< TBAT_STATUS (Bit 9)                                   */
#define CHARGER_CHARGER_STATUS_REG_TBAT_STATUS_Msk (0xe00UL)        /*!< TBAT_STATUS (Bitfield-Mask: 0x07)                     */
#define CHARGER_CHARGER_STATUS_REG_MAIN_TBAT_COMP_OUT_Pos (8UL)     /*!< MAIN_TBAT_COMP_OUT (Bit 8)                            */
#define CHARGER_CHARGER_STATUS_REG_MAIN_TBAT_COMP_OUT_Msk (0x100UL) /*!< MAIN_TBAT_COMP_OUT (Bitfield-Mask: 0x01)              */
#define CHARGER_CHARGER_STATUS_REG_TBAT_HOT_COMP_OUT_Pos (7UL)      /*!< TBAT_HOT_COMP_OUT (Bit 7)                             */
#define CHARGER_CHARGER_STATUS_REG_TBAT_HOT_COMP_OUT_Msk (0x80UL)   /*!< TBAT_HOT_COMP_OUT (Bitfield-Mask: 0x01)               */
#define CHARGER_CHARGER_STATUS_REG_TDIE_COMP_OUT_Pos (6UL)          /*!< TDIE_COMP_OUT (Bit 6)                                 */
#define CHARGER_CHARGER_STATUS_REG_TDIE_COMP_OUT_Msk (0x40UL)       /*!< TDIE_COMP_OUT (Bitfield-Mask: 0x01)                   */
#define CHARGER_CHARGER_STATUS_REG_VBAT_OVP_COMP_OUT_Pos (5UL)      /*!< VBAT_OVP_COMP_OUT (Bit 5)                             */
#define CHARGER_CHARGER_STATUS_REG_VBAT_OVP_COMP_OUT_Msk (0x20UL)   /*!< VBAT_OVP_COMP_OUT (Bitfield-Mask: 0x01)               */
#define CHARGER_CHARGER_STATUS_REG_MAIN_VBAT_COMP_OUT_Pos (4UL)     /*!< MAIN_VBAT_COMP_OUT (Bit 4)                            */
#define CHARGER_CHARGER_STATUS_REG_MAIN_VBAT_COMP_OUT_Msk (0x10UL)  /*!< MAIN_VBAT_COMP_OUT (Bitfield-Mask: 0x01)              */
#define CHARGER_CHARGER_STATUS_REG_END_OF_CHARGE_Pos (3UL)          /*!< END_OF_CHARGE (Bit 3)                                 */
#define CHARGER_CHARGER_STATUS_REG_END_OF_CHARGE_Msk (0x8UL)        /*!< END_OF_CHARGE (Bitfield-Mask: 0x01)                   */
#define CHARGER_CHARGER_STATUS_REG_CHARGER_CV_MODE_Pos (2UL)        /*!< CHARGER_CV_MODE (Bit 2)                               */
#define CHARGER_CHARGER_STATUS_REG_CHARGER_CV_MODE_Msk (0x4UL)      /*!< CHARGER_CV_MODE (Bitfield-Mask: 0x01)                 */
#define CHARGER_CHARGER_STATUS_REG_CHARGER_CC_MODE_Pos (1UL)        /*!< CHARGER_CC_MODE (Bit 1)                               */
#define CHARGER_CHARGER_STATUS_REG_CHARGER_CC_MODE_Msk (0x2UL)      /*!< CHARGER_CC_MODE (Bitfield-Mask: 0x01)                 */
#define CHARGER_CHARGER_STATUS_REG_CHARGER_IS_POWERED_UP_Pos (0UL)  /*!< CHARGER_IS_POWERED_UP (Bit 0)                         */
#define CHARGER_CHARGER_STATUS_REG_CHARGER_IS_POWERED_UP_Msk (0x1UL) /*!< CHARGER_IS_POWERED_UP (Bitfield-Mask: 0x01)          */
/* ==================================================  CHARGER_SWLOCK_REG  =================================================== */
#define CHARGER_CHARGER_SWLOCK_REG_SWLOCK_FSM_STATE_Pos (1UL)       /*!< SWLOCK_FSM_STATE (Bit 1)                              */
#define CHARGER_CHARGER_SWLOCK_REG_SWLOCK_FSM_STATE_Msk (0x6UL)     /*!< SWLOCK_FSM_STATE (Bitfield-Mask: 0x03)                */
#define CHARGER_CHARGER_SWLOCK_REG_SWLOCK_STATUS_Pos (0UL)          /*!< SWLOCK_STATUS (Bit 0)                                 */
#define CHARGER_CHARGER_SWLOCK_REG_SWLOCK_STATUS_Msk (0x1UL)        /*!< SWLOCK_STATUS (Bitfield-Mask: 0x01)                   */
/* ==============================================  CHARGER_TBAT_COMP_TIMER_REG  ============================================== */
#define CHARGER_CHARGER_TBAT_COMP_TIMER_REG_TBAT_COMP_TIMER_Pos (16UL) /*!< TBAT_COMP_TIMER (Bit 16)                           */
#define CHARGER_CHARGER_TBAT_COMP_TIMER_REG_TBAT_COMP_TIMER_Msk (0x3ff0000UL) /*!< TBAT_COMP_TIMER (Bitfield-Mask: 0x3ff)      */
#define CHARGER_CHARGER_TBAT_COMP_TIMER_REG_TBAT_COMP_SETTLING_Pos (0UL) /*!< TBAT_COMP_SETTLING (Bit 0)                       */
#define CHARGER_CHARGER_TBAT_COMP_TIMER_REG_TBAT_COMP_SETTLING_Msk (0x3ffUL) /*!< TBAT_COMP_SETTLING (Bitfield-Mask: 0x3ff)    */
/* ==============================================  CHARGER_TBAT_MON_TIMER_REG  =============================================== */
#define CHARGER_CHARGER_TBAT_MON_TIMER_REG_TBAT_MON_TIMER_Pos (16UL) /*!< TBAT_MON_TIMER (Bit 16)                              */
#define CHARGER_CHARGER_TBAT_MON_TIMER_REG_TBAT_MON_TIMER_Msk (0x3ff0000UL) /*!< TBAT_MON_TIMER (Bitfield-Mask: 0x3ff)         */
#define CHARGER_CHARGER_TBAT_MON_TIMER_REG_TBAT_MON_INTERVAL_Pos (0UL) /*!< TBAT_MON_INTERVAL (Bit 0)                          */
#define CHARGER_CHARGER_TBAT_MON_TIMER_REG_TBAT_MON_INTERVAL_Msk (0x3ffUL) /*!< TBAT_MON_INTERVAL (Bitfield-Mask: 0x3ff)       */
/* ==============================================  CHARGER_TDIE_COMP_TIMER_REG  ============================================== */
#define CHARGER_CHARGER_TDIE_COMP_TIMER_REG_TDIE_COMP_TIMER_Pos (16UL) /*!< TDIE_COMP_TIMER (Bit 16)                           */
#define CHARGER_CHARGER_TDIE_COMP_TIMER_REG_TDIE_COMP_TIMER_Msk (0x3ff0000UL) /*!< TDIE_COMP_TIMER (Bitfield-Mask: 0x3ff)      */
#define CHARGER_CHARGER_TDIE_COMP_TIMER_REG_TDIE_COMP_SETTLING_Pos (0UL) /*!< TDIE_COMP_SETTLING (Bit 0)                       */
#define CHARGER_CHARGER_TDIE_COMP_TIMER_REG_TDIE_COMP_SETTLING_Msk (0x3ffUL) /*!< TDIE_COMP_SETTLING (Bitfield-Mask: 0x3ff)    */
/* ==============================================  CHARGER_TEMPSET2_PARAM_REG  =============================================== */
#define CHARGER_CHARGER_TEMPSET2_PARAM_REG_TBAT_WARMER_Pos (18UL)   /*!< TBAT_WARMER (Bit 18)                                  */
#define CHARGER_CHARGER_TEMPSET2_PARAM_REG_TBAT_WARMER_Msk (0xfc0000UL) /*!< TBAT_WARMER (Bitfield-Mask: 0x3f)                 */
#define CHARGER_CHARGER_TEMPSET2_PARAM_REG_TBAT_WARM_Pos (12UL)     /*!< TBAT_WARM (Bit 12)                                    */
#define CHARGER_CHARGER_TEMPSET2_PARAM_REG_TBAT_WARM_Msk (0x3f000UL) /*!< TBAT_WARM (Bitfield-Mask: 0x3f)                      */
#define CHARGER_CHARGER_TEMPSET2_PARAM_REG_TBAT_COOL_Pos (6UL)      /*!< TBAT_COOL (Bit 6)                                     */
#define CHARGER_CHARGER_TEMPSET2_PARAM_REG_TBAT_COOL_Msk (0xfc0UL)  /*!< TBAT_COOL (Bitfield-Mask: 0x3f)                       */
#define CHARGER_CHARGER_TEMPSET2_PARAM_REG_TBAT_COOLER_Pos (0UL)    /*!< TBAT_COOLER (Bit 0)                                   */
#define CHARGER_CHARGER_TEMPSET2_PARAM_REG_TBAT_COOLER_Msk (0x3fUL) /*!< TBAT_COOLER (Bitfield-Mask: 0x3f)                     */
/* ===============================================  CHARGER_TEMPSET_PARAM_REG  =============================================== */
#define CHARGER_CHARGER_TEMPSET_PARAM_REG_TDIE_MAX_Pos (12UL)       /*!< TDIE_MAX (Bit 12)                                     */
#define CHARGER_CHARGER_TEMPSET_PARAM_REG_TDIE_MAX_Msk (0x7000UL)   /*!< TDIE_MAX (Bitfield-Mask: 0x07)                        */
#define CHARGER_CHARGER_TEMPSET_PARAM_REG_TBAT_HOT_Pos (6UL)        /*!< TBAT_HOT (Bit 6)                                      */
#define CHARGER_CHARGER_TEMPSET_PARAM_REG_TBAT_HOT_Msk (0xfc0UL)    /*!< TBAT_HOT (Bitfield-Mask: 0x3f)                        */
#define CHARGER_CHARGER_TEMPSET_PARAM_REG_TBAT_COLD_Pos (0UL)       /*!< TBAT_COLD (Bit 0)                                     */
#define CHARGER_CHARGER_TEMPSET_PARAM_REG_TBAT_COLD_Msk (0x3fUL)    /*!< TBAT_COLD (Bitfield-Mask: 0x3f)                       */
/* ==============================================  CHARGER_THOT_COMP_TIMER_REG  ============================================== */
#define CHARGER_CHARGER_THOT_COMP_TIMER_REG_THOT_COMP_TIMER_Pos (16UL) /*!< THOT_COMP_TIMER (Bit 16)                           */
#define CHARGER_CHARGER_THOT_COMP_TIMER_REG_THOT_COMP_TIMER_Msk (0x3ff0000UL) /*!< THOT_COMP_TIMER (Bitfield-Mask: 0x3ff)      */
#define CHARGER_CHARGER_THOT_COMP_TIMER_REG_THOT_COMP_SETTLING_Pos (0UL) /*!< THOT_COMP_SETTLING (Bit 0)                       */
#define CHARGER_CHARGER_THOT_COMP_TIMER_REG_THOT_COMP_SETTLING_Msk (0x3ffUL) /*!< THOT_COMP_SETTLING (Bitfield-Mask: 0x3ff)    */
/* ============================================  CHARGER_TOTAL_CHARGE_TIMER_REG  ============================================= */
#define CHARGER_CHARGER_TOTAL_CHARGE_TIMER_REG_TOTAL_CHARGE_TIMER_Pos (16UL) /*!< TOTAL_CHARGE_TIMER (Bit 16)                  */
#define CHARGER_CHARGER_TOTAL_CHARGE_TIMER_REG_TOTAL_CHARGE_TIMER_Msk (0xffff0000UL) /*!< TOTAL_CHARGE_TIMER (Bitfield-Mask: 0xffff) */
#define CHARGER_CHARGER_TOTAL_CHARGE_TIMER_REG_MAX_TOTAL_CHARGE_TIME_Pos (0UL) /*!< MAX_TOTAL_CHARGE_TIME (Bit 0)              */
#define CHARGER_CHARGER_TOTAL_CHARGE_TIMER_REG_MAX_TOTAL_CHARGE_TIME_Msk (0xffffUL) /*!< MAX_TOTAL_CHARGE_TIME (Bitfield-Mask: 0xffff) */
/* ==============================================  CHARGER_VBAT_COMP_TIMER_REG  ============================================== */
#define CHARGER_CHARGER_VBAT_COMP_TIMER_REG_VBAT_COMP_TIMER_Pos (16UL) /*!< VBAT_COMP_TIMER (Bit 16)                           */
#define CHARGER_CHARGER_VBAT_COMP_TIMER_REG_VBAT_COMP_TIMER_Msk (0x3ff0000UL) /*!< VBAT_COMP_TIMER (Bitfield-Mask: 0x3ff)      */
#define CHARGER_CHARGER_VBAT_COMP_TIMER_REG_VBAT_COMP_SETTLING_Pos (0UL) /*!< VBAT_COMP_SETTLING (Bit 0)                       */
#define CHARGER_CHARGER_VBAT_COMP_TIMER_REG_VBAT_COMP_SETTLING_Msk (0x3ffUL) /*!< VBAT_COMP_SETTLING (Bitfield-Mask: 0x3ff)    */
/* ===============================================  CHARGER_VOLTAGE_PARAM_REG  =============================================== */
#define CHARGER_CHARGER_VOLTAGE_PARAM_REG_V_OVP_Pos (18UL)          /*!< V_OVP (Bit 18)                                        */
#define CHARGER_CHARGER_VOLTAGE_PARAM_REG_V_OVP_Msk (0xfc0000UL)    /*!< V_OVP (Bitfield-Mask: 0x3f)                           */
#define CHARGER_CHARGER_VOLTAGE_PARAM_REG_V_REPLENISH_Pos (12UL)    /*!< V_REPLENISH (Bit 12)                                  */
#define CHARGER_CHARGER_VOLTAGE_PARAM_REG_V_REPLENISH_Msk (0x3f000UL) /*!< V_REPLENISH (Bitfield-Mask: 0x3f)                   */
#define CHARGER_CHARGER_VOLTAGE_PARAM_REG_V_PRECHARGE_Pos (6UL)     /*!< V_PRECHARGE (Bit 6)                                   */
#define CHARGER_CHARGER_VOLTAGE_PARAM_REG_V_PRECHARGE_Msk (0xfc0UL) /*!< V_PRECHARGE (Bitfield-Mask: 0x3f)                     */
#define CHARGER_CHARGER_VOLTAGE_PARAM_REG_V_CHARGE_Pos (0UL)        /*!< V_CHARGE (Bit 0)                                      */
#define CHARGER_CHARGER_VOLTAGE_PARAM_REG_V_CHARGE_Msk (0x3fUL)     /*!< V_CHARGE (Bitfield-Mask: 0x3f)                        */
/* ==============================================  CHARGER_VOLTAGE_STATUS_REG  =============================================== */
#define CHARGER_CHARGER_VOLTAGE_STATUS_REG_V_OVP_SET_Pos (18UL)     /*!< V_OVP_SET (Bit 18)                                    */
#define CHARGER_CHARGER_VOLTAGE_STATUS_REG_V_OVP_SET_Msk (0xfc0000UL) /*!< V_OVP_SET (Bitfield-Mask: 0x3f)                     */
#define CHARGER_CHARGER_VOLTAGE_STATUS_REG_V_REPLENISH_SET_Pos (12UL) /*!< V_REPLENISH_SET (Bit 12)                            */
#define CHARGER_CHARGER_VOLTAGE_STATUS_REG_V_REPLENISH_SET_Msk (0x3f000UL) /*!< V_REPLENISH_SET (Bitfield-Mask: 0x3f)          */
#define CHARGER_CHARGER_VOLTAGE_STATUS_REG_V_PRECHARGE_SET_Pos (6UL) /*!< V_PRECHARGE_SET (Bit 6)                              */
#define CHARGER_CHARGER_VOLTAGE_STATUS_REG_V_PRECHARGE_SET_Msk (0xfc0UL) /*!< V_PRECHARGE_SET (Bitfield-Mask: 0x3f)            */
#define CHARGER_CHARGER_VOLTAGE_STATUS_REG_V_CHARGE_SET_Pos (0UL)   /*!< V_CHARGE_SET (Bit 0)                                  */
#define CHARGER_CHARGER_VOLTAGE_STATUS_REG_V_CHARGE_SET_Msk (0x3fUL) /*!< V_CHARGE_SET (Bitfield-Mask: 0x3f)                   */
/* ==============================================  CHARGER_VOVP_COMP_TIMER_REG  ============================================== */
#define CHARGER_CHARGER_VOVP_COMP_TIMER_REG_OVP_INTERVAL_CHECK_TIMER_Pos (26UL) /*!< OVP_INTERVAL_CHECK_TIMER (Bit 26)         */
#define CHARGER_CHARGER_VOVP_COMP_TIMER_REG_OVP_INTERVAL_CHECK_TIMER_Msk (0xfc000000UL) /*!< OVP_INTERVAL_CHECK_TIMER (Bitfield-Mask: 0x3f) */
#define CHARGER_CHARGER_VOVP_COMP_TIMER_REG_VBAT_OVP_COMP_TIMER_Pos (16UL) /*!< VBAT_OVP_COMP_TIMER (Bit 16)                   */
#define CHARGER_CHARGER_VOVP_COMP_TIMER_REG_VBAT_OVP_COMP_TIMER_Msk (0x3ff0000UL) /*!< VBAT_OVP_COMP_TIMER (Bitfield-Mask: 0x3ff) */
#define CHARGER_CHARGER_VOVP_COMP_TIMER_REG_OVP_INTERVAL_CHECK_THRES_Pos (10UL) /*!< OVP_INTERVAL_CHECK_THRES (Bit 10)         */
#define CHARGER_CHARGER_VOVP_COMP_TIMER_REG_OVP_INTERVAL_CHECK_THRES_Msk (0xfc00UL) /*!< OVP_INTERVAL_CHECK_THRES (Bitfield-Mask: 0x3f) */
#define CHARGER_CHARGER_VOVP_COMP_TIMER_REG_VBAT_OVP_COMP_SETTLING_Pos (0UL) /*!< VBAT_OVP_COMP_SETTLING (Bit 0)               */
#define CHARGER_CHARGER_VOVP_COMP_TIMER_REG_VBAT_OVP_COMP_SETTLING_Msk (0x3ffUL) /*!< VBAT_OVP_COMP_SETTLING (Bitfield-Mask: 0x3ff) */


/* =========================================================================================================================== */
/* ================                                          CHG_DET                                          ================ */
/* =========================================================================================================================== */

/* =================================================  CHG_DET_ADC_CTRL_REG  ================================================== */
#define CHG_DET_CHG_DET_ADC_CTRL_REG_USB_DM_TO_ADC_EN_Pos (1UL)     /*!< USB_DM_TO_ADC_EN (Bit 1)                              */
#define CHG_DET_CHG_DET_ADC_CTRL_REG_USB_DM_TO_ADC_EN_Msk (0x2UL)   /*!< USB_DM_TO_ADC_EN (Bitfield-Mask: 0x01)                */
#define CHG_DET_CHG_DET_ADC_CTRL_REG_USB_DP_TO_ADC_EN_Pos (0UL)     /*!< USB_DP_TO_ADC_EN (Bit 0)                              */
#define CHG_DET_CHG_DET_ADC_CTRL_REG_USB_DP_TO_ADC_EN_Msk (0x1UL)   /*!< USB_DP_TO_ADC_EN (Bitfield-Mask: 0x01)                */
/* =================================================  CHG_DET_DCD_TIMER_REG  ================================================= */
#define CHG_DET_CHG_DET_DCD_TIMER_REG_DCD_TIMER_Pos (16UL)          /*!< DCD_TIMER (Bit 16)                                    */
#define CHG_DET_CHG_DET_DCD_TIMER_REG_DCD_TIMER_Msk (0x3ff0000UL)   /*!< DCD_TIMER (Bitfield-Mask: 0x3ff)                      */
#define CHG_DET_CHG_DET_DCD_TIMER_REG_DCD_TIMEOUT_THRES_Pos (0UL)   /*!< DCD_TIMEOUT_THRES (Bit 0)                             */
#define CHG_DET_CHG_DET_DCD_TIMER_REG_DCD_TIMEOUT_THRES_Msk (0x3ffUL) /*!< DCD_TIMEOUT_THRES (Bitfield-Mask: 0x3ff)            */
/* =================================================  CHG_DET_FSM_CTRL_REG  ================================================== */
#define CHG_DET_CHG_DET_FSM_CTRL_REG_CHG_DET_EN_Pos (0UL)           /*!< CHG_DET_EN (Bit 0)                                    */
#define CHG_DET_CHG_DET_FSM_CTRL_REG_CHG_DET_EN_Msk (0x1UL)         /*!< CHG_DET_EN (Bitfield-Mask: 0x01)                      */
/* ================================================  CHG_DET_FSM_STATUS_REG  ================================================= */
#define CHG_DET_CHG_DET_FSM_STATUS_REG_CHG_DET_STATE_Pos (9UL)      /*!< CHG_DET_STATE (Bit 9)                                 */
#define CHG_DET_CHG_DET_FSM_STATUS_REG_CHG_DET_STATE_Msk (0x1e00UL) /*!< CHG_DET_STATE (Bitfield-Mask: 0x0f)                   */
#define CHG_DET_CHG_DET_FSM_STATUS_REG_NO_CONTACT_DETECTED_Pos (8UL) /*!< NO_CONTACT_DETECTED (Bit 8)                          */
#define CHG_DET_CHG_DET_FSM_STATUS_REG_NO_CONTACT_DETECTED_Msk (0x100UL) /*!< NO_CONTACT_DETECTED (Bitfield-Mask: 0x01)        */
#define CHG_DET_CHG_DET_FSM_STATUS_REG_PORT_2P4AMP_DETECTED_Pos (7UL) /*!< PORT_2P4AMP_DETECTED (Bit 7)                        */
#define CHG_DET_CHG_DET_FSM_STATUS_REG_PORT_2P4AMP_DETECTED_Msk (0x80UL) /*!< PORT_2P4AMP_DETECTED (Bitfield-Mask: 0x01)       */
#define CHG_DET_CHG_DET_FSM_STATUS_REG_PORT_2AMP_DETECTED_Pos (6UL) /*!< PORT_2AMP_DETECTED (Bit 6)                            */
#define CHG_DET_CHG_DET_FSM_STATUS_REG_PORT_2AMP_DETECTED_Msk (0x40UL) /*!< PORT_2AMP_DETECTED (Bitfield-Mask: 0x01)           */
#define CHG_DET_CHG_DET_FSM_STATUS_REG_PORT_1AMP_DETECTED_Pos (5UL) /*!< PORT_1AMP_DETECTED (Bit 5)                            */
#define CHG_DET_CHG_DET_FSM_STATUS_REG_PORT_1AMP_DETECTED_Msk (0x20UL) /*!< PORT_1AMP_DETECTED (Bitfield-Mask: 0x01)           */
#define CHG_DET_CHG_DET_FSM_STATUS_REG_PS2_PROP_PORT_DETECTED_Pos (4UL) /*!< PS2_PROP_PORT_DETECTED (Bit 4)                    */
#define CHG_DET_CHG_DET_FSM_STATUS_REG_PS2_PROP_PORT_DETECTED_Msk (0x10UL) /*!< PS2_PROP_PORT_DETECTED (Bitfield-Mask: 0x01)   */
#define CHG_DET_CHG_DET_FSM_STATUS_REG_DCP_PORT_DETECTED_Pos (3UL)  /*!< DCP_PORT_DETECTED (Bit 3)                             */
#define CHG_DET_CHG_DET_FSM_STATUS_REG_DCP_PORT_DETECTED_Msk (0x8UL) /*!< DCP_PORT_DETECTED (Bitfield-Mask: 0x01)              */
#define CHG_DET_CHG_DET_FSM_STATUS_REG_CDP_PORT_DETECTED_Pos (2UL)  /*!< CDP_PORT_DETECTED (Bit 2)                             */
#define CHG_DET_CHG_DET_FSM_STATUS_REG_CDP_PORT_DETECTED_Msk (0x4UL) /*!< CDP_PORT_DETECTED (Bitfield-Mask: 0x01)              */
#define CHG_DET_CHG_DET_FSM_STATUS_REG_SDP_PORT_DETECTED_Pos (1UL)  /*!< SDP_PORT_DETECTED (Bit 1)                             */
#define CHG_DET_CHG_DET_FSM_STATUS_REG_SDP_PORT_DETECTED_Msk (0x2UL) /*!< SDP_PORT_DETECTED (Bitfield-Mask: 0x01)              */
#define CHG_DET_CHG_DET_FSM_STATUS_REG_DETECTION_COMPLETED_Pos (0UL) /*!< DETECTION_COMPLETED (Bit 0)                          */
#define CHG_DET_CHG_DET_FSM_STATUS_REG_DETECTION_COMPLETED_Msk (0x1UL) /*!< DETECTION_COMPLETED (Bitfield-Mask: 0x01)          */
/* =================================================  CHG_DET_IRQ_CLEAR_REG  ================================================= */
#define CHG_DET_CHG_DET_IRQ_CLEAR_REG_CHG_DET_IRQ_CLR_Pos (0UL)     /*!< CHG_DET_IRQ_CLR (Bit 0)                               */
#define CHG_DET_CHG_DET_IRQ_CLEAR_REG_CHG_DET_IRQ_CLR_Msk (0x1UL)   /*!< CHG_DET_IRQ_CLR (Bitfield-Mask: 0x01)                 */
/* =================================================  CHG_DET_IRQ_MASK_REG  ================================================== */
#define CHG_DET_CHG_DET_IRQ_MASK_REG_CHG_DET_IRQ_EN_Pos (0UL)       /*!< CHG_DET_IRQ_EN (Bit 0)                                */
#define CHG_DET_CHG_DET_IRQ_MASK_REG_CHG_DET_IRQ_EN_Msk (0x1UL)     /*!< CHG_DET_IRQ_EN (Bitfield-Mask: 0x01)                  */
/* ================================================  CHG_DET_IRQ_STATUS_REG  ================================================= */
#define CHG_DET_CHG_DET_IRQ_STATUS_REG_CHG_DET_IRQ_Pos (0UL)        /*!< CHG_DET_IRQ (Bit 0)                                   */
#define CHG_DET_CHG_DET_IRQ_STATUS_REG_CHG_DET_IRQ_Msk (0x1UL)      /*!< CHG_DET_IRQ (Bitfield-Mask: 0x01)                     */
/* ==================================================  CHG_DET_STATUS_REG  =================================================== */
#define CHG_DET_CHG_DET_STATUS_REG_USB_DM_VAL2_Pos (5UL)            /*!< USB_DM_VAL2 (Bit 5)                                   */
#define CHG_DET_CHG_DET_STATUS_REG_USB_DM_VAL2_Msk (0x20UL)         /*!< USB_DM_VAL2 (Bitfield-Mask: 0x01)                     */
#define CHG_DET_CHG_DET_STATUS_REG_USB_DP_VAL2_Pos (4UL)            /*!< USB_DP_VAL2 (Bit 4)                                   */
#define CHG_DET_CHG_DET_STATUS_REG_USB_DP_VAL2_Msk (0x10UL)         /*!< USB_DP_VAL2 (Bitfield-Mask: 0x01)                     */
#define CHG_DET_CHG_DET_STATUS_REG_USB_DM_VAL_Pos (3UL)             /*!< USB_DM_VAL (Bit 3)                                    */
#define CHG_DET_CHG_DET_STATUS_REG_USB_DM_VAL_Msk (0x8UL)           /*!< USB_DM_VAL (Bitfield-Mask: 0x01)                      */
#define CHG_DET_CHG_DET_STATUS_REG_USB_DP_VAL_Pos (2UL)             /*!< USB_DP_VAL (Bit 2)                                    */
#define CHG_DET_CHG_DET_STATUS_REG_USB_DP_VAL_Msk (0x4UL)           /*!< USB_DP_VAL (Bitfield-Mask: 0x01)                      */
#define CHG_DET_CHG_DET_STATUS_REG_USB_CHG_DET_Pos (1UL)            /*!< USB_CHG_DET (Bit 1)                                   */
#define CHG_DET_CHG_DET_STATUS_REG_USB_CHG_DET_Msk (0x2UL)          /*!< USB_CHG_DET (Bitfield-Mask: 0x01)                     */
#define CHG_DET_CHG_DET_STATUS_REG_USB_DCP_DET_Pos (0UL)            /*!< USB_DCP_DET (Bit 0)                                   */
#define CHG_DET_CHG_DET_STATUS_REG_USB_DCP_DET_Msk (0x1UL)          /*!< USB_DCP_DET (Bitfield-Mask: 0x01)                     */
/* ==================================================  CHG_DET_SW_CTRL_REG  ================================================== */
#define CHG_DET_CHG_DET_SW_CTRL_REG_IDM_SINK_ON_Pos (5UL)           /*!< IDM_SINK_ON (Bit 5)                                   */
#define CHG_DET_CHG_DET_SW_CTRL_REG_IDM_SINK_ON_Msk (0x20UL)        /*!< IDM_SINK_ON (Bitfield-Mask: 0x01)                     */
#define CHG_DET_CHG_DET_SW_CTRL_REG_IDP_SINK_ON_Pos (4UL)           /*!< IDP_SINK_ON (Bit 4)                                   */
#define CHG_DET_CHG_DET_SW_CTRL_REG_IDP_SINK_ON_Msk (0x10UL)        /*!< IDP_SINK_ON (Bitfield-Mask: 0x01)                     */
#define CHG_DET_CHG_DET_SW_CTRL_REG_VDM_SRC_ON_Pos (3UL)            /*!< VDM_SRC_ON (Bit 3)                                    */
#define CHG_DET_CHG_DET_SW_CTRL_REG_VDM_SRC_ON_Msk (0x8UL)          /*!< VDM_SRC_ON (Bitfield-Mask: 0x01)                      */
#define CHG_DET_CHG_DET_SW_CTRL_REG_VDP_SRC_ON_Pos (2UL)            /*!< VDP_SRC_ON (Bit 2)                                    */
#define CHG_DET_CHG_DET_SW_CTRL_REG_VDP_SRC_ON_Msk (0x4UL)          /*!< VDP_SRC_ON (Bitfield-Mask: 0x01)                      */
#define CHG_DET_CHG_DET_SW_CTRL_REG_IDP_SRC_ON_Pos (1UL)            /*!< IDP_SRC_ON (Bit 1)                                    */
#define CHG_DET_CHG_DET_SW_CTRL_REG_IDP_SRC_ON_Msk (0x2UL)          /*!< IDP_SRC_ON (Bitfield-Mask: 0x01)                      */
#define CHG_DET_CHG_DET_SW_CTRL_REG_USB_CHARGE_ON_Pos (0UL)         /*!< USB_CHARGE_ON (Bit 0)                                 */
#define CHG_DET_CHG_DET_SW_CTRL_REG_USB_CHARGE_ON_Msk (0x1UL)       /*!< USB_CHARGE_ON (Bitfield-Mask: 0x01)                   */
/* ===================================================  CHG_DET_TIMER_REG  =================================================== */
#define CHG_DET_CHG_DET_TIMER_REG_CHG_DET_TIMER_Pos (16UL)          /*!< CHG_DET_TIMER (Bit 16)                                */
#define CHG_DET_CHG_DET_TIMER_REG_CHG_DET_TIMER_Msk (0xff0000UL)    /*!< CHG_DET_TIMER (Bitfield-Mask: 0xff)                   */
#define CHG_DET_CHG_DET_TIMER_REG_CHG_DET_TIMER_THRES_Pos (0UL)     /*!< CHG_DET_TIMER_THRES (Bit 0)                           */
#define CHG_DET_CHG_DET_TIMER_REG_CHG_DET_TIMER_THRES_Msk (0xffUL)  /*!< CHG_DET_TIMER_THRES (Bitfield-Mask: 0xff)             */


/* =========================================================================================================================== */
/* ================                                       CHIP_VERSION                                        ================ */
/* =========================================================================================================================== */

/* =====================================================  CHIP_ID1_REG  ====================================================== */
#define CHIP_VERSION_CHIP_ID1_REG_CHIP_ID1_Pos (0UL)                /*!< CHIP_ID1 (Bit 0)                                      */
#define CHIP_VERSION_CHIP_ID1_REG_CHIP_ID1_Msk (0xffUL)             /*!< CHIP_ID1 (Bitfield-Mask: 0xff)                        */
/* =====================================================  CHIP_ID2_REG  ====================================================== */
#define CHIP_VERSION_CHIP_ID2_REG_CHIP_ID2_Pos (0UL)                /*!< CHIP_ID2 (Bit 0)                                      */
#define CHIP_VERSION_CHIP_ID2_REG_CHIP_ID2_Msk (0xffUL)             /*!< CHIP_ID2 (Bitfield-Mask: 0xff)                        */
/* =====================================================  CHIP_ID3_REG  ====================================================== */
#define CHIP_VERSION_CHIP_ID3_REG_CHIP_ID3_Pos (0UL)                /*!< CHIP_ID3 (Bit 0)                                      */
#define CHIP_VERSION_CHIP_ID3_REG_CHIP_ID3_Msk (0xffUL)             /*!< CHIP_ID3 (Bitfield-Mask: 0xff)                        */
/* =====================================================  CHIP_ID4_REG  ====================================================== */
#define CHIP_VERSION_CHIP_ID4_REG_CHIP_ID4_Pos (0UL)                /*!< CHIP_ID4 (Bit 0)                                      */
#define CHIP_VERSION_CHIP_ID4_REG_CHIP_ID4_Msk (0xffUL)             /*!< CHIP_ID4 (Bitfield-Mask: 0xff)                        */
/* ===================================================  CHIP_REVISION_REG  =================================================== */
#define CHIP_VERSION_CHIP_REVISION_REG_CHIP_REVISION_Pos (0UL)      /*!< CHIP_REVISION (Bit 0)                                 */
#define CHIP_VERSION_CHIP_REVISION_REG_CHIP_REVISION_Msk (0xffUL)   /*!< CHIP_REVISION (Bitfield-Mask: 0xff)                   */
/* =====================================================  CHIP_SWC_REG  ====================================================== */
#define CHIP_VERSION_CHIP_SWC_REG_CHIP_SWC_Pos (0UL)                /*!< CHIP_SWC (Bit 0)                                      */
#define CHIP_VERSION_CHIP_SWC_REG_CHIP_SWC_Msk (0xfUL)              /*!< CHIP_SWC (Bitfield-Mask: 0x0f)                        */
/* ====================================================  CHIP_TEST1_REG  ===================================================== */
#define CHIP_VERSION_CHIP_TEST1_REG_CHIP_LAYOUT_REVISION_Pos (0UL)  /*!< CHIP_LAYOUT_REVISION (Bit 0)                          */
#define CHIP_VERSION_CHIP_TEST1_REG_CHIP_LAYOUT_REVISION_Msk (0xffUL) /*!< CHIP_LAYOUT_REVISION (Bitfield-Mask: 0xff)          */
/* ====================================================  CHIP_TEST2_REG  ===================================================== */
#define CHIP_VERSION_CHIP_TEST2_REG_CHIP_METAL_OPTION_Pos (0UL)     /*!< CHIP_METAL_OPTION (Bit 0)                             */
#define CHIP_VERSION_CHIP_TEST2_REG_CHIP_METAL_OPTION_Msk (0xfUL)   /*!< CHIP_METAL_OPTION (Bitfield-Mask: 0x0f)               */


/* =========================================================================================================================== */
/* ================                                          CRG_AUD                                          ================ */
/* =========================================================================================================================== */

/* ======================================================  PCM_DIV_REG  ====================================================== */
#define CRG_AUD_PCM_DIV_REG_PCM_SRC_SEL_Pos (13UL)                  /*!< PCM_SRC_SEL (Bit 13)                                  */
#define CRG_AUD_PCM_DIV_REG_PCM_SRC_SEL_Msk (0x2000UL)              /*!< PCM_SRC_SEL (Bitfield-Mask: 0x01)                     */
#define CRG_AUD_PCM_DIV_REG_CLK_PCM_EN_Pos (12UL)                   /*!< CLK_PCM_EN (Bit 12)                                   */
#define CRG_AUD_PCM_DIV_REG_CLK_PCM_EN_Msk (0x1000UL)               /*!< CLK_PCM_EN (Bitfield-Mask: 0x01)                      */
#define CRG_AUD_PCM_DIV_REG_PCM_DIV_Pos   (0UL)                     /*!< PCM_DIV (Bit 0)                                       */
#define CRG_AUD_PCM_DIV_REG_PCM_DIV_Msk   (0xfffUL)                 /*!< PCM_DIV (Bitfield-Mask: 0xfff)                        */
/* =====================================================  PCM_FDIV_REG  ====================================================== */
#define CRG_AUD_PCM_FDIV_REG_PCM_FDIV_Pos (0UL)                     /*!< PCM_FDIV (Bit 0)                                      */
#define CRG_AUD_PCM_FDIV_REG_PCM_FDIV_Msk (0xffffUL)                /*!< PCM_FDIV (Bitfield-Mask: 0xffff)                      */
/* ======================================================  PDM_DIV_REG  ====================================================== */
#define CRG_AUD_PDM_DIV_REG_PDM_MASTER_MODE_Pos (9UL)               /*!< PDM_MASTER_MODE (Bit 9)                               */
#define CRG_AUD_PDM_DIV_REG_PDM_MASTER_MODE_Msk (0x200UL)           /*!< PDM_MASTER_MODE (Bitfield-Mask: 0x01)                 */
#define CRG_AUD_PDM_DIV_REG_CLK_PDM_EN_Pos (8UL)                    /*!< CLK_PDM_EN (Bit 8)                                    */
#define CRG_AUD_PDM_DIV_REG_CLK_PDM_EN_Msk (0x100UL)                /*!< CLK_PDM_EN (Bitfield-Mask: 0x01)                      */
#define CRG_AUD_PDM_DIV_REG_PDM_DIV_Pos   (0UL)                     /*!< PDM_DIV (Bit 0)                                       */
#define CRG_AUD_PDM_DIV_REG_PDM_DIV_Msk   (0xffUL)                  /*!< PDM_DIV (Bitfield-Mask: 0xff)                         */
/* ======================================================  SRC_DIV_REG  ====================================================== */
#define CRG_AUD_SRC_DIV_REG_CLK_SRC2_EN_Pos (17UL)                  /*!< CLK_SRC2_EN (Bit 17)                                  */
#define CRG_AUD_SRC_DIV_REG_CLK_SRC2_EN_Msk (0x20000UL)             /*!< CLK_SRC2_EN (Bitfield-Mask: 0x01)                     */
#define CRG_AUD_SRC_DIV_REG_CLK_SRC_EN_Pos (16UL)                   /*!< CLK_SRC_EN (Bit 16)                                   */
#define CRG_AUD_SRC_DIV_REG_CLK_SRC_EN_Msk (0x10000UL)              /*!< CLK_SRC_EN (Bitfield-Mask: 0x01)                      */
#define CRG_AUD_SRC_DIV_REG_SRC2_DIV_Pos  (8UL)                     /*!< SRC2_DIV (Bit 8)                                      */
#define CRG_AUD_SRC_DIV_REG_SRC2_DIV_Msk  (0xff00UL)                /*!< SRC2_DIV (Bitfield-Mask: 0xff)                        */
#define CRG_AUD_SRC_DIV_REG_SRC_DIV_Pos   (0UL)                     /*!< SRC_DIV (Bit 0)                                       */
#define CRG_AUD_SRC_DIV_REG_SRC_DIV_Msk   (0xffUL)                  /*!< SRC_DIV (Bitfield-Mask: 0xff)                         */


/* =========================================================================================================================== */
/* ================                                         CRG_CTRL                                          ================ */
/* =========================================================================================================================== */

/* ====================================================  CLK_PDCTRL_REG  ===================================================== */
#define CRG_CTRL_CLK_PDCTRL_REG_EMMC_INV_TX_CLK_Pos (13UL)          /*!< EMMC_INV_TX_CLK (Bit 13)                              */
#define CRG_CTRL_CLK_PDCTRL_REG_EMMC_INV_TX_CLK_Msk (0x2000UL)      /*!< EMMC_INV_TX_CLK (Bitfield-Mask: 0x01)                 */
#define CRG_CTRL_CLK_PDCTRL_REG_EMMC_INV_RX_CLK_Pos (12UL)          /*!< EMMC_INV_RX_CLK (Bit 12)                              */
#define CRG_CTRL_CLK_PDCTRL_REG_EMMC_INV_RX_CLK_Msk (0x1000UL)      /*!< EMMC_INV_RX_CLK (Bitfield-Mask: 0x01)                 */
#define CRG_CTRL_CLK_PDCTRL_REG_EMMC_ENABLE_Pos (11UL)              /*!< EMMC_ENABLE (Bit 11)                                  */
#define CRG_CTRL_CLK_PDCTRL_REG_EMMC_ENABLE_Msk (0x800UL)           /*!< EMMC_ENABLE (Bitfield-Mask: 0x01)                     */
#define CRG_CTRL_CLK_PDCTRL_REG_EMMC_CLK_DIV_Pos (7UL)              /*!< EMMC_CLK_DIV (Bit 7)                                  */
#define CRG_CTRL_CLK_PDCTRL_REG_EMMC_CLK_DIV_Msk (0x780UL)          /*!< EMMC_CLK_DIV (Bitfield-Mask: 0x0f)                    */


/* =========================================================================================================================== */
/* ================                                          CRG_GPU                                          ================ */
/* =========================================================================================================================== */

/* ======================================================  CLK_GPU_REG  ====================================================== */
#define CRG_GPU_CLK_GPU_REG_GPU_ENABLE_Pos (0UL)                    /*!< GPU_ENABLE (Bit 0)                                    */
#define CRG_GPU_CLK_GPU_REG_GPU_ENABLE_Msk (0x1UL)                  /*!< GPU_ENABLE (Bitfield-Mask: 0x01)                      */


/* =========================================================================================================================== */
/* ================                                          CRG_SNC                                          ================ */
/* =========================================================================================================================== */

/* ======================================================  CLK_SNC_REG  ====================================================== */
#define CRG_SNC_CLK_SNC_REG_I3C_CLK_SEL_Pos (17UL)                  /*!< I3C_CLK_SEL (Bit 17)                                  */
#define CRG_SNC_CLK_SNC_REG_I3C_CLK_SEL_Msk (0x20000UL)             /*!< I3C_CLK_SEL (Bitfield-Mask: 0x01)                     */
#define CRG_SNC_CLK_SNC_REG_I3C_ENABLE_Pos (16UL)                   /*!< I3C_ENABLE (Bit 16)                                   */
#define CRG_SNC_CLK_SNC_REG_I3C_ENABLE_Msk (0x10000UL)              /*!< I3C_ENABLE (Bitfield-Mask: 0x01)                      */
#define CRG_SNC_CLK_SNC_REG_I2C3_CLK_SEL_Pos (15UL)                 /*!< I2C3_CLK_SEL (Bit 15)                                 */
#define CRG_SNC_CLK_SNC_REG_I2C3_CLK_SEL_Msk (0x8000UL)             /*!< I2C3_CLK_SEL (Bitfield-Mask: 0x01)                    */
#define CRG_SNC_CLK_SNC_REG_I2C3_ENABLE_Pos (14UL)                  /*!< I2C3_ENABLE (Bit 14)                                  */
#define CRG_SNC_CLK_SNC_REG_I2C3_ENABLE_Msk (0x4000UL)              /*!< I2C3_ENABLE (Bitfield-Mask: 0x01)                     */
#define CRG_SNC_CLK_SNC_REG_I2C2_CLK_SEL_Pos (13UL)                 /*!< I2C2_CLK_SEL (Bit 13)                                 */
#define CRG_SNC_CLK_SNC_REG_I2C2_CLK_SEL_Msk (0x2000UL)             /*!< I2C2_CLK_SEL (Bitfield-Mask: 0x01)                    */
#define CRG_SNC_CLK_SNC_REG_I2C2_ENABLE_Pos (12UL)                  /*!< I2C2_ENABLE (Bit 12)                                  */
#define CRG_SNC_CLK_SNC_REG_I2C2_ENABLE_Msk (0x1000UL)              /*!< I2C2_ENABLE (Bitfield-Mask: 0x01)                     */
#define CRG_SNC_CLK_SNC_REG_I2C_CLK_SEL_Pos (11UL)                  /*!< I2C_CLK_SEL (Bit 11)                                  */
#define CRG_SNC_CLK_SNC_REG_I2C_CLK_SEL_Msk (0x800UL)               /*!< I2C_CLK_SEL (Bitfield-Mask: 0x01)                     */
#define CRG_SNC_CLK_SNC_REG_I2C_ENABLE_Pos (10UL)                   /*!< I2C_ENABLE (Bit 10)                                   */
#define CRG_SNC_CLK_SNC_REG_I2C_ENABLE_Msk (0x400UL)                /*!< I2C_ENABLE (Bitfield-Mask: 0x01)                      */
#define CRG_SNC_CLK_SNC_REG_SPI2_CLK_SEL_Pos (9UL)                  /*!< SPI2_CLK_SEL (Bit 9)                                  */
#define CRG_SNC_CLK_SNC_REG_SPI2_CLK_SEL_Msk (0x200UL)              /*!< SPI2_CLK_SEL (Bitfield-Mask: 0x01)                    */
#define CRG_SNC_CLK_SNC_REG_SPI2_ENABLE_Pos (8UL)                   /*!< SPI2_ENABLE (Bit 8)                                   */
#define CRG_SNC_CLK_SNC_REG_SPI2_ENABLE_Msk (0x100UL)               /*!< SPI2_ENABLE (Bitfield-Mask: 0x01)                     */
#define CRG_SNC_CLK_SNC_REG_SPI_CLK_SEL_Pos (7UL)                   /*!< SPI_CLK_SEL (Bit 7)                                   */
#define CRG_SNC_CLK_SNC_REG_SPI_CLK_SEL_Msk (0x80UL)                /*!< SPI_CLK_SEL (Bitfield-Mask: 0x01)                     */
#define CRG_SNC_CLK_SNC_REG_SPI_ENABLE_Pos (6UL)                    /*!< SPI_ENABLE (Bit 6)                                    */
#define CRG_SNC_CLK_SNC_REG_SPI_ENABLE_Msk (0x40UL)                 /*!< SPI_ENABLE (Bitfield-Mask: 0x01)                      */
#define CRG_SNC_CLK_SNC_REG_UART3_CLK_SEL_Pos (5UL)                 /*!< UART3_CLK_SEL (Bit 5)                                 */
#define CRG_SNC_CLK_SNC_REG_UART3_CLK_SEL_Msk (0x20UL)              /*!< UART3_CLK_SEL (Bitfield-Mask: 0x01)                   */
#define CRG_SNC_CLK_SNC_REG_UART3_ENABLE_Pos (4UL)                  /*!< UART3_ENABLE (Bit 4)                                  */
#define CRG_SNC_CLK_SNC_REG_UART3_ENABLE_Msk (0x10UL)               /*!< UART3_ENABLE (Bitfield-Mask: 0x01)                    */
#define CRG_SNC_CLK_SNC_REG_UART2_CLK_SEL_Pos (3UL)                 /*!< UART2_CLK_SEL (Bit 3)                                 */
#define CRG_SNC_CLK_SNC_REG_UART2_CLK_SEL_Msk (0x8UL)               /*!< UART2_CLK_SEL (Bitfield-Mask: 0x01)                   */
#define CRG_SNC_CLK_SNC_REG_UART2_ENABLE_Pos (2UL)                  /*!< UART2_ENABLE (Bit 2)                                  */
#define CRG_SNC_CLK_SNC_REG_UART2_ENABLE_Msk (0x4UL)                /*!< UART2_ENABLE (Bitfield-Mask: 0x01)                    */
#define CRG_SNC_CLK_SNC_REG_UART_CLK_SEL_Pos (1UL)                  /*!< UART_CLK_SEL (Bit 1)                                  */
#define CRG_SNC_CLK_SNC_REG_UART_CLK_SEL_Msk (0x2UL)                /*!< UART_CLK_SEL (Bitfield-Mask: 0x01)                    */
#define CRG_SNC_CLK_SNC_REG_UART_ENABLE_Pos (0UL)                   /*!< UART_ENABLE (Bit 0)                                   */
#define CRG_SNC_CLK_SNC_REG_UART_ENABLE_Msk (0x1UL)                 /*!< UART_ENABLE (Bitfield-Mask: 0x01)                     */
/* ===================================================  RESET_CLK_SNC_REG  =================================================== */
#define CRG_SNC_RESET_CLK_SNC_REG_I3C_CLK_SEL_Pos (17UL)            /*!< I3C_CLK_SEL (Bit 17)                                  */
#define CRG_SNC_RESET_CLK_SNC_REG_I3C_CLK_SEL_Msk (0x20000UL)       /*!< I3C_CLK_SEL (Bitfield-Mask: 0x01)                     */
#define CRG_SNC_RESET_CLK_SNC_REG_I3C_ENABLE_Pos (16UL)             /*!< I3C_ENABLE (Bit 16)                                   */
#define CRG_SNC_RESET_CLK_SNC_REG_I3C_ENABLE_Msk (0x10000UL)        /*!< I3C_ENABLE (Bitfield-Mask: 0x01)                      */
#define CRG_SNC_RESET_CLK_SNC_REG_I2C3_CLK_SEL_Pos (15UL)           /*!< I2C3_CLK_SEL (Bit 15)                                 */
#define CRG_SNC_RESET_CLK_SNC_REG_I2C3_CLK_SEL_Msk (0x8000UL)       /*!< I2C3_CLK_SEL (Bitfield-Mask: 0x01)                    */
#define CRG_SNC_RESET_CLK_SNC_REG_I2C3_ENABLE_Pos (14UL)            /*!< I2C3_ENABLE (Bit 14)                                  */
#define CRG_SNC_RESET_CLK_SNC_REG_I2C3_ENABLE_Msk (0x4000UL)        /*!< I2C3_ENABLE (Bitfield-Mask: 0x01)                     */
#define CRG_SNC_RESET_CLK_SNC_REG_I2C2_CLK_SEL_Pos (13UL)           /*!< I2C2_CLK_SEL (Bit 13)                                 */
#define CRG_SNC_RESET_CLK_SNC_REG_I2C2_CLK_SEL_Msk (0x2000UL)       /*!< I2C2_CLK_SEL (Bitfield-Mask: 0x01)                    */
#define CRG_SNC_RESET_CLK_SNC_REG_I2C2_ENABLE_Pos (12UL)            /*!< I2C2_ENABLE (Bit 12)                                  */
#define CRG_SNC_RESET_CLK_SNC_REG_I2C2_ENABLE_Msk (0x1000UL)        /*!< I2C2_ENABLE (Bitfield-Mask: 0x01)                     */
#define CRG_SNC_RESET_CLK_SNC_REG_I2C_CLK_SEL_Pos (11UL)            /*!< I2C_CLK_SEL (Bit 11)                                  */
#define CRG_SNC_RESET_CLK_SNC_REG_I2C_CLK_SEL_Msk (0x800UL)         /*!< I2C_CLK_SEL (Bitfield-Mask: 0x01)                     */
#define CRG_SNC_RESET_CLK_SNC_REG_I2C_ENABLE_Pos (10UL)             /*!< I2C_ENABLE (Bit 10)                                   */
#define CRG_SNC_RESET_CLK_SNC_REG_I2C_ENABLE_Msk (0x400UL)          /*!< I2C_ENABLE (Bitfield-Mask: 0x01)                      */
#define CRG_SNC_RESET_CLK_SNC_REG_SPI2_CLK_SEL_Pos (9UL)            /*!< SPI2_CLK_SEL (Bit 9)                                  */
#define CRG_SNC_RESET_CLK_SNC_REG_SPI2_CLK_SEL_Msk (0x200UL)        /*!< SPI2_CLK_SEL (Bitfield-Mask: 0x01)                    */
#define CRG_SNC_RESET_CLK_SNC_REG_SPI2_ENABLE_Pos (8UL)             /*!< SPI2_ENABLE (Bit 8)                                   */
#define CRG_SNC_RESET_CLK_SNC_REG_SPI2_ENABLE_Msk (0x100UL)         /*!< SPI2_ENABLE (Bitfield-Mask: 0x01)                     */
#define CRG_SNC_RESET_CLK_SNC_REG_SPI_CLK_SEL_Pos (7UL)             /*!< SPI_CLK_SEL (Bit 7)                                   */
#define CRG_SNC_RESET_CLK_SNC_REG_SPI_CLK_SEL_Msk (0x80UL)          /*!< SPI_CLK_SEL (Bitfield-Mask: 0x01)                     */
#define CRG_SNC_RESET_CLK_SNC_REG_SPI_ENABLE_Pos (6UL)              /*!< SPI_ENABLE (Bit 6)                                    */
#define CRG_SNC_RESET_CLK_SNC_REG_SPI_ENABLE_Msk (0x40UL)           /*!< SPI_ENABLE (Bitfield-Mask: 0x01)                      */
#define CRG_SNC_RESET_CLK_SNC_REG_UART3_CLK_SEL_Pos (5UL)           /*!< UART3_CLK_SEL (Bit 5)                                 */
#define CRG_SNC_RESET_CLK_SNC_REG_UART3_CLK_SEL_Msk (0x20UL)        /*!< UART3_CLK_SEL (Bitfield-Mask: 0x01)                   */
#define CRG_SNC_RESET_CLK_SNC_REG_UART3_ENABLE_Pos (4UL)            /*!< UART3_ENABLE (Bit 4)                                  */
#define CRG_SNC_RESET_CLK_SNC_REG_UART3_ENABLE_Msk (0x10UL)         /*!< UART3_ENABLE (Bitfield-Mask: 0x01)                    */
#define CRG_SNC_RESET_CLK_SNC_REG_UART2_CLK_SEL_Pos (3UL)           /*!< UART2_CLK_SEL (Bit 3)                                 */
#define CRG_SNC_RESET_CLK_SNC_REG_UART2_CLK_SEL_Msk (0x8UL)         /*!< UART2_CLK_SEL (Bitfield-Mask: 0x01)                   */
#define CRG_SNC_RESET_CLK_SNC_REG_UART2_ENABLE_Pos (2UL)            /*!< UART2_ENABLE (Bit 2)                                  */
#define CRG_SNC_RESET_CLK_SNC_REG_UART2_ENABLE_Msk (0x4UL)          /*!< UART2_ENABLE (Bitfield-Mask: 0x01)                    */
#define CRG_SNC_RESET_CLK_SNC_REG_UART_CLK_SEL_Pos (1UL)            /*!< UART_CLK_SEL (Bit 1)                                  */
#define CRG_SNC_RESET_CLK_SNC_REG_UART_CLK_SEL_Msk (0x2UL)          /*!< UART_CLK_SEL (Bitfield-Mask: 0x01)                    */
#define CRG_SNC_RESET_CLK_SNC_REG_UART_ENABLE_Pos (0UL)             /*!< UART_ENABLE (Bit 0)                                   */
#define CRG_SNC_RESET_CLK_SNC_REG_UART_ENABLE_Msk (0x1UL)           /*!< UART_ENABLE (Bitfield-Mask: 0x01)                     */
/* ====================================================  SET_CLK_SNC_REG  ==================================================== */
#define CRG_SNC_SET_CLK_SNC_REG_I3C_CLK_SEL_Pos (17UL)              /*!< I3C_CLK_SEL (Bit 17)                                  */
#define CRG_SNC_SET_CLK_SNC_REG_I3C_CLK_SEL_Msk (0x20000UL)         /*!< I3C_CLK_SEL (Bitfield-Mask: 0x01)                     */
#define CRG_SNC_SET_CLK_SNC_REG_I3C_ENABLE_Pos (16UL)               /*!< I3C_ENABLE (Bit 16)                                   */
#define CRG_SNC_SET_CLK_SNC_REG_I3C_ENABLE_Msk (0x10000UL)          /*!< I3C_ENABLE (Bitfield-Mask: 0x01)                      */
#define CRG_SNC_SET_CLK_SNC_REG_I2C3_CLK_SEL_Pos (15UL)             /*!< I2C3_CLK_SEL (Bit 15)                                 */
#define CRG_SNC_SET_CLK_SNC_REG_I2C3_CLK_SEL_Msk (0x8000UL)         /*!< I2C3_CLK_SEL (Bitfield-Mask: 0x01)                    */
#define CRG_SNC_SET_CLK_SNC_REG_I2C3_ENABLE_Pos (14UL)              /*!< I2C3_ENABLE (Bit 14)                                  */
#define CRG_SNC_SET_CLK_SNC_REG_I2C3_ENABLE_Msk (0x4000UL)          /*!< I2C3_ENABLE (Bitfield-Mask: 0x01)                     */
#define CRG_SNC_SET_CLK_SNC_REG_I2C2_CLK_SEL_Pos (13UL)             /*!< I2C2_CLK_SEL (Bit 13)                                 */
#define CRG_SNC_SET_CLK_SNC_REG_I2C2_CLK_SEL_Msk (0x2000UL)         /*!< I2C2_CLK_SEL (Bitfield-Mask: 0x01)                    */
#define CRG_SNC_SET_CLK_SNC_REG_I2C2_ENABLE_Pos (12UL)              /*!< I2C2_ENABLE (Bit 12)                                  */
#define CRG_SNC_SET_CLK_SNC_REG_I2C2_ENABLE_Msk (0x1000UL)          /*!< I2C2_ENABLE (Bitfield-Mask: 0x01)                     */
#define CRG_SNC_SET_CLK_SNC_REG_I2C_CLK_SEL_Pos (11UL)              /*!< I2C_CLK_SEL (Bit 11)                                  */
#define CRG_SNC_SET_CLK_SNC_REG_I2C_CLK_SEL_Msk (0x800UL)           /*!< I2C_CLK_SEL (Bitfield-Mask: 0x01)                     */
#define CRG_SNC_SET_CLK_SNC_REG_I2C_ENABLE_Pos (10UL)               /*!< I2C_ENABLE (Bit 10)                                   */
#define CRG_SNC_SET_CLK_SNC_REG_I2C_ENABLE_Msk (0x400UL)            /*!< I2C_ENABLE (Bitfield-Mask: 0x01)                      */
#define CRG_SNC_SET_CLK_SNC_REG_SPI2_CLK_SEL_Pos (9UL)              /*!< SPI2_CLK_SEL (Bit 9)                                  */
#define CRG_SNC_SET_CLK_SNC_REG_SPI2_CLK_SEL_Msk (0x200UL)          /*!< SPI2_CLK_SEL (Bitfield-Mask: 0x01)                    */
#define CRG_SNC_SET_CLK_SNC_REG_SPI2_ENABLE_Pos (8UL)               /*!< SPI2_ENABLE (Bit 8)                                   */
#define CRG_SNC_SET_CLK_SNC_REG_SPI2_ENABLE_Msk (0x100UL)           /*!< SPI2_ENABLE (Bitfield-Mask: 0x01)                     */
#define CRG_SNC_SET_CLK_SNC_REG_SPI_CLK_SEL_Pos (7UL)               /*!< SPI_CLK_SEL (Bit 7)                                   */
#define CRG_SNC_SET_CLK_SNC_REG_SPI_CLK_SEL_Msk (0x80UL)            /*!< SPI_CLK_SEL (Bitfield-Mask: 0x01)                     */
#define CRG_SNC_SET_CLK_SNC_REG_SPI_ENABLE_Pos (6UL)                /*!< SPI_ENABLE (Bit 6)                                    */
#define CRG_SNC_SET_CLK_SNC_REG_SPI_ENABLE_Msk (0x40UL)             /*!< SPI_ENABLE (Bitfield-Mask: 0x01)                      */
#define CRG_SNC_SET_CLK_SNC_REG_UART3_CLK_SEL_Pos (5UL)             /*!< UART3_CLK_SEL (Bit 5)                                 */
#define CRG_SNC_SET_CLK_SNC_REG_UART3_CLK_SEL_Msk (0x20UL)          /*!< UART3_CLK_SEL (Bitfield-Mask: 0x01)                   */
#define CRG_SNC_SET_CLK_SNC_REG_UART3_ENABLE_Pos (4UL)              /*!< UART3_ENABLE (Bit 4)                                  */
#define CRG_SNC_SET_CLK_SNC_REG_UART3_ENABLE_Msk (0x10UL)           /*!< UART3_ENABLE (Bitfield-Mask: 0x01)                    */
#define CRG_SNC_SET_CLK_SNC_REG_UART2_CLK_SEL_Pos (3UL)             /*!< UART2_CLK_SEL (Bit 3)                                 */
#define CRG_SNC_SET_CLK_SNC_REG_UART2_CLK_SEL_Msk (0x8UL)           /*!< UART2_CLK_SEL (Bitfield-Mask: 0x01)                   */
#define CRG_SNC_SET_CLK_SNC_REG_UART2_ENABLE_Pos (2UL)              /*!< UART2_ENABLE (Bit 2)                                  */
#define CRG_SNC_SET_CLK_SNC_REG_UART2_ENABLE_Msk (0x4UL)            /*!< UART2_ENABLE (Bitfield-Mask: 0x01)                    */
#define CRG_SNC_SET_CLK_SNC_REG_UART_CLK_SEL_Pos (1UL)              /*!< UART_CLK_SEL (Bit 1)                                  */
#define CRG_SNC_SET_CLK_SNC_REG_UART_CLK_SEL_Msk (0x2UL)            /*!< UART_CLK_SEL (Bitfield-Mask: 0x01)                    */
#define CRG_SNC_SET_CLK_SNC_REG_UART_ENABLE_Pos (0UL)               /*!< UART_ENABLE (Bit 0)                                   */
#define CRG_SNC_SET_CLK_SNC_REG_UART_ENABLE_Msk (0x1UL)             /*!< UART_ENABLE (Bitfield-Mask: 0x01)                     */


/* =========================================================================================================================== */
/* ================                                          CRG_SYS                                          ================ */
/* =========================================================================================================================== */

/* =====================================================  BATCHECK_REG  ====================================================== */
#define CRG_SYS_BATCHECK_REG_BATCHECK_LOAD_ENABLE_Pos (7UL)         /*!< BATCHECK_LOAD_ENABLE (Bit 7)                          */
#define CRG_SYS_BATCHECK_REG_BATCHECK_LOAD_ENABLE_Msk (0x80UL)      /*!< BATCHECK_LOAD_ENABLE (Bitfield-Mask: 0x01)            */
#define CRG_SYS_BATCHECK_REG_BATCHECK_ILOAD_Pos (4UL)               /*!< BATCHECK_ILOAD (Bit 4)                                */
#define CRG_SYS_BATCHECK_REG_BATCHECK_ILOAD_Msk (0x70UL)            /*!< BATCHECK_ILOAD (Bitfield-Mask: 0x07)                  */
#define CRG_SYS_BATCHECK_REG_BATCHECK_TRIM_Pos (0UL)                /*!< BATCHECK_TRIM (Bit 0)                                 */
#define CRG_SYS_BATCHECK_REG_BATCHECK_TRIM_Msk (0xfUL)              /*!< BATCHECK_TRIM (Bitfield-Mask: 0x0f)                   */
/* ======================================================  CLK_SYS_REG  ====================================================== */
#define CRG_SYS_CLK_SYS_REG_SPI3_CLK_SEL_Pos (7UL)                  /*!< SPI3_CLK_SEL (Bit 7)                                  */
#define CRG_SYS_CLK_SYS_REG_SPI3_CLK_SEL_Msk (0x80UL)               /*!< SPI3_CLK_SEL (Bitfield-Mask: 0x01)                    */
#define CRG_SYS_CLK_SYS_REG_SPI3_ENABLE_Pos (6UL)                   /*!< SPI3_ENABLE (Bit 6)                                   */
#define CRG_SYS_CLK_SYS_REG_SPI3_ENABLE_Msk (0x40UL)                /*!< SPI3_ENABLE (Bitfield-Mask: 0x01)                     */
#define CRG_SYS_CLK_SYS_REG_CLK_CHG_EN_Pos (5UL)                    /*!< CLK_CHG_EN (Bit 5)                                    */
#define CRG_SYS_CLK_SYS_REG_CLK_CHG_EN_Msk (0x20UL)                 /*!< CLK_CHG_EN (Bitfield-Mask: 0x01)                      */
#define CRG_SYS_CLK_SYS_REG_LCD_RESET_REQ_Pos (4UL)                 /*!< LCD_RESET_REQ (Bit 4)                                 */
#define CRG_SYS_CLK_SYS_REG_LCD_RESET_REQ_Msk (0x10UL)              /*!< LCD_RESET_REQ (Bitfield-Mask: 0x01)                   */
#define CRG_SYS_CLK_SYS_REG_LCD_CLK_SEL_Pos (1UL)                   /*!< LCD_CLK_SEL (Bit 1)                                   */
#define CRG_SYS_CLK_SYS_REG_LCD_CLK_SEL_Msk (0x2UL)                 /*!< LCD_CLK_SEL (Bitfield-Mask: 0x01)                     */
#define CRG_SYS_CLK_SYS_REG_LCD_ENABLE_Pos (0UL)                    /*!< LCD_ENABLE (Bit 0)                                    */
#define CRG_SYS_CLK_SYS_REG_LCD_ENABLE_Msk (0x1UL)                  /*!< LCD_ENABLE (Bitfield-Mask: 0x01)                      */
/* ===================================================  RESET_CLK_SYS_REG  =================================================== */
#define CRG_SYS_RESET_CLK_SYS_REG_SPI3_CLK_SEL_Pos (7UL)            /*!< SPI3_CLK_SEL (Bit 7)                                  */
#define CRG_SYS_RESET_CLK_SYS_REG_SPI3_CLK_SEL_Msk (0x80UL)         /*!< SPI3_CLK_SEL (Bitfield-Mask: 0x01)                    */
#define CRG_SYS_RESET_CLK_SYS_REG_SPI3_ENABLE_Pos (6UL)             /*!< SPI3_ENABLE (Bit 6)                                   */
#define CRG_SYS_RESET_CLK_SYS_REG_SPI3_ENABLE_Msk (0x40UL)          /*!< SPI3_ENABLE (Bitfield-Mask: 0x01)                     */
#define CRG_SYS_RESET_CLK_SYS_REG_CLK_CHG_EN_Pos (5UL)              /*!< CLK_CHG_EN (Bit 5)                                    */
#define CRG_SYS_RESET_CLK_SYS_REG_CLK_CHG_EN_Msk (0x20UL)           /*!< CLK_CHG_EN (Bitfield-Mask: 0x01)                      */
#define CRG_SYS_RESET_CLK_SYS_REG_LCD_RESET_REQ_Pos (4UL)           /*!< LCD_RESET_REQ (Bit 4)                                 */
#define CRG_SYS_RESET_CLK_SYS_REG_LCD_RESET_REQ_Msk (0x10UL)        /*!< LCD_RESET_REQ (Bitfield-Mask: 0x01)                   */
#define CRG_SYS_RESET_CLK_SYS_REG_LCD_CLK_SEL_Pos (1UL)             /*!< LCD_CLK_SEL (Bit 1)                                   */
#define CRG_SYS_RESET_CLK_SYS_REG_LCD_CLK_SEL_Msk (0x2UL)           /*!< LCD_CLK_SEL (Bitfield-Mask: 0x01)                     */
#define CRG_SYS_RESET_CLK_SYS_REG_LCD_ENABLE_Pos (0UL)              /*!< LCD_ENABLE (Bit 0)                                    */
#define CRG_SYS_RESET_CLK_SYS_REG_LCD_ENABLE_Msk (0x1UL)            /*!< LCD_ENABLE (Bitfield-Mask: 0x01)                      */
/* ====================================================  SET_CLK_SYS_REG  ==================================================== */
#define CRG_SYS_SET_CLK_SYS_REG_SPI3_CLK_SEL_Pos (7UL)              /*!< SPI3_CLK_SEL (Bit 7)                                  */
#define CRG_SYS_SET_CLK_SYS_REG_SPI3_CLK_SEL_Msk (0x80UL)           /*!< SPI3_CLK_SEL (Bitfield-Mask: 0x01)                    */
#define CRG_SYS_SET_CLK_SYS_REG_SPI3_ENABLE_Pos (6UL)               /*!< SPI3_ENABLE (Bit 6)                                   */
#define CRG_SYS_SET_CLK_SYS_REG_SPI3_ENABLE_Msk (0x40UL)            /*!< SPI3_ENABLE (Bitfield-Mask: 0x01)                     */
#define CRG_SYS_SET_CLK_SYS_REG_CLK_CHG_EN_Pos (5UL)                /*!< CLK_CHG_EN (Bit 5)                                    */
#define CRG_SYS_SET_CLK_SYS_REG_CLK_CHG_EN_Msk (0x20UL)             /*!< CLK_CHG_EN (Bitfield-Mask: 0x01)                      */
#define CRG_SYS_SET_CLK_SYS_REG_LCD_RESET_REQ_Pos (4UL)             /*!< LCD_RESET_REQ (Bit 4)                                 */
#define CRG_SYS_SET_CLK_SYS_REG_LCD_RESET_REQ_Msk (0x10UL)          /*!< LCD_RESET_REQ (Bitfield-Mask: 0x01)                   */
#define CRG_SYS_SET_CLK_SYS_REG_LCD_CLK_SEL_Pos (1UL)               /*!< LCD_CLK_SEL (Bit 1)                                   */
#define CRG_SYS_SET_CLK_SYS_REG_LCD_CLK_SEL_Msk (0x2UL)             /*!< LCD_CLK_SEL (Bitfield-Mask: 0x01)                     */
#define CRG_SYS_SET_CLK_SYS_REG_LCD_ENABLE_Pos (0UL)                /*!< LCD_ENABLE (Bit 0)                                    */
#define CRG_SYS_SET_CLK_SYS_REG_LCD_ENABLE_Msk (0x1UL)              /*!< LCD_ENABLE (Bitfield-Mask: 0x01)                      */


/* =========================================================================================================================== */
/* ================                                          CRG_TOP                                          ================ */
/* =========================================================================================================================== */

/* ====================================================  ANA_STATUS_REG  ===================================================== */
#define CRG_TOP_ANA_STATUS_REG_FLAG_LDO_V30_COMBINED_OK_Pos (29UL)  /*!< FLAG_LDO_V30_COMBINED_OK (Bit 29)                     */
#define CRG_TOP_ANA_STATUS_REG_FLAG_LDO_V30_COMBINED_OK_Msk (0x20000000UL) /*!< FLAG_LDO_V30_COMBINED_OK (Bitfield-Mask: 0x01) */
#define CRG_TOP_ANA_STATUS_REG_XOR_DOUT_WAKEUP_PADS_Pos (28UL)      /*!< XOR_DOUT_WAKEUP_PADS (Bit 28)                         */
#define CRG_TOP_ANA_STATUS_REG_XOR_DOUT_WAKEUP_PADS_Msk (0x10000000UL) /*!< XOR_DOUT_WAKEUP_PADS (Bitfield-Mask: 0x01)         */
#define CRG_TOP_ANA_STATUS_REG_VBUS_AVAILABLE_Pos (27UL)            /*!< VBUS_AVAILABLE (Bit 27)                               */
#define CRG_TOP_ANA_STATUS_REG_VBUS_AVAILABLE_Msk (0x8000000UL)     /*!< VBUS_AVAILABLE (Bitfield-Mask: 0x01)                  */
#define CRG_TOP_ANA_STATUS_REG_FLAG_ADC_LDO_OK_Pos (26UL)           /*!< FLAG_ADC_LDO_OK (Bit 26)                              */
#define CRG_TOP_ANA_STATUS_REG_FLAG_ADC_LDO_OK_Msk (0x4000000UL)    /*!< FLAG_ADC_LDO_OK (Bitfield-Mask: 0x01)                 */
#define CRG_TOP_ANA_STATUS_REG_FLAG_IBIAS_TRIM_Pos (25UL)           /*!< FLAG_IBIAS_TRIM (Bit 25)                              */
#define CRG_TOP_ANA_STATUS_REG_FLAG_IBIAS_TRIM_Msk (0x2000000UL)    /*!< FLAG_IBIAS_TRIM (Bitfield-Mask: 0x01)                 */
#define CRG_TOP_ANA_STATUS_REG_BOD_VIN_NOK_Pos (24UL)               /*!< BOD_VIN_NOK (Bit 24)                                  */
#define CRG_TOP_ANA_STATUS_REG_BOD_VIN_NOK_Msk (0x1000000UL)        /*!< BOD_VIN_NOK (Bitfield-Mask: 0x01)                     */
#define CRG_TOP_ANA_STATUS_REG_BG_OK_Pos  (23UL)                    /*!< BG_OK (Bit 23)                                        */
#define CRG_TOP_ANA_STATUS_REG_BG_OK_Msk  (0x800000UL)              /*!< BG_OK (Bitfield-Mask: 0x01)                           */
#define CRG_TOP_ANA_STATUS_REG_BOOST_DCDC_VLED_OK_Pos (22UL)        /*!< BOOST_DCDC_VLED_OK (Bit 22)                           */
#define CRG_TOP_ANA_STATUS_REG_BOOST_DCDC_VLED_OK_Msk (0x400000UL)  /*!< BOOST_DCDC_VLED_OK (Bitfield-Mask: 0x01)              */
#define CRG_TOP_ANA_STATUS_REG_LDO_VSYS_HIGH_TEMP_Pos (21UL)        /*!< LDO_VSYS_HIGH_TEMP (Bit 21)                           */
#define CRG_TOP_ANA_STATUS_REG_LDO_VSYS_HIGH_TEMP_Msk (0x200000UL)  /*!< LDO_VSYS_HIGH_TEMP (Bitfield-Mask: 0x01)              */
#define CRG_TOP_ANA_STATUS_REG_VBAT_VSYS_STATE_Pos (19UL)           /*!< VBAT_VSYS_STATE (Bit 19)                              */
#define CRG_TOP_ANA_STATUS_REG_VBAT_VSYS_STATE_Msk (0x180000UL)     /*!< VBAT_VSYS_STATE (Bitfield-Mask: 0x03)                 */
#define CRG_TOP_ANA_STATUS_REG_LDO_VSYS_HEAD_LIM_Pos (18UL)         /*!< LDO_VSYS_HEAD_LIM (Bit 18)                            */
#define CRG_TOP_ANA_STATUS_REG_LDO_VSYS_HEAD_LIM_Msk (0x40000UL)    /*!< LDO_VSYS_HEAD_LIM (Bitfield-Mask: 0x01)               */
#define CRG_TOP_ANA_STATUS_REG_LDO_VSYS_CURR_LIM_Pos (17UL)         /*!< LDO_VSYS_CURR_LIM (Bit 17)                            */
#define CRG_TOP_ANA_STATUS_REG_LDO_VSYS_CURR_LIM_Msk (0x20000UL)    /*!< LDO_VSYS_CURR_LIM (Bitfield-Mask: 0x01)               */
#define CRG_TOP_ANA_STATUS_REG_LDO_VSYS_LIM_Pos (16UL)              /*!< LDO_VSYS_LIM (Bit 16)                                 */
#define CRG_TOP_ANA_STATUS_REG_LDO_VSYS_LIM_Msk (0x10000UL)         /*!< LDO_VSYS_LIM (Bitfield-Mask: 0x01)                    */
#define CRG_TOP_ANA_STATUS_REG_LDO_VSYS_OK_Pos (15UL)               /*!< LDO_VSYS_OK (Bit 15)                                  */
#define CRG_TOP_ANA_STATUS_REG_LDO_VSYS_OK_Msk (0x8000UL)           /*!< LDO_VSYS_OK (Bitfield-Mask: 0x01)                     */
#define CRG_TOP_ANA_STATUS_REG_LDO_V30_OK_Pos (13UL)                /*!< LDO_V30_OK (Bit 13)                                   */
#define CRG_TOP_ANA_STATUS_REG_LDO_V30_OK_Msk (0x2000UL)            /*!< LDO_V30_OK (Bitfield-Mask: 0x01)                      */
#define CRG_TOP_ANA_STATUS_REG_SWITCH_V18F_OK_Pos (12UL)            /*!< SWITCH_V18F_OK (Bit 12)                               */
#define CRG_TOP_ANA_STATUS_REG_SWITCH_V18F_OK_Msk (0x1000UL)        /*!< SWITCH_V18F_OK (Bitfield-Mask: 0x01)                  */
#define CRG_TOP_ANA_STATUS_REG_BUCK_DCDC_V18P_OK_Pos (11UL)         /*!< BUCK_DCDC_V18P_OK (Bit 11)                            */
#define CRG_TOP_ANA_STATUS_REG_BUCK_DCDC_V18P_OK_Msk (0x800UL)      /*!< BUCK_DCDC_V18P_OK (Bitfield-Mask: 0x01)               */
#define CRG_TOP_ANA_STATUS_REG_BUCK_DCDC_V18_OK_Pos (10UL)          /*!< BUCK_DCDC_V18_OK (Bit 10)                             */
#define CRG_TOP_ANA_STATUS_REG_BUCK_DCDC_V18_OK_Msk (0x400UL)       /*!< BUCK_DCDC_V18_OK (Bitfield-Mask: 0x01)                */
#define CRG_TOP_ANA_STATUS_REG_BUCK_DCDC_V14_OK_Pos (9UL)           /*!< BUCK_DCDC_V14_OK (Bit 9)                              */
#define CRG_TOP_ANA_STATUS_REG_BUCK_DCDC_V14_OK_Msk (0x200UL)       /*!< BUCK_DCDC_V14_OK (Bitfield-Mask: 0x01)                */
#define CRG_TOP_ANA_STATUS_REG_BUCK_DCDC_V12_OK_Pos (8UL)           /*!< BUCK_DCDC_V12_OK (Bit 8)                              */
#define CRG_TOP_ANA_STATUS_REG_BUCK_DCDC_V12_OK_Msk (0x100UL)       /*!< BUCK_DCDC_V12_OK (Bitfield-Mask: 0x01)                */
#define CRG_TOP_ANA_STATUS_REG_COMP_VBUS_PLUGIN_Pos (7UL)           /*!< COMP_VBUS_PLUGIN (Bit 7)                              */
#define CRG_TOP_ANA_STATUS_REG_COMP_VBUS_PLUGIN_Msk (0x80UL)        /*!< COMP_VBUS_PLUGIN (Bitfield-Mask: 0x01)                */
#define CRG_TOP_ANA_STATUS_REG_COMP_VSYS_NEAR_VLED_Pos (6UL)        /*!< COMP_VSYS_NEAR_VLED (Bit 6)                           */
#define CRG_TOP_ANA_STATUS_REG_COMP_VSYS_NEAR_VLED_Msk (0x40UL)     /*!< COMP_VSYS_NEAR_VLED (Bitfield-Mask: 0x01)             */
#define CRG_TOP_ANA_STATUS_REG_COMP_VBUS_ABOVE_VSYS_Pos (5UL)       /*!< COMP_VBUS_ABOVE_VSYS (Bit 5)                          */
#define CRG_TOP_ANA_STATUS_REG_COMP_VBUS_ABOVE_VSYS_Msk (0x20UL)    /*!< COMP_VBUS_ABOVE_VSYS (Bitfield-Mask: 0x01)            */
#define CRG_TOP_ANA_STATUS_REG_COMP_VSYS_OK_Pos (4UL)               /*!< COMP_VSYS_OK (Bit 4)                                  */
#define CRG_TOP_ANA_STATUS_REG_COMP_VSYS_OK_Msk (0x10UL)            /*!< COMP_VSYS_OK (Bitfield-Mask: 0x01)                    */
#define CRG_TOP_ANA_STATUS_REG_COMP_VBAT_OK_Pos (3UL)               /*!< COMP_VBAT_OK (Bit 3)                                  */
#define CRG_TOP_ANA_STATUS_REG_COMP_VBAT_OK_Msk (0x8UL)             /*!< COMP_VBAT_OK (Bitfield-Mask: 0x01)                    */
#define CRG_TOP_ANA_STATUS_REG_COMP_VBUS_OK_Pos (2UL)               /*!< COMP_VBUS_OK (Bit 2)                                  */
#define CRG_TOP_ANA_STATUS_REG_COMP_VBUS_OK_Msk (0x4UL)             /*!< COMP_VBUS_OK (Bitfield-Mask: 0x01)                    */
#define CRG_TOP_ANA_STATUS_REG_POR_VSYS_OK_Pos (1UL)                /*!< POR_VSYS_OK (Bit 1)                                   */
#define CRG_TOP_ANA_STATUS_REG_POR_VSYS_OK_Msk (0x2UL)              /*!< POR_VSYS_OK (Bitfield-Mask: 0x01)                     */
#define CRG_TOP_ANA_STATUS_REG_POR_V30_OK_Pos (0UL)                 /*!< POR_V30_OK (Bit 0)                                    */
#define CRG_TOP_ANA_STATUS_REG_POR_V30_OK_Msk (0x1UL)               /*!< POR_V30_OK (Bitfield-Mask: 0x01)                      */
/* ======================================================  BANDGAP_REG  ====================================================== */
#define CRG_TOP_BANDGAP_REG_EN_BGR_TCCOMP_Pos (15UL)                /*!< EN_BGR_TCCOMP (Bit 15)                                */
#define CRG_TOP_BANDGAP_REG_EN_BGR_TCCOMP_Msk (0x8000UL)            /*!< EN_BGR_TCCOMP (Bitfield-Mask: 0x01)                   */
#define CRG_TOP_BANDGAP_REG_BANDGAP_ENABLE_CLAMP_Pos (12UL)         /*!< BANDGAP_ENABLE_CLAMP (Bit 12)                         */
#define CRG_TOP_BANDGAP_REG_BANDGAP_ENABLE_CLAMP_Msk (0x1000UL)     /*!< BANDGAP_ENABLE_CLAMP (Bitfield-Mask: 0x01)            */
#define CRG_TOP_BANDGAP_REG_BGR_TRIM_Pos  (6UL)                     /*!< BGR_TRIM (Bit 6)                                      */
#define CRG_TOP_BANDGAP_REG_BGR_TRIM_Msk  (0xfc0UL)                 /*!< BGR_TRIM (Bitfield-Mask: 0x3f)                        */
#define CRG_TOP_BANDGAP_REG_SYSRAM_LPMX_Pos (5UL)                   /*!< SYSRAM_LPMX (Bit 5)                                   */
#define CRG_TOP_BANDGAP_REG_SYSRAM_LPMX_Msk (0x20UL)                /*!< SYSRAM_LPMX (Bitfield-Mask: 0x01)                     */
#define CRG_TOP_BANDGAP_REG_BGR_ITRIM_Pos (0UL)                     /*!< BGR_ITRIM (Bit 0)                                     */
#define CRG_TOP_BANDGAP_REG_BGR_ITRIM_Msk (0x1fUL)                  /*!< BGR_ITRIM (Bitfield-Mask: 0x1f)                       */
/* ===================================================  BIAS_VREF_SEL_REG  =================================================== */
#define CRG_TOP_BIAS_VREF_SEL_REG_BIAS_VREF_RF2_SEL_Pos (4UL)       /*!< BIAS_VREF_RF2_SEL (Bit 4)                             */
#define CRG_TOP_BIAS_VREF_SEL_REG_BIAS_VREF_RF2_SEL_Msk (0xf0UL)    /*!< BIAS_VREF_RF2_SEL (Bitfield-Mask: 0x0f)               */
#define CRG_TOP_BIAS_VREF_SEL_REG_BIAS_VREF_RF1_SEL_Pos (0UL)       /*!< BIAS_VREF_RF1_SEL (Bit 0)                             */
#define CRG_TOP_BIAS_VREF_SEL_REG_BIAS_VREF_RF1_SEL_Msk (0xfUL)     /*!< BIAS_VREF_RF1_SEL (Bitfield-Mask: 0x0f)               */
/* =====================================================  BOD_CTRL_REG  ====================================================== */
#define CRG_TOP_BOD_CTRL_REG_BOD_VBUS_RST_EN_Pos (18UL)             /*!< BOD_VBUS_RST_EN (Bit 18)                              */
#define CRG_TOP_BOD_CTRL_REG_BOD_VBUS_RST_EN_Msk (0x40000UL)        /*!< BOD_VBUS_RST_EN (Bitfield-Mask: 0x01)                 */
#define CRG_TOP_BOD_CTRL_REG_BOD_VBAT_RST_EN_Pos (17UL)             /*!< BOD_VBAT_RST_EN (Bit 17)                              */
#define CRG_TOP_BOD_CTRL_REG_BOD_VBAT_RST_EN_Msk (0x20000UL)        /*!< BOD_VBAT_RST_EN (Bitfield-Mask: 0x01)                 */
#define CRG_TOP_BOD_CTRL_REG_BOD_VSYS_RST_EN_Pos (15UL)             /*!< BOD_VSYS_RST_EN (Bit 15)                              */
#define CRG_TOP_BOD_CTRL_REG_BOD_VSYS_RST_EN_Msk (0x8000UL)         /*!< BOD_VSYS_RST_EN (Bitfield-Mask: 0x01)                 */
#define CRG_TOP_BOD_CTRL_REG_BOD_V18F_RST_EN_Pos (14UL)             /*!< BOD_V18F_RST_EN (Bit 14)                              */
#define CRG_TOP_BOD_CTRL_REG_BOD_V18F_RST_EN_Msk (0x4000UL)         /*!< BOD_V18F_RST_EN (Bitfield-Mask: 0x01)                 */
#define CRG_TOP_BOD_CTRL_REG_BOD_V18P_RST_EN_Pos (13UL)             /*!< BOD_V18P_RST_EN (Bit 13)                              */
#define CRG_TOP_BOD_CTRL_REG_BOD_V18P_RST_EN_Msk (0x2000UL)         /*!< BOD_V18P_RST_EN (Bitfield-Mask: 0x01)                 */
#define CRG_TOP_BOD_CTRL_REG_BOD_V18_RST_EN_Pos (12UL)              /*!< BOD_V18_RST_EN (Bit 12)                               */
#define CRG_TOP_BOD_CTRL_REG_BOD_V18_RST_EN_Msk (0x1000UL)          /*!< BOD_V18_RST_EN (Bitfield-Mask: 0x01)                  */
#define CRG_TOP_BOD_CTRL_REG_BOD_V14_RST_EN_Pos (11UL)              /*!< BOD_V14_RST_EN (Bit 11)                               */
#define CRG_TOP_BOD_CTRL_REG_BOD_V14_RST_EN_Msk (0x800UL)           /*!< BOD_V14_RST_EN (Bitfield-Mask: 0x01)                  */
#define CRG_TOP_BOD_CTRL_REG_BOD_V12_RST_EN_Pos (10UL)              /*!< BOD_V12_RST_EN (Bit 10)                               */
#define CRG_TOP_BOD_CTRL_REG_BOD_V12_RST_EN_Msk (0x400UL)           /*!< BOD_V12_RST_EN (Bitfield-Mask: 0x01)                  */
#define CRG_TOP_BOD_CTRL_REG_BOD_VBUS_EN_Pos (9UL)                  /*!< BOD_VBUS_EN (Bit 9)                                   */
#define CRG_TOP_BOD_CTRL_REG_BOD_VBUS_EN_Msk (0x200UL)              /*!< BOD_VBUS_EN (Bitfield-Mask: 0x01)                     */
#define CRG_TOP_BOD_CTRL_REG_BOD_VBAT_EN_Pos (8UL)                  /*!< BOD_VBAT_EN (Bit 8)                                   */
#define CRG_TOP_BOD_CTRL_REG_BOD_VBAT_EN_Msk (0x100UL)              /*!< BOD_VBAT_EN (Bitfield-Mask: 0x01)                     */
#define CRG_TOP_BOD_CTRL_REG_BOD_VSYS_EN_Pos (6UL)                  /*!< BOD_VSYS_EN (Bit 6)                                   */
#define CRG_TOP_BOD_CTRL_REG_BOD_VSYS_EN_Msk (0x40UL)               /*!< BOD_VSYS_EN (Bitfield-Mask: 0x01)                     */
#define CRG_TOP_BOD_CTRL_REG_BOD_V18F_EN_Pos (5UL)                  /*!< BOD_V18F_EN (Bit 5)                                   */
#define CRG_TOP_BOD_CTRL_REG_BOD_V18F_EN_Msk (0x20UL)               /*!< BOD_V18F_EN (Bitfield-Mask: 0x01)                     */
#define CRG_TOP_BOD_CTRL_REG_BOD_V18P_EN_Pos (4UL)                  /*!< BOD_V18P_EN (Bit 4)                                   */
#define CRG_TOP_BOD_CTRL_REG_BOD_V18P_EN_Msk (0x10UL)               /*!< BOD_V18P_EN (Bitfield-Mask: 0x01)                     */
#define CRG_TOP_BOD_CTRL_REG_BOD_V18_EN_Pos (3UL)                   /*!< BOD_V18_EN (Bit 3)                                    */
#define CRG_TOP_BOD_CTRL_REG_BOD_V18_EN_Msk (0x8UL)                 /*!< BOD_V18_EN (Bitfield-Mask: 0x01)                      */
#define CRG_TOP_BOD_CTRL_REG_BOD_V14_EN_Pos (2UL)                   /*!< BOD_V14_EN (Bit 2)                                    */
#define CRG_TOP_BOD_CTRL_REG_BOD_V14_EN_Msk (0x4UL)                 /*!< BOD_V14_EN (Bitfield-Mask: 0x01)                      */
#define CRG_TOP_BOD_CTRL_REG_BOD_V12_EN_Pos (1UL)                   /*!< BOD_V12_EN (Bit 1)                                    */
#define CRG_TOP_BOD_CTRL_REG_BOD_V12_EN_Msk (0x2UL)                 /*!< BOD_V12_EN (Bitfield-Mask: 0x01)                      */
#define CRG_TOP_BOD_CTRL_REG_BOD_STATUS_CLEAR_Pos (0UL)             /*!< BOD_STATUS_CLEAR (Bit 0)                              */
#define CRG_TOP_BOD_CTRL_REG_BOD_STATUS_CLEAR_Msk (0x1UL)           /*!< BOD_STATUS_CLEAR (Bitfield-Mask: 0x01)                */
/* ====================================================  BOD_STATUS_REG  ===================================================== */
#define CRG_TOP_BOD_STATUS_REG_BOD_VBUS_Pos (8UL)                   /*!< BOD_VBUS (Bit 8)                                      */
#define CRG_TOP_BOD_STATUS_REG_BOD_VBUS_Msk (0x100UL)               /*!< BOD_VBUS (Bitfield-Mask: 0x01)                        */
#define CRG_TOP_BOD_STATUS_REG_BOD_VBAT_Pos (7UL)                   /*!< BOD_VBAT (Bit 7)                                      */
#define CRG_TOP_BOD_STATUS_REG_BOD_VBAT_Msk (0x80UL)                /*!< BOD_VBAT (Bitfield-Mask: 0x01)                        */
#define CRG_TOP_BOD_STATUS_REG_BOD_VSYS_Pos (5UL)                   /*!< BOD_VSYS (Bit 5)                                      */
#define CRG_TOP_BOD_STATUS_REG_BOD_VSYS_Msk (0x20UL)                /*!< BOD_VSYS (Bitfield-Mask: 0x01)                        */
#define CRG_TOP_BOD_STATUS_REG_BOD_V18F_Pos (4UL)                   /*!< BOD_V18F (Bit 4)                                      */
#define CRG_TOP_BOD_STATUS_REG_BOD_V18F_Msk (0x10UL)                /*!< BOD_V18F (Bitfield-Mask: 0x01)                        */
#define CRG_TOP_BOD_STATUS_REG_BOD_V18P_Pos (3UL)                   /*!< BOD_V18P (Bit 3)                                      */
#define CRG_TOP_BOD_STATUS_REG_BOD_V18P_Msk (0x8UL)                 /*!< BOD_V18P (Bitfield-Mask: 0x01)                        */
#define CRG_TOP_BOD_STATUS_REG_BOD_V18_Pos (2UL)                    /*!< BOD_V18 (Bit 2)                                       */
#define CRG_TOP_BOD_STATUS_REG_BOD_V18_Msk (0x4UL)                  /*!< BOD_V18 (Bitfield-Mask: 0x01)                         */
#define CRG_TOP_BOD_STATUS_REG_BOD_V14_Pos (1UL)                    /*!< BOD_V14 (Bit 1)                                       */
#define CRG_TOP_BOD_STATUS_REG_BOD_V14_Msk (0x2UL)                  /*!< BOD_V14 (Bitfield-Mask: 0x01)                         */
#define CRG_TOP_BOD_STATUS_REG_BOD_V12_Pos (0UL)                    /*!< BOD_V12 (Bit 0)                                       */
#define CRG_TOP_BOD_STATUS_REG_BOD_V12_Msk (0x1UL)                  /*!< BOD_V12 (Bitfield-Mask: 0x01)                         */
/* =====================================================  CLK_AMBA_REG  ====================================================== */
#define CRG_TOP_CLK_AMBA_REG_OQSPI_PULLUP_ENABLE_Pos (20UL)         /*!< OQSPI_PULLUP_ENABLE (Bit 20)                          */
#define CRG_TOP_CLK_AMBA_REG_OQSPI_PULLUP_ENABLE_Msk (0x100000UL)   /*!< OQSPI_PULLUP_ENABLE (Bitfield-Mask: 0x01)             */
#define CRG_TOP_CLK_AMBA_REG_OQSPI_GPIO_MODE_Pos (19UL)             /*!< OQSPI_GPIO_MODE (Bit 19)                              */
#define CRG_TOP_CLK_AMBA_REG_OQSPI_GPIO_MODE_Msk (0x80000UL)        /*!< OQSPI_GPIO_MODE (Bitfield-Mask: 0x01)                 */
#define CRG_TOP_CLK_AMBA_REG_QSPIC2_ENABLE_Pos (18UL)               /*!< QSPIC2_ENABLE (Bit 18)                                */
#define CRG_TOP_CLK_AMBA_REG_QSPIC2_ENABLE_Msk (0x40000UL)          /*!< QSPIC2_ENABLE (Bitfield-Mask: 0x01)                   */
#define CRG_TOP_CLK_AMBA_REG_QSPIC2_DIV_Pos (16UL)                  /*!< QSPIC2_DIV (Bit 16)                                   */
#define CRG_TOP_CLK_AMBA_REG_QSPIC2_DIV_Msk (0x30000UL)             /*!< QSPIC2_DIV (Bitfield-Mask: 0x03)                      */
#define CRG_TOP_CLK_AMBA_REG_QSPIC_ENABLE_Pos (15UL)                /*!< QSPIC_ENABLE (Bit 15)                                 */
#define CRG_TOP_CLK_AMBA_REG_QSPIC_ENABLE_Msk (0x8000UL)            /*!< QSPIC_ENABLE (Bitfield-Mask: 0x01)                    */
#define CRG_TOP_CLK_AMBA_REG_QSPIC_DIV_Pos (13UL)                   /*!< QSPIC_DIV (Bit 13)                                    */
#define CRG_TOP_CLK_AMBA_REG_QSPIC_DIV_Msk (0x6000UL)               /*!< QSPIC_DIV (Bitfield-Mask: 0x03)                       */
#define CRG_TOP_CLK_AMBA_REG_OQSPIF_ENABLE_Pos (12UL)               /*!< OQSPIF_ENABLE (Bit 12)                                */
#define CRG_TOP_CLK_AMBA_REG_OQSPIF_ENABLE_Msk (0x1000UL)           /*!< OQSPIF_ENABLE (Bitfield-Mask: 0x01)                   */
#define CRG_TOP_CLK_AMBA_REG_OQSPIF_DIV_Pos (10UL)                  /*!< OQSPIF_DIV (Bit 10)                                   */
#define CRG_TOP_CLK_AMBA_REG_OQSPIF_DIV_Msk (0xc00UL)               /*!< OQSPIF_DIV (Bitfield-Mask: 0x03)                      */
#define CRG_TOP_CLK_AMBA_REG_OTP_ENABLE_Pos (9UL)                   /*!< OTP_ENABLE (Bit 9)                                    */
#define CRG_TOP_CLK_AMBA_REG_OTP_ENABLE_Msk (0x200UL)               /*!< OTP_ENABLE (Bitfield-Mask: 0x01)                      */
#define CRG_TOP_CLK_AMBA_REG_AES_CLK_ENABLE_Pos (8UL)               /*!< AES_CLK_ENABLE (Bit 8)                                */
#define CRG_TOP_CLK_AMBA_REG_AES_CLK_ENABLE_Msk (0x100UL)           /*!< AES_CLK_ENABLE (Bitfield-Mask: 0x01)                  */
#define CRG_TOP_CLK_AMBA_REG_SLOW_PCLK_DIV_Pos (5UL)                /*!< SLOW_PCLK_DIV (Bit 5)                                 */
#define CRG_TOP_CLK_AMBA_REG_SLOW_PCLK_DIV_Msk (0xe0UL)             /*!< SLOW_PCLK_DIV (Bitfield-Mask: 0x07)                   */
#define CRG_TOP_CLK_AMBA_REG_PCLK_DIV_Pos (3UL)                     /*!< PCLK_DIV (Bit 3)                                      */
#define CRG_TOP_CLK_AMBA_REG_PCLK_DIV_Msk (0x18UL)                  /*!< PCLK_DIV (Bitfield-Mask: 0x03)                        */
#define CRG_TOP_CLK_AMBA_REG_HCLK_DIV_Pos (0UL)                     /*!< HCLK_DIV (Bit 0)                                      */
#define CRG_TOP_CLK_AMBA_REG_HCLK_DIV_Msk (0x7UL)                   /*!< HCLK_DIV (Bitfield-Mask: 0x07)                        */
/* ==================================================  CLK_CMAC_SWITCH_REG  ================================================== */
#define CRG_TOP_CLK_CMAC_SWITCH_REG_CMAC_RUNNING_ON_XTAL_Pos (2UL)  /*!< CMAC_RUNNING_ON_XTAL (Bit 2)                          */
#define CRG_TOP_CLK_CMAC_SWITCH_REG_CMAC_RUNNING_ON_XTAL_Msk (0x4UL) /*!< CMAC_RUNNING_ON_XTAL (Bitfield-Mask: 0x01)           */
#define CRG_TOP_CLK_CMAC_SWITCH_REG_CMAC_RUNNING_ON_DIVN_Pos (1UL)  /*!< CMAC_RUNNING_ON_DIVN (Bit 1)                          */
#define CRG_TOP_CLK_CMAC_SWITCH_REG_CMAC_RUNNING_ON_DIVN_Msk (0x2UL) /*!< CMAC_RUNNING_ON_DIVN (Bitfield-Mask: 0x01)           */
#define CRG_TOP_CLK_CMAC_SWITCH_REG_CMAC_CLK_SEL_Pos (0UL)          /*!< CMAC_CLK_SEL (Bit 0)                                  */
#define CRG_TOP_CLK_CMAC_SWITCH_REG_CMAC_CLK_SEL_Msk (0x1UL)        /*!< CMAC_CLK_SEL (Bitfield-Mask: 0x01)                    */
/* =====================================================  CLK_CTRL_REG  ====================================================== */
#define CRG_TOP_CLK_CTRL_REG_RUNNING_AT_PLL_Pos (15UL)              /*!< RUNNING_AT_PLL (Bit 15)                               */
#define CRG_TOP_CLK_CTRL_REG_RUNNING_AT_PLL_Msk (0x8000UL)          /*!< RUNNING_AT_PLL (Bitfield-Mask: 0x01)                  */
#define CRG_TOP_CLK_CTRL_REG_RUNNING_AT_XTAL32M_Pos (14UL)          /*!< RUNNING_AT_XTAL32M (Bit 14)                           */
#define CRG_TOP_CLK_CTRL_REG_RUNNING_AT_XTAL32M_Msk (0x4000UL)      /*!< RUNNING_AT_XTAL32M (Bitfield-Mask: 0x01)              */
#define CRG_TOP_CLK_CTRL_REG_RUNNING_AT_RCHS_Pos (13UL)             /*!< RUNNING_AT_RCHS (Bit 13)                              */
#define CRG_TOP_CLK_CTRL_REG_RUNNING_AT_RCHS_Msk (0x2000UL)         /*!< RUNNING_AT_RCHS (Bitfield-Mask: 0x01)                 */
#define CRG_TOP_CLK_CTRL_REG_RUNNING_AT_RCLP_Pos (12UL)             /*!< RUNNING_AT_RCLP (Bit 12)                              */
#define CRG_TOP_CLK_CTRL_REG_RUNNING_AT_RCLP_Msk (0x1000UL)         /*!< RUNNING_AT_RCLP (Bitfield-Mask: 0x01)                 */
#define CRG_TOP_CLK_CTRL_REG_VAD_CLK_SEL_Pos (6UL)                  /*!< VAD_CLK_SEL (Bit 6)                                   */
#define CRG_TOP_CLK_CTRL_REG_VAD_CLK_SEL_Msk (0x40UL)               /*!< VAD_CLK_SEL (Bitfield-Mask: 0x01)                     */
#define CRG_TOP_CLK_CTRL_REG_USB_CLK_SRC_Pos (4UL)                  /*!< USB_CLK_SRC (Bit 4)                                   */
#define CRG_TOP_CLK_CTRL_REG_USB_CLK_SRC_Msk (0x10UL)               /*!< USB_CLK_SRC (Bitfield-Mask: 0x01)                     */
#define CRG_TOP_CLK_CTRL_REG_LP_CLK_SEL_Pos (2UL)                   /*!< LP_CLK_SEL (Bit 2)                                    */
#define CRG_TOP_CLK_CTRL_REG_LP_CLK_SEL_Msk (0xcUL)                 /*!< LP_CLK_SEL (Bitfield-Mask: 0x03)                      */
#define CRG_TOP_CLK_CTRL_REG_SYS_CLK_SEL_Pos (0UL)                  /*!< SYS_CLK_SEL (Bit 0)                                   */
#define CRG_TOP_CLK_CTRL_REG_SYS_CLK_SEL_Msk (0x3UL)                /*!< SYS_CLK_SEL (Bitfield-Mask: 0x03)                     */
/* =====================================================  CLK_RADIO_REG  ===================================================== */
#define CRG_TOP_CLK_RADIO_REG_RAD_REG_RESET_REQ_Pos (6UL)           /*!< RAD_REG_RESET_REQ (Bit 6)                             */
#define CRG_TOP_CLK_RADIO_REG_RAD_REG_RESET_REQ_Msk (0x40UL)        /*!< RAD_REG_RESET_REQ (Bitfield-Mask: 0x01)               */
#define CRG_TOP_CLK_RADIO_REG_RFCU_ENABLE_Pos (5UL)                 /*!< RFCU_ENABLE (Bit 5)                                   */
#define CRG_TOP_CLK_RADIO_REG_RFCU_ENABLE_Msk (0x20UL)              /*!< RFCU_ENABLE (Bitfield-Mask: 0x01)                     */
#define CRG_TOP_CLK_RADIO_REG_CMAC_SYNCH_RESET_Pos (4UL)            /*!< CMAC_SYNCH_RESET (Bit 4)                              */
#define CRG_TOP_CLK_RADIO_REG_CMAC_SYNCH_RESET_Msk (0x10UL)         /*!< CMAC_SYNCH_RESET (Bitfield-Mask: 0x01)                */
#define CRG_TOP_CLK_RADIO_REG_CMAC_CLK_ENABLE_Pos (2UL)             /*!< CMAC_CLK_ENABLE (Bit 2)                               */
#define CRG_TOP_CLK_RADIO_REG_CMAC_CLK_ENABLE_Msk (0x4UL)           /*!< CMAC_CLK_ENABLE (Bitfield-Mask: 0x01)                 */
/* =====================================================  CLK_RCHS_REG  ====================================================== */
#define CRG_TOP_CLK_RCHS_REG_RCHS_SPEED_Pos (22UL)                  /*!< RCHS_SPEED (Bit 22)                                   */
#define CRG_TOP_CLK_RCHS_REG_RCHS_SPEED_Msk (0xc00000UL)            /*!< RCHS_SPEED (Bitfield-Mask: 0x03)                      */
#define CRG_TOP_CLK_RCHS_REG_RCHS_INIT_RANGE_Pos (20UL)             /*!< RCHS_INIT_RANGE (Bit 20)                              */
#define CRG_TOP_CLK_RCHS_REG_RCHS_INIT_RANGE_Msk (0x300000UL)       /*!< RCHS_INIT_RANGE (Bitfield-Mask: 0x03)                 */
#define CRG_TOP_CLK_RCHS_REG_RCHS_INIT_DEL_Pos (12UL)               /*!< RCHS_INIT_DEL (Bit 12)                                */
#define CRG_TOP_CLK_RCHS_REG_RCHS_INIT_DEL_Msk (0xff000UL)          /*!< RCHS_INIT_DEL (Bitfield-Mask: 0xff)                   */
#define CRG_TOP_CLK_RCHS_REG_RCHS_INIT_DTCF_Pos (9UL)               /*!< RCHS_INIT_DTCF (Bit 9)                                */
#define CRG_TOP_CLK_RCHS_REG_RCHS_INIT_DTCF_Msk (0xe00UL)           /*!< RCHS_INIT_DTCF (Bitfield-Mask: 0x07)                  */
#define CRG_TOP_CLK_RCHS_REG_RCHS_INIT_DTC_Pos (5UL)                /*!< RCHS_INIT_DTC (Bit 5)                                 */
#define CRG_TOP_CLK_RCHS_REG_RCHS_INIT_DTC_Msk (0x1e0UL)            /*!< RCHS_INIT_DTC (Bitfield-Mask: 0x0f)                   */
#define CRG_TOP_CLK_RCHS_REG_RCHS_BIAS_Pos (1UL)                    /*!< RCHS_BIAS (Bit 1)                                     */
#define CRG_TOP_CLK_RCHS_REG_RCHS_BIAS_Msk (0x1eUL)                 /*!< RCHS_BIAS (Bitfield-Mask: 0x0f)                       */
#define CRG_TOP_CLK_RCHS_REG_RCHS_ENABLE_Pos (0UL)                  /*!< RCHS_ENABLE (Bit 0)                                   */
#define CRG_TOP_CLK_RCHS_REG_RCHS_ENABLE_Msk (0x1UL)                /*!< RCHS_ENABLE (Bitfield-Mask: 0x01)                     */
/* =====================================================  CLK_RCLP_REG  ====================================================== */
#define CRG_TOP_CLK_RCLP_REG_RCLP_LOW_SPEED_FORCE_Pos (5UL)         /*!< RCLP_LOW_SPEED_FORCE (Bit 5)                          */
#define CRG_TOP_CLK_RCLP_REG_RCLP_LOW_SPEED_FORCE_Msk (0x20UL)      /*!< RCLP_LOW_SPEED_FORCE (Bitfield-Mask: 0x01)            */
#define CRG_TOP_CLK_RCLP_REG_RCLP_TRIM_Pos (1UL)                    /*!< RCLP_TRIM (Bit 1)                                     */
#define CRG_TOP_CLK_RCLP_REG_RCLP_TRIM_Msk (0x1eUL)                 /*!< RCLP_TRIM (Bitfield-Mask: 0x0f)                       */
#define CRG_TOP_CLK_RCLP_REG_RCLP_ENABLE_Pos (0UL)                  /*!< RCLP_ENABLE (Bit 0)                                   */
#define CRG_TOP_CLK_RCLP_REG_RCLP_ENABLE_Msk (0x1UL)                /*!< RCLP_ENABLE (Bitfield-Mask: 0x01)                     */
/* ======================================================  CLK_RCX_REG  ====================================================== */
#define CRG_TOP_CLK_RCX_REG_RCX_BIAS_Pos  (8UL)                     /*!< RCX_BIAS (Bit 8)                                      */
#define CRG_TOP_CLK_RCX_REG_RCX_BIAS_Msk  (0xf00UL)                 /*!< RCX_BIAS (Bitfield-Mask: 0x0f)                        */
#define CRG_TOP_CLK_RCX_REG_RCX_C0_Pos    (7UL)                     /*!< RCX_C0 (Bit 7)                                        */
#define CRG_TOP_CLK_RCX_REG_RCX_C0_Msk    (0x80UL)                  /*!< RCX_C0 (Bitfield-Mask: 0x01)                          */
#define CRG_TOP_CLK_RCX_REG_RCX_CADJUST_Pos (2UL)                   /*!< RCX_CADJUST (Bit 2)                                   */
#define CRG_TOP_CLK_RCX_REG_RCX_CADJUST_Msk (0x7cUL)                /*!< RCX_CADJUST (Bitfield-Mask: 0x1f)                     */
#define CRG_TOP_CLK_RCX_REG_RCX_ENABLE_Pos (0UL)                    /*!< RCX_ENABLE (Bit 0)                                    */
#define CRG_TOP_CLK_RCX_REG_RCX_ENABLE_Msk (0x1UL)                  /*!< RCX_ENABLE (Bitfield-Mask: 0x01)                      */
/* ====================================================  CLK_RTCDIV_REG  ===================================================== */
#define CRG_TOP_CLK_RTCDIV_REG_RTC_RESET_REQ_Pos (21UL)             /*!< RTC_RESET_REQ (Bit 21)                                */
#define CRG_TOP_CLK_RTCDIV_REG_RTC_RESET_REQ_Msk (0x200000UL)       /*!< RTC_RESET_REQ (Bitfield-Mask: 0x01)                   */
#define CRG_TOP_CLK_RTCDIV_REG_RTC_DIV_ENABLE_Pos (20UL)            /*!< RTC_DIV_ENABLE (Bit 20)                               */
#define CRG_TOP_CLK_RTCDIV_REG_RTC_DIV_ENABLE_Msk (0x100000UL)      /*!< RTC_DIV_ENABLE (Bitfield-Mask: 0x01)                  */
#define CRG_TOP_CLK_RTCDIV_REG_RTC_DIV_DENOM_Pos (19UL)             /*!< RTC_DIV_DENOM (Bit 19)                                */
#define CRG_TOP_CLK_RTCDIV_REG_RTC_DIV_DENOM_Msk (0x80000UL)        /*!< RTC_DIV_DENOM (Bitfield-Mask: 0x01)                   */
#define CRG_TOP_CLK_RTCDIV_REG_RTC_DIV_INT_Pos (10UL)               /*!< RTC_DIV_INT (Bit 10)                                  */
#define CRG_TOP_CLK_RTCDIV_REG_RTC_DIV_INT_Msk (0x7fc00UL)          /*!< RTC_DIV_INT (Bitfield-Mask: 0x1ff)                    */
#define CRG_TOP_CLK_RTCDIV_REG_RTC_DIV_FRAC_Pos (0UL)               /*!< RTC_DIV_FRAC (Bit 0)                                  */
#define CRG_TOP_CLK_RTCDIV_REG_RTC_DIV_FRAC_Msk (0x3ffUL)           /*!< RTC_DIV_FRAC (Bitfield-Mask: 0x3ff)                   */
/* ===================================================  CLK_SNC_CTRL_REG  ==================================================== */
#define CRG_TOP_CLK_SNC_CTRL_REG_SNC_STATE_RETAINED_Pos (2UL)       /*!< SNC_STATE_RETAINED (Bit 2)                            */
#define CRG_TOP_CLK_SNC_CTRL_REG_SNC_STATE_RETAINED_Msk (0x4UL)     /*!< SNC_STATE_RETAINED (Bitfield-Mask: 0x01)              */
#define CRG_TOP_CLK_SNC_CTRL_REG_SNC_CLK_ENABLE_Pos (1UL)           /*!< SNC_CLK_ENABLE (Bit 1)                                */
#define CRG_TOP_CLK_SNC_CTRL_REG_SNC_CLK_ENABLE_Msk (0x2UL)         /*!< SNC_CLK_ENABLE (Bitfield-Mask: 0x01)                  */
#define CRG_TOP_CLK_SNC_CTRL_REG_SNC_RESET_REQ_Pos (0UL)            /*!< SNC_RESET_REQ (Bit 0)                                 */
#define CRG_TOP_CLK_SNC_CTRL_REG_SNC_RESET_REQ_Msk (0x1UL)          /*!< SNC_RESET_REQ (Bitfield-Mask: 0x01)                   */
/* ==================================================  CLK_SWITCH2XTAL_REG  ================================================== */
#define CRG_TOP_CLK_SWITCH2XTAL_REG_SWITCH2XTAL_Pos (0UL)           /*!< SWITCH2XTAL (Bit 0)                                   */
#define CRG_TOP_CLK_SWITCH2XTAL_REG_SWITCH2XTAL_Msk (0x1UL)         /*!< SWITCH2XTAL (Bitfield-Mask: 0x01)                     */
/* ======================================================  CLK_TMR_REG  ====================================================== */
#define CRG_TOP_CLK_TMR_REG_WAKEUPCT_ENABLE_Pos (0UL)               /*!< WAKEUPCT_ENABLE (Bit 0)                               */
#define CRG_TOP_CLK_TMR_REG_WAKEUPCT_ENABLE_Msk (0x1UL)             /*!< WAKEUPCT_ENABLE (Bitfield-Mask: 0x01)                 */
/* ====================================================  CLK_XTAL32K_REG  ==================================================== */
#define CRG_TOP_CLK_XTAL32K_REG_XTAL32K_DISABLE_OUTPUT_Pos (9UL)    /*!< XTAL32K_DISABLE_OUTPUT (Bit 9)                        */
#define CRG_TOP_CLK_XTAL32K_REG_XTAL32K_DISABLE_OUTPUT_Msk (0x200UL) /*!< XTAL32K_DISABLE_OUTPUT (Bitfield-Mask: 0x01)         */
#define CRG_TOP_CLK_XTAL32K_REG_XTAL32K_DISABLE_AMPREG_Pos (7UL)    /*!< XTAL32K_DISABLE_AMPREG (Bit 7)                        */
#define CRG_TOP_CLK_XTAL32K_REG_XTAL32K_DISABLE_AMPREG_Msk (0x80UL) /*!< XTAL32K_DISABLE_AMPREG (Bitfield-Mask: 0x01)          */
#define CRG_TOP_CLK_XTAL32K_REG_XTAL32K_CUR_Pos (3UL)               /*!< XTAL32K_CUR (Bit 3)                                   */
#define CRG_TOP_CLK_XTAL32K_REG_XTAL32K_CUR_Msk (0x78UL)            /*!< XTAL32K_CUR (Bitfield-Mask: 0x0f)                     */
#define CRG_TOP_CLK_XTAL32K_REG_XTAL32K_RBIAS_Pos (1UL)             /*!< XTAL32K_RBIAS (Bit 1)                                 */
#define CRG_TOP_CLK_XTAL32K_REG_XTAL32K_RBIAS_Msk (0x6UL)           /*!< XTAL32K_RBIAS (Bitfield-Mask: 0x03)                   */
#define CRG_TOP_CLK_XTAL32K_REG_XTAL32K_ENABLE_Pos (0UL)            /*!< XTAL32K_ENABLE (Bit 0)                                */
#define CRG_TOP_CLK_XTAL32K_REG_XTAL32K_ENABLE_Msk (0x1UL)          /*!< XTAL32K_ENABLE (Bitfield-Mask: 0x01)                  */
/* ==================================================  DISCHARGE_RAIL_REG  =================================================== */
#define CRG_TOP_DISCHARGE_RAIL_REG_RESET_V18F_Pos (5UL)             /*!< RESET_V18F (Bit 5)                                    */
#define CRG_TOP_DISCHARGE_RAIL_REG_RESET_V18F_Msk (0x20UL)          /*!< RESET_V18F (Bitfield-Mask: 0x01)                      */
#define CRG_TOP_DISCHARGE_RAIL_REG_RESET_V30_Pos (3UL)              /*!< RESET_V30 (Bit 3)                                     */
#define CRG_TOP_DISCHARGE_RAIL_REG_RESET_V30_Msk (0x8UL)            /*!< RESET_V30 (Bitfield-Mask: 0x01)                       */
#define CRG_TOP_DISCHARGE_RAIL_REG_RESET_V18P_Pos (2UL)             /*!< RESET_V18P (Bit 2)                                    */
#define CRG_TOP_DISCHARGE_RAIL_REG_RESET_V18P_Msk (0x4UL)           /*!< RESET_V18P (Bitfield-Mask: 0x01)                      */
#define CRG_TOP_DISCHARGE_RAIL_REG_RESET_V18_Pos (1UL)              /*!< RESET_V18 (Bit 1)                                     */
#define CRG_TOP_DISCHARGE_RAIL_REG_RESET_V18_Msk (0x2UL)            /*!< RESET_V18 (Bitfield-Mask: 0x01)                       */
#define CRG_TOP_DISCHARGE_RAIL_REG_RESET_V14_Pos (0UL)              /*!< RESET_V14 (Bit 0)                                     */
#define CRG_TOP_DISCHARGE_RAIL_REG_RESET_V14_Msk (0x1UL)            /*!< RESET_V14 (Bitfield-Mask: 0x01)                       */
/* ===================================================  LCD_EXT_CTRL_REG  ==================================================== */
#define CRG_TOP_LCD_EXT_CTRL_REG_LCD_EXT_CLK_EN_Pos (10UL)          /*!< LCD_EXT_CLK_EN (Bit 10)                               */
#define CRG_TOP_LCD_EXT_CTRL_REG_LCD_EXT_CLK_EN_Msk (0x400UL)       /*!< LCD_EXT_CLK_EN (Bitfield-Mask: 0x01)                  */
#define CRG_TOP_LCD_EXT_CTRL_REG_LCD_EXT_CNT_RELOAD_Pos (0UL)       /*!< LCD_EXT_CNT_RELOAD (Bit 0)                            */
#define CRG_TOP_LCD_EXT_CTRL_REG_LCD_EXT_CNT_RELOAD_Msk (0x3ffUL)   /*!< LCD_EXT_CNT_RELOAD (Bitfield-Mask: 0x3ff)             */
/* ===================================================  P0_PAD_LATCH_REG  ==================================================== */
#define CRG_TOP_P0_PAD_LATCH_REG_P0_LATCH_EN_Pos (0UL)              /*!< P0_LATCH_EN (Bit 0)                                   */
#define CRG_TOP_P0_PAD_LATCH_REG_P0_LATCH_EN_Msk (0xffffffffUL)     /*!< P0_LATCH_EN (Bitfield-Mask: 0xffffffff)               */
/* ================================================  P0_RESET_PAD_LATCH_REG  ================================================= */
#define CRG_TOP_P0_RESET_PAD_LATCH_REG_P0_RESET_LATCH_EN_Pos (0UL)  /*!< P0_RESET_LATCH_EN (Bit 0)                             */
#define CRG_TOP_P0_RESET_PAD_LATCH_REG_P0_RESET_LATCH_EN_Msk (0xffffffffUL) /*!< P0_RESET_LATCH_EN (Bitfield-Mask: 0xffffffff) */
/* =================================================  P0_SET_PAD_LATCH_REG  ================================================== */
#define CRG_TOP_P0_SET_PAD_LATCH_REG_P0_SET_LATCH_EN_Pos (0UL)      /*!< P0_SET_LATCH_EN (Bit 0)                               */
#define CRG_TOP_P0_SET_PAD_LATCH_REG_P0_SET_LATCH_EN_Msk (0xffffffffUL) /*!< P0_SET_LATCH_EN (Bitfield-Mask: 0xffffffff)       */
/* ===================================================  P1_PAD_LATCH_REG  ==================================================== */
#define CRG_TOP_P1_PAD_LATCH_REG_P1_LATCH_EN_Pos (0UL)              /*!< P1_LATCH_EN (Bit 0)                                   */
#define CRG_TOP_P1_PAD_LATCH_REG_P1_LATCH_EN_Msk (0xffffffffUL)     /*!< P1_LATCH_EN (Bitfield-Mask: 0xffffffff)               */
/* ================================================  P1_RESET_PAD_LATCH_REG  ================================================= */
#define CRG_TOP_P1_RESET_PAD_LATCH_REG_P1_RESET_LATCH_EN_Pos (0UL)  /*!< P1_RESET_LATCH_EN (Bit 0)                             */
#define CRG_TOP_P1_RESET_PAD_LATCH_REG_P1_RESET_LATCH_EN_Msk (0xffffffffUL) /*!< P1_RESET_LATCH_EN (Bitfield-Mask: 0xffffffff) */
/* =================================================  P1_SET_PAD_LATCH_REG  ================================================== */
#define CRG_TOP_P1_SET_PAD_LATCH_REG_P1_SET_LATCH_EN_Pos (0UL)      /*!< P1_SET_LATCH_EN (Bit 0)                               */
#define CRG_TOP_P1_SET_PAD_LATCH_REG_P1_SET_LATCH_EN_Msk (0xffffffffUL) /*!< P1_SET_LATCH_EN (Bitfield-Mask: 0xffffffff)       */
/* ===================================================  P2_PAD_LATCH_REG  ==================================================== */
#define CRG_TOP_P2_PAD_LATCH_REG_P2_LATCH_EN_Pos (0UL)              /*!< P2_LATCH_EN (Bit 0)                                   */
#define CRG_TOP_P2_PAD_LATCH_REG_P2_LATCH_EN_Msk (0x7fffUL)         /*!< P2_LATCH_EN (Bitfield-Mask: 0x7fff)                   */
/* ================================================  P2_RESET_PAD_LATCH_REG  ================================================= */
#define CRG_TOP_P2_RESET_PAD_LATCH_REG_P2_RESET_LATCH_EN_Pos (0UL)  /*!< P2_RESET_LATCH_EN (Bit 0)                             */
#define CRG_TOP_P2_RESET_PAD_LATCH_REG_P2_RESET_LATCH_EN_Msk (0x7fffUL) /*!< P2_RESET_LATCH_EN (Bitfield-Mask: 0x7fff)         */
/* =================================================  P2_SET_PAD_LATCH_REG  ================================================== */
#define CRG_TOP_P2_SET_PAD_LATCH_REG_P2_SET_LATCH_EN_Pos (0UL)      /*!< P2_SET_LATCH_EN (Bit 0)                               */
#define CRG_TOP_P2_SET_PAD_LATCH_REG_P2_SET_LATCH_EN_Msk (0x7fffUL) /*!< P2_SET_LATCH_EN (Bitfield-Mask: 0x7fff)               */
/* =====================================================  PMU_CTRL_REG  ====================================================== */
#define CRG_TOP_PMU_CTRL_REG_RETAIN_RGP_RAM_Pos (13UL)              /*!< RETAIN_RGP_RAM (Bit 13)                               */
#define CRG_TOP_PMU_CTRL_REG_RETAIN_RGP_RAM_Msk (0x2000UL)          /*!< RETAIN_RGP_RAM (Bitfield-Mask: 0x01)                  */
#define CRG_TOP_PMU_CTRL_REG_RETAIN_GPU_CLUT_Pos (12UL)             /*!< RETAIN_GPU_CLUT (Bit 12)                              */
#define CRG_TOP_PMU_CTRL_REG_RETAIN_GPU_CLUT_Msk (0x1000UL)         /*!< RETAIN_GPU_CLUT (Bitfield-Mask: 0x01)                 */
#define CRG_TOP_PMU_CTRL_REG_RETAIN_DCACHE_Pos (11UL)               /*!< RETAIN_DCACHE (Bit 11)                                */
#define CRG_TOP_PMU_CTRL_REG_RETAIN_DCACHE_Msk (0x800UL)            /*!< RETAIN_DCACHE (Bitfield-Mask: 0x01)                   */
#define CRG_TOP_PMU_CTRL_REG_GPU_SLEEP_Pos (10UL)                   /*!< GPU_SLEEP (Bit 10)                                    */
#define CRG_TOP_PMU_CTRL_REG_GPU_SLEEP_Msk (0x400UL)                /*!< GPU_SLEEP (Bitfield-Mask: 0x01)                       */
#define CRG_TOP_PMU_CTRL_REG_CTRL_SLEEP_Pos (9UL)                   /*!< CTRL_SLEEP (Bit 9)                                    */
#define CRG_TOP_PMU_CTRL_REG_CTRL_SLEEP_Msk (0x200UL)               /*!< CTRL_SLEEP (Bitfield-Mask: 0x01)                      */
#define CRG_TOP_PMU_CTRL_REG_RETAIN_CACHE_Pos (7UL)                 /*!< RETAIN_CACHE (Bit 7)                                  */
#define CRG_TOP_PMU_CTRL_REG_RETAIN_CACHE_Msk (0x80UL)              /*!< RETAIN_CACHE (Bitfield-Mask: 0x01)                    */
#define CRG_TOP_PMU_CTRL_REG_SYS_SLEEP_Pos (6UL)                    /*!< SYS_SLEEP (Bit 6)                                     */
#define CRG_TOP_PMU_CTRL_REG_SYS_SLEEP_Msk (0x40UL)                 /*!< SYS_SLEEP (Bitfield-Mask: 0x01)                       */
#define CRG_TOP_PMU_CTRL_REG_RESET_ON_WAKEUP_Pos (5UL)              /*!< RESET_ON_WAKEUP (Bit 5)                               */
#define CRG_TOP_PMU_CTRL_REG_RESET_ON_WAKEUP_Msk (0x20UL)           /*!< RESET_ON_WAKEUP (Bitfield-Mask: 0x01)                 */
#define CRG_TOP_PMU_CTRL_REG_SNC_SLEEP_Pos (3UL)                    /*!< SNC_SLEEP (Bit 3)                                     */
#define CRG_TOP_PMU_CTRL_REG_SNC_SLEEP_Msk (0x8UL)                  /*!< SNC_SLEEP (Bitfield-Mask: 0x01)                       */
#define CRG_TOP_PMU_CTRL_REG_TIM_SLEEP_Pos (2UL)                    /*!< TIM_SLEEP (Bit 2)                                     */
#define CRG_TOP_PMU_CTRL_REG_TIM_SLEEP_Msk (0x4UL)                  /*!< TIM_SLEEP (Bitfield-Mask: 0x01)                       */
#define CRG_TOP_PMU_CTRL_REG_RADIO_SLEEP_Pos (1UL)                  /*!< RADIO_SLEEP (Bit 1)                                   */
#define CRG_TOP_PMU_CTRL_REG_RADIO_SLEEP_Msk (0x2UL)                /*!< RADIO_SLEEP (Bitfield-Mask: 0x01)                     */
#define CRG_TOP_PMU_CTRL_REG_AUD_SLEEP_Pos (0UL)                    /*!< AUD_SLEEP (Bit 0)                                     */
#define CRG_TOP_PMU_CTRL_REG_AUD_SLEEP_Msk (0x1UL)                  /*!< AUD_SLEEP (Bitfield-Mask: 0x01)                       */
/* =====================================================  PMU_SLEEP_REG  ===================================================== */
#define CRG_TOP_PMU_SLEEP_REG_ULTRA_FAST_WAKEUP_Pos (31UL)          /*!< ULTRA_FAST_WAKEUP (Bit 31)                            */
#define CRG_TOP_PMU_SLEEP_REG_ULTRA_FAST_WAKEUP_Msk (0x80000000UL)  /*!< ULTRA_FAST_WAKEUP (Bitfield-Mask: 0x01)               */
#define CRG_TOP_PMU_SLEEP_REG_ENABLE_FAST_SWITCH_Pos (30UL)         /*!< ENABLE_FAST_SWITCH (Bit 30)                           */
#define CRG_TOP_PMU_SLEEP_REG_ENABLE_FAST_SWITCH_Msk (0x40000000UL) /*!< ENABLE_FAST_SWITCH (Bitfield-Mask: 0x01)              */
#define CRG_TOP_PMU_SLEEP_REG_VLED_BYPASS_REFRESH_TIME_Pos (23UL)   /*!< VLED_BYPASS_REFRESH_TIME (Bit 23)                     */
#define CRG_TOP_PMU_SLEEP_REG_VLED_BYPASS_REFRESH_TIME_Msk (0x3f800000UL) /*!< VLED_BYPASS_REFRESH_TIME (Bitfield-Mask: 0x7f)  */
#define CRG_TOP_PMU_SLEEP_REG_BOD_SLEEP_INTERVAL_Pos (19UL)         /*!< BOD_SLEEP_INTERVAL (Bit 19)                           */
#define CRG_TOP_PMU_SLEEP_REG_BOD_SLEEP_INTERVAL_Msk (0x780000UL)   /*!< BOD_SLEEP_INTERVAL (Bitfield-Mask: 0x0f)              */
#define CRG_TOP_PMU_SLEEP_REG_RAILS_REFRESH_INTERVAL_Pos (5UL)      /*!< RAILS_REFRESH_INTERVAL (Bit 5)                        */
#define CRG_TOP_PMU_SLEEP_REG_RAILS_REFRESH_INTERVAL_Msk (0x7ffe0UL) /*!< RAILS_REFRESH_INTERVAL (Bitfield-Mask: 0x3fff)       */
#define CRG_TOP_PMU_SLEEP_REG_BASE_REFRESH_INTERVAL_Pos (0UL)       /*!< BASE_REFRESH_INTERVAL (Bit 0)                         */
#define CRG_TOP_PMU_SLEEP_REG_BASE_REFRESH_INTERVAL_Msk (0x1fUL)    /*!< BASE_REFRESH_INTERVAL (Bitfield-Mask: 0x1f)           */
/* =====================================================  POR_CTRL_REG  ====================================================== */
#define CRG_TOP_POR_CTRL_REG_POR_VSYS_SLEEP_CYCLE_EN_Pos (11UL)     /*!< POR_VSYS_SLEEP_CYCLE_EN (Bit 11)                      */
#define CRG_TOP_POR_CTRL_REG_POR_VSYS_SLEEP_CYCLE_EN_Msk (0x800UL)  /*!< POR_VSYS_SLEEP_CYCLE_EN (Bitfield-Mask: 0x01)         */
#define CRG_TOP_POR_CTRL_REG_POR_VSYS_HYST_SEL_Pos (10UL)           /*!< POR_VSYS_HYST_SEL (Bit 10)                            */
#define CRG_TOP_POR_CTRL_REG_POR_VSYS_HYST_SEL_Msk (0x400UL)        /*!< POR_VSYS_HYST_SEL (Bitfield-Mask: 0x01)               */
#define CRG_TOP_POR_CTRL_REG_POR_VSYS_HYST_DISABLE_Pos (9UL)        /*!< POR_VSYS_HYST_DISABLE (Bit 9)                         */
#define CRG_TOP_POR_CTRL_REG_POR_VSYS_HYST_DISABLE_Msk (0x200UL)    /*!< POR_VSYS_HYST_DISABLE (Bitfield-Mask: 0x01)           */
#define CRG_TOP_POR_CTRL_REG_POR_VSYS_FORCE_ON_Pos (8UL)            /*!< POR_VSYS_FORCE_ON (Bit 8)                             */
#define CRG_TOP_POR_CTRL_REG_POR_VSYS_FORCE_ON_Msk (0x100UL)        /*!< POR_VSYS_FORCE_ON (Bitfield-Mask: 0x01)               */
#define CRG_TOP_POR_CTRL_REG_POR_VSYS_MASK_Pos (7UL)                /*!< POR_VSYS_MASK (Bit 7)                                 */
#define CRG_TOP_POR_CTRL_REG_POR_VSYS_MASK_Msk (0x80UL)             /*!< POR_VSYS_MASK (Bitfield-Mask: 0x01)                   */
#define CRG_TOP_POR_CTRL_REG_POR_VSYS_DISABLE_Pos (6UL)             /*!< POR_VSYS_DISABLE (Bit 6)                              */
#define CRG_TOP_POR_CTRL_REG_POR_VSYS_DISABLE_Msk (0x40UL)          /*!< POR_VSYS_DISABLE (Bitfield-Mask: 0x01)                */
#define CRG_TOP_POR_CTRL_REG_POR_V30_SLEEP_CYCLE_EN_Pos (5UL)       /*!< POR_V30_SLEEP_CYCLE_EN (Bit 5)                        */
#define CRG_TOP_POR_CTRL_REG_POR_V30_SLEEP_CYCLE_EN_Msk (0x20UL)    /*!< POR_V30_SLEEP_CYCLE_EN (Bitfield-Mask: 0x01)          */
#define CRG_TOP_POR_CTRL_REG_POR_V30_HYST_SEL_Pos (4UL)             /*!< POR_V30_HYST_SEL (Bit 4)                              */
#define CRG_TOP_POR_CTRL_REG_POR_V30_HYST_SEL_Msk (0x10UL)          /*!< POR_V30_HYST_SEL (Bitfield-Mask: 0x01)                */
#define CRG_TOP_POR_CTRL_REG_POR_V30_HYST_DISABLE_Pos (3UL)         /*!< POR_V30_HYST_DISABLE (Bit 3)                          */
#define CRG_TOP_POR_CTRL_REG_POR_V30_HYST_DISABLE_Msk (0x8UL)       /*!< POR_V30_HYST_DISABLE (Bitfield-Mask: 0x01)            */
#define CRG_TOP_POR_CTRL_REG_POR_V30_FORCE_ON_Pos (2UL)             /*!< POR_V30_FORCE_ON (Bit 2)                              */
#define CRG_TOP_POR_CTRL_REG_POR_V30_FORCE_ON_Msk (0x4UL)           /*!< POR_V30_FORCE_ON (Bitfield-Mask: 0x01)                */
#define CRG_TOP_POR_CTRL_REG_POR_V30_MASK_Pos (1UL)                 /*!< POR_V30_MASK (Bit 1)                                  */
#define CRG_TOP_POR_CTRL_REG_POR_V30_MASK_Msk (0x2UL)               /*!< POR_V30_MASK (Bitfield-Mask: 0x01)                    */
#define CRG_TOP_POR_CTRL_REG_POR_V30_DISABLE_Pos (0UL)              /*!< POR_V30_DISABLE (Bit 0)                               */
#define CRG_TOP_POR_CTRL_REG_POR_V30_DISABLE_Msk (0x1UL)            /*!< POR_V30_DISABLE (Bitfield-Mask: 0x01)                 */
/* ======================================================  POR_PIN_REG  ====================================================== */
#define CRG_TOP_POR_PIN_REG_POR_PIN_POLARITY_Pos (7UL)              /*!< POR_PIN_POLARITY (Bit 7)                              */
#define CRG_TOP_POR_PIN_REG_POR_PIN_POLARITY_Msk (0x80UL)           /*!< POR_PIN_POLARITY (Bitfield-Mask: 0x01)                */
#define CRG_TOP_POR_PIN_REG_POR_PIN_SELECT_Pos (0UL)                /*!< POR_PIN_SELECT (Bit 0)                                */
#define CRG_TOP_POR_PIN_REG_POR_PIN_SELECT_Msk (0x7fUL)             /*!< POR_PIN_SELECT (Bitfield-Mask: 0x7f)                  */
/* =====================================================  POR_TIMER_REG  ===================================================== */
#define CRG_TOP_POR_TIMER_REG_POR_TIME_Pos (0UL)                    /*!< POR_TIME (Bit 0)                                      */
#define CRG_TOP_POR_TIMER_REG_POR_TIME_Msk (0x7fUL)                 /*!< POR_TIME (Bitfield-Mask: 0x7f)                        */
/* ====================================================  POWER_CTRL_REG  ===================================================== */
#define CRG_TOP_POWER_CTRL_REG_EN_RCX_SUPPLY_BIAS_Pos (27UL)        /*!< EN_RCX_SUPPLY_BIAS (Bit 27)                           */
#define CRG_TOP_POWER_CTRL_REG_EN_RCX_SUPPLY_BIAS_Msk (0x8000000UL) /*!< EN_RCX_SUPPLY_BIAS (Bitfield-Mask: 0x01)              */
#define CRG_TOP_POWER_CTRL_REG_DCDC_BOOST_CLAMP_EN_Pos (24UL)       /*!< DCDC_BOOST_CLAMP_EN (Bit 24)                          */
#define CRG_TOP_POWER_CTRL_REG_DCDC_BOOST_CLAMP_EN_Msk (0x1000000UL) /*!< DCDC_BOOST_CLAMP_EN (Bitfield-Mask: 0x01)            */
#define CRG_TOP_POWER_CTRL_REG_SW_V18F_SLEEP_ON_Pos (19UL)          /*!< SW_V18F_SLEEP_ON (Bit 19)                             */
#define CRG_TOP_POWER_CTRL_REG_SW_V18F_SLEEP_ON_Msk (0x80000UL)     /*!< SW_V18F_SLEEP_ON (Bitfield-Mask: 0x01)                */
#define CRG_TOP_POWER_CTRL_REG_SW_V18F_ON_Pos (18UL)                /*!< SW_V18F_ON (Bit 18)                                   */
#define CRG_TOP_POWER_CTRL_REG_SW_V18F_ON_Msk (0x40000UL)           /*!< SW_V18F_ON (Bitfield-Mask: 0x01)                      */
#define CRG_TOP_POWER_CTRL_REG_DCDC_VLED_SLEEP_EN_Pos (17UL)        /*!< DCDC_VLED_SLEEP_EN (Bit 17)                           */
#define CRG_TOP_POWER_CTRL_REG_DCDC_VLED_SLEEP_EN_Msk (0x20000UL)   /*!< DCDC_VLED_SLEEP_EN (Bitfield-Mask: 0x01)              */
#define CRG_TOP_POWER_CTRL_REG_DCDC_VLED_EN_Pos (16UL)              /*!< DCDC_VLED_EN (Bit 16)                                 */
#define CRG_TOP_POWER_CTRL_REG_DCDC_VLED_EN_Msk (0x10000UL)         /*!< DCDC_VLED_EN (Bitfield-Mask: 0x01)                    */
#define CRG_TOP_POWER_CTRL_REG_DCDC_V18P_SLEEP_EN_Pos (15UL)        /*!< DCDC_V18P_SLEEP_EN (Bit 15)                           */
#define CRG_TOP_POWER_CTRL_REG_DCDC_V18P_SLEEP_EN_Msk (0x8000UL)    /*!< DCDC_V18P_SLEEP_EN (Bitfield-Mask: 0x01)              */
#define CRG_TOP_POWER_CTRL_REG_DCDC_V18P_EN_Pos (14UL)              /*!< DCDC_V18P_EN (Bit 14)                                 */
#define CRG_TOP_POWER_CTRL_REG_DCDC_V18P_EN_Msk (0x4000UL)          /*!< DCDC_V18P_EN (Bitfield-Mask: 0x01)                    */
#define CRG_TOP_POWER_CTRL_REG_DCDC_V18_SLEEP_EN_Pos (13UL)         /*!< DCDC_V18_SLEEP_EN (Bit 13)                            */
#define CRG_TOP_POWER_CTRL_REG_DCDC_V18_SLEEP_EN_Msk (0x2000UL)     /*!< DCDC_V18_SLEEP_EN (Bitfield-Mask: 0x01)               */
#define CRG_TOP_POWER_CTRL_REG_DCDC_V18_EN_Pos (12UL)               /*!< DCDC_V18_EN (Bit 12)                                  */
#define CRG_TOP_POWER_CTRL_REG_DCDC_V18_EN_Msk (0x1000UL)           /*!< DCDC_V18_EN (Bitfield-Mask: 0x01)                     */
#define CRG_TOP_POWER_CTRL_REG_DCDC_V14_SLEEP_EN_Pos (11UL)         /*!< DCDC_V14_SLEEP_EN (Bit 11)                            */
#define CRG_TOP_POWER_CTRL_REG_DCDC_V14_SLEEP_EN_Msk (0x800UL)      /*!< DCDC_V14_SLEEP_EN (Bitfield-Mask: 0x01)               */
#define CRG_TOP_POWER_CTRL_REG_DCDC_V14_EN_Pos (10UL)               /*!< DCDC_V14_EN (Bit 10)                                  */
#define CRG_TOP_POWER_CTRL_REG_DCDC_V14_EN_Msk (0x400UL)            /*!< DCDC_V14_EN (Bitfield-Mask: 0x01)                     */
#define CRG_TOP_POWER_CTRL_REG_DCDC_V12_SLEEP_EN_Pos (9UL)          /*!< DCDC_V12_SLEEP_EN (Bit 9)                             */
#define CRG_TOP_POWER_CTRL_REG_DCDC_V12_SLEEP_EN_Msk (0x200UL)      /*!< DCDC_V12_SLEEP_EN (Bitfield-Mask: 0x01)               */
#define CRG_TOP_POWER_CTRL_REG_DCDC_V12_EN_Pos (8UL)                /*!< DCDC_V12_EN (Bit 8)                                   */
#define CRG_TOP_POWER_CTRL_REG_DCDC_V12_EN_Msk (0x100UL)            /*!< DCDC_V12_EN (Bitfield-Mask: 0x01)                     */
#define CRG_TOP_POWER_CTRL_REG_CLAMP_V12_DIS_Pos (7UL)              /*!< CLAMP_V12_DIS (Bit 7)                                 */
#define CRG_TOP_POWER_CTRL_REG_CLAMP_V12_DIS_Msk (0x80UL)           /*!< CLAMP_V12_DIS (Bitfield-Mask: 0x01)                   */
#define CRG_TOP_POWER_CTRL_REG_CLAMP_V30_EN_Pos (6UL)               /*!< CLAMP_V30_EN (Bit 6)                                  */
#define CRG_TOP_POWER_CTRL_REG_CLAMP_V30_EN_Msk (0x40UL)            /*!< CLAMP_V30_EN (Bitfield-Mask: 0x01)                    */
#define CRG_TOP_POWER_CTRL_REG_LDO_RET_V30_SLEEP_EN_Pos (4UL)       /*!< LDO_RET_V30_SLEEP_EN (Bit 4)                          */
#define CRG_TOP_POWER_CTRL_REG_LDO_RET_V30_SLEEP_EN_Msk (0x10UL)    /*!< LDO_RET_V30_SLEEP_EN (Bitfield-Mask: 0x01)            */
#define CRG_TOP_POWER_CTRL_REG_LDO_RET_V30_EN_Pos (3UL)             /*!< LDO_RET_V30_EN (Bit 3)                                */
#define CRG_TOP_POWER_CTRL_REG_LDO_RET_V30_EN_Msk (0x8UL)           /*!< LDO_RET_V30_EN (Bitfield-Mask: 0x01)                  */
#define CRG_TOP_POWER_CTRL_REG_LDO_V30_SLEEP_EN_Pos (2UL)           /*!< LDO_V30_SLEEP_EN (Bit 2)                              */
#define CRG_TOP_POWER_CTRL_REG_LDO_V30_SLEEP_EN_Msk (0x4UL)         /*!< LDO_V30_SLEEP_EN (Bitfield-Mask: 0x01)                */
#define CRG_TOP_POWER_CTRL_REG_LDO_V30_EN_Pos (1UL)                 /*!< LDO_V30_EN (Bit 1)                                    */
#define CRG_TOP_POWER_CTRL_REG_LDO_V30_EN_Msk (0x2UL)               /*!< LDO_V30_EN (Bitfield-Mask: 0x01)                      */
#define CRG_TOP_POWER_CTRL_REG_LDO_START_DISABLE_Pos (0UL)          /*!< LDO_START_DISABLE (Bit 0)                             */
#define CRG_TOP_POWER_CTRL_REG_LDO_START_DISABLE_Msk (0x1UL)        /*!< LDO_START_DISABLE (Bitfield-Mask: 0x01)               */
/* =====================================================  POWER_LVL_REG  ===================================================== */
#define CRG_TOP_POWER_LVL_REG_VSYS_LEVEL_Pos (17UL)                 /*!< VSYS_LEVEL (Bit 17)                                   */
#define CRG_TOP_POWER_LVL_REG_VSYS_LEVEL_Msk (0x60000UL)            /*!< VSYS_LEVEL (Bitfield-Mask: 0x03)                      */
#define CRG_TOP_POWER_LVL_REG_V18_LEVEL_Pos (16UL)                  /*!< V18_LEVEL (Bit 16)                                    */
#define CRG_TOP_POWER_LVL_REG_V18_LEVEL_Msk (0x10000UL)             /*!< V18_LEVEL (Bitfield-Mask: 0x01)                       */
#define CRG_TOP_POWER_LVL_REG_V14_LEVEL_Pos (14UL)                  /*!< V14_LEVEL (Bit 14)                                    */
#define CRG_TOP_POWER_LVL_REG_V14_LEVEL_Msk (0xc000UL)              /*!< V14_LEVEL (Bitfield-Mask: 0x03)                       */
#define CRG_TOP_POWER_LVL_REG_V12_SLEEP_LEVEL_Pos (12UL)            /*!< V12_SLEEP_LEVEL (Bit 12)                              */
#define CRG_TOP_POWER_LVL_REG_V12_SLEEP_LEVEL_Msk (0x3000UL)        /*!< V12_SLEEP_LEVEL (Bitfield-Mask: 0x03)                 */
#define CRG_TOP_POWER_LVL_REG_V12_LEVEL_Pos (10UL)                  /*!< V12_LEVEL (Bit 10)                                    */
#define CRG_TOP_POWER_LVL_REG_V12_LEVEL_Msk (0xc00UL)               /*!< V12_LEVEL (Bitfield-Mask: 0x03)                       */
#define CRG_TOP_POWER_LVL_REG_V30_SLEEP_LEVEL_Pos (8UL)             /*!< V30_SLEEP_LEVEL (Bit 8)                               */
#define CRG_TOP_POWER_LVL_REG_V30_SLEEP_LEVEL_Msk (0x300UL)         /*!< V30_SLEEP_LEVEL (Bitfield-Mask: 0x03)                 */
#define CRG_TOP_POWER_LVL_REG_V30_LEVEL_Pos (6UL)                   /*!< V30_LEVEL (Bit 6)                                     */
#define CRG_TOP_POWER_LVL_REG_V30_LEVEL_Msk (0xc0UL)                /*!< V30_LEVEL (Bitfield-Mask: 0x03)                       */
/* ===================================================  RAM_PWR_CTRL_REG  ==================================================== */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM13_PWR_CTRL_Pos (26UL)          /*!< RAM13_PWR_CTRL (Bit 26)                               */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM13_PWR_CTRL_Msk (0xc000000UL)   /*!< RAM13_PWR_CTRL (Bitfield-Mask: 0x03)                  */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM12_PWR_CTRL_Pos (24UL)          /*!< RAM12_PWR_CTRL (Bit 24)                               */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM12_PWR_CTRL_Msk (0x3000000UL)   /*!< RAM12_PWR_CTRL (Bitfield-Mask: 0x03)                  */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM11_PWR_CTRL_Pos (22UL)          /*!< RAM11_PWR_CTRL (Bit 22)                               */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM11_PWR_CTRL_Msk (0xc00000UL)    /*!< RAM11_PWR_CTRL (Bitfield-Mask: 0x03)                  */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM10_PWR_CTRL_Pos (20UL)          /*!< RAM10_PWR_CTRL (Bit 20)                               */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM10_PWR_CTRL_Msk (0x300000UL)    /*!< RAM10_PWR_CTRL (Bitfield-Mask: 0x03)                  */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM9_PWR_CTRL_Pos (18UL)           /*!< RAM9_PWR_CTRL (Bit 18)                                */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM9_PWR_CTRL_Msk (0xc0000UL)      /*!< RAM9_PWR_CTRL (Bitfield-Mask: 0x03)                   */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM8_PWR_CTRL_Pos (16UL)           /*!< RAM8_PWR_CTRL (Bit 16)                                */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM8_PWR_CTRL_Msk (0x30000UL)      /*!< RAM8_PWR_CTRL (Bitfield-Mask: 0x03)                   */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM7_PWR_CTRL_Pos (14UL)           /*!< RAM7_PWR_CTRL (Bit 14)                                */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM7_PWR_CTRL_Msk (0xc000UL)       /*!< RAM7_PWR_CTRL (Bitfield-Mask: 0x03)                   */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM6_PWR_CTRL_Pos (12UL)           /*!< RAM6_PWR_CTRL (Bit 12)                                */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM6_PWR_CTRL_Msk (0x3000UL)       /*!< RAM6_PWR_CTRL (Bitfield-Mask: 0x03)                   */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM5_PWR_CTRL_Pos (10UL)           /*!< RAM5_PWR_CTRL (Bit 10)                                */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM5_PWR_CTRL_Msk (0xc00UL)        /*!< RAM5_PWR_CTRL (Bitfield-Mask: 0x03)                   */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM4_PWR_CTRL_Pos (8UL)            /*!< RAM4_PWR_CTRL (Bit 8)                                 */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM4_PWR_CTRL_Msk (0x300UL)        /*!< RAM4_PWR_CTRL (Bitfield-Mask: 0x03)                   */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM3_PWR_CTRL_Pos (6UL)            /*!< RAM3_PWR_CTRL (Bit 6)                                 */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM3_PWR_CTRL_Msk (0xc0UL)         /*!< RAM3_PWR_CTRL (Bitfield-Mask: 0x03)                   */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM2_PWR_CTRL_Pos (4UL)            /*!< RAM2_PWR_CTRL (Bit 4)                                 */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM2_PWR_CTRL_Msk (0x30UL)         /*!< RAM2_PWR_CTRL (Bitfield-Mask: 0x03)                   */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM1_PWR_CTRL_Pos (2UL)            /*!< RAM1_PWR_CTRL (Bit 2)                                 */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM1_PWR_CTRL_Msk (0xcUL)          /*!< RAM1_PWR_CTRL (Bitfield-Mask: 0x03)                   */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM0_PWR_CTRL_Pos (0UL)            /*!< RAM0_PWR_CTRL (Bit 0)                                 */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM0_PWR_CTRL_Msk (0x3UL)          /*!< RAM0_PWR_CTRL (Bitfield-Mask: 0x03)                   */
/* ====================================================  RESET_STAT_REG  ===================================================== */
#define CRG_TOP_RESET_STAT_REG_SNC_WDOGRESET_STAT_Pos (6UL)         /*!< SNC_WDOGRESET_STAT (Bit 6)                            */
#define CRG_TOP_RESET_STAT_REG_SNC_WDOGRESET_STAT_Msk (0x40UL)      /*!< SNC_WDOGRESET_STAT (Bitfield-Mask: 0x01)              */
#define CRG_TOP_RESET_STAT_REG_CMAC_WDOGRESET_STAT_Pos (5UL)        /*!< CMAC_WDOGRESET_STAT (Bit 5)                           */
#define CRG_TOP_RESET_STAT_REG_CMAC_WDOGRESET_STAT_Msk (0x20UL)     /*!< CMAC_WDOGRESET_STAT (Bitfield-Mask: 0x01)             */
#define CRG_TOP_RESET_STAT_REG_SWD_HWRESET_STAT_Pos (4UL)           /*!< SWD_HWRESET_STAT (Bit 4)                              */
#define CRG_TOP_RESET_STAT_REG_SWD_HWRESET_STAT_Msk (0x10UL)        /*!< SWD_HWRESET_STAT (Bitfield-Mask: 0x01)                */
#define CRG_TOP_RESET_STAT_REG_WDOGRESET_STAT_Pos (3UL)             /*!< WDOGRESET_STAT (Bit 3)                                */
#define CRG_TOP_RESET_STAT_REG_WDOGRESET_STAT_Msk (0x8UL)           /*!< WDOGRESET_STAT (Bitfield-Mask: 0x01)                  */
#define CRG_TOP_RESET_STAT_REG_SWRESET_STAT_Pos (2UL)               /*!< SWRESET_STAT (Bit 2)                                  */
#define CRG_TOP_RESET_STAT_REG_SWRESET_STAT_Msk (0x4UL)             /*!< SWRESET_STAT (Bitfield-Mask: 0x01)                    */
#define CRG_TOP_RESET_STAT_REG_HWRESET_STAT_Pos (1UL)               /*!< HWRESET_STAT (Bit 1)                                  */
#define CRG_TOP_RESET_STAT_REG_HWRESET_STAT_Msk (0x2UL)             /*!< HWRESET_STAT (Bitfield-Mask: 0x01)                    */
#define CRG_TOP_RESET_STAT_REG_PORESET_STAT_Pos (0UL)               /*!< PORESET_STAT (Bit 0)                                  */
#define CRG_TOP_RESET_STAT_REG_PORESET_STAT_Msk (0x1UL)             /*!< PORESET_STAT (Bitfield-Mask: 0x01)                    */
/* =====================================================  RST_CTRL_REG  ====================================================== */
#define CRG_TOP_RST_CTRL_REG_SYS_CACHE_FLUSH_WITH_SW_RESET_Pos (0UL) /*!< SYS_CACHE_FLUSH_WITH_SW_RESET (Bit 0)                */
#define CRG_TOP_RST_CTRL_REG_SYS_CACHE_FLUSH_WITH_SW_RESET_Msk (0x1UL) /*!< SYS_CACHE_FLUSH_WITH_SW_RESET (Bitfield-Mask: 0x01) */
/* ====================================================  SECURE_BOOT_REG  ==================================================== */
#define CRG_TOP_SECURE_BOOT_REG_PROT_OTP_CS_WRITE_Pos (9UL)         /*!< PROT_OTP_CS_WRITE (Bit 9)                             */
#define CRG_TOP_SECURE_BOOT_REG_PROT_OTP_CS_WRITE_Msk (0x200UL)     /*!< PROT_OTP_CS_WRITE (Bitfield-Mask: 0x01)               */
#define CRG_TOP_SECURE_BOOT_REG_FORCE_SNC_DEBUGGER_OFF_Pos (8UL)    /*!< FORCE_SNC_DEBUGGER_OFF (Bit 8)                        */
#define CRG_TOP_SECURE_BOOT_REG_FORCE_SNC_DEBUGGER_OFF_Msk (0x100UL) /*!< FORCE_SNC_DEBUGGER_OFF (Bitfield-Mask: 0x01)         */
#define CRG_TOP_SECURE_BOOT_REG_PROT_OQSPIF_KEY_READ_Pos (7UL)      /*!< PROT_OQSPIF_KEY_READ (Bit 7)                          */
#define CRG_TOP_SECURE_BOOT_REG_PROT_OQSPIF_KEY_READ_Msk (0x80UL)   /*!< PROT_OQSPIF_KEY_READ (Bitfield-Mask: 0x01)            */
#define CRG_TOP_SECURE_BOOT_REG_PROT_OQSPIF_KEY_WRITE_Pos (6UL)     /*!< PROT_OQSPIF_KEY_WRITE (Bit 6)                         */
#define CRG_TOP_SECURE_BOOT_REG_PROT_OQSPIF_KEY_WRITE_Msk (0x40UL)  /*!< PROT_OQSPIF_KEY_WRITE (Bitfield-Mask: 0x01)           */
#define CRG_TOP_SECURE_BOOT_REG_PROT_AES_KEY_READ_Pos (5UL)         /*!< PROT_AES_KEY_READ (Bit 5)                             */
#define CRG_TOP_SECURE_BOOT_REG_PROT_AES_KEY_READ_Msk (0x20UL)      /*!< PROT_AES_KEY_READ (Bitfield-Mask: 0x01)               */
#define CRG_TOP_SECURE_BOOT_REG_PROT_AES_KEY_WRITE_Pos (4UL)        /*!< PROT_AES_KEY_WRITE (Bit 4)                            */
#define CRG_TOP_SECURE_BOOT_REG_PROT_AES_KEY_WRITE_Msk (0x10UL)     /*!< PROT_AES_KEY_WRITE (Bitfield-Mask: 0x01)              */
#define CRG_TOP_SECURE_BOOT_REG_PROT_SIG_KEY_WRITE_Pos (3UL)        /*!< PROT_SIG_KEY_WRITE (Bit 3)                            */
#define CRG_TOP_SECURE_BOOT_REG_PROT_SIG_KEY_WRITE_Msk (0x8UL)      /*!< PROT_SIG_KEY_WRITE (Bitfield-Mask: 0x01)              */
#define CRG_TOP_SECURE_BOOT_REG_FORCE_CMAC_DEBUGGER_OFF_Pos (2UL)   /*!< FORCE_CMAC_DEBUGGER_OFF (Bit 2)                       */
#define CRG_TOP_SECURE_BOOT_REG_FORCE_CMAC_DEBUGGER_OFF_Msk (0x4UL) /*!< FORCE_CMAC_DEBUGGER_OFF (Bitfield-Mask: 0x01)         */
#define CRG_TOP_SECURE_BOOT_REG_FORCE_DEBUGGER_OFF_Pos (1UL)        /*!< FORCE_DEBUGGER_OFF (Bit 1)                            */
#define CRG_TOP_SECURE_BOOT_REG_FORCE_DEBUGGER_OFF_Msk (0x2UL)      /*!< FORCE_DEBUGGER_OFF (Bitfield-Mask: 0x01)              */
#define CRG_TOP_SECURE_BOOT_REG_SECURE_BOOT_Pos (0UL)               /*!< SECURE_BOOT (Bit 0)                                   */
#define CRG_TOP_SECURE_BOOT_REG_SECURE_BOOT_Msk (0x1UL)             /*!< SECURE_BOOT (Bitfield-Mask: 0x01)                     */
/* ======================================================  SLP_MAP_REG  ====================================================== */
#define CRG_TOP_SLP_MAP_REG_LCD_INV_EXT_CLK_SLP_MAP_Pos (8UL)       /*!< LCD_INV_EXT_CLK_SLP_MAP (Bit 8)                       */
#define CRG_TOP_SLP_MAP_REG_LCD_INV_EXT_CLK_SLP_MAP_Msk (0x100UL)   /*!< LCD_INV_EXT_CLK_SLP_MAP (Bitfield-Mask: 0x01)         */
#define CRG_TOP_SLP_MAP_REG_LCD_EXT_CLK_SLP_MAP_Pos (7UL)           /*!< LCD_EXT_CLK_SLP_MAP (Bit 7)                           */
#define CRG_TOP_SLP_MAP_REG_LCD_EXT_CLK_SLP_MAP_Msk (0x80UL)        /*!< LCD_EXT_CLK_SLP_MAP (Bitfield-Mask: 0x01)             */
#define CRG_TOP_SLP_MAP_REG_BANDGAP_SLP_MAP_Pos (6UL)               /*!< BANDGAP_SLP_MAP (Bit 6)                               */
#define CRG_TOP_SLP_MAP_REG_BANDGAP_SLP_MAP_Msk (0x40UL)            /*!< BANDGAP_SLP_MAP (Bitfield-Mask: 0x01)                 */
#define CRG_TOP_SLP_MAP_REG_RCLP_SLP_MAP_Pos (5UL)                  /*!< RCLP_SLP_MAP (Bit 5)                                  */
#define CRG_TOP_SLP_MAP_REG_RCLP_SLP_MAP_Msk (0x20UL)               /*!< RCLP_SLP_MAP (Bitfield-Mask: 0x01)                    */
#define CRG_TOP_SLP_MAP_REG_XTAL32K_SLP_MAP_Pos (4UL)               /*!< XTAL32K_SLP_MAP (Bit 4)                               */
#define CRG_TOP_SLP_MAP_REG_XTAL32K_SLP_MAP_Msk (0x10UL)            /*!< XTAL32K_SLP_MAP (Bitfield-Mask: 0x01)                 */
#define CRG_TOP_SLP_MAP_REG_RCX_SLP_MAP_Pos (3UL)                   /*!< RCX_SLP_MAP (Bit 3)                                   */
#define CRG_TOP_SLP_MAP_REG_RCX_SLP_MAP_Msk (0x8UL)                 /*!< RCX_SLP_MAP (Bitfield-Mask: 0x01)                     */
#define CRG_TOP_SLP_MAP_REG_TMR4_PWM_SLP_MAP_Pos (2UL)              /*!< TMR4_PWM_SLP_MAP (Bit 2)                              */
#define CRG_TOP_SLP_MAP_REG_TMR4_PWM_SLP_MAP_Msk (0x4UL)            /*!< TMR4_PWM_SLP_MAP (Bitfield-Mask: 0x01)                */
#define CRG_TOP_SLP_MAP_REG_TMR3_PWM_SLP_MAP_Pos (1UL)              /*!< TMR3_PWM_SLP_MAP (Bit 1)                              */
#define CRG_TOP_SLP_MAP_REG_TMR3_PWM_SLP_MAP_Msk (0x2UL)            /*!< TMR3_PWM_SLP_MAP (Bitfield-Mask: 0x01)                */
#define CRG_TOP_SLP_MAP_REG_TMR_PWM_SLP_MAP_Pos (0UL)               /*!< TMR_PWM_SLP_MAP (Bit 0)                               */
#define CRG_TOP_SLP_MAP_REG_TMR_PWM_SLP_MAP_Msk (0x1UL)             /*!< TMR_PWM_SLP_MAP (Bitfield-Mask: 0x01)                 */
/* ======================================================  SW_V18F_REG  ====================================================== */
#define CRG_TOP_SW_V18F_REG_DELAY_TRIM_Pos (2UL)                    /*!< DELAY_TRIM (Bit 2)                                    */
#define CRG_TOP_SW_V18F_REG_DELAY_TRIM_Msk (0xcUL)                  /*!< DELAY_TRIM (Bitfield-Mask: 0x03)                      */
#define CRG_TOP_SW_V18F_REG_SKIP_SOFT_START_Pos (1UL)               /*!< SKIP_SOFT_START (Bit 1)                               */
#define CRG_TOP_SW_V18F_REG_SKIP_SOFT_START_Msk (0x2UL)             /*!< SKIP_SOFT_START (Bitfield-Mask: 0x01)                 */
#define CRG_TOP_SW_V18F_REG_FORCE_SW_ON_Pos (0UL)                   /*!< FORCE_SW_ON (Bit 0)                                   */
#define CRG_TOP_SW_V18F_REG_FORCE_SW_ON_Msk (0x1UL)                 /*!< FORCE_SW_ON (Bitfield-Mask: 0x01)                     */
/* =====================================================  SYS_CTRL_REG  ====================================================== */
#define CRG_TOP_SYS_CTRL_REG_SW_RESET_Pos (15UL)                    /*!< SW_RESET (Bit 15)                                     */
#define CRG_TOP_SYS_CTRL_REG_SW_RESET_Msk (0x8000UL)                /*!< SW_RESET (Bitfield-Mask: 0x01)                        */
#define CRG_TOP_SYS_CTRL_REG_CACHERAM_MUX_Pos (10UL)                /*!< CACHERAM_MUX (Bit 10)                                 */
#define CRG_TOP_SYS_CTRL_REG_CACHERAM_MUX_Msk (0x400UL)             /*!< CACHERAM_MUX (Bitfield-Mask: 0x01)                    */
#define CRG_TOP_SYS_CTRL_REG_TIMEOUT_DISABLE_Pos (9UL)              /*!< TIMEOUT_DISABLE (Bit 9)                               */
#define CRG_TOP_SYS_CTRL_REG_TIMEOUT_DISABLE_Msk (0x200UL)          /*!< TIMEOUT_DISABLE (Bitfield-Mask: 0x01)                 */
#define CRG_TOP_SYS_CTRL_REG_DEBUGGER_ENABLE_Pos (7UL)              /*!< DEBUGGER_ENABLE (Bit 7)                               */
#define CRG_TOP_SYS_CTRL_REG_DEBUGGER_ENABLE_Msk (0x80UL)           /*!< DEBUGGER_ENABLE (Bitfield-Mask: 0x01)                 */
#define CRG_TOP_SYS_CTRL_REG_SNC_DEBUGGER_ENABLE_Pos (5UL)          /*!< SNC_DEBUGGER_ENABLE (Bit 5)                           */
#define CRG_TOP_SYS_CTRL_REG_SNC_DEBUGGER_ENABLE_Msk (0x20UL)       /*!< SNC_DEBUGGER_ENABLE (Bitfield-Mask: 0x01)             */
#define CRG_TOP_SYS_CTRL_REG_REMAP_INTVECT_Pos (3UL)                /*!< REMAP_INTVECT (Bit 3)                                 */
#define CRG_TOP_SYS_CTRL_REG_REMAP_INTVECT_Msk (0x8UL)              /*!< REMAP_INTVECT (Bitfield-Mask: 0x01)                   */
#define CRG_TOP_SYS_CTRL_REG_REMAP_ADR0_Pos (0UL)                   /*!< REMAP_ADR0 (Bit 0)                                    */
#define CRG_TOP_SYS_CTRL_REG_REMAP_ADR0_Msk (0x7UL)                 /*!< REMAP_ADR0 (Bitfield-Mask: 0x07)                      */
/* =====================================================  SYS_STAT_REG  ====================================================== */
#define CRG_TOP_SYS_STAT_REG_GPU_IS_UP_Pos (17UL)                   /*!< GPU_IS_UP (Bit 17)                                    */
#define CRG_TOP_SYS_STAT_REG_GPU_IS_UP_Msk (0x20000UL)              /*!< GPU_IS_UP (Bitfield-Mask: 0x01)                       */
#define CRG_TOP_SYS_STAT_REG_GPU_IS_DOWN_Pos (16UL)                 /*!< GPU_IS_DOWN (Bit 16)                                  */
#define CRG_TOP_SYS_STAT_REG_GPU_IS_DOWN_Msk (0x10000UL)            /*!< GPU_IS_DOWN (Bitfield-Mask: 0x01)                     */
#define CRG_TOP_SYS_STAT_REG_CTRL_IS_UP_Pos (15UL)                  /*!< CTRL_IS_UP (Bit 15)                                   */
#define CRG_TOP_SYS_STAT_REG_CTRL_IS_UP_Msk (0x8000UL)              /*!< CTRL_IS_UP (Bitfield-Mask: 0x01)                      */
#define CRG_TOP_SYS_STAT_REG_CTRL_IS_DOWN_Pos (14UL)                /*!< CTRL_IS_DOWN (Bit 14)                                 */
#define CRG_TOP_SYS_STAT_REG_CTRL_IS_DOWN_Msk (0x4000UL)            /*!< CTRL_IS_DOWN (Bitfield-Mask: 0x01)                    */
#define CRG_TOP_SYS_STAT_REG_POWER_IS_UP_Pos (13UL)                 /*!< POWER_IS_UP (Bit 13)                                  */
#define CRG_TOP_SYS_STAT_REG_POWER_IS_UP_Msk (0x2000UL)             /*!< POWER_IS_UP (Bitfield-Mask: 0x01)                     */
#define CRG_TOP_SYS_STAT_REG_DBG_IS_ACTIVE_Pos (12UL)               /*!< DBG_IS_ACTIVE (Bit 12)                                */
#define CRG_TOP_SYS_STAT_REG_DBG_IS_ACTIVE_Msk (0x1000UL)           /*!< DBG_IS_ACTIVE (Bitfield-Mask: 0x01)                   */
#define CRG_TOP_SYS_STAT_REG_SNC_IS_UP_Pos (11UL)                   /*!< SNC_IS_UP (Bit 11)                                    */
#define CRG_TOP_SYS_STAT_REG_SNC_IS_UP_Msk (0x800UL)                /*!< SNC_IS_UP (Bitfield-Mask: 0x01)                       */
#define CRG_TOP_SYS_STAT_REG_SNC_IS_DOWN_Pos (10UL)                 /*!< SNC_IS_DOWN (Bit 10)                                  */
#define CRG_TOP_SYS_STAT_REG_SNC_IS_DOWN_Msk (0x400UL)              /*!< SNC_IS_DOWN (Bitfield-Mask: 0x01)                     */
#define CRG_TOP_SYS_STAT_REG_TIM_IS_UP_Pos (9UL)                    /*!< TIM_IS_UP (Bit 9)                                     */
#define CRG_TOP_SYS_STAT_REG_TIM_IS_UP_Msk (0x200UL)                /*!< TIM_IS_UP (Bitfield-Mask: 0x01)                       */
#define CRG_TOP_SYS_STAT_REG_TIM_IS_DOWN_Pos (8UL)                  /*!< TIM_IS_DOWN (Bit 8)                                   */
#define CRG_TOP_SYS_STAT_REG_TIM_IS_DOWN_Msk (0x100UL)              /*!< TIM_IS_DOWN (Bitfield-Mask: 0x01)                     */
#define CRG_TOP_SYS_STAT_REG_MEM_IS_UP_Pos (7UL)                    /*!< MEM_IS_UP (Bit 7)                                     */
#define CRG_TOP_SYS_STAT_REG_MEM_IS_UP_Msk (0x80UL)                 /*!< MEM_IS_UP (Bitfield-Mask: 0x01)                       */
#define CRG_TOP_SYS_STAT_REG_MEM_IS_DOWN_Pos (6UL)                  /*!< MEM_IS_DOWN (Bit 6)                                   */
#define CRG_TOP_SYS_STAT_REG_MEM_IS_DOWN_Msk (0x40UL)               /*!< MEM_IS_DOWN (Bitfield-Mask: 0x01)                     */
#define CRG_TOP_SYS_STAT_REG_SYS_IS_UP_Pos (5UL)                    /*!< SYS_IS_UP (Bit 5)                                     */
#define CRG_TOP_SYS_STAT_REG_SYS_IS_UP_Msk (0x20UL)                 /*!< SYS_IS_UP (Bitfield-Mask: 0x01)                       */
#define CRG_TOP_SYS_STAT_REG_SYS_IS_DOWN_Pos (4UL)                  /*!< SYS_IS_DOWN (Bit 4)                                   */
#define CRG_TOP_SYS_STAT_REG_SYS_IS_DOWN_Msk (0x10UL)               /*!< SYS_IS_DOWN (Bitfield-Mask: 0x01)                     */
#define CRG_TOP_SYS_STAT_REG_AUD_IS_UP_Pos (3UL)                    /*!< AUD_IS_UP (Bit 3)                                     */
#define CRG_TOP_SYS_STAT_REG_AUD_IS_UP_Msk (0x8UL)                  /*!< AUD_IS_UP (Bitfield-Mask: 0x01)                       */
#define CRG_TOP_SYS_STAT_REG_AUD_IS_DOWN_Pos (2UL)                  /*!< AUD_IS_DOWN (Bit 2)                                   */
#define CRG_TOP_SYS_STAT_REG_AUD_IS_DOWN_Msk (0x4UL)                /*!< AUD_IS_DOWN (Bitfield-Mask: 0x01)                     */
#define CRG_TOP_SYS_STAT_REG_RAD_IS_UP_Pos (1UL)                    /*!< RAD_IS_UP (Bit 1)                                     */
#define CRG_TOP_SYS_STAT_REG_RAD_IS_UP_Msk (0x2UL)                  /*!< RAD_IS_UP (Bitfield-Mask: 0x01)                       */
#define CRG_TOP_SYS_STAT_REG_RAD_IS_DOWN_Pos (0UL)                  /*!< RAD_IS_DOWN (Bit 0)                                   */
#define CRG_TOP_SYS_STAT_REG_RAD_IS_DOWN_Msk (0x1UL)                /*!< RAD_IS_DOWN (Bitfield-Mask: 0x01)                     */
/* ==================================================  VBUS_IRQ_CLEAR_REG  =================================================== */
#define CRG_TOP_VBUS_IRQ_CLEAR_REG_VBUS_IRQ_CLEAR_Pos (0UL)         /*!< VBUS_IRQ_CLEAR (Bit 0)                                */
#define CRG_TOP_VBUS_IRQ_CLEAR_REG_VBUS_IRQ_CLEAR_Msk (0xffffUL)    /*!< VBUS_IRQ_CLEAR (Bitfield-Mask: 0xffff)                */
/* ===================================================  VBUS_IRQ_MASK_REG  =================================================== */
#define CRG_TOP_VBUS_IRQ_MASK_REG_VBUS_IRQ_EN_RISE_Pos (1UL)        /*!< VBUS_IRQ_EN_RISE (Bit 1)                              */
#define CRG_TOP_VBUS_IRQ_MASK_REG_VBUS_IRQ_EN_RISE_Msk (0x2UL)      /*!< VBUS_IRQ_EN_RISE (Bitfield-Mask: 0x01)                */
#define CRG_TOP_VBUS_IRQ_MASK_REG_VBUS_IRQ_EN_FALL_Pos (0UL)        /*!< VBUS_IRQ_EN_FALL (Bit 0)                              */
#define CRG_TOP_VBUS_IRQ_MASK_REG_VBUS_IRQ_EN_FALL_Msk (0x1UL)      /*!< VBUS_IRQ_EN_FALL (Bitfield-Mask: 0x01)                */
/* ===================================================  WAKEUP_HIBERN_REG  =================================================== */
#define CRG_TOP_WAKEUP_HIBERN_REG_HIBERNATION_ENABLE_Pos (12UL)     /*!< HIBERNATION_ENABLE (Bit 12)                           */
#define CRG_TOP_WAKEUP_HIBERN_REG_HIBERNATION_ENABLE_Msk (0x1000UL) /*!< HIBERNATION_ENABLE (Bitfield-Mask: 0x01)              */
#define CRG_TOP_WAKEUP_HIBERN_REG_WAKEUP_PD_EN_Pos (6UL)            /*!< WAKEUP_PD_EN (Bit 6)                                  */
#define CRG_TOP_WAKEUP_HIBERN_REG_WAKEUP_PD_EN_Msk (0x3c0UL)        /*!< WAKEUP_PD_EN (Bitfield-Mask: 0x0f)                    */
#define CRG_TOP_WAKEUP_HIBERN_REG_WAKEUP_EN_Pos (0UL)               /*!< WAKEUP_EN (Bit 0)                                     */
#define CRG_TOP_WAKEUP_HIBERN_REG_WAKEUP_EN_Msk (0xfUL)             /*!< WAKEUP_EN (Bitfield-Mask: 0x0f)                       */


/* =========================================================================================================================== */
/* ================                                         CRG_VSYS                                          ================ */
/* =========================================================================================================================== */

/* ===================================================  VSYS_GEN_CTRL_REG  =================================================== */
#define CRG_VSYS_VSYS_GEN_CTRL_REG_FORCE_VBAT_VSYS_SW_Pos (23UL)    /*!< FORCE_VBAT_VSYS_SW (Bit 23)                           */
#define CRG_VSYS_VSYS_GEN_CTRL_REG_FORCE_VBAT_VSYS_SW_Msk (0x1800000UL) /*!< FORCE_VBAT_VSYS_SW (Bitfield-Mask: 0x03)          */
#define CRG_VSYS_VSYS_GEN_CTRL_REG_FORCE_LDO_ENABLE_Pos (21UL)      /*!< FORCE_LDO_ENABLE (Bit 21)                             */
#define CRG_VSYS_VSYS_GEN_CTRL_REG_FORCE_LDO_ENABLE_Msk (0x600000UL) /*!< FORCE_LDO_ENABLE (Bitfield-Mask: 0x03)               */
#define CRG_VSYS_VSYS_GEN_CTRL_REG_LDO_TEMP_PROTECT_MODE_Pos (19UL) /*!< LDO_TEMP_PROTECT_MODE (Bit 19)                        */
#define CRG_VSYS_VSYS_GEN_CTRL_REG_LDO_TEMP_PROTECT_MODE_Msk (0x180000UL) /*!< LDO_TEMP_PROTECT_MODE (Bitfield-Mask: 0x03)     */
#define CRG_VSYS_VSYS_GEN_CTRL_REG_EN_HEADROOM_Pos (18UL)           /*!< EN_HEADROOM (Bit 18)                                  */
#define CRG_VSYS_VSYS_GEN_CTRL_REG_EN_HEADROOM_Msk (0x40000UL)      /*!< EN_HEADROOM (Bitfield-Mask: 0x01)                     */
#define CRG_VSYS_VSYS_GEN_CTRL_REG_CURLIM_OFFSET_TRIM_Pos (13UL)    /*!< CURLIM_OFFSET_TRIM (Bit 13)                           */
#define CRG_VSYS_VSYS_GEN_CTRL_REG_CURLIM_OFFSET_TRIM_Msk (0x3e000UL) /*!< CURLIM_OFFSET_TRIM (Bitfield-Mask: 0x1f)            */
#define CRG_VSYS_VSYS_GEN_CTRL_REG_CURLIM_GAIN_TRIM_Pos (8UL)       /*!< CURLIM_GAIN_TRIM (Bit 8)                              */
#define CRG_VSYS_VSYS_GEN_CTRL_REG_CURLIM_GAIN_TRIM_Msk (0x1f00UL)  /*!< CURLIM_GAIN_TRIM (Bitfield-Mask: 0x1f)                */
#define CRG_VSYS_VSYS_GEN_CTRL_REG_CURLIM_SET_Pos (1UL)             /*!< CURLIM_SET (Bit 1)                                    */
#define CRG_VSYS_VSYS_GEN_CTRL_REG_CURLIM_SET_Msk (0xfeUL)          /*!< CURLIM_SET (Bitfield-Mask: 0x7f)                      */
#define CRG_VSYS_VSYS_GEN_CTRL_REG_EN_CURLIM_Pos (0UL)              /*!< EN_CURLIM (Bit 0)                                     */
#define CRG_VSYS_VSYS_GEN_CTRL_REG_EN_CURLIM_Msk (0x1UL)            /*!< EN_CURLIM (Bitfield-Mask: 0x01)                       */
/* ================================================  VSYS_GEN_IRQ_CLEAR_REG  ================================================= */
#define CRG_VSYS_VSYS_GEN_IRQ_CLEAR_REG_VBUS_LOW_DRIVE_IRQ_CLEAR_Pos (1UL) /*!< VBUS_LOW_DRIVE_IRQ_CLEAR (Bit 1)               */
#define CRG_VSYS_VSYS_GEN_IRQ_CLEAR_REG_VBUS_LOW_DRIVE_IRQ_CLEAR_Msk (0x2UL) /*!< VBUS_LOW_DRIVE_IRQ_CLEAR (Bitfield-Mask: 0x01) */
#define CRG_VSYS_VSYS_GEN_IRQ_CLEAR_REG_LDO_VSYS_HIGH_TEMP_IRQ_CLEAR_Pos (0UL) /*!< LDO_VSYS_HIGH_TEMP_IRQ_CLEAR (Bit 0)       */
#define CRG_VSYS_VSYS_GEN_IRQ_CLEAR_REG_LDO_VSYS_HIGH_TEMP_IRQ_CLEAR_Msk (0x1UL) /*!< LDO_VSYS_HIGH_TEMP_IRQ_CLEAR (Bitfield-Mask: 0x01) */
/* =================================================  VSYS_GEN_IRQ_MASK_REG  ================================================= */
#define CRG_VSYS_VSYS_GEN_IRQ_MASK_REG_VBUS_LOW_DRIVE_IRQ_MASK_Pos (1UL) /*!< VBUS_LOW_DRIVE_IRQ_MASK (Bit 1)                  */
#define CRG_VSYS_VSYS_GEN_IRQ_MASK_REG_VBUS_LOW_DRIVE_IRQ_MASK_Msk (0x2UL) /*!< VBUS_LOW_DRIVE_IRQ_MASK (Bitfield-Mask: 0x01)  */
#define CRG_VSYS_VSYS_GEN_IRQ_MASK_REG_LDO_VSYS_HIGH_TEMP_IRQ_MASK_Pos (0UL) /*!< LDO_VSYS_HIGH_TEMP_IRQ_MASK (Bit 0)          */
#define CRG_VSYS_VSYS_GEN_IRQ_MASK_REG_LDO_VSYS_HIGH_TEMP_IRQ_MASK_Msk (0x1UL) /*!< LDO_VSYS_HIGH_TEMP_IRQ_MASK (Bitfield-Mask: 0x01) */
/* ================================================  VSYS_GEN_IRQ_STATUS_REG  ================================================ */
#define CRG_VSYS_VSYS_GEN_IRQ_STATUS_REG_VBUS_LOW_DRIVE_IRQ_STATUS_Pos (1UL) /*!< VBUS_LOW_DRIVE_IRQ_STATUS (Bit 1)            */
#define CRG_VSYS_VSYS_GEN_IRQ_STATUS_REG_VBUS_LOW_DRIVE_IRQ_STATUS_Msk (0x2UL) /*!< VBUS_LOW_DRIVE_IRQ_STATUS (Bitfield-Mask: 0x01) */
#define CRG_VSYS_VSYS_GEN_IRQ_STATUS_REG_LDO_VSYS_HIGH_TEMP_IRQ_STATUS_Pos (0UL) /*!< LDO_VSYS_HIGH_TEMP_IRQ_STATUS (Bit 0)    */
#define CRG_VSYS_VSYS_GEN_IRQ_STATUS_REG_LDO_VSYS_HIGH_TEMP_IRQ_STATUS_Msk (0x1UL) /*!< LDO_VSYS_HIGH_TEMP_IRQ_STATUS (Bitfield-Mask: 0x01) */


/* =========================================================================================================================== */
/* ================                                         CRG_XTAL                                          ================ */
/* =========================================================================================================================== */

/* ===================================================  PLL_SYS_CTRL1_REG  =================================================== */
#define CRG_XTAL_PLL_SYS_CTRL1_REG_PLL_OUT_DIV_Pos (15UL)           /*!< PLL_OUT_DIV (Bit 15)                                  */
#define CRG_XTAL_PLL_SYS_CTRL1_REG_PLL_OUT_DIV_Msk (0x8000UL)       /*!< PLL_OUT_DIV (Bitfield-Mask: 0x01)                     */
#define CRG_XTAL_PLL_SYS_CTRL1_REG_PLL_SEL_MIN_CUR_INT_Pos (14UL)   /*!< PLL_SEL_MIN_CUR_INT (Bit 14)                          */
#define CRG_XTAL_PLL_SYS_CTRL1_REG_PLL_SEL_MIN_CUR_INT_Msk (0x4000UL) /*!< PLL_SEL_MIN_CUR_INT (Bitfield-Mask: 0x01)           */
#define CRG_XTAL_PLL_SYS_CTRL1_REG_PLL_PRE_DIV_Pos (11UL)           /*!< PLL_PRE_DIV (Bit 11)                                  */
#define CRG_XTAL_PLL_SYS_CTRL1_REG_PLL_PRE_DIV_Msk (0x800UL)        /*!< PLL_PRE_DIV (Bitfield-Mask: 0x01)                     */
#define CRG_XTAL_PLL_SYS_CTRL1_REG_PLL_N_DIV_Pos (4UL)              /*!< PLL_N_DIV (Bit 4)                                     */
#define CRG_XTAL_PLL_SYS_CTRL1_REG_PLL_N_DIV_Msk (0x7f0UL)          /*!< PLL_N_DIV (Bitfield-Mask: 0x7f)                       */
#define CRG_XTAL_PLL_SYS_CTRL1_REG_LDO_PLL_VREF_HOLD_Pos (3UL)      /*!< LDO_PLL_VREF_HOLD (Bit 3)                             */
#define CRG_XTAL_PLL_SYS_CTRL1_REG_LDO_PLL_VREF_HOLD_Msk (0x8UL)    /*!< LDO_PLL_VREF_HOLD (Bitfield-Mask: 0x01)               */
#define CRG_XTAL_PLL_SYS_CTRL1_REG_LDO_PLL_ENABLE_Pos (2UL)         /*!< LDO_PLL_ENABLE (Bit 2)                                */
#define CRG_XTAL_PLL_SYS_CTRL1_REG_LDO_PLL_ENABLE_Msk (0x4UL)       /*!< LDO_PLL_ENABLE (Bitfield-Mask: 0x01)                  */
#define CRG_XTAL_PLL_SYS_CTRL1_REG_PLL_RST_N_Pos (1UL)              /*!< PLL_RST_N (Bit 1)                                     */
#define CRG_XTAL_PLL_SYS_CTRL1_REG_PLL_RST_N_Msk (0x2UL)            /*!< PLL_RST_N (Bitfield-Mask: 0x01)                       */
#define CRG_XTAL_PLL_SYS_CTRL1_REG_PLL_EN_Pos (0UL)                 /*!< PLL_EN (Bit 0)                                        */
#define CRG_XTAL_PLL_SYS_CTRL1_REG_PLL_EN_Msk (0x1UL)               /*!< PLL_EN (Bitfield-Mask: 0x01)                          */
/* ===================================================  PLL_SYS_CTRL2_REG  =================================================== */
#define CRG_XTAL_PLL_SYS_CTRL2_REG_PLL_RECALIB_Pos (15UL)           /*!< PLL_RECALIB (Bit 15)                                  */
#define CRG_XTAL_PLL_SYS_CTRL2_REG_PLL_RECALIB_Msk (0x8000UL)       /*!< PLL_RECALIB (Bitfield-Mask: 0x01)                     */
/* ===================================================  PLL_SYS_CTRL3_REG  =================================================== */
#define CRG_XTAL_PLL_SYS_CTRL3_REG_PLL_MIN_CURRENT_Pos (1UL)        /*!< PLL_MIN_CURRENT (Bit 1)                               */
#define CRG_XTAL_PLL_SYS_CTRL3_REG_PLL_MIN_CURRENT_Msk (0x7eUL)     /*!< PLL_MIN_CURRENT (Bitfield-Mask: 0x3f)                 */
/* ==================================================  PLL_SYS_STATUS_REG  =================================================== */
#define CRG_XTAL_PLL_SYS_STATUS_REG_LDO_PLL_OK_Pos (15UL)           /*!< LDO_PLL_OK (Bit 15)                                   */
#define CRG_XTAL_PLL_SYS_STATUS_REG_LDO_PLL_OK_Msk (0x8000UL)       /*!< LDO_PLL_OK (Bitfield-Mask: 0x01)                      */
#define CRG_XTAL_PLL_SYS_STATUS_REG_PLL_CALIBRATION_END_Pos (11UL)  /*!< PLL_CALIBRATION_END (Bit 11)                          */
#define CRG_XTAL_PLL_SYS_STATUS_REG_PLL_CALIBRATION_END_Msk (0x800UL) /*!< PLL_CALIBRATION_END (Bitfield-Mask: 0x01)           */
#define CRG_XTAL_PLL_SYS_STATUS_REG_PLL_BEST_MIN_CUR_Pos (5UL)      /*!< PLL_BEST_MIN_CUR (Bit 5)                              */
#define CRG_XTAL_PLL_SYS_STATUS_REG_PLL_BEST_MIN_CUR_Msk (0x7e0UL)  /*!< PLL_BEST_MIN_CUR (Bitfield-Mask: 0x3f)                */
#define CRG_XTAL_PLL_SYS_STATUS_REG_PLL_LOCK_FINE_Pos (0UL)         /*!< PLL_LOCK_FINE (Bit 0)                                 */
#define CRG_XTAL_PLL_SYS_STATUS_REG_PLL_LOCK_FINE_Msk (0x1UL)       /*!< PLL_LOCK_FINE (Bitfield-Mask: 0x01)                   */
/* ===================================================  PLL_USB_CTRL1_REG  =================================================== */
#define CRG_XTAL_PLL_USB_CTRL1_REG_PLL_OUT_DIV_Pos (15UL)           /*!< PLL_OUT_DIV (Bit 15)                                  */
#define CRG_XTAL_PLL_USB_CTRL1_REG_PLL_OUT_DIV_Msk (0x8000UL)       /*!< PLL_OUT_DIV (Bitfield-Mask: 0x01)                     */
#define CRG_XTAL_PLL_USB_CTRL1_REG_PLL_SEL_MIN_CUR_INT_Pos (14UL)   /*!< PLL_SEL_MIN_CUR_INT (Bit 14)                          */
#define CRG_XTAL_PLL_USB_CTRL1_REG_PLL_SEL_MIN_CUR_INT_Msk (0x4000UL) /*!< PLL_SEL_MIN_CUR_INT (Bitfield-Mask: 0x01)           */
#define CRG_XTAL_PLL_USB_CTRL1_REG_PLL_PRE_DIV_Pos (11UL)           /*!< PLL_PRE_DIV (Bit 11)                                  */
#define CRG_XTAL_PLL_USB_CTRL1_REG_PLL_PRE_DIV_Msk (0x800UL)        /*!< PLL_PRE_DIV (Bitfield-Mask: 0x01)                     */
#define CRG_XTAL_PLL_USB_CTRL1_REG_PLL_N_DIV_Pos (4UL)              /*!< PLL_N_DIV (Bit 4)                                     */
#define CRG_XTAL_PLL_USB_CTRL1_REG_PLL_N_DIV_Msk (0x7f0UL)          /*!< PLL_N_DIV (Bitfield-Mask: 0x7f)                       */
#define CRG_XTAL_PLL_USB_CTRL1_REG_LDO_PLL_VREF_HOLD_Pos (3UL)      /*!< LDO_PLL_VREF_HOLD (Bit 3)                             */
#define CRG_XTAL_PLL_USB_CTRL1_REG_LDO_PLL_VREF_HOLD_Msk (0x8UL)    /*!< LDO_PLL_VREF_HOLD (Bitfield-Mask: 0x01)               */
#define CRG_XTAL_PLL_USB_CTRL1_REG_LDO_PLL_ENABLE_Pos (2UL)         /*!< LDO_PLL_ENABLE (Bit 2)                                */
#define CRG_XTAL_PLL_USB_CTRL1_REG_LDO_PLL_ENABLE_Msk (0x4UL)       /*!< LDO_PLL_ENABLE (Bitfield-Mask: 0x01)                  */
#define CRG_XTAL_PLL_USB_CTRL1_REG_PLL_RST_N_Pos (1UL)              /*!< PLL_RST_N (Bit 1)                                     */
#define CRG_XTAL_PLL_USB_CTRL1_REG_PLL_RST_N_Msk (0x2UL)            /*!< PLL_RST_N (Bitfield-Mask: 0x01)                       */
#define CRG_XTAL_PLL_USB_CTRL1_REG_PLL_EN_Pos (0UL)                 /*!< PLL_EN (Bit 0)                                        */
#define CRG_XTAL_PLL_USB_CTRL1_REG_PLL_EN_Msk (0x1UL)               /*!< PLL_EN (Bitfield-Mask: 0x01)                          */
/* ===================================================  PLL_USB_CTRL2_REG  =================================================== */
#define CRG_XTAL_PLL_USB_CTRL2_REG_PLL_RECALIB_Pos (15UL)           /*!< PLL_RECALIB (Bit 15)                                  */
#define CRG_XTAL_PLL_USB_CTRL2_REG_PLL_RECALIB_Msk (0x8000UL)       /*!< PLL_RECALIB (Bitfield-Mask: 0x01)                     */
/* ===================================================  PLL_USB_CTRL3_REG  =================================================== */
#define CRG_XTAL_PLL_USB_CTRL3_REG_PLL_MIN_CURRENT_Pos (1UL)        /*!< PLL_MIN_CURRENT (Bit 1)                               */
#define CRG_XTAL_PLL_USB_CTRL3_REG_PLL_MIN_CURRENT_Msk (0x7eUL)     /*!< PLL_MIN_CURRENT (Bitfield-Mask: 0x3f)                 */
/* ==================================================  PLL_USB_STATUS_REG  =================================================== */
#define CRG_XTAL_PLL_USB_STATUS_REG_LDO_PLL_OK_Pos (15UL)           /*!< LDO_PLL_OK (Bit 15)                                   */
#define CRG_XTAL_PLL_USB_STATUS_REG_LDO_PLL_OK_Msk (0x8000UL)       /*!< LDO_PLL_OK (Bitfield-Mask: 0x01)                      */
#define CRG_XTAL_PLL_USB_STATUS_REG_PLL_CALIBRATION_END_Pos (11UL)  /*!< PLL_CALIBRATION_END (Bit 11)                          */
#define CRG_XTAL_PLL_USB_STATUS_REG_PLL_CALIBRATION_END_Msk (0x800UL) /*!< PLL_CALIBRATION_END (Bitfield-Mask: 0x01)           */
#define CRG_XTAL_PLL_USB_STATUS_REG_PLL_BEST_MIN_CUR_Pos (5UL)      /*!< PLL_BEST_MIN_CUR (Bit 5)                              */
#define CRG_XTAL_PLL_USB_STATUS_REG_PLL_BEST_MIN_CUR_Msk (0x7e0UL)  /*!< PLL_BEST_MIN_CUR (Bitfield-Mask: 0x3f)                */
#define CRG_XTAL_PLL_USB_STATUS_REG_PLL_LOCK_FINE_Pos (0UL)         /*!< PLL_LOCK_FINE (Bit 0)                                 */
#define CRG_XTAL_PLL_USB_STATUS_REG_PLL_LOCK_FINE_Msk (0x1UL)       /*!< PLL_LOCK_FINE (Bitfield-Mask: 0x01)                   */
/* ================================================  RESET_SYS_IRQ_CTRL_REG  ================================================= */
#define CRG_XTAL_RESET_SYS_IRQ_CTRL_REG_CMAC2SNC_IRQ_BIT_Pos (5UL)  /*!< CMAC2SNC_IRQ_BIT (Bit 5)                              */
#define CRG_XTAL_RESET_SYS_IRQ_CTRL_REG_CMAC2SNC_IRQ_BIT_Msk (0x20UL) /*!< CMAC2SNC_IRQ_BIT (Bitfield-Mask: 0x01)              */
#define CRG_XTAL_RESET_SYS_IRQ_CTRL_REG_CMAC2SYS_IRQ_BIT_Pos (4UL)  /*!< CMAC2SYS_IRQ_BIT (Bit 4)                              */
#define CRG_XTAL_RESET_SYS_IRQ_CTRL_REG_CMAC2SYS_IRQ_BIT_Msk (0x10UL) /*!< CMAC2SYS_IRQ_BIT (Bitfield-Mask: 0x01)              */
#define CRG_XTAL_RESET_SYS_IRQ_CTRL_REG_SNC2SYS_IRQ_BIT_Pos (3UL)   /*!< SNC2SYS_IRQ_BIT (Bit 3)                               */
#define CRG_XTAL_RESET_SYS_IRQ_CTRL_REG_SNC2SYS_IRQ_BIT_Msk (0x8UL) /*!< SNC2SYS_IRQ_BIT (Bitfield-Mask: 0x01)                 */
#define CRG_XTAL_RESET_SYS_IRQ_CTRL_REG_SNC2CMAC_IRQ_BIT_Pos (2UL)  /*!< SNC2CMAC_IRQ_BIT (Bit 2)                              */
#define CRG_XTAL_RESET_SYS_IRQ_CTRL_REG_SNC2CMAC_IRQ_BIT_Msk (0x4UL) /*!< SNC2CMAC_IRQ_BIT (Bitfield-Mask: 0x01)               */
#define CRG_XTAL_RESET_SYS_IRQ_CTRL_REG_SYS2SNC_IRQ_BIT_Pos (1UL)   /*!< SYS2SNC_IRQ_BIT (Bit 1)                               */
#define CRG_XTAL_RESET_SYS_IRQ_CTRL_REG_SYS2SNC_IRQ_BIT_Msk (0x2UL) /*!< SYS2SNC_IRQ_BIT (Bitfield-Mask: 0x01)                 */
#define CRG_XTAL_RESET_SYS_IRQ_CTRL_REG_SYS2CMAC_IRQ_BIT_Pos (0UL)  /*!< SYS2CMAC_IRQ_BIT (Bit 0)                              */
#define CRG_XTAL_RESET_SYS_IRQ_CTRL_REG_SYS2CMAC_IRQ_BIT_Msk (0x1UL) /*!< SYS2CMAC_IRQ_BIT (Bitfield-Mask: 0x01)               */
/* =================================================  SET_SYS_IRQ_CTRL_REG  ================================================== */
#define CRG_XTAL_SET_SYS_IRQ_CTRL_REG_CMAC2SNC_IRQ_BIT_Pos (5UL)    /*!< CMAC2SNC_IRQ_BIT (Bit 5)                              */
#define CRG_XTAL_SET_SYS_IRQ_CTRL_REG_CMAC2SNC_IRQ_BIT_Msk (0x20UL) /*!< CMAC2SNC_IRQ_BIT (Bitfield-Mask: 0x01)                */
#define CRG_XTAL_SET_SYS_IRQ_CTRL_REG_CMAC2SYS_IRQ_BIT_Pos (4UL)    /*!< CMAC2SYS_IRQ_BIT (Bit 4)                              */
#define CRG_XTAL_SET_SYS_IRQ_CTRL_REG_CMAC2SYS_IRQ_BIT_Msk (0x10UL) /*!< CMAC2SYS_IRQ_BIT (Bitfield-Mask: 0x01)                */
#define CRG_XTAL_SET_SYS_IRQ_CTRL_REG_SNC2SYS_IRQ_BIT_Pos (3UL)     /*!< SNC2SYS_IRQ_BIT (Bit 3)                               */
#define CRG_XTAL_SET_SYS_IRQ_CTRL_REG_SNC2SYS_IRQ_BIT_Msk (0x8UL)   /*!< SNC2SYS_IRQ_BIT (Bitfield-Mask: 0x01)                 */
#define CRG_XTAL_SET_SYS_IRQ_CTRL_REG_SNC2CMAC_IRQ_BIT_Pos (2UL)    /*!< SNC2CMAC_IRQ_BIT (Bit 2)                              */
#define CRG_XTAL_SET_SYS_IRQ_CTRL_REG_SNC2CMAC_IRQ_BIT_Msk (0x4UL)  /*!< SNC2CMAC_IRQ_BIT (Bitfield-Mask: 0x01)                */
#define CRG_XTAL_SET_SYS_IRQ_CTRL_REG_SYS2SNC_IRQ_BIT_Pos (1UL)     /*!< SYS2SNC_IRQ_BIT (Bit 1)                               */
#define CRG_XTAL_SET_SYS_IRQ_CTRL_REG_SYS2SNC_IRQ_BIT_Msk (0x2UL)   /*!< SYS2SNC_IRQ_BIT (Bitfield-Mask: 0x01)                 */
#define CRG_XTAL_SET_SYS_IRQ_CTRL_REG_SYS2CMAC_IRQ_BIT_Pos (0UL)    /*!< SYS2CMAC_IRQ_BIT (Bit 0)                              */
#define CRG_XTAL_SET_SYS_IRQ_CTRL_REG_SYS2CMAC_IRQ_BIT_Msk (0x1UL)  /*!< SYS2CMAC_IRQ_BIT (Bitfield-Mask: 0x01)                */
/* ===================================================  SYS_IRQ_CTRL_REG  ==================================================== */
#define CRG_XTAL_SYS_IRQ_CTRL_REG_CMAC2SNC_IRQ_BIT_Pos (5UL)        /*!< CMAC2SNC_IRQ_BIT (Bit 5)                              */
#define CRG_XTAL_SYS_IRQ_CTRL_REG_CMAC2SNC_IRQ_BIT_Msk (0x20UL)     /*!< CMAC2SNC_IRQ_BIT (Bitfield-Mask: 0x01)                */
#define CRG_XTAL_SYS_IRQ_CTRL_REG_CMAC2SYS_IRQ_BIT_Pos (4UL)        /*!< CMAC2SYS_IRQ_BIT (Bit 4)                              */
#define CRG_XTAL_SYS_IRQ_CTRL_REG_CMAC2SYS_IRQ_BIT_Msk (0x10UL)     /*!< CMAC2SYS_IRQ_BIT (Bitfield-Mask: 0x01)                */
#define CRG_XTAL_SYS_IRQ_CTRL_REG_SNC2SYS_IRQ_BIT_Pos (3UL)         /*!< SNC2SYS_IRQ_BIT (Bit 3)                               */
#define CRG_XTAL_SYS_IRQ_CTRL_REG_SNC2SYS_IRQ_BIT_Msk (0x8UL)       /*!< SNC2SYS_IRQ_BIT (Bitfield-Mask: 0x01)                 */
#define CRG_XTAL_SYS_IRQ_CTRL_REG_SNC2CMAC_IRQ_BIT_Pos (2UL)        /*!< SNC2CMAC_IRQ_BIT (Bit 2)                              */
#define CRG_XTAL_SYS_IRQ_CTRL_REG_SNC2CMAC_IRQ_BIT_Msk (0x4UL)      /*!< SNC2CMAC_IRQ_BIT (Bitfield-Mask: 0x01)                */
#define CRG_XTAL_SYS_IRQ_CTRL_REG_SYS2SNC_IRQ_BIT_Pos (1UL)         /*!< SYS2SNC_IRQ_BIT (Bit 1)                               */
#define CRG_XTAL_SYS_IRQ_CTRL_REG_SYS2SNC_IRQ_BIT_Msk (0x2UL)       /*!< SYS2SNC_IRQ_BIT (Bitfield-Mask: 0x01)                 */
#define CRG_XTAL_SYS_IRQ_CTRL_REG_SYS2CMAC_IRQ_BIT_Pos (0UL)        /*!< SYS2CMAC_IRQ_BIT (Bit 0)                              */
#define CRG_XTAL_SYS_IRQ_CTRL_REG_SYS2CMAC_IRQ_BIT_Msk (0x1UL)      /*!< SYS2CMAC_IRQ_BIT (Bitfield-Mask: 0x01)                */
/* =================================================  XTAL32M_CAP_MEAS_REG  ================================================== */
#define CRG_XTAL_XTAL32M_CAP_MEAS_REG_XTAL32M_MEAS_TIME_Pos (6UL)   /*!< XTAL32M_MEAS_TIME (Bit 6)                             */
#define CRG_XTAL_XTAL32M_CAP_MEAS_REG_XTAL32M_MEAS_TIME_Msk (0x1c0UL) /*!< XTAL32M_MEAS_TIME (Bitfield-Mask: 0x07)             */
#define CRG_XTAL_XTAL32M_CAP_MEAS_REG_XTAL32M_MEAS_START_Pos (5UL)  /*!< XTAL32M_MEAS_START (Bit 5)                            */
#define CRG_XTAL_XTAL32M_CAP_MEAS_REG_XTAL32M_MEAS_START_Msk (0x20UL) /*!< XTAL32M_MEAS_START (Bitfield-Mask: 0x01)            */
#define CRG_XTAL_XTAL32M_CAP_MEAS_REG_XTAL32M_MEAS_CUR_Pos (3UL)    /*!< XTAL32M_MEAS_CUR (Bit 3)                              */
#define CRG_XTAL_XTAL32M_CAP_MEAS_REG_XTAL32M_MEAS_CUR_Msk (0x18UL) /*!< XTAL32M_MEAS_CUR (Bitfield-Mask: 0x03)                */
#define CRG_XTAL_XTAL32M_CAP_MEAS_REG_XTAL32M_CAP_SELECT_Pos (0UL)  /*!< XTAL32M_CAP_SELECT (Bit 0)                            */
#define CRG_XTAL_XTAL32M_CAP_MEAS_REG_XTAL32M_CAP_SELECT_Msk (0x7UL) /*!< XTAL32M_CAP_SELECT (Bitfield-Mask: 0x07)             */
/* ===================================================  XTAL32M_CTRL_REG  ==================================================== */
#define CRG_XTAL_XTAL32M_CTRL_REG_XTAL32M_DRIVE_CYCLES_Pos (9UL)    /*!< XTAL32M_DRIVE_CYCLES (Bit 9)                          */
#define CRG_XTAL_XTAL32M_CTRL_REG_XTAL32M_DRIVE_CYCLES_Msk (0xe00UL) /*!< XTAL32M_DRIVE_CYCLES (Bitfield-Mask: 0x07)           */
#define CRG_XTAL_XTAL32M_CTRL_REG_XTAL32M_ENABLE_Pos (8UL)          /*!< XTAL32M_ENABLE (Bit 8)                                */
#define CRG_XTAL_XTAL32M_CTRL_REG_XTAL32M_ENABLE_Msk (0x100UL)      /*!< XTAL32M_ENABLE (Bitfield-Mask: 0x01)                  */
#define CRG_XTAL_XTAL32M_CTRL_REG_XTAL32M_BIASPROT_Pos (6UL)        /*!< XTAL32M_BIASPROT (Bit 6)                              */
#define CRG_XTAL_XTAL32M_CTRL_REG_XTAL32M_BIASPROT_Msk (0xc0UL)     /*!< XTAL32M_BIASPROT (Bitfield-Mask: 0x03)                */
#define CRG_XTAL_XTAL32M_CTRL_REG_XTAL32M_LDO_SAH_Pos (4UL)         /*!< XTAL32M_LDO_SAH (Bit 4)                               */
#define CRG_XTAL_XTAL32M_CTRL_REG_XTAL32M_LDO_SAH_Msk (0x30UL)      /*!< XTAL32M_LDO_SAH (Bitfield-Mask: 0x03)                 */
#define CRG_XTAL_XTAL32M_CTRL_REG_XTAL32M_AMPREG_SAH_Pos (2UL)      /*!< XTAL32M_AMPREG_SAH (Bit 2)                            */
#define CRG_XTAL_XTAL32M_CTRL_REG_XTAL32M_AMPREG_SAH_Msk (0xcUL)    /*!< XTAL32M_AMPREG_SAH (Bitfield-Mask: 0x03)              */
#define CRG_XTAL_XTAL32M_CTRL_REG_XTAL32M_BIAS_SAH_Pos (0UL)        /*!< XTAL32M_BIAS_SAH (Bit 0)                              */
#define CRG_XTAL_XTAL32M_CTRL_REG_XTAL32M_BIAS_SAH_Msk (0x3UL)      /*!< XTAL32M_BIAS_SAH (Bitfield-Mask: 0x03)                */
/* ====================================================  XTAL32M_FSM_REG  ==================================================== */
#define CRG_XTAL_XTAL32M_FSM_REG_XTAL32M_BOOST_MODE_Pos (5UL)       /*!< XTAL32M_BOOST_MODE (Bit 5)                            */
#define CRG_XTAL_XTAL32M_FSM_REG_XTAL32M_BOOST_MODE_Msk (0x20UL)    /*!< XTAL32M_BOOST_MODE (Bitfield-Mask: 0x01)              */
#define CRG_XTAL_XTAL32M_FSM_REG_XTAL32M_FSM_APPLY_CONFIG_Pos (4UL) /*!< XTAL32M_FSM_APPLY_CONFIG (Bit 4)                      */
#define CRG_XTAL_XTAL32M_FSM_REG_XTAL32M_FSM_APPLY_CONFIG_Msk (0x10UL) /*!< XTAL32M_FSM_APPLY_CONFIG (Bitfield-Mask: 0x01)     */
#define CRG_XTAL_XTAL32M_FSM_REG_XTAL32M_FSM_FORCE_IDLE_Pos (3UL)   /*!< XTAL32M_FSM_FORCE_IDLE (Bit 3)                        */
#define CRG_XTAL_XTAL32M_FSM_REG_XTAL32M_FSM_FORCE_IDLE_Msk (0x8UL) /*!< XTAL32M_FSM_FORCE_IDLE (Bitfield-Mask: 0x01)          */
#define CRG_XTAL_XTAL32M_FSM_REG_XTAL32M_CMP_MODE_Pos (2UL)         /*!< XTAL32M_CMP_MODE (Bit 2)                              */
#define CRG_XTAL_XTAL32M_FSM_REG_XTAL32M_CMP_MODE_Msk (0x4UL)       /*!< XTAL32M_CMP_MODE (Bitfield-Mask: 0x01)                */
#define CRG_XTAL_XTAL32M_FSM_REG_XTAL32M_TRIM_MODE_Pos (1UL)        /*!< XTAL32M_TRIM_MODE (Bit 1)                             */
#define CRG_XTAL_XTAL32M_FSM_REG_XTAL32M_TRIM_MODE_Msk (0x2UL)      /*!< XTAL32M_TRIM_MODE (Bitfield-Mask: 0x01)               */
#define CRG_XTAL_XTAL32M_FSM_REG_XTAL32M_CUR_MODE_Pos (0UL)         /*!< XTAL32M_CUR_MODE (Bit 0)                              */
#define CRG_XTAL_XTAL32M_FSM_REG_XTAL32M_CUR_MODE_Msk (0x1UL)       /*!< XTAL32M_CUR_MODE (Bitfield-Mask: 0x01)                */
/* =================================================  XTAL32M_IRQ_CTRL_REG  ================================================== */
#define CRG_XTAL_XTAL32M_IRQ_CTRL_REG_XTAL32M_IRQ_CAP_CTRL_Pos (10UL) /*!< XTAL32M_IRQ_CAP_CTRL (Bit 10)                       */
#define CRG_XTAL_XTAL32M_IRQ_CTRL_REG_XTAL32M_IRQ_CAP_CTRL_Msk (0xc00UL) /*!< XTAL32M_IRQ_CAP_CTRL (Bitfield-Mask: 0x03)       */
#define CRG_XTAL_XTAL32M_IRQ_CTRL_REG_XTAL32M_IRQ_ENABLE_Pos (9UL)  /*!< XTAL32M_IRQ_ENABLE (Bit 9)                            */
#define CRG_XTAL_XTAL32M_IRQ_CTRL_REG_XTAL32M_IRQ_ENABLE_Msk (0x200UL) /*!< XTAL32M_IRQ_ENABLE (Bitfield-Mask: 0x01)           */
#define CRG_XTAL_XTAL32M_IRQ_CTRL_REG_XTAL32M_IRQ_CLK_Pos (8UL)     /*!< XTAL32M_IRQ_CLK (Bit 8)                               */
#define CRG_XTAL_XTAL32M_IRQ_CTRL_REG_XTAL32M_IRQ_CLK_Msk (0x100UL) /*!< XTAL32M_IRQ_CLK (Bitfield-Mask: 0x01)                 */
#define CRG_XTAL_XTAL32M_IRQ_CTRL_REG_XTAL32M_IRQ_CNT_Pos (0UL)     /*!< XTAL32M_IRQ_CNT (Bit 0)                               */
#define CRG_XTAL_XTAL32M_IRQ_CTRL_REG_XTAL32M_IRQ_CNT_Msk (0xffUL)  /*!< XTAL32M_IRQ_CNT (Bitfield-Mask: 0xff)                 */
/* =================================================  XTAL32M_IRQ_STAT_REG  ================================================== */
#define CRG_XTAL_XTAL32M_IRQ_STAT_REG_XTAL32M_IRQ_COUNT_CAP_Pos (8UL) /*!< XTAL32M_IRQ_COUNT_CAP (Bit 8)                       */
#define CRG_XTAL_XTAL32M_IRQ_STAT_REG_XTAL32M_IRQ_COUNT_CAP_Msk (0xff00UL) /*!< XTAL32M_IRQ_COUNT_CAP (Bitfield-Mask: 0xff)    */
#define CRG_XTAL_XTAL32M_IRQ_STAT_REG_XTAL32M_IRQ_COUNT_STAT_Pos (0UL) /*!< XTAL32M_IRQ_COUNT_STAT (Bit 0)                     */
#define CRG_XTAL_XTAL32M_IRQ_STAT_REG_XTAL32M_IRQ_COUNT_STAT_Msk (0xffUL) /*!< XTAL32M_IRQ_COUNT_STAT (Bitfield-Mask: 0xff)    */
/* ==================================================  XTAL32M_SETTLE_REG  =================================================== */
#define CRG_XTAL_XTAL32M_SETTLE_REG_XTAL32M_TIMEOUT_Pos (22UL)      /*!< XTAL32M_TIMEOUT (Bit 22)                              */
#define CRG_XTAL_XTAL32M_SETTLE_REG_XTAL32M_TIMEOUT_Msk (0x1fc00000UL) /*!< XTAL32M_TIMEOUT (Bitfield-Mask: 0x7f)              */
#define CRG_XTAL_XTAL32M_SETTLE_REG_XTAL32M_CMP_BLANK_Pos (19UL)    /*!< XTAL32M_CMP_BLANK (Bit 19)                            */
#define CRG_XTAL_XTAL32M_SETTLE_REG_XTAL32M_CMP_BLANK_Msk (0x380000UL) /*!< XTAL32M_CMP_BLANK (Bitfield-Mask: 0x07)            */
#define CRG_XTAL_XTAL32M_SETTLE_REG_XTAL32M_CMP_LVL_Pos (17UL)      /*!< XTAL32M_CMP_LVL (Bit 17)                              */
#define CRG_XTAL_XTAL32M_SETTLE_REG_XTAL32M_CMP_LVL_Msk (0x60000UL) /*!< XTAL32M_CMP_LVL (Bitfield-Mask: 0x03)                 */
#define CRG_XTAL_XTAL32M_SETTLE_REG_XTAL32M_AMPL_SET_Pos (14UL)     /*!< XTAL32M_AMPL_SET (Bit 14)                             */
#define CRG_XTAL_XTAL32M_SETTLE_REG_XTAL32M_AMPL_SET_Msk (0x1c000UL) /*!< XTAL32M_AMPL_SET (Bitfield-Mask: 0x07)               */
#define CRG_XTAL_XTAL32M_SETTLE_REG_XTAL32M_CUR_SET_Pos (10UL)      /*!< XTAL32M_CUR_SET (Bit 10)                              */
#define CRG_XTAL_XTAL32M_SETTLE_REG_XTAL32M_CUR_SET_Msk (0x3c00UL)  /*!< XTAL32M_CUR_SET (Bitfield-Mask: 0x0f)                 */
#define CRG_XTAL_XTAL32M_SETTLE_REG_XTAL32M_TRIM_Pos (0UL)          /*!< XTAL32M_TRIM (Bit 0)                                  */
#define CRG_XTAL_XTAL32M_SETTLE_REG_XTAL32M_TRIM_Msk (0x3ffUL)      /*!< XTAL32M_TRIM (Bitfield-Mask: 0x3ff)                   */
/* ===================================================  XTAL32M_START_REG  =================================================== */
#define CRG_XTAL_XTAL32M_START_REG_XTAL32M_TIMEOUT_Pos (22UL)       /*!< XTAL32M_TIMEOUT (Bit 22)                              */
#define CRG_XTAL_XTAL32M_START_REG_XTAL32M_TIMEOUT_Msk (0x1fc00000UL) /*!< XTAL32M_TIMEOUT (Bitfield-Mask: 0x7f)               */
#define CRG_XTAL_XTAL32M_START_REG_XTAL32M_CMP_BLANK_Pos (19UL)     /*!< XTAL32M_CMP_BLANK (Bit 19)                            */
#define CRG_XTAL_XTAL32M_START_REG_XTAL32M_CMP_BLANK_Msk (0x380000UL) /*!< XTAL32M_CMP_BLANK (Bitfield-Mask: 0x07)             */
#define CRG_XTAL_XTAL32M_START_REG_XTAL32M_CMP_LVL_Pos (17UL)       /*!< XTAL32M_CMP_LVL (Bit 17)                              */
#define CRG_XTAL_XTAL32M_START_REG_XTAL32M_CMP_LVL_Msk (0x60000UL)  /*!< XTAL32M_CMP_LVL (Bitfield-Mask: 0x03)                 */
#define CRG_XTAL_XTAL32M_START_REG_XTAL32M_AMPL_SET_Pos (14UL)      /*!< XTAL32M_AMPL_SET (Bit 14)                             */
#define CRG_XTAL_XTAL32M_START_REG_XTAL32M_AMPL_SET_Msk (0x1c000UL) /*!< XTAL32M_AMPL_SET (Bitfield-Mask: 0x07)                */
#define CRG_XTAL_XTAL32M_START_REG_XTAL32M_CUR_SET_Pos (10UL)       /*!< XTAL32M_CUR_SET (Bit 10)                              */
#define CRG_XTAL_XTAL32M_START_REG_XTAL32M_CUR_SET_Msk (0x3c00UL)   /*!< XTAL32M_CUR_SET (Bitfield-Mask: 0x0f)                 */
#define CRG_XTAL_XTAL32M_START_REG_XTAL32M_TRIM_Pos (0UL)           /*!< XTAL32M_TRIM (Bit 0)                                  */
#define CRG_XTAL_XTAL32M_START_REG_XTAL32M_TRIM_Msk (0x3ffUL)       /*!< XTAL32M_TRIM (Bitfield-Mask: 0x3ff)                   */
/* ===================================================  XTAL32M_STAT0_REG  =================================================== */
#define CRG_XTAL_XTAL32M_STAT0_REG_XTAL32M_OVERLOAD_Pos (29UL)      /*!< XTAL32M_OVERLOAD (Bit 29)                             */
#define CRG_XTAL_XTAL32M_STAT0_REG_XTAL32M_OVERLOAD_Msk (0x20000000UL) /*!< XTAL32M_OVERLOAD (Bitfield-Mask: 0x01)             */
#define CRG_XTAL_XTAL32M_STAT0_REG_XTAL32M_CMP_LVL_STAT_Pos (27UL)  /*!< XTAL32M_CMP_LVL_STAT (Bit 27)                         */
#define CRG_XTAL_XTAL32M_STAT0_REG_XTAL32M_CMP_LVL_STAT_Msk (0x18000000UL) /*!< XTAL32M_CMP_LVL_STAT (Bitfield-Mask: 0x03)     */
#define CRG_XTAL_XTAL32M_STAT0_REG_XTAL32M_AMPL_TRIM_Pos (24UL)     /*!< XTAL32M_AMPL_TRIM (Bit 24)                            */
#define CRG_XTAL_XTAL32M_STAT0_REG_XTAL32M_AMPL_TRIM_Msk (0x7000000UL) /*!< XTAL32M_AMPL_TRIM (Bitfield-Mask: 0x07)            */
#define CRG_XTAL_XTAL32M_STAT0_REG_XTAL32M_TRIM_VAL_Pos (14UL)      /*!< XTAL32M_TRIM_VAL (Bit 14)                             */
#define CRG_XTAL_XTAL32M_STAT0_REG_XTAL32M_TRIM_VAL_Msk (0xffc000UL) /*!< XTAL32M_TRIM_VAL (Bitfield-Mask: 0x3ff)              */
#define CRG_XTAL_XTAL32M_STAT0_REG_XTAL32M_CUR_SET_STAT_Pos (10UL)  /*!< XTAL32M_CUR_SET_STAT (Bit 10)                         */
#define CRG_XTAL_XTAL32M_STAT0_REG_XTAL32M_CUR_SET_STAT_Msk (0x3c00UL) /*!< XTAL32M_CUR_SET_STAT (Bitfield-Mask: 0x0f)         */
#define CRG_XTAL_XTAL32M_STAT0_REG_XTAL32M_LDO_OK_Pos (9UL)         /*!< XTAL32M_LDO_OK (Bit 9)                                */
#define CRG_XTAL_XTAL32M_STAT0_REG_XTAL32M_LDO_OK_Msk (0x200UL)     /*!< XTAL32M_LDO_OK (Bitfield-Mask: 0x01)                  */
#define CRG_XTAL_XTAL32M_STAT0_REG_XTAL32M_CMP_OUT_Pos (7UL)        /*!< XTAL32M_CMP_OUT (Bit 7)                               */
#define CRG_XTAL_XTAL32M_STAT0_REG_XTAL32M_CMP_OUT_Msk (0x180UL)    /*!< XTAL32M_CMP_OUT (Bitfield-Mask: 0x03)                 */
#define CRG_XTAL_XTAL32M_STAT0_REG_XTAL32M_STATE_Pos (3UL)          /*!< XTAL32M_STATE (Bit 3)                                 */
#define CRG_XTAL_XTAL32M_STAT0_REG_XTAL32M_STATE_Msk (0x78UL)       /*!< XTAL32M_STATE (Bitfield-Mask: 0x0f)                   */
#define CRG_XTAL_XTAL32M_STAT0_REG_XTAL32M_CMP_OUT_HOLD_Pos (1UL)   /*!< XTAL32M_CMP_OUT_HOLD (Bit 1)                          */
#define CRG_XTAL_XTAL32M_STAT0_REG_XTAL32M_CMP_OUT_HOLD_Msk (0x6UL) /*!< XTAL32M_CMP_OUT_HOLD (Bitfield-Mask: 0x03)            */
#define CRG_XTAL_XTAL32M_STAT0_REG_XTAL32M_READY_Pos (0UL)          /*!< XTAL32M_READY (Bit 0)                                 */
#define CRG_XTAL_XTAL32M_STAT0_REG_XTAL32M_READY_Msk (0x1UL)        /*!< XTAL32M_READY (Bitfield-Mask: 0x01)                   */
/* ===================================================  XTAL32M_TRIM_REG  ==================================================== */
#define CRG_XTAL_XTAL32M_TRIM_REG_XTAL32M_BOOST_TRIM_Pos (19UL)     /*!< XTAL32M_BOOST_TRIM (Bit 19)                           */
#define CRG_XTAL_XTAL32M_TRIM_REG_XTAL32M_BOOST_TRIM_Msk (0x1f80000UL) /*!< XTAL32M_BOOST_TRIM (Bitfield-Mask: 0x3f)           */
#define CRG_XTAL_XTAL32M_TRIM_REG_XTAL32M_CMP_LVL_Pos (17UL)        /*!< XTAL32M_CMP_LVL (Bit 17)                              */
#define CRG_XTAL_XTAL32M_TRIM_REG_XTAL32M_CMP_LVL_Msk (0x60000UL)   /*!< XTAL32M_CMP_LVL (Bitfield-Mask: 0x03)                 */
#define CRG_XTAL_XTAL32M_TRIM_REG_XTAL32M_AMPL_SET_Pos (14UL)       /*!< XTAL32M_AMPL_SET (Bit 14)                             */
#define CRG_XTAL_XTAL32M_TRIM_REG_XTAL32M_AMPL_SET_Msk (0x1c000UL)  /*!< XTAL32M_AMPL_SET (Bitfield-Mask: 0x07)                */
#define CRG_XTAL_XTAL32M_TRIM_REG_XTAL32M_CUR_SET_Pos (10UL)        /*!< XTAL32M_CUR_SET (Bit 10)                              */
#define CRG_XTAL_XTAL32M_TRIM_REG_XTAL32M_CUR_SET_Msk (0x3c00UL)    /*!< XTAL32M_CUR_SET (Bitfield-Mask: 0x0f)                 */
#define CRG_XTAL_XTAL32M_TRIM_REG_XTAL32M_TRIM_Pos (0UL)            /*!< XTAL32M_TRIM (Bit 0)                                  */
#define CRG_XTAL_XTAL32M_TRIM_REG_XTAL32M_TRIM_Msk (0x3ffUL)        /*!< XTAL32M_TRIM (Bitfield-Mask: 0x3ff)                   */


/* =========================================================================================================================== */
/* ================                                          DCACHE                                           ================ */
/* =========================================================================================================================== */

/* =================================================  DCACHE_BASE_ADDR_REG  ================================================== */
#define DCACHE_DCACHE_BASE_ADDR_REG_DCACHE_BASE_ADDR_Pos (0UL)      /*!< DCACHE_BASE_ADDR (Bit 0)                              */
#define DCACHE_DCACHE_BASE_ADDR_REG_DCACHE_BASE_ADDR_Msk (0x1ffffUL) /*!< DCACHE_BASE_ADDR (Bitfield-Mask: 0x1ffff)            */
/* ====================================================  DCACHE_CTRL_REG  ==================================================== */
#define DCACHE_DCACHE_CTRL_REG_DCACHE_BYPASS_Pos (26UL)             /*!< DCACHE_BYPASS (Bit 26)                                */
#define DCACHE_DCACHE_CTRL_REG_DCACHE_BYPASS_Msk (0x4000000UL)      /*!< DCACHE_BYPASS (Bitfield-Mask: 0x01)                   */
#define DCACHE_DCACHE_CTRL_REG_DCACHE_WBUFFER_FLUSH_Pos (24UL)      /*!< DCACHE_WBUFFER_FLUSH (Bit 24)                         */
#define DCACHE_DCACHE_CTRL_REG_DCACHE_WBUFFER_FLUSH_Msk (0x1000000UL) /*!< DCACHE_WBUFFER_FLUSH (Bitfield-Mask: 0x01)          */
#define DCACHE_DCACHE_CTRL_REG_DCACHE_WBUFFER_EMPTY_Pos (23UL)      /*!< DCACHE_WBUFFER_EMPTY (Bit 23)                         */
#define DCACHE_DCACHE_CTRL_REG_DCACHE_WBUFFER_EMPTY_Msk (0x800000UL) /*!< DCACHE_WBUFFER_EMPTY (Bitfield-Mask: 0x01)           */
#define DCACHE_DCACHE_CTRL_REG_DCACHE_WFLUSHED_Pos (22UL)           /*!< DCACHE_WFLUSHED (Bit 22)                              */
#define DCACHE_DCACHE_CTRL_REG_DCACHE_WFLUSHED_Msk (0x400000UL)     /*!< DCACHE_WFLUSHED (Bitfield-Mask: 0x01)                 */
#define DCACHE_DCACHE_CTRL_REG_DCACHE_READY_Pos (21UL)              /*!< DCACHE_READY (Bit 21)                                 */
#define DCACHE_DCACHE_CTRL_REG_DCACHE_READY_Msk (0x200000UL)        /*!< DCACHE_READY (Bitfield-Mask: 0x01)                    */
#define DCACHE_DCACHE_CTRL_REG_DCACHE_WFLUSH_Pos (20UL)             /*!< DCACHE_WFLUSH (Bit 20)                                */
#define DCACHE_DCACHE_CTRL_REG_DCACHE_WFLUSH_Msk (0x100000UL)       /*!< DCACHE_WFLUSH (Bitfield-Mask: 0x01)                   */
#define DCACHE_DCACHE_CTRL_REG_DCACHE_INIT_Pos (19UL)               /*!< DCACHE_INIT (Bit 19)                                  */
#define DCACHE_DCACHE_CTRL_REG_DCACHE_INIT_Msk (0x80000UL)          /*!< DCACHE_INIT (Bitfield-Mask: 0x01)                     */
#define DCACHE_DCACHE_CTRL_REG_DCACHE_ENABLE_Pos (18UL)             /*!< DCACHE_ENABLE (Bit 18)                                */
#define DCACHE_DCACHE_CTRL_REG_DCACHE_ENABLE_Msk (0x40000UL)        /*!< DCACHE_ENABLE (Bitfield-Mask: 0x01)                   */
#define DCACHE_DCACHE_CTRL_REG_DCACHE_LEN_Pos (0UL)                 /*!< DCACHE_LEN (Bit 0)                                    */
#define DCACHE_DCACHE_CTRL_REG_DCACHE_LEN_Msk (0x3ffffUL)           /*!< DCACHE_LEN (Bitfield-Mask: 0x3ffff)                   */
/* ==================================================  DCACHE_MRM_CTRL_REG  ================================================== */
#define DCACHE_DCACHE_MRM_CTRL_REG_MRM_IRQ_EVICTS_THRES_STATUS_Pos (5UL) /*!< MRM_IRQ_EVICTS_THRES_STATUS (Bit 5)              */
#define DCACHE_DCACHE_MRM_CTRL_REG_MRM_IRQ_EVICTS_THRES_STATUS_Msk (0x20UL) /*!< MRM_IRQ_EVICTS_THRES_STATUS (Bitfield-Mask: 0x01) */
#define DCACHE_DCACHE_MRM_CTRL_REG_MRM_IRQ_HITS_THRES_STATUS_Pos (4UL) /*!< MRM_IRQ_HITS_THRES_STATUS (Bit 4)                  */
#define DCACHE_DCACHE_MRM_CTRL_REG_MRM_IRQ_HITS_THRES_STATUS_Msk (0x10UL) /*!< MRM_IRQ_HITS_THRES_STATUS (Bitfield-Mask: 0x01) */
#define DCACHE_DCACHE_MRM_CTRL_REG_MRM_IRQ_MISSES_THRES_STATUS_Pos (3UL) /*!< MRM_IRQ_MISSES_THRES_STATUS (Bit 3)              */
#define DCACHE_DCACHE_MRM_CTRL_REG_MRM_IRQ_MISSES_THRES_STATUS_Msk (0x8UL) /*!< MRM_IRQ_MISSES_THRES_STATUS (Bitfield-Mask: 0x01) */
#define DCACHE_DCACHE_MRM_CTRL_REG_MRM_IRQ_TINT_STATUS_Pos (2UL)    /*!< MRM_IRQ_TINT_STATUS (Bit 2)                           */
#define DCACHE_DCACHE_MRM_CTRL_REG_MRM_IRQ_TINT_STATUS_Msk (0x4UL)  /*!< MRM_IRQ_TINT_STATUS (Bitfield-Mask: 0x01)             */
#define DCACHE_DCACHE_MRM_CTRL_REG_MRM_IRQ_MASK_Pos (1UL)           /*!< MRM_IRQ_MASK (Bit 1)                                  */
#define DCACHE_DCACHE_MRM_CTRL_REG_MRM_IRQ_MASK_Msk (0x2UL)         /*!< MRM_IRQ_MASK (Bitfield-Mask: 0x01)                    */
#define DCACHE_DCACHE_MRM_CTRL_REG_MRM_START_Pos (0UL)              /*!< MRM_START (Bit 0)                                     */
#define DCACHE_DCACHE_MRM_CTRL_REG_MRM_START_Msk (0x1UL)            /*!< MRM_START (Bitfield-Mask: 0x01)                       */
/* =================================================  DCACHE_MRM_EVICTS_REG  ================================================= */
#define DCACHE_DCACHE_MRM_EVICTS_REG_MRM_EVICTS_Pos (0UL)           /*!< MRM_EVICTS (Bit 0)                                    */
#define DCACHE_DCACHE_MRM_EVICTS_REG_MRM_EVICTS_Msk (0xffffffffUL)  /*!< MRM_EVICTS (Bitfield-Mask: 0xffffffff)                */
/* ==============================================  DCACHE_MRM_EVICTS_THRES_REG  ============================================== */
#define DCACHE_DCACHE_MRM_EVICTS_THRES_REG_MRM_EVICTS_THRES_Pos (0UL) /*!< MRM_EVICTS_THRES (Bit 0)                            */
#define DCACHE_DCACHE_MRM_EVICTS_THRES_REG_MRM_EVICTS_THRES_Msk (0xffffffffUL) /*!< MRM_EVICTS_THRES (Bitfield-Mask: 0xffffffff) */
/* ==================================================  DCACHE_MRM_HITS_REG  ================================================== */
#define DCACHE_DCACHE_MRM_HITS_REG_MRM_HITS_Pos (0UL)               /*!< MRM_HITS (Bit 0)                                      */
#define DCACHE_DCACHE_MRM_HITS_REG_MRM_HITS_Msk (0xffffffffUL)      /*!< MRM_HITS (Bitfield-Mask: 0xffffffff)                  */
/* ===============================================  DCACHE_MRM_HITS_THRES_REG  =============================================== */
#define DCACHE_DCACHE_MRM_HITS_THRES_REG_MRM_HITS_THRES_Pos (0UL)   /*!< MRM_HITS_THRES (Bit 0)                                */
#define DCACHE_DCACHE_MRM_HITS_THRES_REG_MRM_HITS_THRES_Msk (0xffffffffUL) /*!< MRM_HITS_THRES (Bitfield-Mask: 0xffffffff)     */
/* =================================================  DCACHE_MRM_MISSES_REG  ================================================= */
#define DCACHE_DCACHE_MRM_MISSES_REG_MRM_MISSES_Pos (0UL)           /*!< MRM_MISSES (Bit 0)                                    */
#define DCACHE_DCACHE_MRM_MISSES_REG_MRM_MISSES_Msk (0xffffffffUL)  /*!< MRM_MISSES (Bitfield-Mask: 0xffffffff)                */
/* ==============================================  DCACHE_MRM_MISSES_THRES_REG  ============================================== */
#define DCACHE_DCACHE_MRM_MISSES_THRES_REG_MRM_MISSES_THRES_Pos (0UL) /*!< MRM_MISSES_THRES (Bit 0)                            */
#define DCACHE_DCACHE_MRM_MISSES_THRES_REG_MRM_MISSES_THRES_Msk (0xffffffffUL) /*!< MRM_MISSES_THRES (Bitfield-Mask: 0xffffffff) */
/* ==================================================  DCACHE_MRM_TINT_REG  ================================================== */
#define DCACHE_DCACHE_MRM_TINT_REG_MRM_TINT_Pos (0UL)               /*!< MRM_TINT (Bit 0)                                      */
#define DCACHE_DCACHE_MRM_TINT_REG_MRM_TINT_Msk (0x7ffffUL)         /*!< MRM_TINT (Bitfield-Mask: 0x7ffff)                     */


/* =========================================================================================================================== */
/* ================                                           DCDC                                            ================ */
/* =========================================================================================================================== */

/* =====================================================  BUCK_CTRL_REG  ===================================================== */
#define DCDC_BUCK_CTRL_REG_CFG_TIMEOUT_Pos (14UL)                   /*!< CFG_TIMEOUT (Bit 14)                                  */
#define DCDC_BUCK_CTRL_REG_CFG_TIMEOUT_Msk (0xc000UL)               /*!< CFG_TIMEOUT (Bitfield-Mask: 0x03)                     */
#define DCDC_BUCK_CTRL_REG_EN_FREEWHEEL_Pos (13UL)                  /*!< EN_FREEWHEEL (Bit 13)                                 */
#define DCDC_BUCK_CTRL_REG_EN_FREEWHEEL_Msk (0x2000UL)              /*!< EN_FREEWHEEL (Bitfield-Mask: 0x01)                    */
#define DCDC_BUCK_CTRL_REG_TRIM_BIAS_Pos  (10UL)                    /*!< TRIM_BIAS (Bit 10)                                    */
#define DCDC_BUCK_CTRL_REG_TRIM_BIAS_Msk  (0x1c00UL)                /*!< TRIM_BIAS (Bitfield-Mask: 0x07)                       */
#define DCDC_BUCK_CTRL_REG_CFG_IMAX_UPPER_Pos (5UL)                 /*!< CFG_IMAX_UPPER (Bit 5)                                */
#define DCDC_BUCK_CTRL_REG_CFG_IMAX_UPPER_Msk (0xe0UL)              /*!< CFG_IMAX_UPPER (Bitfield-Mask: 0x07)                  */
#define DCDC_BUCK_CTRL_REG_CFG_IMAX_LOWER_Pos (2UL)                 /*!< CFG_IMAX_LOWER (Bit 2)                                */
#define DCDC_BUCK_CTRL_REG_CFG_IMAX_LOWER_Msk (0x1cUL)              /*!< CFG_IMAX_LOWER (Bitfield-Mask: 0x07)                  */
#define DCDC_BUCK_CTRL_REG_CFG_HYST_Pos   (0UL)                     /*!< CFG_HYST (Bit 0)                                      */
#define DCDC_BUCK_CTRL_REG_CFG_HYST_Msk   (0x3UL)                   /*!< CFG_HYST (Bitfield-Mask: 0x03)                        */


/* =========================================================================================================================== */
/* ================                                        DCDC_BOOST                                         ================ */
/* =========================================================================================================================== */

/* ====================================================  BOOST_CTRL_REG0  ==================================================== */
#define DCDC_BOOST_BOOST_CTRL_REG0_BOOST_TIMEOUT_TRIG_DELAY_Pos (17UL) /*!< BOOST_TIMEOUT_TRIG_DELAY (Bit 17)                  */
#define DCDC_BOOST_BOOST_CTRL_REG0_BOOST_TIMEOUT_TRIG_DELAY_Msk (0x1e0000UL) /*!< BOOST_TIMEOUT_TRIG_DELAY (Bitfield-Mask: 0x0f) */
#define DCDC_BOOST_BOOST_CTRL_REG0_BOOST_PSW_TIMEOUT_Pos (13UL)     /*!< BOOST_PSW_TIMEOUT (Bit 13)                            */
#define DCDC_BOOST_BOOST_CTRL_REG0_BOOST_PSW_TIMEOUT_Msk (0x1e000UL) /*!< BOOST_PSW_TIMEOUT (Bitfield-Mask: 0x0f)              */
#define DCDC_BOOST_BOOST_CTRL_REG0_BOOST_NSW_TIMEOUT_Pos (9UL)      /*!< BOOST_NSW_TIMEOUT (Bit 9)                             */
#define DCDC_BOOST_BOOST_CTRL_REG0_BOOST_NSW_TIMEOUT_Msk (0x1e00UL) /*!< BOOST_NSW_TIMEOUT (Bitfield-Mask: 0x0f)               */
#define DCDC_BOOST_BOOST_CTRL_REG0_BOOST_OK_CLR_COUNT_Pos (7UL)     /*!< BOOST_OK_CLR_COUNT (Bit 7)                            */
#define DCDC_BOOST_BOOST_CTRL_REG0_BOOST_OK_CLR_COUNT_Msk (0x180UL) /*!< BOOST_OK_CLR_COUNT (Bitfield-Mask: 0x03)              */
#define DCDC_BOOST_BOOST_CTRL_REG0_BOOST_IDLE_CLK_DIV_Pos (5UL)     /*!< BOOST_IDLE_CLK_DIV (Bit 5)                            */
#define DCDC_BOOST_BOOST_CTRL_REG0_BOOST_IDLE_CLK_DIV_Msk (0x60UL)  /*!< BOOST_IDLE_CLK_DIV (Bitfield-Mask: 0x03)              */
#define DCDC_BOOST_BOOST_CTRL_REG0_BOOST_VLED_TRIM_Pos (2UL)        /*!< BOOST_VLED_TRIM (Bit 2)                               */
#define DCDC_BOOST_BOOST_CTRL_REG0_BOOST_VLED_TRIM_Msk (0x1cUL)     /*!< BOOST_VLED_TRIM (Bitfield-Mask: 0x07)                 */
#define DCDC_BOOST_BOOST_CTRL_REG0_BOOST_VLED_SEL_Pos (0UL)         /*!< BOOST_VLED_SEL (Bit 0)                                */
#define DCDC_BOOST_BOOST_CTRL_REG0_BOOST_VLED_SEL_Msk (0x3UL)       /*!< BOOST_VLED_SEL (Bitfield-Mask: 0x03)                  */
/* ====================================================  BOOST_CTRL_REG1  ==================================================== */
#define DCDC_BOOST_BOOST_CTRL_REG1_BOOST_CUR_LIM_SLEEP_FIXED_Pos (17UL) /*!< BOOST_CUR_LIM_SLEEP_FIXED (Bit 17)                */
#define DCDC_BOOST_BOOST_CTRL_REG1_BOOST_CUR_LIM_SLEEP_FIXED_Msk (0x20000UL) /*!< BOOST_CUR_LIM_SLEEP_FIXED (Bitfield-Mask: 0x01) */
#define DCDC_BOOST_BOOST_CTRL_REG1_BOOST_CUR_LIM_SLEEP_Pos (12UL)   /*!< BOOST_CUR_LIM_SLEEP (Bit 12)                          */
#define DCDC_BOOST_BOOST_CTRL_REG1_BOOST_CUR_LIM_SLEEP_Msk (0x1f000UL) /*!< BOOST_CUR_LIM_SLEEP (Bitfield-Mask: 0x1f)          */
#define DCDC_BOOST_BOOST_CTRL_REG1_BOOST_CUR_LIM_STEP_Pos (10UL)    /*!< BOOST_CUR_LIM_STEP (Bit 10)                           */
#define DCDC_BOOST_BOOST_CTRL_REG1_BOOST_CUR_LIM_STEP_Msk (0xc00UL) /*!< BOOST_CUR_LIM_STEP (Bitfield-Mask: 0x03)              */
#define DCDC_BOOST_BOOST_CTRL_REG1_BOOST_CUR_LIM_MAX_Pos (5UL)      /*!< BOOST_CUR_LIM_MAX (Bit 5)                             */
#define DCDC_BOOST_BOOST_CTRL_REG1_BOOST_CUR_LIM_MAX_Msk (0x3e0UL)  /*!< BOOST_CUR_LIM_MAX (Bitfield-Mask: 0x1f)               */
#define DCDC_BOOST_BOOST_CTRL_REG1_BOOST_CUR_LIM_MIN_Pos (0UL)      /*!< BOOST_CUR_LIM_MIN (Bit 0)                             */
#define DCDC_BOOST_BOOST_CTRL_REG1_BOOST_CUR_LIM_MIN_Msk (0x1fUL)   /*!< BOOST_CUR_LIM_MIN (Bitfield-Mask: 0x1f)               */
/* ===================================================  BOOST_STATUS_REG  ==================================================== */
#define DCDC_BOOST_BOOST_STATUS_REG_BOOST_COMP_TRIM_Pos (18UL)      /*!< BOOST_COMP_TRIM (Bit 18)                              */
#define DCDC_BOOST_BOOST_STATUS_REG_BOOST_COMP_TRIM_Msk (0xfc0000UL) /*!< BOOST_COMP_TRIM (Bitfield-Mask: 0x3f)                */
#define DCDC_BOOST_BOOST_STATUS_REG_BOOST_IDLE_Pos (17UL)           /*!< BOOST_IDLE (Bit 17)                                   */
#define DCDC_BOOST_BOOST_STATUS_REG_BOOST_IDLE_Msk (0x20000UL)      /*!< BOOST_IDLE (Bitfield-Mask: 0x01)                      */
#define DCDC_BOOST_BOOST_STATUS_REG_BOOST_CUR_LIM_Pos (12UL)        /*!< BOOST_CUR_LIM (Bit 12)                                */
#define DCDC_BOOST_BOOST_STATUS_REG_BOOST_CUR_LIM_Msk (0x1f000UL)   /*!< BOOST_CUR_LIM (Bitfield-Mask: 0x1f)                   */
#define DCDC_BOOST_BOOST_STATUS_REG_BOOST_COMP_P_DYN_P_Pos (11UL)   /*!< BOOST_COMP_P_DYN_P (Bit 11)                           */
#define DCDC_BOOST_BOOST_STATUS_REG_BOOST_COMP_P_DYN_P_Msk (0x800UL) /*!< BOOST_COMP_P_DYN_P (Bitfield-Mask: 0x01)             */
#define DCDC_BOOST_BOOST_STATUS_REG_BOOST_COMP_P_DYN_N_Pos (10UL)   /*!< BOOST_COMP_P_DYN_N (Bit 10)                           */
#define DCDC_BOOST_BOOST_STATUS_REG_BOOST_COMP_P_DYN_N_Msk (0x400UL) /*!< BOOST_COMP_P_DYN_N (Bitfield-Mask: 0x01)             */
#define DCDC_BOOST_BOOST_STATUS_REG_BOOST_COMP_P_CONT_Pos (9UL)     /*!< BOOST_COMP_P_CONT (Bit 9)                             */
#define DCDC_BOOST_BOOST_STATUS_REG_BOOST_COMP_P_CONT_Msk (0x200UL) /*!< BOOST_COMP_P_CONT (Bitfield-Mask: 0x01)               */
#define DCDC_BOOST_BOOST_STATUS_REG_BOOST_COMP_N_CONT_Pos (8UL)     /*!< BOOST_COMP_N_CONT (Bit 8)                             */
#define DCDC_BOOST_BOOST_STATUS_REG_BOOST_COMP_N_CONT_Msk (0x100UL) /*!< BOOST_COMP_N_CONT (Bitfield-Mask: 0x01)               */
#define DCDC_BOOST_BOOST_STATUS_REG_BOOST_TIMEOUT_PSW_Pos (7UL)     /*!< BOOST_TIMEOUT_PSW (Bit 7)                             */
#define DCDC_BOOST_BOOST_STATUS_REG_BOOST_TIMEOUT_PSW_Msk (0x80UL)  /*!< BOOST_TIMEOUT_PSW (Bitfield-Mask: 0x01)               */
#define DCDC_BOOST_BOOST_STATUS_REG_BOOST_TIMEOUT_NSW_Pos (6UL)     /*!< BOOST_TIMEOUT_NSW (Bit 6)                             */
#define DCDC_BOOST_BOOST_STATUS_REG_BOOST_TIMEOUT_NSW_Msk (0x40UL)  /*!< BOOST_TIMEOUT_NSW (Bitfield-Mask: 0x01)               */
#define DCDC_BOOST_BOOST_STATUS_REG_BOOST_VOUT_NOK_Pos (5UL)        /*!< BOOST_VOUT_NOK (Bit 5)                                */
#define DCDC_BOOST_BOOST_STATUS_REG_BOOST_VOUT_NOK_Msk (0x20UL)     /*!< BOOST_VOUT_NOK (Bitfield-Mask: 0x01)                  */
#define DCDC_BOOST_BOOST_STATUS_REG_BOOST_VOUT_OK_Pos (4UL)         /*!< BOOST_VOUT_OK (Bit 4)                                 */
#define DCDC_BOOST_BOOST_STATUS_REG_BOOST_VOUT_OK_Msk (0x10UL)      /*!< BOOST_VOUT_OK (Bitfield-Mask: 0x01)                   */
#define DCDC_BOOST_BOOST_STATUS_REG_BOOST_SW_STATE_Pos (2UL)        /*!< BOOST_SW_STATE (Bit 2)                                */
#define DCDC_BOOST_BOOST_STATUS_REG_BOOST_SW_STATE_Msk (0xcUL)      /*!< BOOST_SW_STATE (Bitfield-Mask: 0x03)                  */
#define DCDC_BOOST_BOOST_STATUS_REG_BOOST_STARTUP_COMPLETE_Pos (1UL) /*!< BOOST_STARTUP_COMPLETE (Bit 1)                       */
#define DCDC_BOOST_BOOST_STATUS_REG_BOOST_STARTUP_COMPLETE_Msk (0x2UL) /*!< BOOST_STARTUP_COMPLETE (Bitfield-Mask: 0x01)       */
#define DCDC_BOOST_BOOST_STATUS_REG_BOOST_VLED_OK_Pos (0UL)         /*!< BOOST_VLED_OK (Bit 0)                                 */
#define DCDC_BOOST_BOOST_STATUS_REG_BOOST_VLED_OK_Msk (0x1UL)       /*!< BOOST_VLED_OK (Bitfield-Mask: 0x01)                   */
/* ===================================================  VLED_PWR_CTRL_REG  =================================================== */
#define DCDC_BOOST_VLED_PWR_CTRL_REG_VLED_PWR_FORCE_Pos (11UL)      /*!< VLED_PWR_FORCE (Bit 11)                               */
#define DCDC_BOOST_VLED_PWR_CTRL_REG_VLED_PWR_FORCE_Msk (0x1800UL)  /*!< VLED_PWR_FORCE (Bitfield-Mask: 0x03)                  */
#define DCDC_BOOST_VLED_PWR_CTRL_REG_VLED_PWR_MANUAL_Pos (10UL)     /*!< VLED_PWR_MANUAL (Bit 10)                              */
#define DCDC_BOOST_VLED_PWR_CTRL_REG_VLED_PWR_MANUAL_Msk (0x400UL)  /*!< VLED_PWR_MANUAL (Bitfield-Mask: 0x01)                 */
#define DCDC_BOOST_VLED_PWR_CTRL_REG_VLED_PWR_USE_VSYS_LVL_Pos (9UL) /*!< VLED_PWR_USE_VSYS_LVL (Bit 9)                        */
#define DCDC_BOOST_VLED_PWR_CTRL_REG_VLED_PWR_USE_VSYS_LVL_Msk (0x200UL) /*!< VLED_PWR_USE_VSYS_LVL (Bitfield-Mask: 0x01)      */
#define DCDC_BOOST_VLED_PWR_CTRL_REG_VLED_PWR_ENABLE_Pos (8UL)      /*!< VLED_PWR_ENABLE (Bit 8)                               */
#define DCDC_BOOST_VLED_PWR_CTRL_REG_VLED_PWR_ENABLE_Msk (0x100UL)  /*!< VLED_PWR_ENABLE (Bitfield-Mask: 0x01)                 */
#define DCDC_BOOST_VLED_PWR_CTRL_REG_VSYS_OK_DEBOUNCE_Pos (0UL)     /*!< VSYS_OK_DEBOUNCE (Bit 0)                              */
#define DCDC_BOOST_VLED_PWR_CTRL_REG_VSYS_OK_DEBOUNCE_Msk (0xffUL)  /*!< VSYS_OK_DEBOUNCE (Bitfield-Mask: 0xff)                */
/* ==================================================  VLED_PWR_STATUS_REG  ================================================== */
#define DCDC_BOOST_VLED_PWR_STATUS_REG_VLED_PWR_ALLOW_BOOST_Pos (5UL) /*!< VLED_PWR_ALLOW_BOOST (Bit 5)                        */
#define DCDC_BOOST_VLED_PWR_STATUS_REG_VLED_PWR_ALLOW_BOOST_Msk (0x20UL) /*!< VLED_PWR_ALLOW_BOOST (Bitfield-Mask: 0x01)       */
#define DCDC_BOOST_VLED_PWR_STATUS_REG_VLED_PWR_VSYS_CONNECTED_Pos (4UL) /*!< VLED_PWR_VSYS_CONNECTED (Bit 4)                  */
#define DCDC_BOOST_VLED_PWR_STATUS_REG_VLED_PWR_VSYS_CONNECTED_Msk (0x10UL) /*!< VLED_PWR_VSYS_CONNECTED (Bitfield-Mask: 0x01) */
#define DCDC_BOOST_VLED_PWR_STATUS_REG_VLED_PWR_SWITCH_CTRL_STATE_Pos (2UL) /*!< VLED_PWR_SWITCH_CTRL_STATE (Bit 2)            */
#define DCDC_BOOST_VLED_PWR_STATUS_REG_VLED_PWR_SWITCH_CTRL_STATE_Msk (0xcUL) /*!< VLED_PWR_SWITCH_CTRL_STATE (Bitfield-Mask: 0x03) */
#define DCDC_BOOST_VLED_PWR_STATUS_REG_VSYS_OK_DEBOUNCED_Pos (1UL)  /*!< VSYS_OK_DEBOUNCED (Bit 1)                             */
#define DCDC_BOOST_VLED_PWR_STATUS_REG_VSYS_OK_DEBOUNCED_Msk (0x2UL) /*!< VSYS_OK_DEBOUNCED (Bitfield-Mask: 0x01)              */
#define DCDC_BOOST_VLED_PWR_STATUS_REG_VSYS_OK_Pos (0UL)            /*!< VSYS_OK (Bit 0)                                       */
#define DCDC_BOOST_VLED_PWR_STATUS_REG_VSYS_OK_Msk (0x1UL)          /*!< VSYS_OK (Bitfield-Mask: 0x01)                         */


/* =========================================================================================================================== */
/* ================                                            DMA                                            ================ */
/* =========================================================================================================================== */

/* ===================================================  DMA0_A_START_REG  ==================================================== */
#define DMA_DMA0_A_START_REG_DMA0_A_START_Pos (0UL)                 /*!< DMA0_A_START (Bit 0)                                  */
#define DMA_DMA0_A_START_REG_DMA0_A_START_Msk (0xffffffffUL)        /*!< DMA0_A_START (Bitfield-Mask: 0xffffffff)              */
/* ===================================================  DMA0_B_START_REG  ==================================================== */
#define DMA_DMA0_B_START_REG_DMA0_B_START_Pos (0UL)                 /*!< DMA0_B_START (Bit 0)                                  */
#define DMA_DMA0_B_START_REG_DMA0_B_START_Msk (0xffffffffUL)        /*!< DMA0_B_START (Bitfield-Mask: 0xffffffff)              */
/* =====================================================  DMA0_CTRL_REG  ===================================================== */
#define DMA_DMA0_CTRL_REG_DMA_EXCLUSIVE_ACCESS_Pos (16UL)           /*!< DMA_EXCLUSIVE_ACCESS (Bit 16)                         */
#define DMA_DMA0_CTRL_REG_DMA_EXCLUSIVE_ACCESS_Msk (0x10000UL)      /*!< DMA_EXCLUSIVE_ACCESS (Bitfield-Mask: 0x01)            */
#define DMA_DMA0_CTRL_REG_BUS_ERROR_DETECT_Pos (15UL)               /*!< BUS_ERROR_DETECT (Bit 15)                             */
#define DMA_DMA0_CTRL_REG_BUS_ERROR_DETECT_Msk (0x8000UL)           /*!< BUS_ERROR_DETECT (Bitfield-Mask: 0x01)                */
#define DMA_DMA0_CTRL_REG_BURST_MODE_Pos  (13UL)                    /*!< BURST_MODE (Bit 13)                                   */
#define DMA_DMA0_CTRL_REG_BURST_MODE_Msk  (0x6000UL)                /*!< BURST_MODE (Bitfield-Mask: 0x03)                      */
#define DMA_DMA0_CTRL_REG_REQ_SENSE_Pos   (12UL)                    /*!< REQ_SENSE (Bit 12)                                    */
#define DMA_DMA0_CTRL_REG_REQ_SENSE_Msk   (0x1000UL)                /*!< REQ_SENSE (Bitfield-Mask: 0x01)                       */
#define DMA_DMA0_CTRL_REG_DMA_INIT_Pos    (11UL)                    /*!< DMA_INIT (Bit 11)                                     */
#define DMA_DMA0_CTRL_REG_DMA_INIT_Msk    (0x800UL)                 /*!< DMA_INIT (Bitfield-Mask: 0x01)                        */
#define DMA_DMA0_CTRL_REG_DMA_IDLE_Pos    (10UL)                    /*!< DMA_IDLE (Bit 10)                                     */
#define DMA_DMA0_CTRL_REG_DMA_IDLE_Msk    (0x400UL)                 /*!< DMA_IDLE (Bitfield-Mask: 0x01)                        */
#define DMA_DMA0_CTRL_REG_DMA_PRIO_Pos    (7UL)                     /*!< DMA_PRIO (Bit 7)                                      */
#define DMA_DMA0_CTRL_REG_DMA_PRIO_Msk    (0x380UL)                 /*!< DMA_PRIO (Bitfield-Mask: 0x07)                        */
#define DMA_DMA0_CTRL_REG_CIRCULAR_Pos    (6UL)                     /*!< CIRCULAR (Bit 6)                                      */
#define DMA_DMA0_CTRL_REG_CIRCULAR_Msk    (0x40UL)                  /*!< CIRCULAR (Bitfield-Mask: 0x01)                        */
#define DMA_DMA0_CTRL_REG_AINC_Pos        (5UL)                     /*!< AINC (Bit 5)                                          */
#define DMA_DMA0_CTRL_REG_AINC_Msk        (0x20UL)                  /*!< AINC (Bitfield-Mask: 0x01)                            */
#define DMA_DMA0_CTRL_REG_BINC_Pos        (4UL)                     /*!< BINC (Bit 4)                                          */
#define DMA_DMA0_CTRL_REG_BINC_Msk        (0x10UL)                  /*!< BINC (Bitfield-Mask: 0x01)                            */
#define DMA_DMA0_CTRL_REG_DREQ_MODE_Pos   (3UL)                     /*!< DREQ_MODE (Bit 3)                                     */
#define DMA_DMA0_CTRL_REG_DREQ_MODE_Msk   (0x8UL)                   /*!< DREQ_MODE (Bitfield-Mask: 0x01)                       */
#define DMA_DMA0_CTRL_REG_BW_Pos          (1UL)                     /*!< BW (Bit 1)                                            */
#define DMA_DMA0_CTRL_REG_BW_Msk          (0x6UL)                   /*!< BW (Bitfield-Mask: 0x03)                              */
#define DMA_DMA0_CTRL_REG_DMA_ON_Pos      (0UL)                     /*!< DMA_ON (Bit 0)                                        */
#define DMA_DMA0_CTRL_REG_DMA_ON_Msk      (0x1UL)                   /*!< DMA_ON (Bitfield-Mask: 0x01)                          */
/* =====================================================  DMA0_IDX_REG  ====================================================== */
#define DMA_DMA0_IDX_REG_DMA0_IDX_Pos     (0UL)                     /*!< DMA0_IDX (Bit 0)                                      */
#define DMA_DMA0_IDX_REG_DMA0_IDX_Msk     (0xffffUL)                /*!< DMA0_IDX (Bitfield-Mask: 0xffff)                      */
/* =====================================================  DMA0_INT_REG  ====================================================== */
#define DMA_DMA0_INT_REG_DMA0_INT_Pos     (0UL)                     /*!< DMA0_INT (Bit 0)                                      */
#define DMA_DMA0_INT_REG_DMA0_INT_Msk     (0xffffUL)                /*!< DMA0_INT (Bitfield-Mask: 0xffff)                      */
/* =====================================================  DMA0_LEN_REG  ====================================================== */
#define DMA_DMA0_LEN_REG_DMA0_LEN_Pos     (0UL)                     /*!< DMA0_LEN (Bit 0)                                      */
#define DMA_DMA0_LEN_REG_DMA0_LEN_Msk     (0xffffUL)                /*!< DMA0_LEN (Bitfield-Mask: 0xffff)                      */
/* ===================================================  DMA1_A_START_REG  ==================================================== */
#define DMA_DMA1_A_START_REG_DMA1_A_START_Pos (0UL)                 /*!< DMA1_A_START (Bit 0)                                  */
#define DMA_DMA1_A_START_REG_DMA1_A_START_Msk (0xffffffffUL)        /*!< DMA1_A_START (Bitfield-Mask: 0xffffffff)              */
/* ===================================================  DMA1_B_START_REG  ==================================================== */
#define DMA_DMA1_B_START_REG_DMA1_B_START_Pos (0UL)                 /*!< DMA1_B_START (Bit 0)                                  */
#define DMA_DMA1_B_START_REG_DMA1_B_START_Msk (0xffffffffUL)        /*!< DMA1_B_START (Bitfield-Mask: 0xffffffff)              */
/* =====================================================  DMA1_CTRL_REG  ===================================================== */
#define DMA_DMA1_CTRL_REG_DMA_EXCLUSIVE_ACCESS_Pos (16UL)           /*!< DMA_EXCLUSIVE_ACCESS (Bit 16)                         */
#define DMA_DMA1_CTRL_REG_DMA_EXCLUSIVE_ACCESS_Msk (0x10000UL)      /*!< DMA_EXCLUSIVE_ACCESS (Bitfield-Mask: 0x01)            */
#define DMA_DMA1_CTRL_REG_BUS_ERROR_DETECT_Pos (15UL)               /*!< BUS_ERROR_DETECT (Bit 15)                             */
#define DMA_DMA1_CTRL_REG_BUS_ERROR_DETECT_Msk (0x8000UL)           /*!< BUS_ERROR_DETECT (Bitfield-Mask: 0x01)                */
#define DMA_DMA1_CTRL_REG_BURST_MODE_Pos  (13UL)                    /*!< BURST_MODE (Bit 13)                                   */
#define DMA_DMA1_CTRL_REG_BURST_MODE_Msk  (0x6000UL)                /*!< BURST_MODE (Bitfield-Mask: 0x03)                      */
#define DMA_DMA1_CTRL_REG_REQ_SENSE_Pos   (12UL)                    /*!< REQ_SENSE (Bit 12)                                    */
#define DMA_DMA1_CTRL_REG_REQ_SENSE_Msk   (0x1000UL)                /*!< REQ_SENSE (Bitfield-Mask: 0x01)                       */
#define DMA_DMA1_CTRL_REG_DMA_INIT_Pos    (11UL)                    /*!< DMA_INIT (Bit 11)                                     */
#define DMA_DMA1_CTRL_REG_DMA_INIT_Msk    (0x800UL)                 /*!< DMA_INIT (Bitfield-Mask: 0x01)                        */
#define DMA_DMA1_CTRL_REG_DMA_IDLE_Pos    (10UL)                    /*!< DMA_IDLE (Bit 10)                                     */
#define DMA_DMA1_CTRL_REG_DMA_IDLE_Msk    (0x400UL)                 /*!< DMA_IDLE (Bitfield-Mask: 0x01)                        */
#define DMA_DMA1_CTRL_REG_DMA_PRIO_Pos    (7UL)                     /*!< DMA_PRIO (Bit 7)                                      */
#define DMA_DMA1_CTRL_REG_DMA_PRIO_Msk    (0x380UL)                 /*!< DMA_PRIO (Bitfield-Mask: 0x07)                        */
#define DMA_DMA1_CTRL_REG_CIRCULAR_Pos    (6UL)                     /*!< CIRCULAR (Bit 6)                                      */
#define DMA_DMA1_CTRL_REG_CIRCULAR_Msk    (0x40UL)                  /*!< CIRCULAR (Bitfield-Mask: 0x01)                        */
#define DMA_DMA1_CTRL_REG_AINC_Pos        (5UL)                     /*!< AINC (Bit 5)                                          */
#define DMA_DMA1_CTRL_REG_AINC_Msk        (0x20UL)                  /*!< AINC (Bitfield-Mask: 0x01)                            */
#define DMA_DMA1_CTRL_REG_BINC_Pos        (4UL)                     /*!< BINC (Bit 4)                                          */
#define DMA_DMA1_CTRL_REG_BINC_Msk        (0x10UL)                  /*!< BINC (Bitfield-Mask: 0x01)                            */
#define DMA_DMA1_CTRL_REG_DREQ_MODE_Pos   (3UL)                     /*!< DREQ_MODE (Bit 3)                                     */
#define DMA_DMA1_CTRL_REG_DREQ_MODE_Msk   (0x8UL)                   /*!< DREQ_MODE (Bitfield-Mask: 0x01)                       */
#define DMA_DMA1_CTRL_REG_BW_Pos          (1UL)                     /*!< BW (Bit 1)                                            */
#define DMA_DMA1_CTRL_REG_BW_Msk          (0x6UL)                   /*!< BW (Bitfield-Mask: 0x03)                              */
#define DMA_DMA1_CTRL_REG_DMA_ON_Pos      (0UL)                     /*!< DMA_ON (Bit 0)                                        */
#define DMA_DMA1_CTRL_REG_DMA_ON_Msk      (0x1UL)                   /*!< DMA_ON (Bitfield-Mask: 0x01)                          */
/* =====================================================  DMA1_IDX_REG  ====================================================== */
#define DMA_DMA1_IDX_REG_DMA1_IDX_Pos     (0UL)                     /*!< DMA1_IDX (Bit 0)                                      */
#define DMA_DMA1_IDX_REG_DMA1_IDX_Msk     (0xffffUL)                /*!< DMA1_IDX (Bitfield-Mask: 0xffff)                      */
/* =====================================================  DMA1_INT_REG  ====================================================== */
#define DMA_DMA1_INT_REG_DMA1_INT_Pos     (0UL)                     /*!< DMA1_INT (Bit 0)                                      */
#define DMA_DMA1_INT_REG_DMA1_INT_Msk     (0xffffUL)                /*!< DMA1_INT (Bitfield-Mask: 0xffff)                      */
/* =====================================================  DMA1_LEN_REG  ====================================================== */
#define DMA_DMA1_LEN_REG_DMA1_LEN_Pos     (0UL)                     /*!< DMA1_LEN (Bit 0)                                      */
#define DMA_DMA1_LEN_REG_DMA1_LEN_Msk     (0xffffUL)                /*!< DMA1_LEN (Bitfield-Mask: 0xffff)                      */
/* ===================================================  DMA2_A_START_REG  ==================================================== */
#define DMA_DMA2_A_START_REG_DMA2_A_START_Pos (0UL)                 /*!< DMA2_A_START (Bit 0)                                  */
#define DMA_DMA2_A_START_REG_DMA2_A_START_Msk (0xffffffffUL)        /*!< DMA2_A_START (Bitfield-Mask: 0xffffffff)              */
/* ===================================================  DMA2_B_START_REG  ==================================================== */
#define DMA_DMA2_B_START_REG_DMA2_B_START_Pos (0UL)                 /*!< DMA2_B_START (Bit 0)                                  */
#define DMA_DMA2_B_START_REG_DMA2_B_START_Msk (0xffffffffUL)        /*!< DMA2_B_START (Bitfield-Mask: 0xffffffff)              */
/* =====================================================  DMA2_CTRL_REG  ===================================================== */
#define DMA_DMA2_CTRL_REG_DMA_EXCLUSIVE_ACCESS_Pos (16UL)           /*!< DMA_EXCLUSIVE_ACCESS (Bit 16)                         */
#define DMA_DMA2_CTRL_REG_DMA_EXCLUSIVE_ACCESS_Msk (0x10000UL)      /*!< DMA_EXCLUSIVE_ACCESS (Bitfield-Mask: 0x01)            */
#define DMA_DMA2_CTRL_REG_BUS_ERROR_DETECT_Pos (15UL)               /*!< BUS_ERROR_DETECT (Bit 15)                             */
#define DMA_DMA2_CTRL_REG_BUS_ERROR_DETECT_Msk (0x8000UL)           /*!< BUS_ERROR_DETECT (Bitfield-Mask: 0x01)                */
#define DMA_DMA2_CTRL_REG_BURST_MODE_Pos  (13UL)                    /*!< BURST_MODE (Bit 13)                                   */
#define DMA_DMA2_CTRL_REG_BURST_MODE_Msk  (0x6000UL)                /*!< BURST_MODE (Bitfield-Mask: 0x03)                      */
#define DMA_DMA2_CTRL_REG_REQ_SENSE_Pos   (12UL)                    /*!< REQ_SENSE (Bit 12)                                    */
#define DMA_DMA2_CTRL_REG_REQ_SENSE_Msk   (0x1000UL)                /*!< REQ_SENSE (Bitfield-Mask: 0x01)                       */
#define DMA_DMA2_CTRL_REG_DMA_INIT_Pos    (11UL)                    /*!< DMA_INIT (Bit 11)                                     */
#define DMA_DMA2_CTRL_REG_DMA_INIT_Msk    (0x800UL)                 /*!< DMA_INIT (Bitfield-Mask: 0x01)                        */
#define DMA_DMA2_CTRL_REG_DMA_IDLE_Pos    (10UL)                    /*!< DMA_IDLE (Bit 10)                                     */
#define DMA_DMA2_CTRL_REG_DMA_IDLE_Msk    (0x400UL)                 /*!< DMA_IDLE (Bitfield-Mask: 0x01)                        */
#define DMA_DMA2_CTRL_REG_DMA_PRIO_Pos    (7UL)                     /*!< DMA_PRIO (Bit 7)                                      */
#define DMA_DMA2_CTRL_REG_DMA_PRIO_Msk    (0x380UL)                 /*!< DMA_PRIO (Bitfield-Mask: 0x07)                        */
#define DMA_DMA2_CTRL_REG_CIRCULAR_Pos    (6UL)                     /*!< CIRCULAR (Bit 6)                                      */
#define DMA_DMA2_CTRL_REG_CIRCULAR_Msk    (0x40UL)                  /*!< CIRCULAR (Bitfield-Mask: 0x01)                        */
#define DMA_DMA2_CTRL_REG_AINC_Pos        (5UL)                     /*!< AINC (Bit 5)                                          */
#define DMA_DMA2_CTRL_REG_AINC_Msk        (0x20UL)                  /*!< AINC (Bitfield-Mask: 0x01)                            */
#define DMA_DMA2_CTRL_REG_BINC_Pos        (4UL)                     /*!< BINC (Bit 4)                                          */
#define DMA_DMA2_CTRL_REG_BINC_Msk        (0x10UL)                  /*!< BINC (Bitfield-Mask: 0x01)                            */
#define DMA_DMA2_CTRL_REG_DREQ_MODE_Pos   (3UL)                     /*!< DREQ_MODE (Bit 3)                                     */
#define DMA_DMA2_CTRL_REG_DREQ_MODE_Msk   (0x8UL)                   /*!< DREQ_MODE (Bitfield-Mask: 0x01)                       */
#define DMA_DMA2_CTRL_REG_BW_Pos          (1UL)                     /*!< BW (Bit 1)                                            */
#define DMA_DMA2_CTRL_REG_BW_Msk          (0x6UL)                   /*!< BW (Bitfield-Mask: 0x03)                              */
#define DMA_DMA2_CTRL_REG_DMA_ON_Pos      (0UL)                     /*!< DMA_ON (Bit 0)                                        */
#define DMA_DMA2_CTRL_REG_DMA_ON_Msk      (0x1UL)                   /*!< DMA_ON (Bitfield-Mask: 0x01)                          */
/* =====================================================  DMA2_IDX_REG  ====================================================== */
#define DMA_DMA2_IDX_REG_DMA2_IDX_Pos     (0UL)                     /*!< DMA2_IDX (Bit 0)                                      */
#define DMA_DMA2_IDX_REG_DMA2_IDX_Msk     (0xffffUL)                /*!< DMA2_IDX (Bitfield-Mask: 0xffff)                      */
/* =====================================================  DMA2_INT_REG  ====================================================== */
#define DMA_DMA2_INT_REG_DMA2_INT_Pos     (0UL)                     /*!< DMA2_INT (Bit 0)                                      */
#define DMA_DMA2_INT_REG_DMA2_INT_Msk     (0xffffUL)                /*!< DMA2_INT (Bitfield-Mask: 0xffff)                      */
/* =====================================================  DMA2_LEN_REG  ====================================================== */
#define DMA_DMA2_LEN_REG_DMA2_LEN_Pos     (0UL)                     /*!< DMA2_LEN (Bit 0)                                      */
#define DMA_DMA2_LEN_REG_DMA2_LEN_Msk     (0xffffUL)                /*!< DMA2_LEN (Bitfield-Mask: 0xffff)                      */
/* ===================================================  DMA3_A_START_REG  ==================================================== */
#define DMA_DMA3_A_START_REG_DMA3_A_START_Pos (0UL)                 /*!< DMA3_A_START (Bit 0)                                  */
#define DMA_DMA3_A_START_REG_DMA3_A_START_Msk (0xffffffffUL)        /*!< DMA3_A_START (Bitfield-Mask: 0xffffffff)              */
/* ===================================================  DMA3_B_START_REG  ==================================================== */
#define DMA_DMA3_B_START_REG_DMA3_B_START_Pos (0UL)                 /*!< DMA3_B_START (Bit 0)                                  */
#define DMA_DMA3_B_START_REG_DMA3_B_START_Msk (0xffffffffUL)        /*!< DMA3_B_START (Bitfield-Mask: 0xffffffff)              */
/* =====================================================  DMA3_CTRL_REG  ===================================================== */
#define DMA_DMA3_CTRL_REG_DMA_EXCLUSIVE_ACCESS_Pos (16UL)           /*!< DMA_EXCLUSIVE_ACCESS (Bit 16)                         */
#define DMA_DMA3_CTRL_REG_DMA_EXCLUSIVE_ACCESS_Msk (0x10000UL)      /*!< DMA_EXCLUSIVE_ACCESS (Bitfield-Mask: 0x01)            */
#define DMA_DMA3_CTRL_REG_BUS_ERROR_DETECT_Pos (15UL)               /*!< BUS_ERROR_DETECT (Bit 15)                             */
#define DMA_DMA3_CTRL_REG_BUS_ERROR_DETECT_Msk (0x8000UL)           /*!< BUS_ERROR_DETECT (Bitfield-Mask: 0x01)                */
#define DMA_DMA3_CTRL_REG_BURST_MODE_Pos  (13UL)                    /*!< BURST_MODE (Bit 13)                                   */
#define DMA_DMA3_CTRL_REG_BURST_MODE_Msk  (0x6000UL)                /*!< BURST_MODE (Bitfield-Mask: 0x03)                      */
#define DMA_DMA3_CTRL_REG_REQ_SENSE_Pos   (12UL)                    /*!< REQ_SENSE (Bit 12)                                    */
#define DMA_DMA3_CTRL_REG_REQ_SENSE_Msk   (0x1000UL)                /*!< REQ_SENSE (Bitfield-Mask: 0x01)                       */
#define DMA_DMA3_CTRL_REG_DMA_INIT_Pos    (11UL)                    /*!< DMA_INIT (Bit 11)                                     */
#define DMA_DMA3_CTRL_REG_DMA_INIT_Msk    (0x800UL)                 /*!< DMA_INIT (Bitfield-Mask: 0x01)                        */
#define DMA_DMA3_CTRL_REG_DMA_IDLE_Pos    (10UL)                    /*!< DMA_IDLE (Bit 10)                                     */
#define DMA_DMA3_CTRL_REG_DMA_IDLE_Msk    (0x400UL)                 /*!< DMA_IDLE (Bitfield-Mask: 0x01)                        */
#define DMA_DMA3_CTRL_REG_DMA_PRIO_Pos    (7UL)                     /*!< DMA_PRIO (Bit 7)                                      */
#define DMA_DMA3_CTRL_REG_DMA_PRIO_Msk    (0x380UL)                 /*!< DMA_PRIO (Bitfield-Mask: 0x07)                        */
#define DMA_DMA3_CTRL_REG_CIRCULAR_Pos    (6UL)                     /*!< CIRCULAR (Bit 6)                                      */
#define DMA_DMA3_CTRL_REG_CIRCULAR_Msk    (0x40UL)                  /*!< CIRCULAR (Bitfield-Mask: 0x01)                        */
#define DMA_DMA3_CTRL_REG_AINC_Pos        (5UL)                     /*!< AINC (Bit 5)                                          */
#define DMA_DMA3_CTRL_REG_AINC_Msk        (0x20UL)                  /*!< AINC (Bitfield-Mask: 0x01)                            */
#define DMA_DMA3_CTRL_REG_BINC_Pos        (4UL)                     /*!< BINC (Bit 4)                                          */
#define DMA_DMA3_CTRL_REG_BINC_Msk        (0x10UL)                  /*!< BINC (Bitfield-Mask: 0x01)                            */
#define DMA_DMA3_CTRL_REG_DREQ_MODE_Pos   (3UL)                     /*!< DREQ_MODE (Bit 3)                                     */
#define DMA_DMA3_CTRL_REG_DREQ_MODE_Msk   (0x8UL)                   /*!< DREQ_MODE (Bitfield-Mask: 0x01)                       */
#define DMA_DMA3_CTRL_REG_BW_Pos          (1UL)                     /*!< BW (Bit 1)                                            */
#define DMA_DMA3_CTRL_REG_BW_Msk          (0x6UL)                   /*!< BW (Bitfield-Mask: 0x03)                              */
#define DMA_DMA3_CTRL_REG_DMA_ON_Pos      (0UL)                     /*!< DMA_ON (Bit 0)                                        */
#define DMA_DMA3_CTRL_REG_DMA_ON_Msk      (0x1UL)                   /*!< DMA_ON (Bitfield-Mask: 0x01)                          */
/* =====================================================  DMA3_IDX_REG  ====================================================== */
#define DMA_DMA3_IDX_REG_DMA3_IDX_Pos     (0UL)                     /*!< DMA3_IDX (Bit 0)                                      */
#define DMA_DMA3_IDX_REG_DMA3_IDX_Msk     (0xffffUL)                /*!< DMA3_IDX (Bitfield-Mask: 0xffff)                      */
/* =====================================================  DMA3_INT_REG  ====================================================== */
#define DMA_DMA3_INT_REG_DMA3_INT_Pos     (0UL)                     /*!< DMA3_INT (Bit 0)                                      */
#define DMA_DMA3_INT_REG_DMA3_INT_Msk     (0xffffUL)                /*!< DMA3_INT (Bitfield-Mask: 0xffff)                      */
/* =====================================================  DMA3_LEN_REG  ====================================================== */
#define DMA_DMA3_LEN_REG_DMA3_LEN_Pos     (0UL)                     /*!< DMA3_LEN (Bit 0)                                      */
#define DMA_DMA3_LEN_REG_DMA3_LEN_Msk     (0xffffUL)                /*!< DMA3_LEN (Bitfield-Mask: 0xffff)                      */
/* ===================================================  DMA4_A_START_REG  ==================================================== */
#define DMA_DMA4_A_START_REG_DMA4_A_START_Pos (0UL)                 /*!< DMA4_A_START (Bit 0)                                  */
#define DMA_DMA4_A_START_REG_DMA4_A_START_Msk (0xffffffffUL)        /*!< DMA4_A_START (Bitfield-Mask: 0xffffffff)              */
/* ===================================================  DMA4_B_START_REG  ==================================================== */
#define DMA_DMA4_B_START_REG_DMA4_B_START_Pos (0UL)                 /*!< DMA4_B_START (Bit 0)                                  */
#define DMA_DMA4_B_START_REG_DMA4_B_START_Msk (0xffffffffUL)        /*!< DMA4_B_START (Bitfield-Mask: 0xffffffff)              */
/* =====================================================  DMA4_CTRL_REG  ===================================================== */
#define DMA_DMA4_CTRL_REG_DMA_EXCLUSIVE_ACCESS_Pos (16UL)           /*!< DMA_EXCLUSIVE_ACCESS (Bit 16)                         */
#define DMA_DMA4_CTRL_REG_DMA_EXCLUSIVE_ACCESS_Msk (0x10000UL)      /*!< DMA_EXCLUSIVE_ACCESS (Bitfield-Mask: 0x01)            */
#define DMA_DMA4_CTRL_REG_BUS_ERROR_DETECT_Pos (15UL)               /*!< BUS_ERROR_DETECT (Bit 15)                             */
#define DMA_DMA4_CTRL_REG_BUS_ERROR_DETECT_Msk (0x8000UL)           /*!< BUS_ERROR_DETECT (Bitfield-Mask: 0x01)                */
#define DMA_DMA4_CTRL_REG_BURST_MODE_Pos  (13UL)                    /*!< BURST_MODE (Bit 13)                                   */
#define DMA_DMA4_CTRL_REG_BURST_MODE_Msk  (0x6000UL)                /*!< BURST_MODE (Bitfield-Mask: 0x03)                      */
#define DMA_DMA4_CTRL_REG_REQ_SENSE_Pos   (12UL)                    /*!< REQ_SENSE (Bit 12)                                    */
#define DMA_DMA4_CTRL_REG_REQ_SENSE_Msk   (0x1000UL)                /*!< REQ_SENSE (Bitfield-Mask: 0x01)                       */
#define DMA_DMA4_CTRL_REG_DMA_INIT_Pos    (11UL)                    /*!< DMA_INIT (Bit 11)                                     */
#define DMA_DMA4_CTRL_REG_DMA_INIT_Msk    (0x800UL)                 /*!< DMA_INIT (Bitfield-Mask: 0x01)                        */
#define DMA_DMA4_CTRL_REG_DMA_IDLE_Pos    (10UL)                    /*!< DMA_IDLE (Bit 10)                                     */
#define DMA_DMA4_CTRL_REG_DMA_IDLE_Msk    (0x400UL)                 /*!< DMA_IDLE (Bitfield-Mask: 0x01)                        */
#define DMA_DMA4_CTRL_REG_DMA_PRIO_Pos    (7UL)                     /*!< DMA_PRIO (Bit 7)                                      */
#define DMA_DMA4_CTRL_REG_DMA_PRIO_Msk    (0x380UL)                 /*!< DMA_PRIO (Bitfield-Mask: 0x07)                        */
#define DMA_DMA4_CTRL_REG_CIRCULAR_Pos    (6UL)                     /*!< CIRCULAR (Bit 6)                                      */
#define DMA_DMA4_CTRL_REG_CIRCULAR_Msk    (0x40UL)                  /*!< CIRCULAR (Bitfield-Mask: 0x01)                        */
#define DMA_DMA4_CTRL_REG_AINC_Pos        (5UL)                     /*!< AINC (Bit 5)                                          */
#define DMA_DMA4_CTRL_REG_AINC_Msk        (0x20UL)                  /*!< AINC (Bitfield-Mask: 0x01)                            */
#define DMA_DMA4_CTRL_REG_BINC_Pos        (4UL)                     /*!< BINC (Bit 4)                                          */
#define DMA_DMA4_CTRL_REG_BINC_Msk        (0x10UL)                  /*!< BINC (Bitfield-Mask: 0x01)                            */
#define DMA_DMA4_CTRL_REG_DREQ_MODE_Pos   (3UL)                     /*!< DREQ_MODE (Bit 3)                                     */
#define DMA_DMA4_CTRL_REG_DREQ_MODE_Msk   (0x8UL)                   /*!< DREQ_MODE (Bitfield-Mask: 0x01)                       */
#define DMA_DMA4_CTRL_REG_BW_Pos          (1UL)                     /*!< BW (Bit 1)                                            */
#define DMA_DMA4_CTRL_REG_BW_Msk          (0x6UL)                   /*!< BW (Bitfield-Mask: 0x03)                              */
#define DMA_DMA4_CTRL_REG_DMA_ON_Pos      (0UL)                     /*!< DMA_ON (Bit 0)                                        */
#define DMA_DMA4_CTRL_REG_DMA_ON_Msk      (0x1UL)                   /*!< DMA_ON (Bitfield-Mask: 0x01)                          */
/* =====================================================  DMA4_IDX_REG  ====================================================== */
#define DMA_DMA4_IDX_REG_DMA4_IDX_Pos     (0UL)                     /*!< DMA4_IDX (Bit 0)                                      */
#define DMA_DMA4_IDX_REG_DMA4_IDX_Msk     (0xffffUL)                /*!< DMA4_IDX (Bitfield-Mask: 0xffff)                      */
/* =====================================================  DMA4_INT_REG  ====================================================== */
#define DMA_DMA4_INT_REG_DMA4_INT_Pos     (0UL)                     /*!< DMA4_INT (Bit 0)                                      */
#define DMA_DMA4_INT_REG_DMA4_INT_Msk     (0xffffUL)                /*!< DMA4_INT (Bitfield-Mask: 0xffff)                      */
/* =====================================================  DMA4_LEN_REG  ====================================================== */
#define DMA_DMA4_LEN_REG_DMA4_LEN_Pos     (0UL)                     /*!< DMA4_LEN (Bit 0)                                      */
#define DMA_DMA4_LEN_REG_DMA4_LEN_Msk     (0xffffUL)                /*!< DMA4_LEN (Bitfield-Mask: 0xffff)                      */
/* ===================================================  DMA5_A_START_REG  ==================================================== */
#define DMA_DMA5_A_START_REG_DMA5_A_START_Pos (0UL)                 /*!< DMA5_A_START (Bit 0)                                  */
#define DMA_DMA5_A_START_REG_DMA5_A_START_Msk (0xffffffffUL)        /*!< DMA5_A_START (Bitfield-Mask: 0xffffffff)              */
/* ===================================================  DMA5_B_START_REG  ==================================================== */
#define DMA_DMA5_B_START_REG_DMA5_B_START_Pos (0UL)                 /*!< DMA5_B_START (Bit 0)                                  */
#define DMA_DMA5_B_START_REG_DMA5_B_START_Msk (0xffffffffUL)        /*!< DMA5_B_START (Bitfield-Mask: 0xffffffff)              */
/* =====================================================  DMA5_CTRL_REG  ===================================================== */
#define DMA_DMA5_CTRL_REG_DMA_EXCLUSIVE_ACCESS_Pos (16UL)           /*!< DMA_EXCLUSIVE_ACCESS (Bit 16)                         */
#define DMA_DMA5_CTRL_REG_DMA_EXCLUSIVE_ACCESS_Msk (0x10000UL)      /*!< DMA_EXCLUSIVE_ACCESS (Bitfield-Mask: 0x01)            */
#define DMA_DMA5_CTRL_REG_BUS_ERROR_DETECT_Pos (15UL)               /*!< BUS_ERROR_DETECT (Bit 15)                             */
#define DMA_DMA5_CTRL_REG_BUS_ERROR_DETECT_Msk (0x8000UL)           /*!< BUS_ERROR_DETECT (Bitfield-Mask: 0x01)                */
#define DMA_DMA5_CTRL_REG_BURST_MODE_Pos  (13UL)                    /*!< BURST_MODE (Bit 13)                                   */
#define DMA_DMA5_CTRL_REG_BURST_MODE_Msk  (0x6000UL)                /*!< BURST_MODE (Bitfield-Mask: 0x03)                      */
#define DMA_DMA5_CTRL_REG_REQ_SENSE_Pos   (12UL)                    /*!< REQ_SENSE (Bit 12)                                    */
#define DMA_DMA5_CTRL_REG_REQ_SENSE_Msk   (0x1000UL)                /*!< REQ_SENSE (Bitfield-Mask: 0x01)                       */
#define DMA_DMA5_CTRL_REG_DMA_INIT_Pos    (11UL)                    /*!< DMA_INIT (Bit 11)                                     */
#define DMA_DMA5_CTRL_REG_DMA_INIT_Msk    (0x800UL)                 /*!< DMA_INIT (Bitfield-Mask: 0x01)                        */
#define DMA_DMA5_CTRL_REG_DMA_IDLE_Pos    (10UL)                    /*!< DMA_IDLE (Bit 10)                                     */
#define DMA_DMA5_CTRL_REG_DMA_IDLE_Msk    (0x400UL)                 /*!< DMA_IDLE (Bitfield-Mask: 0x01)                        */
#define DMA_DMA5_CTRL_REG_DMA_PRIO_Pos    (7UL)                     /*!< DMA_PRIO (Bit 7)                                      */
#define DMA_DMA5_CTRL_REG_DMA_PRIO_Msk    (0x380UL)                 /*!< DMA_PRIO (Bitfield-Mask: 0x07)                        */
#define DMA_DMA5_CTRL_REG_CIRCULAR_Pos    (6UL)                     /*!< CIRCULAR (Bit 6)                                      */
#define DMA_DMA5_CTRL_REG_CIRCULAR_Msk    (0x40UL)                  /*!< CIRCULAR (Bitfield-Mask: 0x01)                        */
#define DMA_DMA5_CTRL_REG_AINC_Pos        (5UL)                     /*!< AINC (Bit 5)                                          */
#define DMA_DMA5_CTRL_REG_AINC_Msk        (0x20UL)                  /*!< AINC (Bitfield-Mask: 0x01)                            */
#define DMA_DMA5_CTRL_REG_BINC_Pos        (4UL)                     /*!< BINC (Bit 4)                                          */
#define DMA_DMA5_CTRL_REG_BINC_Msk        (0x10UL)                  /*!< BINC (Bitfield-Mask: 0x01)                            */
#define DMA_DMA5_CTRL_REG_DREQ_MODE_Pos   (3UL)                     /*!< DREQ_MODE (Bit 3)                                     */
#define DMA_DMA5_CTRL_REG_DREQ_MODE_Msk   (0x8UL)                   /*!< DREQ_MODE (Bitfield-Mask: 0x01)                       */
#define DMA_DMA5_CTRL_REG_BW_Pos          (1UL)                     /*!< BW (Bit 1)                                            */
#define DMA_DMA5_CTRL_REG_BW_Msk          (0x6UL)                   /*!< BW (Bitfield-Mask: 0x03)                              */
#define DMA_DMA5_CTRL_REG_DMA_ON_Pos      (0UL)                     /*!< DMA_ON (Bit 0)                                        */
#define DMA_DMA5_CTRL_REG_DMA_ON_Msk      (0x1UL)                   /*!< DMA_ON (Bitfield-Mask: 0x01)                          */
/* =====================================================  DMA5_IDX_REG  ====================================================== */
#define DMA_DMA5_IDX_REG_DMA5_IDX_Pos     (0UL)                     /*!< DMA5_IDX (Bit 0)                                      */
#define DMA_DMA5_IDX_REG_DMA5_IDX_Msk     (0xffffUL)                /*!< DMA5_IDX (Bitfield-Mask: 0xffff)                      */
/* =====================================================  DMA5_INT_REG  ====================================================== */
#define DMA_DMA5_INT_REG_DMA5_INT_Pos     (0UL)                     /*!< DMA5_INT (Bit 0)                                      */
#define DMA_DMA5_INT_REG_DMA5_INT_Msk     (0xffffUL)                /*!< DMA5_INT (Bitfield-Mask: 0xffff)                      */
/* =====================================================  DMA5_LEN_REG  ====================================================== */
#define DMA_DMA5_LEN_REG_DMA5_LEN_Pos     (0UL)                     /*!< DMA5_LEN (Bit 0)                                      */
#define DMA_DMA5_LEN_REG_DMA5_LEN_Msk     (0xffffUL)                /*!< DMA5_LEN (Bitfield-Mask: 0xffff)                      */
/* ===================================================  DMA6_A_START_REG  ==================================================== */
#define DMA_DMA6_A_START_REG_DMA6_A_START_Pos (0UL)                 /*!< DMA6_A_START (Bit 0)                                  */
#define DMA_DMA6_A_START_REG_DMA6_A_START_Msk (0xffffffffUL)        /*!< DMA6_A_START (Bitfield-Mask: 0xffffffff)              */
/* ===================================================  DMA6_B_START_REG  ==================================================== */
#define DMA_DMA6_B_START_REG_DMA6_B_START_Pos (0UL)                 /*!< DMA6_B_START (Bit 0)                                  */
#define DMA_DMA6_B_START_REG_DMA6_B_START_Msk (0xffffffffUL)        /*!< DMA6_B_START (Bitfield-Mask: 0xffffffff)              */
/* =====================================================  DMA6_CTRL_REG  ===================================================== */
#define DMA_DMA6_CTRL_REG_DMA_EXCLUSIVE_ACCESS_Pos (16UL)           /*!< DMA_EXCLUSIVE_ACCESS (Bit 16)                         */
#define DMA_DMA6_CTRL_REG_DMA_EXCLUSIVE_ACCESS_Msk (0x10000UL)      /*!< DMA_EXCLUSIVE_ACCESS (Bitfield-Mask: 0x01)            */
#define DMA_DMA6_CTRL_REG_BUS_ERROR_DETECT_Pos (15UL)               /*!< BUS_ERROR_DETECT (Bit 15)                             */
#define DMA_DMA6_CTRL_REG_BUS_ERROR_DETECT_Msk (0x8000UL)           /*!< BUS_ERROR_DETECT (Bitfield-Mask: 0x01)                */
#define DMA_DMA6_CTRL_REG_BURST_MODE_Pos  (13UL)                    /*!< BURST_MODE (Bit 13)                                   */
#define DMA_DMA6_CTRL_REG_BURST_MODE_Msk  (0x6000UL)                /*!< BURST_MODE (Bitfield-Mask: 0x03)                      */
#define DMA_DMA6_CTRL_REG_REQ_SENSE_Pos   (12UL)                    /*!< REQ_SENSE (Bit 12)                                    */
#define DMA_DMA6_CTRL_REG_REQ_SENSE_Msk   (0x1000UL)                /*!< REQ_SENSE (Bitfield-Mask: 0x01)                       */
#define DMA_DMA6_CTRL_REG_DMA_INIT_Pos    (11UL)                    /*!< DMA_INIT (Bit 11)                                     */
#define DMA_DMA6_CTRL_REG_DMA_INIT_Msk    (0x800UL)                 /*!< DMA_INIT (Bitfield-Mask: 0x01)                        */
#define DMA_DMA6_CTRL_REG_DMA_IDLE_Pos    (10UL)                    /*!< DMA_IDLE (Bit 10)                                     */
#define DMA_DMA6_CTRL_REG_DMA_IDLE_Msk    (0x400UL)                 /*!< DMA_IDLE (Bitfield-Mask: 0x01)                        */
#define DMA_DMA6_CTRL_REG_DMA_PRIO_Pos    (7UL)                     /*!< DMA_PRIO (Bit 7)                                      */
#define DMA_DMA6_CTRL_REG_DMA_PRIO_Msk    (0x380UL)                 /*!< DMA_PRIO (Bitfield-Mask: 0x07)                        */
#define DMA_DMA6_CTRL_REG_CIRCULAR_Pos    (6UL)                     /*!< CIRCULAR (Bit 6)                                      */
#define DMA_DMA6_CTRL_REG_CIRCULAR_Msk    (0x40UL)                  /*!< CIRCULAR (Bitfield-Mask: 0x01)                        */
#define DMA_DMA6_CTRL_REG_AINC_Pos        (5UL)                     /*!< AINC (Bit 5)                                          */
#define DMA_DMA6_CTRL_REG_AINC_Msk        (0x20UL)                  /*!< AINC (Bitfield-Mask: 0x01)                            */
#define DMA_DMA6_CTRL_REG_BINC_Pos        (4UL)                     /*!< BINC (Bit 4)                                          */
#define DMA_DMA6_CTRL_REG_BINC_Msk        (0x10UL)                  /*!< BINC (Bitfield-Mask: 0x01)                            */
#define DMA_DMA6_CTRL_REG_DREQ_MODE_Pos   (3UL)                     /*!< DREQ_MODE (Bit 3)                                     */
#define DMA_DMA6_CTRL_REG_DREQ_MODE_Msk   (0x8UL)                   /*!< DREQ_MODE (Bitfield-Mask: 0x01)                       */
#define DMA_DMA6_CTRL_REG_BW_Pos          (1UL)                     /*!< BW (Bit 1)                                            */
#define DMA_DMA6_CTRL_REG_BW_Msk          (0x6UL)                   /*!< BW (Bitfield-Mask: 0x03)                              */
#define DMA_DMA6_CTRL_REG_DMA_ON_Pos      (0UL)                     /*!< DMA_ON (Bit 0)                                        */
#define DMA_DMA6_CTRL_REG_DMA_ON_Msk      (0x1UL)                   /*!< DMA_ON (Bitfield-Mask: 0x01)                          */
/* =====================================================  DMA6_IDX_REG  ====================================================== */
#define DMA_DMA6_IDX_REG_DMA6_IDX_Pos     (0UL)                     /*!< DMA6_IDX (Bit 0)                                      */
#define DMA_DMA6_IDX_REG_DMA6_IDX_Msk     (0xffffUL)                /*!< DMA6_IDX (Bitfield-Mask: 0xffff)                      */
/* =====================================================  DMA6_INT_REG  ====================================================== */
#define DMA_DMA6_INT_REG_DMA6_INT_Pos     (0UL)                     /*!< DMA6_INT (Bit 0)                                      */
#define DMA_DMA6_INT_REG_DMA6_INT_Msk     (0xffffUL)                /*!< DMA6_INT (Bitfield-Mask: 0xffff)                      */
/* =====================================================  DMA6_LEN_REG  ====================================================== */
#define DMA_DMA6_LEN_REG_DMA6_LEN_Pos     (0UL)                     /*!< DMA6_LEN (Bit 0)                                      */
#define DMA_DMA6_LEN_REG_DMA6_LEN_Msk     (0xffffUL)                /*!< DMA6_LEN (Bitfield-Mask: 0xffff)                      */
/* ===================================================  DMA7_A_START_REG  ==================================================== */
#define DMA_DMA7_A_START_REG_DMA7_A_START_Pos (0UL)                 /*!< DMA7_A_START (Bit 0)                                  */
#define DMA_DMA7_A_START_REG_DMA7_A_START_Msk (0xffffffffUL)        /*!< DMA7_A_START (Bitfield-Mask: 0xffffffff)              */
/* ===================================================  DMA7_B_START_REG  ==================================================== */
#define DMA_DMA7_B_START_REG_DMA7_B_START_Pos (0UL)                 /*!< DMA7_B_START (Bit 0)                                  */
#define DMA_DMA7_B_START_REG_DMA7_B_START_Msk (0xffffffffUL)        /*!< DMA7_B_START (Bitfield-Mask: 0xffffffff)              */
/* =====================================================  DMA7_CTRL_REG  ===================================================== */
#define DMA_DMA7_CTRL_REG_DMA_EXCLUSIVE_ACCESS_Pos (16UL)           /*!< DMA_EXCLUSIVE_ACCESS (Bit 16)                         */
#define DMA_DMA7_CTRL_REG_DMA_EXCLUSIVE_ACCESS_Msk (0x10000UL)      /*!< DMA_EXCLUSIVE_ACCESS (Bitfield-Mask: 0x01)            */
#define DMA_DMA7_CTRL_REG_BUS_ERROR_DETECT_Pos (15UL)               /*!< BUS_ERROR_DETECT (Bit 15)                             */
#define DMA_DMA7_CTRL_REG_BUS_ERROR_DETECT_Msk (0x8000UL)           /*!< BUS_ERROR_DETECT (Bitfield-Mask: 0x01)                */
#define DMA_DMA7_CTRL_REG_BURST_MODE_Pos  (13UL)                    /*!< BURST_MODE (Bit 13)                                   */
#define DMA_DMA7_CTRL_REG_BURST_MODE_Msk  (0x6000UL)                /*!< BURST_MODE (Bitfield-Mask: 0x03)                      */
#define DMA_DMA7_CTRL_REG_REQ_SENSE_Pos   (12UL)                    /*!< REQ_SENSE (Bit 12)                                    */
#define DMA_DMA7_CTRL_REG_REQ_SENSE_Msk   (0x1000UL)                /*!< REQ_SENSE (Bitfield-Mask: 0x01)                       */
#define DMA_DMA7_CTRL_REG_DMA_INIT_Pos    (11UL)                    /*!< DMA_INIT (Bit 11)                                     */
#define DMA_DMA7_CTRL_REG_DMA_INIT_Msk    (0x800UL)                 /*!< DMA_INIT (Bitfield-Mask: 0x01)                        */
#define DMA_DMA7_CTRL_REG_DMA_IDLE_Pos    (10UL)                    /*!< DMA_IDLE (Bit 10)                                     */
#define DMA_DMA7_CTRL_REG_DMA_IDLE_Msk    (0x400UL)                 /*!< DMA_IDLE (Bitfield-Mask: 0x01)                        */
#define DMA_DMA7_CTRL_REG_DMA_PRIO_Pos    (7UL)                     /*!< DMA_PRIO (Bit 7)                                      */
#define DMA_DMA7_CTRL_REG_DMA_PRIO_Msk    (0x380UL)                 /*!< DMA_PRIO (Bitfield-Mask: 0x07)                        */
#define DMA_DMA7_CTRL_REG_CIRCULAR_Pos    (6UL)                     /*!< CIRCULAR (Bit 6)                                      */
#define DMA_DMA7_CTRL_REG_CIRCULAR_Msk    (0x40UL)                  /*!< CIRCULAR (Bitfield-Mask: 0x01)                        */
#define DMA_DMA7_CTRL_REG_AINC_Pos        (5UL)                     /*!< AINC (Bit 5)                                          */
#define DMA_DMA7_CTRL_REG_AINC_Msk        (0x20UL)                  /*!< AINC (Bitfield-Mask: 0x01)                            */
#define DMA_DMA7_CTRL_REG_BINC_Pos        (4UL)                     /*!< BINC (Bit 4)                                          */
#define DMA_DMA7_CTRL_REG_BINC_Msk        (0x10UL)                  /*!< BINC (Bitfield-Mask: 0x01)                            */
#define DMA_DMA7_CTRL_REG_DREQ_MODE_Pos   (3UL)                     /*!< DREQ_MODE (Bit 3)                                     */
#define DMA_DMA7_CTRL_REG_DREQ_MODE_Msk   (0x8UL)                   /*!< DREQ_MODE (Bitfield-Mask: 0x01)                       */
#define DMA_DMA7_CTRL_REG_BW_Pos          (1UL)                     /*!< BW (Bit 1)                                            */
#define DMA_DMA7_CTRL_REG_BW_Msk          (0x6UL)                   /*!< BW (Bitfield-Mask: 0x03)                              */
#define DMA_DMA7_CTRL_REG_DMA_ON_Pos      (0UL)                     /*!< DMA_ON (Bit 0)                                        */
#define DMA_DMA7_CTRL_REG_DMA_ON_Msk      (0x1UL)                   /*!< DMA_ON (Bitfield-Mask: 0x01)                          */
/* =====================================================  DMA7_IDX_REG  ====================================================== */
#define DMA_DMA7_IDX_REG_DMA7_IDX_Pos     (0UL)                     /*!< DMA7_IDX (Bit 0)                                      */
#define DMA_DMA7_IDX_REG_DMA7_IDX_Msk     (0xffffUL)                /*!< DMA7_IDX (Bitfield-Mask: 0xffff)                      */
/* =====================================================  DMA7_INT_REG  ====================================================== */
#define DMA_DMA7_INT_REG_DMA7_INT_Pos     (0UL)                     /*!< DMA7_INT (Bit 0)                                      */
#define DMA_DMA7_INT_REG_DMA7_INT_Msk     (0xffffUL)                /*!< DMA7_INT (Bitfield-Mask: 0xffff)                      */
/* =====================================================  DMA7_LEN_REG  ====================================================== */
#define DMA_DMA7_LEN_REG_DMA7_LEN_Pos     (0UL)                     /*!< DMA7_LEN (Bit 0)                                      */
#define DMA_DMA7_LEN_REG_DMA7_LEN_Msk     (0xffffUL)                /*!< DMA7_LEN (Bitfield-Mask: 0xffff)                      */
/* ===================================================  DMA_CLEAR_INT_REG  =================================================== */
#define DMA_DMA_CLEAR_INT_REG_DMA_RST_IRQ_CH7_Pos (7UL)             /*!< DMA_RST_IRQ_CH7 (Bit 7)                               */
#define DMA_DMA_CLEAR_INT_REG_DMA_RST_IRQ_CH7_Msk (0x80UL)          /*!< DMA_RST_IRQ_CH7 (Bitfield-Mask: 0x01)                 */
#define DMA_DMA_CLEAR_INT_REG_DMA_RST_IRQ_CH6_Pos (6UL)             /*!< DMA_RST_IRQ_CH6 (Bit 6)                               */
#define DMA_DMA_CLEAR_INT_REG_DMA_RST_IRQ_CH6_Msk (0x40UL)          /*!< DMA_RST_IRQ_CH6 (Bitfield-Mask: 0x01)                 */
#define DMA_DMA_CLEAR_INT_REG_DMA_RST_IRQ_CH5_Pos (5UL)             /*!< DMA_RST_IRQ_CH5 (Bit 5)                               */
#define DMA_DMA_CLEAR_INT_REG_DMA_RST_IRQ_CH5_Msk (0x20UL)          /*!< DMA_RST_IRQ_CH5 (Bitfield-Mask: 0x01)                 */
#define DMA_DMA_CLEAR_INT_REG_DMA_RST_IRQ_CH4_Pos (4UL)             /*!< DMA_RST_IRQ_CH4 (Bit 4)                               */
#define DMA_DMA_CLEAR_INT_REG_DMA_RST_IRQ_CH4_Msk (0x10UL)          /*!< DMA_RST_IRQ_CH4 (Bitfield-Mask: 0x01)                 */
#define DMA_DMA_CLEAR_INT_REG_DMA_RST_IRQ_CH3_Pos (3UL)             /*!< DMA_RST_IRQ_CH3 (Bit 3)                               */
#define DMA_DMA_CLEAR_INT_REG_DMA_RST_IRQ_CH3_Msk (0x8UL)           /*!< DMA_RST_IRQ_CH3 (Bitfield-Mask: 0x01)                 */
#define DMA_DMA_CLEAR_INT_REG_DMA_RST_IRQ_CH2_Pos (2UL)             /*!< DMA_RST_IRQ_CH2 (Bit 2)                               */
#define DMA_DMA_CLEAR_INT_REG_DMA_RST_IRQ_CH2_Msk (0x4UL)           /*!< DMA_RST_IRQ_CH2 (Bitfield-Mask: 0x01)                 */
#define DMA_DMA_CLEAR_INT_REG_DMA_RST_IRQ_CH1_Pos (1UL)             /*!< DMA_RST_IRQ_CH1 (Bit 1)                               */
#define DMA_DMA_CLEAR_INT_REG_DMA_RST_IRQ_CH1_Msk (0x2UL)           /*!< DMA_RST_IRQ_CH1 (Bitfield-Mask: 0x01)                 */
#define DMA_DMA_CLEAR_INT_REG_DMA_RST_IRQ_CH0_Pos (0UL)             /*!< DMA_RST_IRQ_CH0 (Bit 0)                               */
#define DMA_DMA_CLEAR_INT_REG_DMA_RST_IRQ_CH0_Msk (0x1UL)           /*!< DMA_RST_IRQ_CH0 (Bitfield-Mask: 0x01)                 */
/* ===================================================  DMA_INT_MASK_REG  ==================================================== */
#define DMA_DMA_INT_MASK_REG_DMA_IRQ_ENABLE7_Pos (7UL)              /*!< DMA_IRQ_ENABLE7 (Bit 7)                               */
#define DMA_DMA_INT_MASK_REG_DMA_IRQ_ENABLE7_Msk (0x80UL)           /*!< DMA_IRQ_ENABLE7 (Bitfield-Mask: 0x01)                 */
#define DMA_DMA_INT_MASK_REG_DMA_IRQ_ENABLE6_Pos (6UL)              /*!< DMA_IRQ_ENABLE6 (Bit 6)                               */
#define DMA_DMA_INT_MASK_REG_DMA_IRQ_ENABLE6_Msk (0x40UL)           /*!< DMA_IRQ_ENABLE6 (Bitfield-Mask: 0x01)                 */
#define DMA_DMA_INT_MASK_REG_DMA_IRQ_ENABLE5_Pos (5UL)              /*!< DMA_IRQ_ENABLE5 (Bit 5)                               */
#define DMA_DMA_INT_MASK_REG_DMA_IRQ_ENABLE5_Msk (0x20UL)           /*!< DMA_IRQ_ENABLE5 (Bitfield-Mask: 0x01)                 */
#define DMA_DMA_INT_MASK_REG_DMA_IRQ_ENABLE4_Pos (4UL)              /*!< DMA_IRQ_ENABLE4 (Bit 4)                               */
#define DMA_DMA_INT_MASK_REG_DMA_IRQ_ENABLE4_Msk (0x10UL)           /*!< DMA_IRQ_ENABLE4 (Bitfield-Mask: 0x01)                 */
#define DMA_DMA_INT_MASK_REG_DMA_IRQ_ENABLE3_Pos (3UL)              /*!< DMA_IRQ_ENABLE3 (Bit 3)                               */
#define DMA_DMA_INT_MASK_REG_DMA_IRQ_ENABLE3_Msk (0x8UL)            /*!< DMA_IRQ_ENABLE3 (Bitfield-Mask: 0x01)                 */
#define DMA_DMA_INT_MASK_REG_DMA_IRQ_ENABLE2_Pos (2UL)              /*!< DMA_IRQ_ENABLE2 (Bit 2)                               */
#define DMA_DMA_INT_MASK_REG_DMA_IRQ_ENABLE2_Msk (0x4UL)            /*!< DMA_IRQ_ENABLE2 (Bitfield-Mask: 0x01)                 */
#define DMA_DMA_INT_MASK_REG_DMA_IRQ_ENABLE1_Pos (1UL)              /*!< DMA_IRQ_ENABLE1 (Bit 1)                               */
#define DMA_DMA_INT_MASK_REG_DMA_IRQ_ENABLE1_Msk (0x2UL)            /*!< DMA_IRQ_ENABLE1 (Bitfield-Mask: 0x01)                 */
#define DMA_DMA_INT_MASK_REG_DMA_IRQ_ENABLE0_Pos (0UL)              /*!< DMA_IRQ_ENABLE0 (Bit 0)                               */
#define DMA_DMA_INT_MASK_REG_DMA_IRQ_ENABLE0_Msk (0x1UL)            /*!< DMA_IRQ_ENABLE0 (Bitfield-Mask: 0x01)                 */
/* ==================================================  DMA_INT_STATUS_REG  =================================================== */
#define DMA_DMA_INT_STATUS_REG_DMA_BUS_ERR7_Pos (15UL)              /*!< DMA_BUS_ERR7 (Bit 15)                                 */
#define DMA_DMA_INT_STATUS_REG_DMA_BUS_ERR7_Msk (0x8000UL)          /*!< DMA_BUS_ERR7 (Bitfield-Mask: 0x01)                    */
#define DMA_DMA_INT_STATUS_REG_DMA_BUS_ERR6_Pos (14UL)              /*!< DMA_BUS_ERR6 (Bit 14)                                 */
#define DMA_DMA_INT_STATUS_REG_DMA_BUS_ERR6_Msk (0x4000UL)          /*!< DMA_BUS_ERR6 (Bitfield-Mask: 0x01)                    */
#define DMA_DMA_INT_STATUS_REG_DMA_BUS_ERR5_Pos (13UL)              /*!< DMA_BUS_ERR5 (Bit 13)                                 */
#define DMA_DMA_INT_STATUS_REG_DMA_BUS_ERR5_Msk (0x2000UL)          /*!< DMA_BUS_ERR5 (Bitfield-Mask: 0x01)                    */
#define DMA_DMA_INT_STATUS_REG_DMA_BUS_ERR4_Pos (12UL)              /*!< DMA_BUS_ERR4 (Bit 12)                                 */
#define DMA_DMA_INT_STATUS_REG_DMA_BUS_ERR4_Msk (0x1000UL)          /*!< DMA_BUS_ERR4 (Bitfield-Mask: 0x01)                    */
#define DMA_DMA_INT_STATUS_REG_DMA_BUS_ERR3_Pos (11UL)              /*!< DMA_BUS_ERR3 (Bit 11)                                 */
#define DMA_DMA_INT_STATUS_REG_DMA_BUS_ERR3_Msk (0x800UL)           /*!< DMA_BUS_ERR3 (Bitfield-Mask: 0x01)                    */
#define DMA_DMA_INT_STATUS_REG_DMA_BUS_ERR2_Pos (10UL)              /*!< DMA_BUS_ERR2 (Bit 10)                                 */
#define DMA_DMA_INT_STATUS_REG_DMA_BUS_ERR2_Msk (0x400UL)           /*!< DMA_BUS_ERR2 (Bitfield-Mask: 0x01)                    */
#define DMA_DMA_INT_STATUS_REG_DMA_BUS_ERR1_Pos (9UL)               /*!< DMA_BUS_ERR1 (Bit 9)                                  */
#define DMA_DMA_INT_STATUS_REG_DMA_BUS_ERR1_Msk (0x200UL)           /*!< DMA_BUS_ERR1 (Bitfield-Mask: 0x01)                    */
#define DMA_DMA_INT_STATUS_REG_DMA_BUS_ERR0_Pos (8UL)               /*!< DMA_BUS_ERR0 (Bit 8)                                  */
#define DMA_DMA_INT_STATUS_REG_DMA_BUS_ERR0_Msk (0x100UL)           /*!< DMA_BUS_ERR0 (Bitfield-Mask: 0x01)                    */
#define DMA_DMA_INT_STATUS_REG_DMA_IRQ_CH7_Pos (7UL)                /*!< DMA_IRQ_CH7 (Bit 7)                                   */
#define DMA_DMA_INT_STATUS_REG_DMA_IRQ_CH7_Msk (0x80UL)             /*!< DMA_IRQ_CH7 (Bitfield-Mask: 0x01)                     */
#define DMA_DMA_INT_STATUS_REG_DMA_IRQ_CH6_Pos (6UL)                /*!< DMA_IRQ_CH6 (Bit 6)                                   */
#define DMA_DMA_INT_STATUS_REG_DMA_IRQ_CH6_Msk (0x40UL)             /*!< DMA_IRQ_CH6 (Bitfield-Mask: 0x01)                     */
#define DMA_DMA_INT_STATUS_REG_DMA_IRQ_CH5_Pos (5UL)                /*!< DMA_IRQ_CH5 (Bit 5)                                   */
#define DMA_DMA_INT_STATUS_REG_DMA_IRQ_CH5_Msk (0x20UL)             /*!< DMA_IRQ_CH5 (Bitfield-Mask: 0x01)                     */
#define DMA_DMA_INT_STATUS_REG_DMA_IRQ_CH4_Pos (4UL)                /*!< DMA_IRQ_CH4 (Bit 4)                                   */
#define DMA_DMA_INT_STATUS_REG_DMA_IRQ_CH4_Msk (0x10UL)             /*!< DMA_IRQ_CH4 (Bitfield-Mask: 0x01)                     */
#define DMA_DMA_INT_STATUS_REG_DMA_IRQ_CH3_Pos (3UL)                /*!< DMA_IRQ_CH3 (Bit 3)                                   */
#define DMA_DMA_INT_STATUS_REG_DMA_IRQ_CH3_Msk (0x8UL)              /*!< DMA_IRQ_CH3 (Bitfield-Mask: 0x01)                     */
#define DMA_DMA_INT_STATUS_REG_DMA_IRQ_CH2_Pos (2UL)                /*!< DMA_IRQ_CH2 (Bit 2)                                   */
#define DMA_DMA_INT_STATUS_REG_DMA_IRQ_CH2_Msk (0x4UL)              /*!< DMA_IRQ_CH2 (Bitfield-Mask: 0x01)                     */
#define DMA_DMA_INT_STATUS_REG_DMA_IRQ_CH1_Pos (1UL)                /*!< DMA_IRQ_CH1 (Bit 1)                                   */
#define DMA_DMA_INT_STATUS_REG_DMA_IRQ_CH1_Msk (0x2UL)              /*!< DMA_IRQ_CH1 (Bitfield-Mask: 0x01)                     */
#define DMA_DMA_INT_STATUS_REG_DMA_IRQ_CH0_Pos (0UL)                /*!< DMA_IRQ_CH0 (Bit 0)                                   */
#define DMA_DMA_INT_STATUS_REG_DMA_IRQ_CH0_Msk (0x1UL)              /*!< DMA_IRQ_CH0 (Bitfield-Mask: 0x01)                     */
/* ====================================================  DMA_REQ_MUX_REG  ==================================================== */
#define DMA_DMA_REQ_MUX_REG_DMA67_SEL_Pos (12UL)                    /*!< DMA67_SEL (Bit 12)                                    */
#define DMA_DMA_REQ_MUX_REG_DMA67_SEL_Msk (0xf000UL)                /*!< DMA67_SEL (Bitfield-Mask: 0x0f)                       */
#define DMA_DMA_REQ_MUX_REG_DMA45_SEL_Pos (8UL)                     /*!< DMA45_SEL (Bit 8)                                     */
#define DMA_DMA_REQ_MUX_REG_DMA45_SEL_Msk (0xf00UL)                 /*!< DMA45_SEL (Bitfield-Mask: 0x0f)                       */
#define DMA_DMA_REQ_MUX_REG_DMA23_SEL_Pos (4UL)                     /*!< DMA23_SEL (Bit 4)                                     */
#define DMA_DMA_REQ_MUX_REG_DMA23_SEL_Msk (0xf0UL)                  /*!< DMA23_SEL (Bitfield-Mask: 0x0f)                       */
#define DMA_DMA_REQ_MUX_REG_DMA01_SEL_Pos (0UL)                     /*!< DMA01_SEL (Bit 0)                                     */
#define DMA_DMA_REQ_MUX_REG_DMA01_SEL_Msk (0xfUL)                   /*!< DMA01_SEL (Bitfield-Mask: 0x0f)                       */
/* ================================================  DMA_RESET_INT_MASK_REG  ================================================= */
#define DMA_DMA_RESET_INT_MASK_REG_DMA_RESET_IRQ_ENABLE7_Pos (7UL)  /*!< DMA_RESET_IRQ_ENABLE7 (Bit 7)                         */
#define DMA_DMA_RESET_INT_MASK_REG_DMA_RESET_IRQ_ENABLE7_Msk (0x80UL) /*!< DMA_RESET_IRQ_ENABLE7 (Bitfield-Mask: 0x01)         */
#define DMA_DMA_RESET_INT_MASK_REG_DMA_RESET_IRQ_ENABLE6_Pos (6UL)  /*!< DMA_RESET_IRQ_ENABLE6 (Bit 6)                         */
#define DMA_DMA_RESET_INT_MASK_REG_DMA_RESET_IRQ_ENABLE6_Msk (0x40UL) /*!< DMA_RESET_IRQ_ENABLE6 (Bitfield-Mask: 0x01)         */
#define DMA_DMA_RESET_INT_MASK_REG_DMA_RESET_IRQ_ENABLE5_Pos (5UL)  /*!< DMA_RESET_IRQ_ENABLE5 (Bit 5)                         */
#define DMA_DMA_RESET_INT_MASK_REG_DMA_RESET_IRQ_ENABLE5_Msk (0x20UL) /*!< DMA_RESET_IRQ_ENABLE5 (Bitfield-Mask: 0x01)         */
#define DMA_DMA_RESET_INT_MASK_REG_DMA_RESET_IRQ_ENABLE4_Pos (4UL)  /*!< DMA_RESET_IRQ_ENABLE4 (Bit 4)                         */
#define DMA_DMA_RESET_INT_MASK_REG_DMA_RESET_IRQ_ENABLE4_Msk (0x10UL) /*!< DMA_RESET_IRQ_ENABLE4 (Bitfield-Mask: 0x01)         */
#define DMA_DMA_RESET_INT_MASK_REG_DMA_RESET_IRQ_ENABLE3_Pos (3UL)  /*!< DMA_RESET_IRQ_ENABLE3 (Bit 3)                         */
#define DMA_DMA_RESET_INT_MASK_REG_DMA_RESET_IRQ_ENABLE3_Msk (0x8UL) /*!< DMA_RESET_IRQ_ENABLE3 (Bitfield-Mask: 0x01)          */
#define DMA_DMA_RESET_INT_MASK_REG_DMA_RESET_IRQ_ENABLE2_Pos (2UL)  /*!< DMA_RESET_IRQ_ENABLE2 (Bit 2)                         */
#define DMA_DMA_RESET_INT_MASK_REG_DMA_RESET_IRQ_ENABLE2_Msk (0x4UL) /*!< DMA_RESET_IRQ_ENABLE2 (Bitfield-Mask: 0x01)          */
#define DMA_DMA_RESET_INT_MASK_REG_DMA_RESET_IRQ_ENABLE1_Pos (1UL)  /*!< DMA_RESET_IRQ_ENABLE1 (Bit 1)                         */
#define DMA_DMA_RESET_INT_MASK_REG_DMA_RESET_IRQ_ENABLE1_Msk (0x2UL) /*!< DMA_RESET_IRQ_ENABLE1 (Bitfield-Mask: 0x01)          */
#define DMA_DMA_RESET_INT_MASK_REG_DMA_RESET_IRQ_ENABLE0_Pos (0UL)  /*!< DMA_RESET_IRQ_ENABLE0 (Bit 0)                         */
#define DMA_DMA_RESET_INT_MASK_REG_DMA_RESET_IRQ_ENABLE0_Msk (0x1UL) /*!< DMA_RESET_IRQ_ENABLE0 (Bitfield-Mask: 0x01)          */
/* =================================================  DMA_SET_INT_MASK_REG  ================================================== */
#define DMA_DMA_SET_INT_MASK_REG_DMA_SET_IRQ_ENABLE7_Pos (7UL)      /*!< DMA_SET_IRQ_ENABLE7 (Bit 7)                           */
#define DMA_DMA_SET_INT_MASK_REG_DMA_SET_IRQ_ENABLE7_Msk (0x80UL)   /*!< DMA_SET_IRQ_ENABLE7 (Bitfield-Mask: 0x01)             */
#define DMA_DMA_SET_INT_MASK_REG_DMA_SET_IRQ_ENABLE6_Pos (6UL)      /*!< DMA_SET_IRQ_ENABLE6 (Bit 6)                           */
#define DMA_DMA_SET_INT_MASK_REG_DMA_SET_IRQ_ENABLE6_Msk (0x40UL)   /*!< DMA_SET_IRQ_ENABLE6 (Bitfield-Mask: 0x01)             */
#define DMA_DMA_SET_INT_MASK_REG_DMA_SET_IRQ_ENABLE5_Pos (5UL)      /*!< DMA_SET_IRQ_ENABLE5 (Bit 5)                           */
#define DMA_DMA_SET_INT_MASK_REG_DMA_SET_IRQ_ENABLE5_Msk (0x20UL)   /*!< DMA_SET_IRQ_ENABLE5 (Bitfield-Mask: 0x01)             */
#define DMA_DMA_SET_INT_MASK_REG_DMA_SET_IRQ_ENABLE4_Pos (4UL)      /*!< DMA_SET_IRQ_ENABLE4 (Bit 4)                           */
#define DMA_DMA_SET_INT_MASK_REG_DMA_SET_IRQ_ENABLE4_Msk (0x10UL)   /*!< DMA_SET_IRQ_ENABLE4 (Bitfield-Mask: 0x01)             */
#define DMA_DMA_SET_INT_MASK_REG_DMA_SET_IRQ_ENABLE3_Pos (3UL)      /*!< DMA_SET_IRQ_ENABLE3 (Bit 3)                           */
#define DMA_DMA_SET_INT_MASK_REG_DMA_SET_IRQ_ENABLE3_Msk (0x8UL)    /*!< DMA_SET_IRQ_ENABLE3 (Bitfield-Mask: 0x01)             */
#define DMA_DMA_SET_INT_MASK_REG_DMA_SET_IRQ_ENABLE2_Pos (2UL)      /*!< DMA_SET_IRQ_ENABLE2 (Bit 2)                           */
#define DMA_DMA_SET_INT_MASK_REG_DMA_SET_IRQ_ENABLE2_Msk (0x4UL)    /*!< DMA_SET_IRQ_ENABLE2 (Bitfield-Mask: 0x01)             */
#define DMA_DMA_SET_INT_MASK_REG_DMA_SET_IRQ_ENABLE1_Pos (1UL)      /*!< DMA_SET_IRQ_ENABLE1 (Bit 1)                           */
#define DMA_DMA_SET_INT_MASK_REG_DMA_SET_IRQ_ENABLE1_Msk (0x2UL)    /*!< DMA_SET_IRQ_ENABLE1 (Bitfield-Mask: 0x01)             */
#define DMA_DMA_SET_INT_MASK_REG_DMA_SET_IRQ_ENABLE0_Pos (0UL)      /*!< DMA_SET_IRQ_ENABLE0 (Bit 0)                           */
#define DMA_DMA_SET_INT_MASK_REG_DMA_SET_IRQ_ENABLE0_Msk (0x1UL)    /*!< DMA_SET_IRQ_ENABLE0 (Bitfield-Mask: 0x01)             */


/* =========================================================================================================================== */
/* ================                                           EMMC                                            ================ */
/* =========================================================================================================================== */

/* ===============================================  EMMC_ADMA_ERR_STAT_R_REG  ================================================ */
#define EMMC_EMMC_ADMA_ERR_STAT_R_REG_ADMA_LEN_ERR_Pos (2UL)        /*!< ADMA_LEN_ERR (Bit 2)                                  */
#define EMMC_EMMC_ADMA_ERR_STAT_R_REG_ADMA_LEN_ERR_Msk (0x4UL)      /*!< ADMA_LEN_ERR (Bitfield-Mask: 0x01)                    */
#define EMMC_EMMC_ADMA_ERR_STAT_R_REG_ADMA_ERR_STATES_Pos (0UL)     /*!< ADMA_ERR_STATES (Bit 0)                               */
#define EMMC_EMMC_ADMA_ERR_STAT_R_REG_ADMA_ERR_STATES_Msk (0x3UL)   /*!< ADMA_ERR_STATES (Bitfield-Mask: 0x03)                 */
/* ================================================  EMMC_ADMA_SA_LOW_R_REG  ================================================= */
#define EMMC_EMMC_ADMA_SA_LOW_R_REG_ADMA_SA_LOW_Pos (0UL)           /*!< ADMA_SA_LOW (Bit 0)                                   */
#define EMMC_EMMC_ADMA_SA_LOW_R_REG_ADMA_SA_LOW_Msk (0xffffffffUL)  /*!< ADMA_SA_LOW (Bitfield-Mask: 0xffffffff)               */
/* ==================================================  EMMC_ARGUMENT_R_REG  ================================================== */
#define EMMC_EMMC_ARGUMENT_R_REG_ARGUMENT_Pos (0UL)                 /*!< ARGUMENT (Bit 0)                                      */
#define EMMC_EMMC_ARGUMENT_R_REG_ARGUMENT_Msk (0xffffffffUL)        /*!< ARGUMENT (Bitfield-Mask: 0xffffffff)                  */
/* ==================================================  EMMC_AT_CTRL_R_REG  =================================================== */
#define EMMC_EMMC_AT_CTRL_R_REG_SWIN_TH_VAL_Pos (24UL)              /*!< SWIN_TH_VAL (Bit 24)                                  */
#define EMMC_EMMC_AT_CTRL_R_REG_SWIN_TH_VAL_Msk (0x7000000UL)       /*!< SWIN_TH_VAL (Bitfield-Mask: 0x07)                     */
#define EMMC_EMMC_AT_CTRL_R_REG_POST_CHANGE_DLY_Pos (19UL)          /*!< POST_CHANGE_DLY (Bit 19)                              */
#define EMMC_EMMC_AT_CTRL_R_REG_POST_CHANGE_DLY_Msk (0x180000UL)    /*!< POST_CHANGE_DLY (Bitfield-Mask: 0x03)                 */
#define EMMC_EMMC_AT_CTRL_R_REG_PRE_CHANGE_DLY_Pos (17UL)           /*!< PRE_CHANGE_DLY (Bit 17)                               */
#define EMMC_EMMC_AT_CTRL_R_REG_PRE_CHANGE_DLY_Msk (0x60000UL)      /*!< PRE_CHANGE_DLY (Bitfield-Mask: 0x03)                  */
#define EMMC_EMMC_AT_CTRL_R_REG_TUNE_CLK_STOP_EN_Pos (16UL)         /*!< TUNE_CLK_STOP_EN (Bit 16)                             */
#define EMMC_EMMC_AT_CTRL_R_REG_TUNE_CLK_STOP_EN_Msk (0x10000UL)    /*!< TUNE_CLK_STOP_EN (Bitfield-Mask: 0x01)                */
#define EMMC_EMMC_AT_CTRL_R_REG_SW_TUNE_EN_Pos (4UL)                /*!< SW_TUNE_EN (Bit 4)                                    */
#define EMMC_EMMC_AT_CTRL_R_REG_SW_TUNE_EN_Msk (0x10UL)             /*!< SW_TUNE_EN (Bitfield-Mask: 0x01)                      */
#define EMMC_EMMC_AT_CTRL_R_REG_RPT_TUNE_ERR_Pos (3UL)              /*!< RPT_TUNE_ERR (Bit 3)                                  */
#define EMMC_EMMC_AT_CTRL_R_REG_RPT_TUNE_ERR_Msk (0x8UL)            /*!< RPT_TUNE_ERR (Bitfield-Mask: 0x01)                    */
#define EMMC_EMMC_AT_CTRL_R_REG_SWIN_TH_EN_Pos (2UL)                /*!< SWIN_TH_EN (Bit 2)                                    */
#define EMMC_EMMC_AT_CTRL_R_REG_SWIN_TH_EN_Msk (0x4UL)              /*!< SWIN_TH_EN (Bitfield-Mask: 0x01)                      */
/* ==================================================  EMMC_AT_STAT_R_REG  =================================================== */
#define EMMC_EMMC_AT_STAT_R_REG_L_EDGE_PH_CODE_Pos (16UL)           /*!< L_EDGE_PH_CODE (Bit 16)                               */
#define EMMC_EMMC_AT_STAT_R_REG_L_EDGE_PH_CODE_Msk (0xff0000UL)     /*!< L_EDGE_PH_CODE (Bitfield-Mask: 0xff)                  */
#define EMMC_EMMC_AT_STAT_R_REG_R_EDGE_PH_CODE_Pos (8UL)            /*!< R_EDGE_PH_CODE (Bit 8)                                */
#define EMMC_EMMC_AT_STAT_R_REG_R_EDGE_PH_CODE_Msk (0xff00UL)       /*!< R_EDGE_PH_CODE (Bitfield-Mask: 0xff)                  */
#define EMMC_EMMC_AT_STAT_R_REG_CENTER_PH_CODE_Pos (0UL)            /*!< CENTER_PH_CODE (Bit 0)                                */
#define EMMC_EMMC_AT_STAT_R_REG_CENTER_PH_CODE_Msk (0xffUL)         /*!< CENTER_PH_CODE (Bitfield-Mask: 0xff)                  */
/* ===============================================  EMMC_AUTO_CMD_STAT_R_REG  ================================================ */
#define EMMC_EMMC_AUTO_CMD_STAT_R_REG_CMD_NOT_ISSUED_AUTO_CMD12_Pos (7UL) /*!< CMD_NOT_ISSUED_AUTO_CMD12 (Bit 7)               */
#define EMMC_EMMC_AUTO_CMD_STAT_R_REG_CMD_NOT_ISSUED_AUTO_CMD12_Msk (0x80UL) /*!< CMD_NOT_ISSUED_AUTO_CMD12 (Bitfield-Mask: 0x01) */
#define EMMC_EMMC_AUTO_CMD_STAT_R_REG_AUTO_CMD_RESP_ERR_Pos (5UL)   /*!< AUTO_CMD_RESP_ERR (Bit 5)                             */
#define EMMC_EMMC_AUTO_CMD_STAT_R_REG_AUTO_CMD_RESP_ERR_Msk (0x20UL) /*!< AUTO_CMD_RESP_ERR (Bitfield-Mask: 0x01)              */
#define EMMC_EMMC_AUTO_CMD_STAT_R_REG_AUTO_CMD_IDX_ERR_Pos (4UL)    /*!< AUTO_CMD_IDX_ERR (Bit 4)                              */
#define EMMC_EMMC_AUTO_CMD_STAT_R_REG_AUTO_CMD_IDX_ERR_Msk (0x10UL) /*!< AUTO_CMD_IDX_ERR (Bitfield-Mask: 0x01)                */
#define EMMC_EMMC_AUTO_CMD_STAT_R_REG_AUTO_CMD_EBIT_ERR_Pos (3UL)   /*!< AUTO_CMD_EBIT_ERR (Bit 3)                             */
#define EMMC_EMMC_AUTO_CMD_STAT_R_REG_AUTO_CMD_EBIT_ERR_Msk (0x8UL) /*!< AUTO_CMD_EBIT_ERR (Bitfield-Mask: 0x01)               */
#define EMMC_EMMC_AUTO_CMD_STAT_R_REG_AUTO_CMD_CRC_ERR_Pos (2UL)    /*!< AUTO_CMD_CRC_ERR (Bit 2)                              */
#define EMMC_EMMC_AUTO_CMD_STAT_R_REG_AUTO_CMD_CRC_ERR_Msk (0x4UL)  /*!< AUTO_CMD_CRC_ERR (Bitfield-Mask: 0x01)                */
#define EMMC_EMMC_AUTO_CMD_STAT_R_REG_AUTO_CMD_TOUT_ERR_Pos (1UL)   /*!< AUTO_CMD_TOUT_ERR (Bit 1)                             */
#define EMMC_EMMC_AUTO_CMD_STAT_R_REG_AUTO_CMD_TOUT_ERR_Msk (0x2UL) /*!< AUTO_CMD_TOUT_ERR (Bitfield-Mask: 0x01)               */
#define EMMC_EMMC_AUTO_CMD_STAT_R_REG_AUTO_CMD12_NOT_EXEC_Pos (0UL) /*!< AUTO_CMD12_NOT_EXEC (Bit 0)                           */
#define EMMC_EMMC_AUTO_CMD_STAT_R_REG_AUTO_CMD12_NOT_EXEC_Msk (0x1UL) /*!< AUTO_CMD12_NOT_EXEC (Bitfield-Mask: 0x01)           */
/* =================================================  EMMC_BGAP_CTRL_R_REG  ================================================== */
#define EMMC_EMMC_BGAP_CTRL_R_REG_RD_WAIT_CTRL_Pos (2UL)            /*!< RD_WAIT_CTRL (Bit 2)                                  */
#define EMMC_EMMC_BGAP_CTRL_R_REG_RD_WAIT_CTRL_Msk (0x4UL)          /*!< RD_WAIT_CTRL (Bitfield-Mask: 0x01)                    */
#define EMMC_EMMC_BGAP_CTRL_R_REG_CONTINUE_REQ_Pos (1UL)            /*!< CONTINUE_REQ (Bit 1)                                  */
#define EMMC_EMMC_BGAP_CTRL_R_REG_CONTINUE_REQ_Msk (0x2UL)          /*!< CONTINUE_REQ (Bitfield-Mask: 0x01)                    */
#define EMMC_EMMC_BGAP_CTRL_R_REG_STOP_BG_REQ_Pos (0UL)             /*!< STOP_BG_REQ (Bit 0)                                   */
#define EMMC_EMMC_BGAP_CTRL_R_REG_STOP_BG_REQ_Msk (0x1UL)           /*!< STOP_BG_REQ (Bitfield-Mask: 0x01)                     */
/* =================================================  EMMC_BLOCKCOUNT_R_REG  ================================================= */
#define EMMC_EMMC_BLOCKCOUNT_R_REG_BLOCK_CNT_Pos (0UL)              /*!< BLOCK_CNT (Bit 0)                                     */
#define EMMC_EMMC_BLOCKCOUNT_R_REG_BLOCK_CNT_Msk (0xffffUL)         /*!< BLOCK_CNT (Bitfield-Mask: 0xffff)                     */
/* =================================================  EMMC_BLOCKSIZE_R_REG  ================================================== */
#define EMMC_EMMC_BLOCKSIZE_R_REG_SDMA_BUF_BDARY_Pos (12UL)         /*!< SDMA_BUF_BDARY (Bit 12)                               */
#define EMMC_EMMC_BLOCKSIZE_R_REG_SDMA_BUF_BDARY_Msk (0x7000UL)     /*!< SDMA_BUF_BDARY (Bitfield-Mask: 0x07)                  */
#define EMMC_EMMC_BLOCKSIZE_R_REG_XFER_BLOCK_SIZE_Pos (0UL)         /*!< XFER_BLOCK_SIZE (Bit 0)                               */
#define EMMC_EMMC_BLOCKSIZE_R_REG_XFER_BLOCK_SIZE_Msk (0xfffUL)     /*!< XFER_BLOCK_SIZE (Bitfield-Mask: 0xfff)                */
/* =================================================  EMMC_BOOT_CTRL_R_REG  ================================================== */
#define EMMC_EMMC_BOOT_CTRL_R_REG_BOOT_TOUT_CNT_Pos (12UL)          /*!< BOOT_TOUT_CNT (Bit 12)                                */
#define EMMC_EMMC_BOOT_CTRL_R_REG_BOOT_TOUT_CNT_Msk (0xf000UL)      /*!< BOOT_TOUT_CNT (Bitfield-Mask: 0x0f)                   */
#define EMMC_EMMC_BOOT_CTRL_R_REG_BOOT_ACK_ENABLE_Pos (8UL)         /*!< BOOT_ACK_ENABLE (Bit 8)                               */
#define EMMC_EMMC_BOOT_CTRL_R_REG_BOOT_ACK_ENABLE_Msk (0x100UL)     /*!< BOOT_ACK_ENABLE (Bitfield-Mask: 0x01)                 */
#define EMMC_EMMC_BOOT_CTRL_R_REG_VALIDATE_BOOT_Pos (7UL)           /*!< VALIDATE_BOOT (Bit 7)                                 */
#define EMMC_EMMC_BOOT_CTRL_R_REG_VALIDATE_BOOT_Msk (0x80UL)        /*!< VALIDATE_BOOT (Bitfield-Mask: 0x01)                   */
#define EMMC_EMMC_BOOT_CTRL_R_REG_MAN_BOOT_EN_Pos (0UL)             /*!< MAN_BOOT_EN (Bit 0)                                   */
#define EMMC_EMMC_BOOT_CTRL_R_REG_MAN_BOOT_EN_Msk (0x1UL)           /*!< MAN_BOOT_EN (Bitfield-Mask: 0x01)                     */
/* ==================================================  EMMC_BUF_DATA_R_REG  ================================================== */
#define EMMC_EMMC_BUF_DATA_R_REG_BUF_DATA_Pos (0UL)                 /*!< BUF_DATA (Bit 0)                                      */
#define EMMC_EMMC_BUF_DATA_R_REG_BUF_DATA_Msk (0xffffffffUL)        /*!< BUF_DATA (Bitfield-Mask: 0xffffffff)                  */
/* ===============================================  EMMC_CAPABILITIES1_R_REG  ================================================ */
#define EMMC_EMMC_CAPABILITIES1_R_REG_SLOT_TYPE_R_Pos (30UL)        /*!< SLOT_TYPE_R (Bit 30)                                  */
#define EMMC_EMMC_CAPABILITIES1_R_REG_SLOT_TYPE_R_Msk (0xc0000000UL) /*!< SLOT_TYPE_R (Bitfield-Mask: 0x03)                    */
#define EMMC_EMMC_CAPABILITIES1_R_REG_ASYNC_INT_SUPPORT_Pos (29UL)  /*!< ASYNC_INT_SUPPORT (Bit 29)                            */
#define EMMC_EMMC_CAPABILITIES1_R_REG_ASYNC_INT_SUPPORT_Msk (0x20000000UL) /*!< ASYNC_INT_SUPPORT (Bitfield-Mask: 0x01)        */
#define EMMC_EMMC_CAPABILITIES1_R_REG_SYS_ADDR_64_V3_Pos (28UL)     /*!< SYS_ADDR_64_V3 (Bit 28)                               */
#define EMMC_EMMC_CAPABILITIES1_R_REG_SYS_ADDR_64_V3_Msk (0x10000000UL) /*!< SYS_ADDR_64_V3 (Bitfield-Mask: 0x01)              */
#define EMMC_EMMC_CAPABILITIES1_R_REG_SYS_ADDR_64_V4_Pos (27UL)     /*!< SYS_ADDR_64_V4 (Bit 27)                               */
#define EMMC_EMMC_CAPABILITIES1_R_REG_SYS_ADDR_64_V4_Msk (0x8000000UL) /*!< SYS_ADDR_64_V4 (Bitfield-Mask: 0x01)               */
#define EMMC_EMMC_CAPABILITIES1_R_REG_VOLT_18_Pos (26UL)            /*!< VOLT_18 (Bit 26)                                      */
#define EMMC_EMMC_CAPABILITIES1_R_REG_VOLT_18_Msk (0x4000000UL)     /*!< VOLT_18 (Bitfield-Mask: 0x01)                         */
#define EMMC_EMMC_CAPABILITIES1_R_REG_VOLT_30_Pos (25UL)            /*!< VOLT_30 (Bit 25)                                      */
#define EMMC_EMMC_CAPABILITIES1_R_REG_VOLT_30_Msk (0x2000000UL)     /*!< VOLT_30 (Bitfield-Mask: 0x01)                         */
#define EMMC_EMMC_CAPABILITIES1_R_REG_VOLT_33_Pos (24UL)            /*!< VOLT_33 (Bit 24)                                      */
#define EMMC_EMMC_CAPABILITIES1_R_REG_VOLT_33_Msk (0x1000000UL)     /*!< VOLT_33 (Bitfield-Mask: 0x01)                         */
#define EMMC_EMMC_CAPABILITIES1_R_REG_SUS_RES_SUPPORT_Pos (23UL)    /*!< SUS_RES_SUPPORT (Bit 23)                              */
#define EMMC_EMMC_CAPABILITIES1_R_REG_SUS_RES_SUPPORT_Msk (0x800000UL) /*!< SUS_RES_SUPPORT (Bitfield-Mask: 0x01)              */
#define EMMC_EMMC_CAPABILITIES1_R_REG_SDMA_SUPPORT_Pos (22UL)       /*!< SDMA_SUPPORT (Bit 22)                                 */
#define EMMC_EMMC_CAPABILITIES1_R_REG_SDMA_SUPPORT_Msk (0x400000UL) /*!< SDMA_SUPPORT (Bitfield-Mask: 0x01)                    */
#define EMMC_EMMC_CAPABILITIES1_R_REG_HIGH_SPEED_SUPPORT_Pos (21UL) /*!< HIGH_SPEED_SUPPORT (Bit 21)                           */
#define EMMC_EMMC_CAPABILITIES1_R_REG_HIGH_SPEED_SUPPORT_Msk (0x200000UL) /*!< HIGH_SPEED_SUPPORT (Bitfield-Mask: 0x01)        */
#define EMMC_EMMC_CAPABILITIES1_R_REG_ADMA2_SUPPORT_Pos (19UL)      /*!< ADMA2_SUPPORT (Bit 19)                                */
#define EMMC_EMMC_CAPABILITIES1_R_REG_ADMA2_SUPPORT_Msk (0x80000UL) /*!< ADMA2_SUPPORT (Bitfield-Mask: 0x01)                   */
#define EMMC_EMMC_CAPABILITIES1_R_REG_EMBEDDED_8_BIT_Pos (18UL)     /*!< EMBEDDED_8_BIT (Bit 18)                               */
#define EMMC_EMMC_CAPABILITIES1_R_REG_EMBEDDED_8_BIT_Msk (0x40000UL) /*!< EMBEDDED_8_BIT (Bitfield-Mask: 0x01)                 */
#define EMMC_EMMC_CAPABILITIES1_R_REG_MAX_BLK_LEN_Pos (16UL)        /*!< MAX_BLK_LEN (Bit 16)                                  */
#define EMMC_EMMC_CAPABILITIES1_R_REG_MAX_BLK_LEN_Msk (0x30000UL)   /*!< MAX_BLK_LEN (Bitfield-Mask: 0x03)                     */
#define EMMC_EMMC_CAPABILITIES1_R_REG_BASE_CLK_FREQ_Pos (8UL)       /*!< BASE_CLK_FREQ (Bit 8)                                 */
#define EMMC_EMMC_CAPABILITIES1_R_REG_BASE_CLK_FREQ_Msk (0xff00UL)  /*!< BASE_CLK_FREQ (Bitfield-Mask: 0xff)                   */
#define EMMC_EMMC_CAPABILITIES1_R_REG_TOUT_CLK_UNIT_Pos (7UL)       /*!< TOUT_CLK_UNIT (Bit 7)                                 */
#define EMMC_EMMC_CAPABILITIES1_R_REG_TOUT_CLK_UNIT_Msk (0x80UL)    /*!< TOUT_CLK_UNIT (Bitfield-Mask: 0x01)                   */
#define EMMC_EMMC_CAPABILITIES1_R_REG_TOUT_CLK_FREQ_Pos (0UL)       /*!< TOUT_CLK_FREQ (Bit 0)                                 */
#define EMMC_EMMC_CAPABILITIES1_R_REG_TOUT_CLK_FREQ_Msk (0x3fUL)    /*!< TOUT_CLK_FREQ (Bitfield-Mask: 0x3f)                   */
/* ===============================================  EMMC_CAPABILITIES2_R_REG  ================================================ */
#define EMMC_EMMC_CAPABILITIES2_R_REG_VDD2_18V_SUPPORT_Pos (28UL)   /*!< VDD2_18V_SUPPORT (Bit 28)                             */
#define EMMC_EMMC_CAPABILITIES2_R_REG_VDD2_18V_SUPPORT_Msk (0x10000000UL) /*!< VDD2_18V_SUPPORT (Bitfield-Mask: 0x01)          */
#define EMMC_EMMC_CAPABILITIES2_R_REG_ADMA3_SUPPORT_Pos (27UL)      /*!< ADMA3_SUPPORT (Bit 27)                                */
#define EMMC_EMMC_CAPABILITIES2_R_REG_ADMA3_SUPPORT_Msk (0x8000000UL) /*!< ADMA3_SUPPORT (Bitfield-Mask: 0x01)                 */
#define EMMC_EMMC_CAPABILITIES2_R_REG_CLK_MUL_Pos (16UL)            /*!< CLK_MUL (Bit 16)                                      */
#define EMMC_EMMC_CAPABILITIES2_R_REG_CLK_MUL_Msk (0xff0000UL)      /*!< CLK_MUL (Bitfield-Mask: 0xff)                         */
#define EMMC_EMMC_CAPABILITIES2_R_REG_RE_TUNING_MODES_Pos (14UL)    /*!< RE_TUNING_MODES (Bit 14)                              */
#define EMMC_EMMC_CAPABILITIES2_R_REG_RE_TUNING_MODES_Msk (0xc000UL) /*!< RE_TUNING_MODES (Bitfield-Mask: 0x03)                */
#define EMMC_EMMC_CAPABILITIES2_R_REG_USE_TUNING_SDR50_Pos (13UL)   /*!< USE_TUNING_SDR50 (Bit 13)                             */
#define EMMC_EMMC_CAPABILITIES2_R_REG_USE_TUNING_SDR50_Msk (0x2000UL) /*!< USE_TUNING_SDR50 (Bitfield-Mask: 0x01)              */
#define EMMC_EMMC_CAPABILITIES2_R_REG_RETUNE_CNT_Pos (8UL)          /*!< RETUNE_CNT (Bit 8)                                    */
#define EMMC_EMMC_CAPABILITIES2_R_REG_RETUNE_CNT_Msk (0xf00UL)      /*!< RETUNE_CNT (Bitfield-Mask: 0x0f)                      */
#define EMMC_EMMC_CAPABILITIES2_R_REG_DRV_TYPED_Pos (6UL)           /*!< DRV_TYPED (Bit 6)                                     */
#define EMMC_EMMC_CAPABILITIES2_R_REG_DRV_TYPED_Msk (0x40UL)        /*!< DRV_TYPED (Bitfield-Mask: 0x01)                       */
#define EMMC_EMMC_CAPABILITIES2_R_REG_DRV_TYPEC_Pos (5UL)           /*!< DRV_TYPEC (Bit 5)                                     */
#define EMMC_EMMC_CAPABILITIES2_R_REG_DRV_TYPEC_Msk (0x20UL)        /*!< DRV_TYPEC (Bitfield-Mask: 0x01)                       */
#define EMMC_EMMC_CAPABILITIES2_R_REG_DRV_TYPEA_Pos (4UL)           /*!< DRV_TYPEA (Bit 4)                                     */
#define EMMC_EMMC_CAPABILITIES2_R_REG_DRV_TYPEA_Msk (0x10UL)        /*!< DRV_TYPEA (Bitfield-Mask: 0x01)                       */
#define EMMC_EMMC_CAPABILITIES2_R_REG_UHS2_SUPPORT_Pos (3UL)        /*!< UHS2_SUPPORT (Bit 3)                                  */
#define EMMC_EMMC_CAPABILITIES2_R_REG_UHS2_SUPPORT_Msk (0x8UL)      /*!< UHS2_SUPPORT (Bitfield-Mask: 0x01)                    */
#define EMMC_EMMC_CAPABILITIES2_R_REG_DDR50_SUPPORT_Pos (2UL)       /*!< DDR50_SUPPORT (Bit 2)                                 */
#define EMMC_EMMC_CAPABILITIES2_R_REG_DDR50_SUPPORT_Msk (0x4UL)     /*!< DDR50_SUPPORT (Bitfield-Mask: 0x01)                   */
#define EMMC_EMMC_CAPABILITIES2_R_REG_SDR104_SUPPORT_Pos (1UL)      /*!< SDR104_SUPPORT (Bit 1)                                */
#define EMMC_EMMC_CAPABILITIES2_R_REG_SDR104_SUPPORT_Msk (0x2UL)    /*!< SDR104_SUPPORT (Bitfield-Mask: 0x01)                  */
#define EMMC_EMMC_CAPABILITIES2_R_REG_SDR50_SUPPORT_Pos (0UL)       /*!< SDR50_SUPPORT (Bit 0)                                 */
#define EMMC_EMMC_CAPABILITIES2_R_REG_SDR50_SUPPORT_Msk (0x1UL)     /*!< SDR50_SUPPORT (Bitfield-Mask: 0x01)                   */
/* ==================================================  EMMC_CLK_CTRL_R_REG  ================================================== */
#define EMMC_EMMC_CLK_CTRL_R_REG_FREQ_SEL_Pos (8UL)                 /*!< FREQ_SEL (Bit 8)                                      */
#define EMMC_EMMC_CLK_CTRL_R_REG_FREQ_SEL_Msk (0xff00UL)            /*!< FREQ_SEL (Bitfield-Mask: 0xff)                        */
#define EMMC_EMMC_CLK_CTRL_R_REG_UPPER_FREQ_SEL_Pos (6UL)           /*!< UPPER_FREQ_SEL (Bit 6)                                */
#define EMMC_EMMC_CLK_CTRL_R_REG_UPPER_FREQ_SEL_Msk (0xc0UL)        /*!< UPPER_FREQ_SEL (Bitfield-Mask: 0x03)                  */
#define EMMC_EMMC_CLK_CTRL_R_REG_CLK_GEN_SELECT_Pos (5UL)           /*!< CLK_GEN_SELECT (Bit 5)                                */
#define EMMC_EMMC_CLK_CTRL_R_REG_CLK_GEN_SELECT_Msk (0x20UL)        /*!< CLK_GEN_SELECT (Bitfield-Mask: 0x01)                  */
#define EMMC_EMMC_CLK_CTRL_R_REG_PLL_ENABLE_Pos (3UL)               /*!< PLL_ENABLE (Bit 3)                                    */
#define EMMC_EMMC_CLK_CTRL_R_REG_PLL_ENABLE_Msk (0x8UL)             /*!< PLL_ENABLE (Bitfield-Mask: 0x01)                      */
#define EMMC_EMMC_CLK_CTRL_R_REG_SD_CLK_EN_Pos (2UL)                /*!< SD_CLK_EN (Bit 2)                                     */
#define EMMC_EMMC_CLK_CTRL_R_REG_SD_CLK_EN_Msk (0x4UL)              /*!< SD_CLK_EN (Bitfield-Mask: 0x01)                       */
#define EMMC_EMMC_CLK_CTRL_R_REG_INTERNAL_CLK_STABLE_Pos (1UL)      /*!< INTERNAL_CLK_STABLE (Bit 1)                           */
#define EMMC_EMMC_CLK_CTRL_R_REG_INTERNAL_CLK_STABLE_Msk (0x2UL)    /*!< INTERNAL_CLK_STABLE (Bitfield-Mask: 0x01)             */
#define EMMC_EMMC_CLK_CTRL_R_REG_INTERNAL_CLK_EN_Pos (0UL)          /*!< INTERNAL_CLK_EN (Bit 0)                               */
#define EMMC_EMMC_CLK_CTRL_R_REG_INTERNAL_CLK_EN_Msk (0x1UL)        /*!< INTERNAL_CLK_EN (Bitfield-Mask: 0x01)                 */
/* ====================================================  EMMC_CMD_R_REG  ===================================================== */
#define EMMC_EMMC_CMD_R_REG_CMD_INDEX_Pos (8UL)                     /*!< CMD_INDEX (Bit 8)                                     */
#define EMMC_EMMC_CMD_R_REG_CMD_INDEX_Msk (0x3f00UL)                /*!< CMD_INDEX (Bitfield-Mask: 0x3f)                       */
#define EMMC_EMMC_CMD_R_REG_CMD_TYPE_Pos  (6UL)                     /*!< CMD_TYPE (Bit 6)                                      */
#define EMMC_EMMC_CMD_R_REG_CMD_TYPE_Msk  (0xc0UL)                  /*!< CMD_TYPE (Bitfield-Mask: 0x03)                        */
#define EMMC_EMMC_CMD_R_REG_DATA_PRESENT_SEL_Pos (5UL)              /*!< DATA_PRESENT_SEL (Bit 5)                              */
#define EMMC_EMMC_CMD_R_REG_DATA_PRESENT_SEL_Msk (0x20UL)           /*!< DATA_PRESENT_SEL (Bitfield-Mask: 0x01)                */
#define EMMC_EMMC_CMD_R_REG_CMD_IDX_CHK_ENABLE_Pos (4UL)            /*!< CMD_IDX_CHK_ENABLE (Bit 4)                            */
#define EMMC_EMMC_CMD_R_REG_CMD_IDX_CHK_ENABLE_Msk (0x10UL)         /*!< CMD_IDX_CHK_ENABLE (Bitfield-Mask: 0x01)              */
#define EMMC_EMMC_CMD_R_REG_CMD_CRC_CHK_ENABLE_Pos (3UL)            /*!< CMD_CRC_CHK_ENABLE (Bit 3)                            */
#define EMMC_EMMC_CMD_R_REG_CMD_CRC_CHK_ENABLE_Msk (0x8UL)          /*!< CMD_CRC_CHK_ENABLE (Bitfield-Mask: 0x01)              */
#define EMMC_EMMC_CMD_R_REG_SUB_CMD_FLAG_Pos (2UL)                  /*!< SUB_CMD_FLAG (Bit 2)                                  */
#define EMMC_EMMC_CMD_R_REG_SUB_CMD_FLAG_Msk (0x4UL)                /*!< SUB_CMD_FLAG (Bitfield-Mask: 0x01)                    */
#define EMMC_EMMC_CMD_R_REG_RESP_TYPE_SELECT_Pos (0UL)              /*!< RESP_TYPE_SELECT (Bit 0)                              */
#define EMMC_EMMC_CMD_R_REG_RESP_TYPE_SELECT_Msk (0x3UL)            /*!< RESP_TYPE_SELECT (Bitfield-Mask: 0x03)                */
/* ====================================================  EMMC_CQCAP_REG  ===================================================== */
#define EMMC_EMMC_CQCAP_REG_CRYPTO_SUPPORT_Pos (28UL)               /*!< CRYPTO_SUPPORT (Bit 28)                               */
#define EMMC_EMMC_CQCAP_REG_CRYPTO_SUPPORT_Msk (0x10000000UL)       /*!< CRYPTO_SUPPORT (Bitfield-Mask: 0x01)                  */
#define EMMC_EMMC_CQCAP_REG_CQCCAP_RSVD2_Pos (16UL)                 /*!< CQCCAP_RSVD2 (Bit 16)                                 */
#define EMMC_EMMC_CQCAP_REG_CQCCAP_RSVD2_Msk (0xfff0000UL)          /*!< CQCCAP_RSVD2 (Bitfield-Mask: 0xfff)                   */
#define EMMC_EMMC_CQCAP_REG_ITCFMUL_Pos   (12UL)                    /*!< ITCFMUL (Bit 12)                                      */
#define EMMC_EMMC_CQCAP_REG_ITCFMUL_Msk   (0xf000UL)                /*!< ITCFMUL (Bitfield-Mask: 0x0f)                         */
#define EMMC_EMMC_CQCAP_REG_ITCFVAL_Pos   (0UL)                     /*!< ITCFVAL (Bit 0)                                       */
#define EMMC_EMMC_CQCAP_REG_ITCFVAL_Msk   (0x3ffUL)                 /*!< ITCFVAL (Bitfield-Mask: 0x3ff)                        */
/* ====================================================  EMMC_CTRL_R_REG  ==================================================== */
#define EMMC_EMMC_CTRL_R_REG_SW_CG_DIS_Pos (4UL)                    /*!< SW_CG_DIS (Bit 4)                                     */
#define EMMC_EMMC_CTRL_R_REG_SW_CG_DIS_Msk (0x10UL)                 /*!< SW_CG_DIS (Bitfield-Mask: 0x01)                       */
#define EMMC_EMMC_CTRL_R_REG_CMD_CONFLICT_CHECK_Pos (0UL)           /*!< CMD_CONFLICT_CHECK (Bit 0)                            */
#define EMMC_EMMC_CTRL_R_REG_CMD_CONFLICT_CHECK_Msk (0x1UL)         /*!< CMD_CONFLICT_CHECK (Bitfield-Mask: 0x01)              */
/* =============================================  EMMC_CURR_CAPABILITIES1_R_REG  ============================================= */
#define EMMC_EMMC_CURR_CAPABILITIES1_R_REG_MAX_CUR_18V_Pos (16UL)   /*!< MAX_CUR_18V (Bit 16)                                  */
#define EMMC_EMMC_CURR_CAPABILITIES1_R_REG_MAX_CUR_18V_Msk (0xff0000UL) /*!< MAX_CUR_18V (Bitfield-Mask: 0xff)                 */
#define EMMC_EMMC_CURR_CAPABILITIES1_R_REG_MAX_CUR_30V_Pos (8UL)    /*!< MAX_CUR_30V (Bit 8)                                   */
#define EMMC_EMMC_CURR_CAPABILITIES1_R_REG_MAX_CUR_30V_Msk (0xff00UL) /*!< MAX_CUR_30V (Bitfield-Mask: 0xff)                   */
#define EMMC_EMMC_CURR_CAPABILITIES1_R_REG_MAX_CUR_33V_Pos (0UL)    /*!< MAX_CUR_33V (Bit 0)                                   */
#define EMMC_EMMC_CURR_CAPABILITIES1_R_REG_MAX_CUR_33V_Msk (0xffUL) /*!< MAX_CUR_33V (Bitfield-Mask: 0xff)                     */
/* =============================================  EMMC_CURR_CAPABILITIES2_R_REG  ============================================= */
#define EMMC_EMMC_CURR_CAPABILITIES2_R_REG_MAX_CUR_VDD2_18V_Pos (0UL) /*!< MAX_CUR_VDD2_18V (Bit 0)                            */
#define EMMC_EMMC_CURR_CAPABILITIES2_R_REG_MAX_CUR_VDD2_18V_Msk (0xffUL) /*!< MAX_CUR_VDD2_18V (Bitfield-Mask: 0xff)           */
/* ===============================================  EMMC_EMBEDDED_CTRL_R_REG  ================================================ */
#define EMMC_EMMC_EMBEDDED_CTRL_R_REG_BACK_END_PWR_CTRL_Pos (24UL)  /*!< BACK_END_PWR_CTRL (Bit 24)                            */
#define EMMC_EMMC_EMBEDDED_CTRL_R_REG_BACK_END_PWR_CTRL_Msk (0x7f000000UL) /*!< BACK_END_PWR_CTRL (Bitfield-Mask: 0x7f)        */
#define EMMC_EMMC_EMBEDDED_CTRL_R_REG_INT_PIN_SEL_Pos (20UL)        /*!< INT_PIN_SEL (Bit 20)                                  */
#define EMMC_EMMC_EMBEDDED_CTRL_R_REG_INT_PIN_SEL_Msk (0x700000UL)  /*!< INT_PIN_SEL (Bitfield-Mask: 0x07)                     */
#define EMMC_EMMC_EMBEDDED_CTRL_R_REG_CLK_PIN_SEL_Pos (16UL)        /*!< CLK_PIN_SEL (Bit 16)                                  */
#define EMMC_EMMC_EMBEDDED_CTRL_R_REG_CLK_PIN_SEL_Msk (0x70000UL)   /*!< CLK_PIN_SEL (Bitfield-Mask: 0x07)                     */
#define EMMC_EMMC_EMBEDDED_CTRL_R_REG_BUS_WIDTH_PRESET_Pos (8UL)    /*!< BUS_WIDTH_PRESET (Bit 8)                              */
#define EMMC_EMMC_EMBEDDED_CTRL_R_REG_BUS_WIDTH_PRESET_Msk (0x7f00UL) /*!< BUS_WIDTH_PRESET (Bitfield-Mask: 0x7f)              */
#define EMMC_EMMC_EMBEDDED_CTRL_R_REG_NUM_INT_PIN_Pos (4UL)         /*!< NUM_INT_PIN (Bit 4)                                   */
#define EMMC_EMMC_EMBEDDED_CTRL_R_REG_NUM_INT_PIN_Msk (0x30UL)      /*!< NUM_INT_PIN (Bitfield-Mask: 0x03)                     */
#define EMMC_EMMC_EMBEDDED_CTRL_R_REG_NUM_CLK_PIN_Pos (0UL)         /*!< NUM_CLK_PIN (Bit 0)                                   */
#define EMMC_EMMC_EMBEDDED_CTRL_R_REG_NUM_CLK_PIN_Msk (0x7UL)       /*!< NUM_CLK_PIN (Bitfield-Mask: 0x07)                     */
/* =================================================  EMMC_EMMC_CTRL_R_REG  ================================================== */
#define EMMC_EMMC_EMMC_CTRL_R_REG_EMMC_RST_N_OE_Pos (3UL)           /*!< EMMC_RST_N_OE (Bit 3)                                 */
#define EMMC_EMMC_EMMC_CTRL_R_REG_EMMC_RST_N_OE_Msk (0x8UL)         /*!< EMMC_RST_N_OE (Bitfield-Mask: 0x01)                   */
#define EMMC_EMMC_EMMC_CTRL_R_REG_EMMC_RST_N_Pos (2UL)              /*!< EMMC_RST_N (Bit 2)                                    */
#define EMMC_EMMC_EMMC_CTRL_R_REG_EMMC_RST_N_Msk (0x4UL)            /*!< EMMC_RST_N (Bitfield-Mask: 0x01)                      */
#define EMMC_EMMC_EMMC_CTRL_R_REG_DISABLE_DATA_CRC_CHK_Pos (1UL)    /*!< DISABLE_DATA_CRC_CHK (Bit 1)                          */
#define EMMC_EMMC_EMMC_CTRL_R_REG_DISABLE_DATA_CRC_CHK_Msk (0x2UL)  /*!< DISABLE_DATA_CRC_CHK (Bitfield-Mask: 0x01)            */
#define EMMC_EMMC_EMMC_CTRL_R_REG_CARD_IS_EMMC_Pos (0UL)            /*!< CARD_IS_EMMC (Bit 0)                                  */
#define EMMC_EMMC_EMMC_CTRL_R_REG_CARD_IS_EMMC_Msk (0x1UL)          /*!< CARD_IS_EMMC (Bitfield-Mask: 0x01)                    */
/* ============================================  EMMC_ERROR_INT_SIGNAL_EN_R_REG  ============================================= */
#define EMMC_EMMC_ERROR_INT_SIGNAL_EN_R_REG_VENDOR_ERR_SIGNAL_EN3_Pos (15UL) /*!< VENDOR_ERR_SIGNAL_EN3 (Bit 15)               */
#define EMMC_EMMC_ERROR_INT_SIGNAL_EN_R_REG_VENDOR_ERR_SIGNAL_EN3_Msk (0x8000UL) /*!< VENDOR_ERR_SIGNAL_EN3 (Bitfield-Mask: 0x01) */
#define EMMC_EMMC_ERROR_INT_SIGNAL_EN_R_REG_VENDOR_ERR_SIGNAL_EN2_Pos (14UL) /*!< VENDOR_ERR_SIGNAL_EN2 (Bit 14)               */
#define EMMC_EMMC_ERROR_INT_SIGNAL_EN_R_REG_VENDOR_ERR_SIGNAL_EN2_Msk (0x4000UL) /*!< VENDOR_ERR_SIGNAL_EN2 (Bitfield-Mask: 0x01) */
#define EMMC_EMMC_ERROR_INT_SIGNAL_EN_R_REG_VENDOR_ERR_SIGNAL_EN1_Pos (13UL) /*!< VENDOR_ERR_SIGNAL_EN1 (Bit 13)               */
#define EMMC_EMMC_ERROR_INT_SIGNAL_EN_R_REG_VENDOR_ERR_SIGNAL_EN1_Msk (0x2000UL) /*!< VENDOR_ERR_SIGNAL_EN1 (Bitfield-Mask: 0x01) */
#define EMMC_EMMC_ERROR_INT_SIGNAL_EN_R_REG_BOOT_ACK_ERR_SIGNAL_EN_Pos (12UL) /*!< BOOT_ACK_ERR_SIGNAL_EN (Bit 12)             */
#define EMMC_EMMC_ERROR_INT_SIGNAL_EN_R_REG_BOOT_ACK_ERR_SIGNAL_EN_Msk (0x1000UL) /*!< BOOT_ACK_ERR_SIGNAL_EN (Bitfield-Mask: 0x01) */
#define EMMC_EMMC_ERROR_INT_SIGNAL_EN_R_REG_RESP_ERR_SIGNAL_EN_Pos (11UL) /*!< RESP_ERR_SIGNAL_EN (Bit 11)                     */
#define EMMC_EMMC_ERROR_INT_SIGNAL_EN_R_REG_RESP_ERR_SIGNAL_EN_Msk (0x800UL) /*!< RESP_ERR_SIGNAL_EN (Bitfield-Mask: 0x01)     */
#define EMMC_EMMC_ERROR_INT_SIGNAL_EN_R_REG_TUNING_ERR_SIGNAL_EN_Pos (10UL) /*!< TUNING_ERR_SIGNAL_EN (Bit 10)                 */
#define EMMC_EMMC_ERROR_INT_SIGNAL_EN_R_REG_TUNING_ERR_SIGNAL_EN_Msk (0x400UL) /*!< TUNING_ERR_SIGNAL_EN (Bitfield-Mask: 0x01) */
#define EMMC_EMMC_ERROR_INT_SIGNAL_EN_R_REG_ADMA_ERR_SIGNAL_EN_Pos (9UL) /*!< ADMA_ERR_SIGNAL_EN (Bit 9)                       */
#define EMMC_EMMC_ERROR_INT_SIGNAL_EN_R_REG_ADMA_ERR_SIGNAL_EN_Msk (0x200UL) /*!< ADMA_ERR_SIGNAL_EN (Bitfield-Mask: 0x01)     */
#define EMMC_EMMC_ERROR_INT_SIGNAL_EN_R_REG_AUTO_CMD_ERR_SIGNAL_EN_Pos (8UL) /*!< AUTO_CMD_ERR_SIGNAL_EN (Bit 8)               */
#define EMMC_EMMC_ERROR_INT_SIGNAL_EN_R_REG_AUTO_CMD_ERR_SIGNAL_EN_Msk (0x100UL) /*!< AUTO_CMD_ERR_SIGNAL_EN (Bitfield-Mask: 0x01) */
#define EMMC_EMMC_ERROR_INT_SIGNAL_EN_R_REG_CUR_LMT_ERR_SIGNAL_EN_Pos (7UL) /*!< CUR_LMT_ERR_SIGNAL_EN (Bit 7)                 */
#define EMMC_EMMC_ERROR_INT_SIGNAL_EN_R_REG_CUR_LMT_ERR_SIGNAL_EN_Msk (0x80UL) /*!< CUR_LMT_ERR_SIGNAL_EN (Bitfield-Mask: 0x01) */
#define EMMC_EMMC_ERROR_INT_SIGNAL_EN_R_REG_DATA_END_BIT_ERR_SIGNAL_EN_Pos (6UL) /*!< DATA_END_BIT_ERR_SIGNAL_EN (Bit 6)       */
#define EMMC_EMMC_ERROR_INT_SIGNAL_EN_R_REG_DATA_END_BIT_ERR_SIGNAL_EN_Msk (0x40UL) /*!< DATA_END_BIT_ERR_SIGNAL_EN (Bitfield-Mask: 0x01) */
#define EMMC_EMMC_ERROR_INT_SIGNAL_EN_R_REG_DATA_CRC_ERR_SIGNAL_EN_Pos (5UL) /*!< DATA_CRC_ERR_SIGNAL_EN (Bit 5)               */
#define EMMC_EMMC_ERROR_INT_SIGNAL_EN_R_REG_DATA_CRC_ERR_SIGNAL_EN_Msk (0x20UL) /*!< DATA_CRC_ERR_SIGNAL_EN (Bitfield-Mask: 0x01) */
#define EMMC_EMMC_ERROR_INT_SIGNAL_EN_R_REG_DATA_TOUT_ERR_SIGNAL_EN_Pos (4UL) /*!< DATA_TOUT_ERR_SIGNAL_EN (Bit 4)             */
#define EMMC_EMMC_ERROR_INT_SIGNAL_EN_R_REG_DATA_TOUT_ERR_SIGNAL_EN_Msk (0x10UL) /*!< DATA_TOUT_ERR_SIGNAL_EN (Bitfield-Mask: 0x01) */
#define EMMC_EMMC_ERROR_INT_SIGNAL_EN_R_REG_CMD_IDX_ERR_SIGNAL_EN_Pos (3UL) /*!< CMD_IDX_ERR_SIGNAL_EN (Bit 3)                 */
#define EMMC_EMMC_ERROR_INT_SIGNAL_EN_R_REG_CMD_IDX_ERR_SIGNAL_EN_Msk (0x8UL) /*!< CMD_IDX_ERR_SIGNAL_EN (Bitfield-Mask: 0x01) */
#define EMMC_EMMC_ERROR_INT_SIGNAL_EN_R_REG_CMD_END_BIT_ERR_SIGNAL_EN_Pos (2UL) /*!< CMD_END_BIT_ERR_SIGNAL_EN (Bit 2)         */
#define EMMC_EMMC_ERROR_INT_SIGNAL_EN_R_REG_CMD_END_BIT_ERR_SIGNAL_EN_Msk (0x4UL) /*!< CMD_END_BIT_ERR_SIGNAL_EN (Bitfield-Mask: 0x01) */
#define EMMC_EMMC_ERROR_INT_SIGNAL_EN_R_REG_CMD_CRC_ERR_SIGNAL_EN_Pos (1UL) /*!< CMD_CRC_ERR_SIGNAL_EN (Bit 1)                 */
#define EMMC_EMMC_ERROR_INT_SIGNAL_EN_R_REG_CMD_CRC_ERR_SIGNAL_EN_Msk (0x2UL) /*!< CMD_CRC_ERR_SIGNAL_EN (Bitfield-Mask: 0x01) */
#define EMMC_EMMC_ERROR_INT_SIGNAL_EN_R_REG_CMD_TOUT_ERR_SIGNAL_EN_Pos (0UL) /*!< CMD_TOUT_ERR_SIGNAL_EN (Bit 0)               */
#define EMMC_EMMC_ERROR_INT_SIGNAL_EN_R_REG_CMD_TOUT_ERR_SIGNAL_EN_Msk (0x1UL) /*!< CMD_TOUT_ERR_SIGNAL_EN (Bitfield-Mask: 0x01) */
/* =============================================  EMMC_ERROR_INT_STAT_EN_R_REG  ============================================== */
#define EMMC_EMMC_ERROR_INT_STAT_EN_R_REG_VENDOR_ERR_STAT_EN3_Pos (15UL) /*!< VENDOR_ERR_STAT_EN3 (Bit 15)                     */
#define EMMC_EMMC_ERROR_INT_STAT_EN_R_REG_VENDOR_ERR_STAT_EN3_Msk (0x8000UL) /*!< VENDOR_ERR_STAT_EN3 (Bitfield-Mask: 0x01)    */
#define EMMC_EMMC_ERROR_INT_STAT_EN_R_REG_VENDOR_ERR_STAT_EN2_Pos (14UL) /*!< VENDOR_ERR_STAT_EN2 (Bit 14)                     */
#define EMMC_EMMC_ERROR_INT_STAT_EN_R_REG_VENDOR_ERR_STAT_EN2_Msk (0x4000UL) /*!< VENDOR_ERR_STAT_EN2 (Bitfield-Mask: 0x01)    */
#define EMMC_EMMC_ERROR_INT_STAT_EN_R_REG_VENDOR_ERR_STAT_EN1_Pos (13UL) /*!< VENDOR_ERR_STAT_EN1 (Bit 13)                     */
#define EMMC_EMMC_ERROR_INT_STAT_EN_R_REG_VENDOR_ERR_STAT_EN1_Msk (0x2000UL) /*!< VENDOR_ERR_STAT_EN1 (Bitfield-Mask: 0x01)    */
#define EMMC_EMMC_ERROR_INT_STAT_EN_R_REG_BOOT_ACK_ERR_STAT_EN_Pos (12UL) /*!< BOOT_ACK_ERR_STAT_EN (Bit 12)                   */
#define EMMC_EMMC_ERROR_INT_STAT_EN_R_REG_BOOT_ACK_ERR_STAT_EN_Msk (0x1000UL) /*!< BOOT_ACK_ERR_STAT_EN (Bitfield-Mask: 0x01)  */
#define EMMC_EMMC_ERROR_INT_STAT_EN_R_REG_RESP_ERR_STAT_EN_Pos (11UL) /*!< RESP_ERR_STAT_EN (Bit 11)                           */
#define EMMC_EMMC_ERROR_INT_STAT_EN_R_REG_RESP_ERR_STAT_EN_Msk (0x800UL) /*!< RESP_ERR_STAT_EN (Bitfield-Mask: 0x01)           */
#define EMMC_EMMC_ERROR_INT_STAT_EN_R_REG_TUNING_ERR_STAT_EN_Pos (10UL) /*!< TUNING_ERR_STAT_EN (Bit 10)                       */
#define EMMC_EMMC_ERROR_INT_STAT_EN_R_REG_TUNING_ERR_STAT_EN_Msk (0x400UL) /*!< TUNING_ERR_STAT_EN (Bitfield-Mask: 0x01)       */
#define EMMC_EMMC_ERROR_INT_STAT_EN_R_REG_ADMA_ERR_STAT_EN_Pos (9UL) /*!< ADMA_ERR_STAT_EN (Bit 9)                             */
#define EMMC_EMMC_ERROR_INT_STAT_EN_R_REG_ADMA_ERR_STAT_EN_Msk (0x200UL) /*!< ADMA_ERR_STAT_EN (Bitfield-Mask: 0x01)           */
#define EMMC_EMMC_ERROR_INT_STAT_EN_R_REG_AUTO_CMD_ERR_STAT_EN_Pos (8UL) /*!< AUTO_CMD_ERR_STAT_EN (Bit 8)                     */
#define EMMC_EMMC_ERROR_INT_STAT_EN_R_REG_AUTO_CMD_ERR_STAT_EN_Msk (0x100UL) /*!< AUTO_CMD_ERR_STAT_EN (Bitfield-Mask: 0x01)   */
#define EMMC_EMMC_ERROR_INT_STAT_EN_R_REG_CUR_LMT_ERR_STAT_EN_Pos (7UL) /*!< CUR_LMT_ERR_STAT_EN (Bit 7)                       */
#define EMMC_EMMC_ERROR_INT_STAT_EN_R_REG_CUR_LMT_ERR_STAT_EN_Msk (0x80UL) /*!< CUR_LMT_ERR_STAT_EN (Bitfield-Mask: 0x01)      */
#define EMMC_EMMC_ERROR_INT_STAT_EN_R_REG_DATA_END_BIT_ERR_STAT_EN_Pos (6UL) /*!< DATA_END_BIT_ERR_STAT_EN (Bit 6)             */
#define EMMC_EMMC_ERROR_INT_STAT_EN_R_REG_DATA_END_BIT_ERR_STAT_EN_Msk (0x40UL) /*!< DATA_END_BIT_ERR_STAT_EN (Bitfield-Mask: 0x01) */
#define EMMC_EMMC_ERROR_INT_STAT_EN_R_REG_DATA_CRC_ERR_STAT_EN_Pos (5UL) /*!< DATA_CRC_ERR_STAT_EN (Bit 5)                     */
#define EMMC_EMMC_ERROR_INT_STAT_EN_R_REG_DATA_CRC_ERR_STAT_EN_Msk (0x20UL) /*!< DATA_CRC_ERR_STAT_EN (Bitfield-Mask: 0x01)    */
#define EMMC_EMMC_ERROR_INT_STAT_EN_R_REG_DATA_TOUT_ERR_STAT_EN_Pos (4UL) /*!< DATA_TOUT_ERR_STAT_EN (Bit 4)                   */
#define EMMC_EMMC_ERROR_INT_STAT_EN_R_REG_DATA_TOUT_ERR_STAT_EN_Msk (0x10UL) /*!< DATA_TOUT_ERR_STAT_EN (Bitfield-Mask: 0x01)  */
#define EMMC_EMMC_ERROR_INT_STAT_EN_R_REG_CMD_IDX_ERR_STAT_EN_Pos (3UL) /*!< CMD_IDX_ERR_STAT_EN (Bit 3)                       */
#define EMMC_EMMC_ERROR_INT_STAT_EN_R_REG_CMD_IDX_ERR_STAT_EN_Msk (0x8UL) /*!< CMD_IDX_ERR_STAT_EN (Bitfield-Mask: 0x01)       */
#define EMMC_EMMC_ERROR_INT_STAT_EN_R_REG_CMD_END_BIT_ERR_STAT_EN_Pos (2UL) /*!< CMD_END_BIT_ERR_STAT_EN (Bit 2)               */
#define EMMC_EMMC_ERROR_INT_STAT_EN_R_REG_CMD_END_BIT_ERR_STAT_EN_Msk (0x4UL) /*!< CMD_END_BIT_ERR_STAT_EN (Bitfield-Mask: 0x01) */
#define EMMC_EMMC_ERROR_INT_STAT_EN_R_REG_CMD_CRC_ERR_STAT_EN_Pos (1UL) /*!< CMD_CRC_ERR_STAT_EN (Bit 1)                       */
#define EMMC_EMMC_ERROR_INT_STAT_EN_R_REG_CMD_CRC_ERR_STAT_EN_Msk (0x2UL) /*!< CMD_CRC_ERR_STAT_EN (Bitfield-Mask: 0x01)       */
#define EMMC_EMMC_ERROR_INT_STAT_EN_R_REG_CMD_TOUT_ERR_STAT_EN_Pos (0UL) /*!< CMD_TOUT_ERR_STAT_EN (Bit 0)                     */
#define EMMC_EMMC_ERROR_INT_STAT_EN_R_REG_CMD_TOUT_ERR_STAT_EN_Msk (0x1UL) /*!< CMD_TOUT_ERR_STAT_EN (Bitfield-Mask: 0x01)     */
/* ===============================================  EMMC_ERROR_INT_STAT_R_REG  =============================================== */
#define EMMC_EMMC_ERROR_INT_STAT_R_REG_BOOT_ACK_ERR_Pos (12UL)      /*!< BOOT_ACK_ERR (Bit 12)                                 */
#define EMMC_EMMC_ERROR_INT_STAT_R_REG_BOOT_ACK_ERR_Msk (0x1000UL)  /*!< BOOT_ACK_ERR (Bitfield-Mask: 0x01)                    */
#define EMMC_EMMC_ERROR_INT_STAT_R_REG_RESP_ERR_Pos (11UL)          /*!< RESP_ERR (Bit 11)                                     */
#define EMMC_EMMC_ERROR_INT_STAT_R_REG_RESP_ERR_Msk (0x800UL)       /*!< RESP_ERR (Bitfield-Mask: 0x01)                        */
#define EMMC_EMMC_ERROR_INT_STAT_R_REG_TUNING_ERR_Pos (10UL)        /*!< TUNING_ERR (Bit 10)                                   */
#define EMMC_EMMC_ERROR_INT_STAT_R_REG_TUNING_ERR_Msk (0x400UL)     /*!< TUNING_ERR (Bitfield-Mask: 0x01)                      */
#define EMMC_EMMC_ERROR_INT_STAT_R_REG_ADMA_ERR_Pos (9UL)           /*!< ADMA_ERR (Bit 9)                                      */
#define EMMC_EMMC_ERROR_INT_STAT_R_REG_ADMA_ERR_Msk (0x200UL)       /*!< ADMA_ERR (Bitfield-Mask: 0x01)                        */
#define EMMC_EMMC_ERROR_INT_STAT_R_REG_AUTO_CMD_ERR_Pos (8UL)       /*!< AUTO_CMD_ERR (Bit 8)                                  */
#define EMMC_EMMC_ERROR_INT_STAT_R_REG_AUTO_CMD_ERR_Msk (0x100UL)   /*!< AUTO_CMD_ERR (Bitfield-Mask: 0x01)                    */
#define EMMC_EMMC_ERROR_INT_STAT_R_REG_CUR_LMT_ERR_Pos (7UL)        /*!< CUR_LMT_ERR (Bit 7)                                   */
#define EMMC_EMMC_ERROR_INT_STAT_R_REG_CUR_LMT_ERR_Msk (0x80UL)     /*!< CUR_LMT_ERR (Bitfield-Mask: 0x01)                     */
#define EMMC_EMMC_ERROR_INT_STAT_R_REG_DATA_END_BIT_ERR_Pos (6UL)   /*!< DATA_END_BIT_ERR (Bit 6)                              */
#define EMMC_EMMC_ERROR_INT_STAT_R_REG_DATA_END_BIT_ERR_Msk (0x40UL) /*!< DATA_END_BIT_ERR (Bitfield-Mask: 0x01)               */
#define EMMC_EMMC_ERROR_INT_STAT_R_REG_DATA_CRC_ERR_Pos (5UL)       /*!< DATA_CRC_ERR (Bit 5)                                  */
#define EMMC_EMMC_ERROR_INT_STAT_R_REG_DATA_CRC_ERR_Msk (0x20UL)    /*!< DATA_CRC_ERR (Bitfield-Mask: 0x01)                    */
#define EMMC_EMMC_ERROR_INT_STAT_R_REG_DATA_TOUT_ERR_Pos (4UL)      /*!< DATA_TOUT_ERR (Bit 4)                                 */
#define EMMC_EMMC_ERROR_INT_STAT_R_REG_DATA_TOUT_ERR_Msk (0x10UL)   /*!< DATA_TOUT_ERR (Bitfield-Mask: 0x01)                   */
#define EMMC_EMMC_ERROR_INT_STAT_R_REG_CMD_IDX_ERR_Pos (3UL)        /*!< CMD_IDX_ERR (Bit 3)                                   */
#define EMMC_EMMC_ERROR_INT_STAT_R_REG_CMD_IDX_ERR_Msk (0x8UL)      /*!< CMD_IDX_ERR (Bitfield-Mask: 0x01)                     */
#define EMMC_EMMC_ERROR_INT_STAT_R_REG_CMD_END_BIT_ERR_Pos (2UL)    /*!< CMD_END_BIT_ERR (Bit 2)                               */
#define EMMC_EMMC_ERROR_INT_STAT_R_REG_CMD_END_BIT_ERR_Msk (0x4UL)  /*!< CMD_END_BIT_ERR (Bitfield-Mask: 0x01)                 */
#define EMMC_EMMC_ERROR_INT_STAT_R_REG_CMD_CRC_ERR_Pos (1UL)        /*!< CMD_CRC_ERR (Bit 1)                                   */
#define EMMC_EMMC_ERROR_INT_STAT_R_REG_CMD_CRC_ERR_Msk (0x2UL)      /*!< CMD_CRC_ERR (Bitfield-Mask: 0x01)                     */
#define EMMC_EMMC_ERROR_INT_STAT_R_REG_CMD_TOUT_ERR_Pos (0UL)       /*!< CMD_TOUT_ERR (Bit 0)                                  */
#define EMMC_EMMC_ERROR_INT_STAT_R_REG_CMD_TOUT_ERR_Msk (0x1UL)     /*!< CMD_TOUT_ERR (Bitfield-Mask: 0x01)                    */
/* ============================================  EMMC_FORCE_AUTO_CMD_STAT_R_REG  ============================================= */
#define EMMC_EMMC_FORCE_AUTO_CMD_STAT_R_REG_FORCE_CMD_NOT_ISSUED_AUTO_CMD12_Pos (7UL) /*!< FORCE_CMD_NOT_ISSUED_AUTO_CMD12 (Bit 7) */
#define EMMC_EMMC_FORCE_AUTO_CMD_STAT_R_REG_FORCE_CMD_NOT_ISSUED_AUTO_CMD12_Msk (0x80UL) /*!< FORCE_CMD_NOT_ISSUED_AUTO_CMD12 (Bitfield-Mask: 0x01) */
#define EMMC_EMMC_FORCE_AUTO_CMD_STAT_R_REG_FORCE_AUTO_CMD_RESP_ERR_Pos (5UL) /*!< FORCE_AUTO_CMD_RESP_ERR (Bit 5)             */
#define EMMC_EMMC_FORCE_AUTO_CMD_STAT_R_REG_FORCE_AUTO_CMD_RESP_ERR_Msk (0x20UL) /*!< FORCE_AUTO_CMD_RESP_ERR (Bitfield-Mask: 0x01) */
#define EMMC_EMMC_FORCE_AUTO_CMD_STAT_R_REG_FORCE_AUTO_CMD_IDX_ERR_Pos (4UL) /*!< FORCE_AUTO_CMD_IDX_ERR (Bit 4)               */
#define EMMC_EMMC_FORCE_AUTO_CMD_STAT_R_REG_FORCE_AUTO_CMD_IDX_ERR_Msk (0x10UL) /*!< FORCE_AUTO_CMD_IDX_ERR (Bitfield-Mask: 0x01) */
#define EMMC_EMMC_FORCE_AUTO_CMD_STAT_R_REG_FORCE_AUTO_CMD_EBIT_ERR_Pos (3UL) /*!< FORCE_AUTO_CMD_EBIT_ERR (Bit 3)             */
#define EMMC_EMMC_FORCE_AUTO_CMD_STAT_R_REG_FORCE_AUTO_CMD_EBIT_ERR_Msk (0x8UL) /*!< FORCE_AUTO_CMD_EBIT_ERR (Bitfield-Mask: 0x01) */
#define EMMC_EMMC_FORCE_AUTO_CMD_STAT_R_REG_FORCE_AUTO_CMD_CRC_ERR_Pos (2UL) /*!< FORCE_AUTO_CMD_CRC_ERR (Bit 2)               */
#define EMMC_EMMC_FORCE_AUTO_CMD_STAT_R_REG_FORCE_AUTO_CMD_CRC_ERR_Msk (0x4UL) /*!< FORCE_AUTO_CMD_CRC_ERR (Bitfield-Mask: 0x01) */
#define EMMC_EMMC_FORCE_AUTO_CMD_STAT_R_REG_FORCE_AUTO_CMD_TOUT_ERR_Pos (1UL) /*!< FORCE_AUTO_CMD_TOUT_ERR (Bit 1)             */
#define EMMC_EMMC_FORCE_AUTO_CMD_STAT_R_REG_FORCE_AUTO_CMD_TOUT_ERR_Msk (0x2UL) /*!< FORCE_AUTO_CMD_TOUT_ERR (Bitfield-Mask: 0x01) */
#define EMMC_EMMC_FORCE_AUTO_CMD_STAT_R_REG_FORCE_AUTO_CMD12_NOT_EXEC_Pos (0UL) /*!< FORCE_AUTO_CMD12_NOT_EXEC (Bit 0)         */
#define EMMC_EMMC_FORCE_AUTO_CMD_STAT_R_REG_FORCE_AUTO_CMD12_NOT_EXEC_Msk (0x1UL) /*!< FORCE_AUTO_CMD12_NOT_EXEC (Bitfield-Mask: 0x01) */
/* ============================================  EMMC_FORCE_ERROR_INT_STAT_R_REG  ============================================ */
#define EMMC_EMMC_FORCE_ERROR_INT_STAT_R_REG_FORCE_VENDOR_ERR3_Pos (15UL) /*!< FORCE_VENDOR_ERR3 (Bit 15)                      */
#define EMMC_EMMC_FORCE_ERROR_INT_STAT_R_REG_FORCE_VENDOR_ERR3_Msk (0x8000UL) /*!< FORCE_VENDOR_ERR3 (Bitfield-Mask: 0x01)     */
#define EMMC_EMMC_FORCE_ERROR_INT_STAT_R_REG_FORCE_VENDOR_ERR2_Pos (14UL) /*!< FORCE_VENDOR_ERR2 (Bit 14)                      */
#define EMMC_EMMC_FORCE_ERROR_INT_STAT_R_REG_FORCE_VENDOR_ERR2_Msk (0x4000UL) /*!< FORCE_VENDOR_ERR2 (Bitfield-Mask: 0x01)     */
#define EMMC_EMMC_FORCE_ERROR_INT_STAT_R_REG_FORCE_VENDOR_ERR1_Pos (13UL) /*!< FORCE_VENDOR_ERR1 (Bit 13)                      */
#define EMMC_EMMC_FORCE_ERROR_INT_STAT_R_REG_FORCE_VENDOR_ERR1_Msk (0x2000UL) /*!< FORCE_VENDOR_ERR1 (Bitfield-Mask: 0x01)     */
#define EMMC_EMMC_FORCE_ERROR_INT_STAT_R_REG_FORCE_BOOT_ACK_ERR_Pos (12UL) /*!< FORCE_BOOT_ACK_ERR (Bit 12)                    */
#define EMMC_EMMC_FORCE_ERROR_INT_STAT_R_REG_FORCE_BOOT_ACK_ERR_Msk (0x1000UL) /*!< FORCE_BOOT_ACK_ERR (Bitfield-Mask: 0x01)   */
#define EMMC_EMMC_FORCE_ERROR_INT_STAT_R_REG_FORCE_RESP_ERR_Pos (11UL) /*!< FORCE_RESP_ERR (Bit 11)                            */
#define EMMC_EMMC_FORCE_ERROR_INT_STAT_R_REG_FORCE_RESP_ERR_Msk (0x800UL) /*!< FORCE_RESP_ERR (Bitfield-Mask: 0x01)            */
#define EMMC_EMMC_FORCE_ERROR_INT_STAT_R_REG_FORCE_TUNING_ERR_Pos (10UL) /*!< FORCE_TUNING_ERR (Bit 10)                        */
#define EMMC_EMMC_FORCE_ERROR_INT_STAT_R_REG_FORCE_TUNING_ERR_Msk (0x400UL) /*!< FORCE_TUNING_ERR (Bitfield-Mask: 0x01)        */
#define EMMC_EMMC_FORCE_ERROR_INT_STAT_R_REG_FORCE_ADMA_ERR_Pos (9UL) /*!< FORCE_ADMA_ERR (Bit 9)                              */
#define EMMC_EMMC_FORCE_ERROR_INT_STAT_R_REG_FORCE_ADMA_ERR_Msk (0x200UL) /*!< FORCE_ADMA_ERR (Bitfield-Mask: 0x01)            */
#define EMMC_EMMC_FORCE_ERROR_INT_STAT_R_REG_FORCE_AUTO_CMD_ERR_Pos (8UL) /*!< FORCE_AUTO_CMD_ERR (Bit 8)                      */
#define EMMC_EMMC_FORCE_ERROR_INT_STAT_R_REG_FORCE_AUTO_CMD_ERR_Msk (0x100UL) /*!< FORCE_AUTO_CMD_ERR (Bitfield-Mask: 0x01)    */
#define EMMC_EMMC_FORCE_ERROR_INT_STAT_R_REG_FORCE_CUR_LMT_ERR_Pos (7UL) /*!< FORCE_CUR_LMT_ERR (Bit 7)                        */
#define EMMC_EMMC_FORCE_ERROR_INT_STAT_R_REG_FORCE_CUR_LMT_ERR_Msk (0x80UL) /*!< FORCE_CUR_LMT_ERR (Bitfield-Mask: 0x01)       */
#define EMMC_EMMC_FORCE_ERROR_INT_STAT_R_REG_FORCE_DATA_END_BIT_ERR_Pos (6UL) /*!< FORCE_DATA_END_BIT_ERR (Bit 6)              */
#define EMMC_EMMC_FORCE_ERROR_INT_STAT_R_REG_FORCE_DATA_END_BIT_ERR_Msk (0x40UL) /*!< FORCE_DATA_END_BIT_ERR (Bitfield-Mask: 0x01) */
#define EMMC_EMMC_FORCE_ERROR_INT_STAT_R_REG_FORCE_DATA_CRC_ERR_Pos (5UL) /*!< FORCE_DATA_CRC_ERR (Bit 5)                      */
#define EMMC_EMMC_FORCE_ERROR_INT_STAT_R_REG_FORCE_DATA_CRC_ERR_Msk (0x20UL) /*!< FORCE_DATA_CRC_ERR (Bitfield-Mask: 0x01)     */
#define EMMC_EMMC_FORCE_ERROR_INT_STAT_R_REG_FORCE_DATA_TOUT_ERR_Pos (4UL) /*!< FORCE_DATA_TOUT_ERR (Bit 4)                    */
#define EMMC_EMMC_FORCE_ERROR_INT_STAT_R_REG_FORCE_DATA_TOUT_ERR_Msk (0x10UL) /*!< FORCE_DATA_TOUT_ERR (Bitfield-Mask: 0x01)   */
#define EMMC_EMMC_FORCE_ERROR_INT_STAT_R_REG_FORCE_CMD_IDX_ERR_Pos (3UL) /*!< FORCE_CMD_IDX_ERR (Bit 3)                        */
#define EMMC_EMMC_FORCE_ERROR_INT_STAT_R_REG_FORCE_CMD_IDX_ERR_Msk (0x8UL) /*!< FORCE_CMD_IDX_ERR (Bitfield-Mask: 0x01)        */
#define EMMC_EMMC_FORCE_ERROR_INT_STAT_R_REG_FORCE_CMD_END_BIT_ERR_Pos (2UL) /*!< FORCE_CMD_END_BIT_ERR (Bit 2)                */
#define EMMC_EMMC_FORCE_ERROR_INT_STAT_R_REG_FORCE_CMD_END_BIT_ERR_Msk (0x4UL) /*!< FORCE_CMD_END_BIT_ERR (Bitfield-Mask: 0x01) */
#define EMMC_EMMC_FORCE_ERROR_INT_STAT_R_REG_FORCE_CMD_CRC_ERR_Pos (1UL) /*!< FORCE_CMD_CRC_ERR (Bit 1)                        */
#define EMMC_EMMC_FORCE_ERROR_INT_STAT_R_REG_FORCE_CMD_CRC_ERR_Msk (0x2UL) /*!< FORCE_CMD_CRC_ERR (Bitfield-Mask: 0x01)        */
#define EMMC_EMMC_FORCE_ERROR_INT_STAT_R_REG_FORCE_CMD_TOUT_ERR_Pos (0UL) /*!< FORCE_CMD_TOUT_ERR (Bit 0)                      */
#define EMMC_EMMC_FORCE_ERROR_INT_STAT_R_REG_FORCE_CMD_TOUT_ERR_Msk (0x1UL) /*!< FORCE_CMD_TOUT_ERR (Bitfield-Mask: 0x01)      */
/* ==============================================  EMMC_HOST_CNTRL_VERS_R_REG  =============================================== */
#define EMMC_EMMC_HOST_CNTRL_VERS_R_REG_VENDOR_VERSION_NUM_Pos (8UL) /*!< VENDOR_VERSION_NUM (Bit 8)                           */
#define EMMC_EMMC_HOST_CNTRL_VERS_R_REG_VENDOR_VERSION_NUM_Msk (0xff00UL) /*!< VENDOR_VERSION_NUM (Bitfield-Mask: 0xff)        */
#define EMMC_EMMC_HOST_CNTRL_VERS_R_REG_SPEC_VERSION_NUM_Pos (0UL)  /*!< SPEC_VERSION_NUM (Bit 0)                              */
#define EMMC_EMMC_HOST_CNTRL_VERS_R_REG_SPEC_VERSION_NUM_Msk (0xffUL) /*!< SPEC_VERSION_NUM (Bitfield-Mask: 0xff)              */
/* =================================================  EMMC_HOST_CTRL1_R_REG  ================================================= */
#define EMMC_EMMC_HOST_CTRL1_R_REG_CARD_DETECT_SIG_SEL_Pos (7UL)    /*!< CARD_DETECT_SIG_SEL (Bit 7)                           */
#define EMMC_EMMC_HOST_CTRL1_R_REG_CARD_DETECT_SIG_SEL_Msk (0x80UL) /*!< CARD_DETECT_SIG_SEL (Bitfield-Mask: 0x01)             */
#define EMMC_EMMC_HOST_CTRL1_R_REG_CARD_DETECT_TEST_LVL_Pos (6UL)   /*!< CARD_DETECT_TEST_LVL (Bit 6)                          */
#define EMMC_EMMC_HOST_CTRL1_R_REG_CARD_DETECT_TEST_LVL_Msk (0x40UL) /*!< CARD_DETECT_TEST_LVL (Bitfield-Mask: 0x01)           */
#define EMMC_EMMC_HOST_CTRL1_R_REG_EXT_DAT_XFER_Pos (5UL)           /*!< EXT_DAT_XFER (Bit 5)                                  */
#define EMMC_EMMC_HOST_CTRL1_R_REG_EXT_DAT_XFER_Msk (0x20UL)        /*!< EXT_DAT_XFER (Bitfield-Mask: 0x01)                    */
#define EMMC_EMMC_HOST_CTRL1_R_REG_DMA_SEL_Pos (3UL)                /*!< DMA_SEL (Bit 3)                                       */
#define EMMC_EMMC_HOST_CTRL1_R_REG_DMA_SEL_Msk (0x18UL)             /*!< DMA_SEL (Bitfield-Mask: 0x03)                         */
#define EMMC_EMMC_HOST_CTRL1_R_REG_HIGH_SPEED_EN_Pos (2UL)          /*!< HIGH_SPEED_EN (Bit 2)                                 */
#define EMMC_EMMC_HOST_CTRL1_R_REG_HIGH_SPEED_EN_Msk (0x4UL)        /*!< HIGH_SPEED_EN (Bitfield-Mask: 0x01)                   */
#define EMMC_EMMC_HOST_CTRL1_R_REG_DAT_XFER_WIDTH_Pos (1UL)         /*!< DAT_XFER_WIDTH (Bit 1)                                */
#define EMMC_EMMC_HOST_CTRL1_R_REG_DAT_XFER_WIDTH_Msk (0x2UL)       /*!< DAT_XFER_WIDTH (Bitfield-Mask: 0x01)                  */
#define EMMC_EMMC_HOST_CTRL1_R_REG_LED_CTRL_Pos (0UL)               /*!< LED_CTRL (Bit 0)                                      */
#define EMMC_EMMC_HOST_CTRL1_R_REG_LED_CTRL_Msk (0x1UL)             /*!< LED_CTRL (Bitfield-Mask: 0x01)                        */
/* =================================================  EMMC_HOST_CTRL2_R_REG  ================================================= */
#define EMMC_EMMC_HOST_CTRL2_R_REG_PRESET_VAL_ENABLE_Pos (15UL)     /*!< PRESET_VAL_ENABLE (Bit 15)                            */
#define EMMC_EMMC_HOST_CTRL2_R_REG_PRESET_VAL_ENABLE_Msk (0x8000UL) /*!< PRESET_VAL_ENABLE (Bitfield-Mask: 0x01)               */
#define EMMC_EMMC_HOST_CTRL2_R_REG_ASYNC_INT_ENABLE_Pos (14UL)      /*!< ASYNC_INT_ENABLE (Bit 14)                             */
#define EMMC_EMMC_HOST_CTRL2_R_REG_ASYNC_INT_ENABLE_Msk (0x4000UL)  /*!< ASYNC_INT_ENABLE (Bitfield-Mask: 0x01)                */
#define EMMC_EMMC_HOST_CTRL2_R_REG_ADDRESSING_Pos (13UL)            /*!< ADDRESSING (Bit 13)                                   */
#define EMMC_EMMC_HOST_CTRL2_R_REG_ADDRESSING_Msk (0x2000UL)        /*!< ADDRESSING (Bitfield-Mask: 0x01)                      */
#define EMMC_EMMC_HOST_CTRL2_R_REG_HOST_VER4_ENABLE_Pos (12UL)      /*!< HOST_VER4_ENABLE (Bit 12)                             */
#define EMMC_EMMC_HOST_CTRL2_R_REG_HOST_VER4_ENABLE_Msk (0x1000UL)  /*!< HOST_VER4_ENABLE (Bitfield-Mask: 0x01)                */
#define EMMC_EMMC_HOST_CTRL2_R_REG_CMD23_ENABLE_Pos (11UL)          /*!< CMD23_ENABLE (Bit 11)                                 */
#define EMMC_EMMC_HOST_CTRL2_R_REG_CMD23_ENABLE_Msk (0x800UL)       /*!< CMD23_ENABLE (Bitfield-Mask: 0x01)                    */
#define EMMC_EMMC_HOST_CTRL2_R_REG_ADMA2_LEN_MODE_Pos (10UL)        /*!< ADMA2_LEN_MODE (Bit 10)                               */
#define EMMC_EMMC_HOST_CTRL2_R_REG_ADMA2_LEN_MODE_Msk (0x400UL)     /*!< ADMA2_LEN_MODE (Bitfield-Mask: 0x01)                  */
#define EMMC_EMMC_HOST_CTRL2_R_REG_UHS2_IF_ENABLE_Pos (8UL)         /*!< UHS2_IF_ENABLE (Bit 8)                                */
#define EMMC_EMMC_HOST_CTRL2_R_REG_UHS2_IF_ENABLE_Msk (0x100UL)     /*!< UHS2_IF_ENABLE (Bitfield-Mask: 0x01)                  */
#define EMMC_EMMC_HOST_CTRL2_R_REG_SAMPLE_CLK_SEL_Pos (7UL)         /*!< SAMPLE_CLK_SEL (Bit 7)                                */
#define EMMC_EMMC_HOST_CTRL2_R_REG_SAMPLE_CLK_SEL_Msk (0x80UL)      /*!< SAMPLE_CLK_SEL (Bitfield-Mask: 0x01)                  */
#define EMMC_EMMC_HOST_CTRL2_R_REG_EXEC_TUNING_Pos (6UL)            /*!< EXEC_TUNING (Bit 6)                                   */
#define EMMC_EMMC_HOST_CTRL2_R_REG_EXEC_TUNING_Msk (0x40UL)         /*!< EXEC_TUNING (Bitfield-Mask: 0x01)                     */
#define EMMC_EMMC_HOST_CTRL2_R_REG_DRV_STRENGTH_SEL_Pos (4UL)       /*!< DRV_STRENGTH_SEL (Bit 4)                              */
#define EMMC_EMMC_HOST_CTRL2_R_REG_DRV_STRENGTH_SEL_Msk (0x30UL)    /*!< DRV_STRENGTH_SEL (Bitfield-Mask: 0x03)                */
#define EMMC_EMMC_HOST_CTRL2_R_REG_SIGNALING_EN_Pos (3UL)           /*!< SIGNALING_EN (Bit 3)                                  */
#define EMMC_EMMC_HOST_CTRL2_R_REG_SIGNALING_EN_Msk (0x8UL)         /*!< SIGNALING_EN (Bitfield-Mask: 0x01)                    */
#define EMMC_EMMC_HOST_CTRL2_R_REG_UHS_MODE_SEL_Pos (0UL)           /*!< UHS_MODE_SEL (Bit 0)                                  */
#define EMMC_EMMC_HOST_CTRL2_R_REG_UHS_MODE_SEL_Msk (0x7UL)         /*!< UHS_MODE_SEL (Bitfield-Mask: 0x07)                    */
/* =================================================  EMMC_MBIU_CTRL_R_REG  ================================================== */
#define EMMC_EMMC_MBIU_CTRL_R_REG_BURST_INCR16_EN_Pos (3UL)         /*!< BURST_INCR16_EN (Bit 3)                               */
#define EMMC_EMMC_MBIU_CTRL_R_REG_BURST_INCR16_EN_Msk (0x8UL)       /*!< BURST_INCR16_EN (Bitfield-Mask: 0x01)                 */
#define EMMC_EMMC_MBIU_CTRL_R_REG_BURST_INCR8_EN_Pos (2UL)          /*!< BURST_INCR8_EN (Bit 2)                                */
#define EMMC_EMMC_MBIU_CTRL_R_REG_BURST_INCR8_EN_Msk (0x4UL)        /*!< BURST_INCR8_EN (Bitfield-Mask: 0x01)                  */
#define EMMC_EMMC_MBIU_CTRL_R_REG_BURST_INCR4_EN_Pos (1UL)          /*!< BURST_INCR4_EN (Bit 1)                                */
#define EMMC_EMMC_MBIU_CTRL_R_REG_BURST_INCR4_EN_Msk (0x2UL)        /*!< BURST_INCR4_EN (Bitfield-Mask: 0x01)                  */
#define EMMC_EMMC_MBIU_CTRL_R_REG_UNDEFL_INCR_EN_Pos (0UL)          /*!< UNDEFL_INCR_EN (Bit 0)                                */
#define EMMC_EMMC_MBIU_CTRL_R_REG_UNDEFL_INCR_EN_Msk (0x1UL)        /*!< UNDEFL_INCR_EN (Bitfield-Mask: 0x01)                  */
/* ============================================  EMMC_NORMAL_INT_SIGNAL_EN_R_REG  ============================================ */
#define EMMC_EMMC_NORMAL_INT_SIGNAL_EN_R_REG_CQE_EVENT_SIGNAL_EN_Pos (14UL) /*!< CQE_EVENT_SIGNAL_EN (Bit 14)                  */
#define EMMC_EMMC_NORMAL_INT_SIGNAL_EN_R_REG_CQE_EVENT_SIGNAL_EN_Msk (0x4000UL) /*!< CQE_EVENT_SIGNAL_EN (Bitfield-Mask: 0x01) */
#define EMMC_EMMC_NORMAL_INT_SIGNAL_EN_R_REG_FX_EVENT_SIGNAL_EN_Pos (13UL) /*!< FX_EVENT_SIGNAL_EN (Bit 13)                    */
#define EMMC_EMMC_NORMAL_INT_SIGNAL_EN_R_REG_FX_EVENT_SIGNAL_EN_Msk (0x2000UL) /*!< FX_EVENT_SIGNAL_EN (Bitfield-Mask: 0x01)   */
#define EMMC_EMMC_NORMAL_INT_SIGNAL_EN_R_REG_RE_TUNE_EVENT_SIGNAL_EN_Pos (12UL) /*!< RE_TUNE_EVENT_SIGNAL_EN (Bit 12)          */
#define EMMC_EMMC_NORMAL_INT_SIGNAL_EN_R_REG_RE_TUNE_EVENT_SIGNAL_EN_Msk (0x1000UL) /*!< RE_TUNE_EVENT_SIGNAL_EN (Bitfield-Mask: 0x01) */
#define EMMC_EMMC_NORMAL_INT_SIGNAL_EN_R_REG_INT_C_SIGNAL_EN_Pos (11UL) /*!< INT_C_SIGNAL_EN (Bit 11)                          */
#define EMMC_EMMC_NORMAL_INT_SIGNAL_EN_R_REG_INT_C_SIGNAL_EN_Msk (0x800UL) /*!< INT_C_SIGNAL_EN (Bitfield-Mask: 0x01)          */
#define EMMC_EMMC_NORMAL_INT_SIGNAL_EN_R_REG_INT_B_SIGNAL_EN_Pos (10UL) /*!< INT_B_SIGNAL_EN (Bit 10)                          */
#define EMMC_EMMC_NORMAL_INT_SIGNAL_EN_R_REG_INT_B_SIGNAL_EN_Msk (0x400UL) /*!< INT_B_SIGNAL_EN (Bitfield-Mask: 0x01)          */
#define EMMC_EMMC_NORMAL_INT_SIGNAL_EN_R_REG_INT_A_SIGNAL_EN_Pos (9UL) /*!< INT_A_SIGNAL_EN (Bit 9)                            */
#define EMMC_EMMC_NORMAL_INT_SIGNAL_EN_R_REG_INT_A_SIGNAL_EN_Msk (0x200UL) /*!< INT_A_SIGNAL_EN (Bitfield-Mask: 0x01)          */
#define EMMC_EMMC_NORMAL_INT_SIGNAL_EN_R_REG_CARD_INTERRUPT_SIGNAL_EN_Pos (8UL) /*!< CARD_INTERRUPT_SIGNAL_EN (Bit 8)          */
#define EMMC_EMMC_NORMAL_INT_SIGNAL_EN_R_REG_CARD_INTERRUPT_SIGNAL_EN_Msk (0x100UL) /*!< CARD_INTERRUPT_SIGNAL_EN (Bitfield-Mask: 0x01) */
#define EMMC_EMMC_NORMAL_INT_SIGNAL_EN_R_REG_CARD_REMOVAL_SIGNAL_EN_Pos (7UL) /*!< CARD_REMOVAL_SIGNAL_EN (Bit 7)              */
#define EMMC_EMMC_NORMAL_INT_SIGNAL_EN_R_REG_CARD_REMOVAL_SIGNAL_EN_Msk (0x80UL) /*!< CARD_REMOVAL_SIGNAL_EN (Bitfield-Mask: 0x01) */
#define EMMC_EMMC_NORMAL_INT_SIGNAL_EN_R_REG_CARD_INSERTION_SIGNAL_EN_Pos (6UL) /*!< CARD_INSERTION_SIGNAL_EN (Bit 6)          */
#define EMMC_EMMC_NORMAL_INT_SIGNAL_EN_R_REG_CARD_INSERTION_SIGNAL_EN_Msk (0x40UL) /*!< CARD_INSERTION_SIGNAL_EN (Bitfield-Mask: 0x01) */
#define EMMC_EMMC_NORMAL_INT_SIGNAL_EN_R_REG_BUF_RD_READY_SIGNAL_EN_Pos (5UL) /*!< BUF_RD_READY_SIGNAL_EN (Bit 5)              */
#define EMMC_EMMC_NORMAL_INT_SIGNAL_EN_R_REG_BUF_RD_READY_SIGNAL_EN_Msk (0x20UL) /*!< BUF_RD_READY_SIGNAL_EN (Bitfield-Mask: 0x01) */
#define EMMC_EMMC_NORMAL_INT_SIGNAL_EN_R_REG_BUF_WR_READY_SIGNAL_EN_Pos (4UL) /*!< BUF_WR_READY_SIGNAL_EN (Bit 4)              */
#define EMMC_EMMC_NORMAL_INT_SIGNAL_EN_R_REG_BUF_WR_READY_SIGNAL_EN_Msk (0x10UL) /*!< BUF_WR_READY_SIGNAL_EN (Bitfield-Mask: 0x01) */
#define EMMC_EMMC_NORMAL_INT_SIGNAL_EN_R_REG_DMA_INTERRUPT_SIGNAL_EN_Pos (3UL) /*!< DMA_INTERRUPT_SIGNAL_EN (Bit 3)            */
#define EMMC_EMMC_NORMAL_INT_SIGNAL_EN_R_REG_DMA_INTERRUPT_SIGNAL_EN_Msk (0x8UL) /*!< DMA_INTERRUPT_SIGNAL_EN (Bitfield-Mask: 0x01) */
#define EMMC_EMMC_NORMAL_INT_SIGNAL_EN_R_REG_BGAP_EVENT_SIGNAL_EN_Pos (2UL) /*!< BGAP_EVENT_SIGNAL_EN (Bit 2)                  */
#define EMMC_EMMC_NORMAL_INT_SIGNAL_EN_R_REG_BGAP_EVENT_SIGNAL_EN_Msk (0x4UL) /*!< BGAP_EVENT_SIGNAL_EN (Bitfield-Mask: 0x01)  */
#define EMMC_EMMC_NORMAL_INT_SIGNAL_EN_R_REG_XFER_COMPLETE_SIGNAL_EN_Pos (1UL) /*!< XFER_COMPLETE_SIGNAL_EN (Bit 1)            */
#define EMMC_EMMC_NORMAL_INT_SIGNAL_EN_R_REG_XFER_COMPLETE_SIGNAL_EN_Msk (0x2UL) /*!< XFER_COMPLETE_SIGNAL_EN (Bitfield-Mask: 0x01) */
#define EMMC_EMMC_NORMAL_INT_SIGNAL_EN_R_REG_CMD_COMPLETE_SIGNAL_EN_Pos (0UL) /*!< CMD_COMPLETE_SIGNAL_EN (Bit 0)              */
#define EMMC_EMMC_NORMAL_INT_SIGNAL_EN_R_REG_CMD_COMPLETE_SIGNAL_EN_Msk (0x1UL) /*!< CMD_COMPLETE_SIGNAL_EN (Bitfield-Mask: 0x01) */
/* =============================================  EMMC_NORMAL_INT_STAT_EN_R_REG  ============================================= */
#define EMMC_EMMC_NORMAL_INT_STAT_EN_R_REG_CQE_EVENT_STAT_EN_Pos (14UL) /*!< CQE_EVENT_STAT_EN (Bit 14)                        */
#define EMMC_EMMC_NORMAL_INT_STAT_EN_R_REG_CQE_EVENT_STAT_EN_Msk (0x4000UL) /*!< CQE_EVENT_STAT_EN (Bitfield-Mask: 0x01)       */
#define EMMC_EMMC_NORMAL_INT_STAT_EN_R_REG_FX_EVENT_STAT_EN_Pos (13UL) /*!< FX_EVENT_STAT_EN (Bit 13)                          */
#define EMMC_EMMC_NORMAL_INT_STAT_EN_R_REG_FX_EVENT_STAT_EN_Msk (0x2000UL) /*!< FX_EVENT_STAT_EN (Bitfield-Mask: 0x01)         */
#define EMMC_EMMC_NORMAL_INT_STAT_EN_R_REG_RE_TUNE_EVENT_STAT_EN_Pos (12UL) /*!< RE_TUNE_EVENT_STAT_EN (Bit 12)                */
#define EMMC_EMMC_NORMAL_INT_STAT_EN_R_REG_RE_TUNE_EVENT_STAT_EN_Msk (0x1000UL) /*!< RE_TUNE_EVENT_STAT_EN (Bitfield-Mask: 0x01) */
#define EMMC_EMMC_NORMAL_INT_STAT_EN_R_REG_INT_C_STAT_EN_Pos (11UL) /*!< INT_C_STAT_EN (Bit 11)                                */
#define EMMC_EMMC_NORMAL_INT_STAT_EN_R_REG_INT_C_STAT_EN_Msk (0x800UL) /*!< INT_C_STAT_EN (Bitfield-Mask: 0x01)                */
#define EMMC_EMMC_NORMAL_INT_STAT_EN_R_REG_INT_B_STAT_EN_Pos (10UL) /*!< INT_B_STAT_EN (Bit 10)                                */
#define EMMC_EMMC_NORMAL_INT_STAT_EN_R_REG_INT_B_STAT_EN_Msk (0x400UL) /*!< INT_B_STAT_EN (Bitfield-Mask: 0x01)                */
#define EMMC_EMMC_NORMAL_INT_STAT_EN_R_REG_INT_A_STAT_EN_Pos (9UL)  /*!< INT_A_STAT_EN (Bit 9)                                 */
#define EMMC_EMMC_NORMAL_INT_STAT_EN_R_REG_INT_A_STAT_EN_Msk (0x200UL) /*!< INT_A_STAT_EN (Bitfield-Mask: 0x01)                */
#define EMMC_EMMC_NORMAL_INT_STAT_EN_R_REG_CARD_INTERRUPT_STAT_EN_Pos (8UL) /*!< CARD_INTERRUPT_STAT_EN (Bit 8)                */
#define EMMC_EMMC_NORMAL_INT_STAT_EN_R_REG_CARD_INTERRUPT_STAT_EN_Msk (0x100UL) /*!< CARD_INTERRUPT_STAT_EN (Bitfield-Mask: 0x01) */
#define EMMC_EMMC_NORMAL_INT_STAT_EN_R_REG_CARD_REMOVAL_STAT_EN_Pos (7UL) /*!< CARD_REMOVAL_STAT_EN (Bit 7)                    */
#define EMMC_EMMC_NORMAL_INT_STAT_EN_R_REG_CARD_REMOVAL_STAT_EN_Msk (0x80UL) /*!< CARD_REMOVAL_STAT_EN (Bitfield-Mask: 0x01)   */
#define EMMC_EMMC_NORMAL_INT_STAT_EN_R_REG_CARD_INSERTION_STAT_EN_Pos (6UL) /*!< CARD_INSERTION_STAT_EN (Bit 6)                */
#define EMMC_EMMC_NORMAL_INT_STAT_EN_R_REG_CARD_INSERTION_STAT_EN_Msk (0x40UL) /*!< CARD_INSERTION_STAT_EN (Bitfield-Mask: 0x01) */
#define EMMC_EMMC_NORMAL_INT_STAT_EN_R_REG_BUF_RD_READY_STAT_EN_Pos (5UL) /*!< BUF_RD_READY_STAT_EN (Bit 5)                    */
#define EMMC_EMMC_NORMAL_INT_STAT_EN_R_REG_BUF_RD_READY_STAT_EN_Msk (0x20UL) /*!< BUF_RD_READY_STAT_EN (Bitfield-Mask: 0x01)   */
#define EMMC_EMMC_NORMAL_INT_STAT_EN_R_REG_BUF_WR_READY_STAT_EN_Pos (4UL) /*!< BUF_WR_READY_STAT_EN (Bit 4)                    */
#define EMMC_EMMC_NORMAL_INT_STAT_EN_R_REG_BUF_WR_READY_STAT_EN_Msk (0x10UL) /*!< BUF_WR_READY_STAT_EN (Bitfield-Mask: 0x01)   */
#define EMMC_EMMC_NORMAL_INT_STAT_EN_R_REG_DMA_INTERRUPT_STAT_EN_Pos (3UL) /*!< DMA_INTERRUPT_STAT_EN (Bit 3)                  */
#define EMMC_EMMC_NORMAL_INT_STAT_EN_R_REG_DMA_INTERRUPT_STAT_EN_Msk (0x8UL) /*!< DMA_INTERRUPT_STAT_EN (Bitfield-Mask: 0x01)  */
#define EMMC_EMMC_NORMAL_INT_STAT_EN_R_REG_BGAP_EVENT_STAT_EN_Pos (2UL) /*!< BGAP_EVENT_STAT_EN (Bit 2)                        */
#define EMMC_EMMC_NORMAL_INT_STAT_EN_R_REG_BGAP_EVENT_STAT_EN_Msk (0x4UL) /*!< BGAP_EVENT_STAT_EN (Bitfield-Mask: 0x01)        */
#define EMMC_EMMC_NORMAL_INT_STAT_EN_R_REG_XFER_COMPLETE_STAT_EN_Pos (1UL) /*!< XFER_COMPLETE_STAT_EN (Bit 1)                  */
#define EMMC_EMMC_NORMAL_INT_STAT_EN_R_REG_XFER_COMPLETE_STAT_EN_Msk (0x2UL) /*!< XFER_COMPLETE_STAT_EN (Bitfield-Mask: 0x01)  */
#define EMMC_EMMC_NORMAL_INT_STAT_EN_R_REG_CMD_COMPLETE_STAT_EN_Pos (0UL) /*!< CMD_COMPLETE_STAT_EN (Bit 0)                    */
#define EMMC_EMMC_NORMAL_INT_STAT_EN_R_REG_CMD_COMPLETE_STAT_EN_Msk (0x1UL) /*!< CMD_COMPLETE_STAT_EN (Bitfield-Mask: 0x01)    */
/* ==============================================  EMMC_NORMAL_INT_STAT_R_REG  =============================================== */
#define EMMC_EMMC_NORMAL_INT_STAT_R_REG_ERR_INTERRUPT_Pos (15UL)    /*!< ERR_INTERRUPT (Bit 15)                                */
#define EMMC_EMMC_NORMAL_INT_STAT_R_REG_ERR_INTERRUPT_Msk (0x8000UL) /*!< ERR_INTERRUPT (Bitfield-Mask: 0x01)                  */
#define EMMC_EMMC_NORMAL_INT_STAT_R_REG_CQE_EVENT_Pos (14UL)        /*!< CQE_EVENT (Bit 14)                                    */
#define EMMC_EMMC_NORMAL_INT_STAT_R_REG_CQE_EVENT_Msk (0x4000UL)    /*!< CQE_EVENT (Bitfield-Mask: 0x01)                       */
#define EMMC_EMMC_NORMAL_INT_STAT_R_REG_FX_EVENT_Pos (13UL)         /*!< FX_EVENT (Bit 13)                                     */
#define EMMC_EMMC_NORMAL_INT_STAT_R_REG_FX_EVENT_Msk (0x2000UL)     /*!< FX_EVENT (Bitfield-Mask: 0x01)                        */
#define EMMC_EMMC_NORMAL_INT_STAT_R_REG_RE_TUNE_EVENT_Pos (12UL)    /*!< RE_TUNE_EVENT (Bit 12)                                */
#define EMMC_EMMC_NORMAL_INT_STAT_R_REG_RE_TUNE_EVENT_Msk (0x1000UL) /*!< RE_TUNE_EVENT (Bitfield-Mask: 0x01)                  */
#define EMMC_EMMC_NORMAL_INT_STAT_R_REG_INT_C_Pos (11UL)            /*!< INT_C (Bit 11)                                        */
#define EMMC_EMMC_NORMAL_INT_STAT_R_REG_INT_C_Msk (0x800UL)         /*!< INT_C (Bitfield-Mask: 0x01)                           */
#define EMMC_EMMC_NORMAL_INT_STAT_R_REG_INT_B_Pos (10UL)            /*!< INT_B (Bit 10)                                        */
#define EMMC_EMMC_NORMAL_INT_STAT_R_REG_INT_B_Msk (0x400UL)         /*!< INT_B (Bitfield-Mask: 0x01)                           */
#define EMMC_EMMC_NORMAL_INT_STAT_R_REG_INT_A_Pos (9UL)             /*!< INT_A (Bit 9)                                         */
#define EMMC_EMMC_NORMAL_INT_STAT_R_REG_INT_A_Msk (0x200UL)         /*!< INT_A (Bitfield-Mask: 0x01)                           */
#define EMMC_EMMC_NORMAL_INT_STAT_R_REG_CARD_INTERRUPT_Pos (8UL)    /*!< CARD_INTERRUPT (Bit 8)                                */
#define EMMC_EMMC_NORMAL_INT_STAT_R_REG_CARD_INTERRUPT_Msk (0x100UL) /*!< CARD_INTERRUPT (Bitfield-Mask: 0x01)                 */
#define EMMC_EMMC_NORMAL_INT_STAT_R_REG_CARD_REMOVAL_STAT_R_Pos (7UL) /*!< CARD_REMOVAL_STAT_R (Bit 7)                         */
#define EMMC_EMMC_NORMAL_INT_STAT_R_REG_CARD_REMOVAL_STAT_R_Msk (0x80UL) /*!< CARD_REMOVAL_STAT_R (Bitfield-Mask: 0x01)        */
#define EMMC_EMMC_NORMAL_INT_STAT_R_REG_CARD_INSERTION_Pos (6UL)    /*!< CARD_INSERTION (Bit 6)                                */
#define EMMC_EMMC_NORMAL_INT_STAT_R_REG_CARD_INSERTION_Msk (0x40UL) /*!< CARD_INSERTION (Bitfield-Mask: 0x01)                  */
#define EMMC_EMMC_NORMAL_INT_STAT_R_REG_BUF_RD_READY_Pos (5UL)      /*!< BUF_RD_READY (Bit 5)                                  */
#define EMMC_EMMC_NORMAL_INT_STAT_R_REG_BUF_RD_READY_Msk (0x20UL)   /*!< BUF_RD_READY (Bitfield-Mask: 0x01)                    */
#define EMMC_EMMC_NORMAL_INT_STAT_R_REG_BUF_WR_READY_Pos (4UL)      /*!< BUF_WR_READY (Bit 4)                                  */
#define EMMC_EMMC_NORMAL_INT_STAT_R_REG_BUF_WR_READY_Msk (0x10UL)   /*!< BUF_WR_READY (Bitfield-Mask: 0x01)                    */
#define EMMC_EMMC_NORMAL_INT_STAT_R_REG_DMA_INTERRUPT_Pos (3UL)     /*!< DMA_INTERRUPT (Bit 3)                                 */
#define EMMC_EMMC_NORMAL_INT_STAT_R_REG_DMA_INTERRUPT_Msk (0x8UL)   /*!< DMA_INTERRUPT (Bitfield-Mask: 0x01)                   */
#define EMMC_EMMC_NORMAL_INT_STAT_R_REG_BGAP_EVENT_Pos (2UL)        /*!< BGAP_EVENT (Bit 2)                                    */
#define EMMC_EMMC_NORMAL_INT_STAT_R_REG_BGAP_EVENT_Msk (0x4UL)      /*!< BGAP_EVENT (Bitfield-Mask: 0x01)                      */
#define EMMC_EMMC_NORMAL_INT_STAT_R_REG_XFER_COMPLETE_Pos (1UL)     /*!< XFER_COMPLETE (Bit 1)                                 */
#define EMMC_EMMC_NORMAL_INT_STAT_R_REG_XFER_COMPLETE_Msk (0x2UL)   /*!< XFER_COMPLETE (Bitfield-Mask: 0x01)                   */
#define EMMC_EMMC_NORMAL_INT_STAT_R_REG_CMD_COMPLETE_Pos (0UL)      /*!< CMD_COMPLETE (Bit 0)                                  */
#define EMMC_EMMC_NORMAL_INT_STAT_R_REG_CMD_COMPLETE_Msk (0x1UL)    /*!< CMD_COMPLETE (Bitfield-Mask: 0x01)                    */
/* ================================================  EMMC_PRESET_DDR50_R_REG  ================================================ */
#define EMMC_EMMC_PRESET_DDR50_R_REG_DRV_SEL_VAL_Pos (14UL)         /*!< DRV_SEL_VAL (Bit 14)                                  */
#define EMMC_EMMC_PRESET_DDR50_R_REG_DRV_SEL_VAL_Msk (0xc000UL)     /*!< DRV_SEL_VAL (Bitfield-Mask: 0x03)                     */
#define EMMC_EMMC_PRESET_DDR50_R_REG_CLK_GEN_SEL_VAL_Pos (10UL)     /*!< CLK_GEN_SEL_VAL (Bit 10)                              */
#define EMMC_EMMC_PRESET_DDR50_R_REG_CLK_GEN_SEL_VAL_Msk (0x400UL)  /*!< CLK_GEN_SEL_VAL (Bitfield-Mask: 0x01)                 */
#define EMMC_EMMC_PRESET_DDR50_R_REG_FREQ_SEL_VAL_Pos (0UL)         /*!< FREQ_SEL_VAL (Bit 0)                                  */
#define EMMC_EMMC_PRESET_DDR50_R_REG_FREQ_SEL_VAL_Msk (0x3ffUL)     /*!< FREQ_SEL_VAL (Bitfield-Mask: 0x3ff)                   */
/* =================================================  EMMC_PRESET_DS_R_REG  ================================================== */
#define EMMC_EMMC_PRESET_DS_R_REG_DRV_SEL_VAL_Pos (14UL)            /*!< DRV_SEL_VAL (Bit 14)                                  */
#define EMMC_EMMC_PRESET_DS_R_REG_DRV_SEL_VAL_Msk (0xc000UL)        /*!< DRV_SEL_VAL (Bitfield-Mask: 0x03)                     */
#define EMMC_EMMC_PRESET_DS_R_REG_CLK_GEN_SEL_VAL_Pos (10UL)        /*!< CLK_GEN_SEL_VAL (Bit 10)                              */
#define EMMC_EMMC_PRESET_DS_R_REG_CLK_GEN_SEL_VAL_Msk (0x400UL)     /*!< CLK_GEN_SEL_VAL (Bitfield-Mask: 0x01)                 */
#define EMMC_EMMC_PRESET_DS_R_REG_FREQ_SEL_VAL_Pos (0UL)            /*!< FREQ_SEL_VAL (Bit 0)                                  */
#define EMMC_EMMC_PRESET_DS_R_REG_FREQ_SEL_VAL_Msk (0x3ffUL)        /*!< FREQ_SEL_VAL (Bitfield-Mask: 0x3ff)                   */
/* =================================================  EMMC_PRESET_HS_R_REG  ================================================== */
#define EMMC_EMMC_PRESET_HS_R_REG_DRV_SEL_VAL_Pos (14UL)            /*!< DRV_SEL_VAL (Bit 14)                                  */
#define EMMC_EMMC_PRESET_HS_R_REG_DRV_SEL_VAL_Msk (0xc000UL)        /*!< DRV_SEL_VAL (Bitfield-Mask: 0x03)                     */
#define EMMC_EMMC_PRESET_HS_R_REG_CLK_GEN_SEL_VAL_Pos (10UL)        /*!< CLK_GEN_SEL_VAL (Bit 10)                              */
#define EMMC_EMMC_PRESET_HS_R_REG_CLK_GEN_SEL_VAL_Msk (0x400UL)     /*!< CLK_GEN_SEL_VAL (Bitfield-Mask: 0x01)                 */
#define EMMC_EMMC_PRESET_HS_R_REG_FREQ_SEL_VAL_Pos (0UL)            /*!< FREQ_SEL_VAL (Bit 0)                                  */
#define EMMC_EMMC_PRESET_HS_R_REG_FREQ_SEL_VAL_Msk (0x3ffUL)        /*!< FREQ_SEL_VAL (Bitfield-Mask: 0x3ff)                   */
/* ================================================  EMMC_PRESET_INIT_R_REG  ================================================= */
#define EMMC_EMMC_PRESET_INIT_R_REG_DRV_SEL_VAL_Pos (14UL)          /*!< DRV_SEL_VAL (Bit 14)                                  */
#define EMMC_EMMC_PRESET_INIT_R_REG_DRV_SEL_VAL_Msk (0xc000UL)      /*!< DRV_SEL_VAL (Bitfield-Mask: 0x03)                     */
#define EMMC_EMMC_PRESET_INIT_R_REG_CLK_GEN_SEL_VAL_Pos (10UL)      /*!< CLK_GEN_SEL_VAL (Bit 10)                              */
#define EMMC_EMMC_PRESET_INIT_R_REG_CLK_GEN_SEL_VAL_Msk (0x400UL)   /*!< CLK_GEN_SEL_VAL (Bitfield-Mask: 0x01)                 */
#define EMMC_EMMC_PRESET_INIT_R_REG_FREQ_SEL_VAL_Pos (0UL)          /*!< FREQ_SEL_VAL (Bit 0)                                  */
#define EMMC_EMMC_PRESET_INIT_R_REG_FREQ_SEL_VAL_Msk (0x3ffUL)      /*!< FREQ_SEL_VAL (Bitfield-Mask: 0x3ff)                   */
/* ===============================================  EMMC_PRESET_SDR104_R_REG  ================================================ */
#define EMMC_EMMC_PRESET_SDR104_R_REG_DRV_SEL_VAL_Pos (14UL)        /*!< DRV_SEL_VAL (Bit 14)                                  */
#define EMMC_EMMC_PRESET_SDR104_R_REG_DRV_SEL_VAL_Msk (0xc000UL)    /*!< DRV_SEL_VAL (Bitfield-Mask: 0x03)                     */
#define EMMC_EMMC_PRESET_SDR104_R_REG_CLK_GEN_SEL_VAL_Pos (10UL)    /*!< CLK_GEN_SEL_VAL (Bit 10)                              */
#define EMMC_EMMC_PRESET_SDR104_R_REG_CLK_GEN_SEL_VAL_Msk (0x400UL) /*!< CLK_GEN_SEL_VAL (Bitfield-Mask: 0x01)                 */
#define EMMC_EMMC_PRESET_SDR104_R_REG_FREQ_SEL_VAL_Pos (0UL)        /*!< FREQ_SEL_VAL (Bit 0)                                  */
#define EMMC_EMMC_PRESET_SDR104_R_REG_FREQ_SEL_VAL_Msk (0x3ffUL)    /*!< FREQ_SEL_VAL (Bitfield-Mask: 0x3ff)                   */
/* ================================================  EMMC_PRESET_SDR12_R_REG  ================================================ */
#define EMMC_EMMC_PRESET_SDR12_R_REG_DRV_SEL_VAL_Pos (14UL)         /*!< DRV_SEL_VAL (Bit 14)                                  */
#define EMMC_EMMC_PRESET_SDR12_R_REG_DRV_SEL_VAL_Msk (0xc000UL)     /*!< DRV_SEL_VAL (Bitfield-Mask: 0x03)                     */
#define EMMC_EMMC_PRESET_SDR12_R_REG_CLK_GEN_SEL_VAL_Pos (10UL)     /*!< CLK_GEN_SEL_VAL (Bit 10)                              */
#define EMMC_EMMC_PRESET_SDR12_R_REG_CLK_GEN_SEL_VAL_Msk (0x400UL)  /*!< CLK_GEN_SEL_VAL (Bitfield-Mask: 0x01)                 */
#define EMMC_EMMC_PRESET_SDR12_R_REG_FREQ_SEL_VAL_Pos (0UL)         /*!< FREQ_SEL_VAL (Bit 0)                                  */
#define EMMC_EMMC_PRESET_SDR12_R_REG_FREQ_SEL_VAL_Msk (0x3ffUL)     /*!< FREQ_SEL_VAL (Bitfield-Mask: 0x3ff)                   */
/* ================================================  EMMC_PRESET_SDR25_R_REG  ================================================ */
#define EMMC_EMMC_PRESET_SDR25_R_REG_DRV_SEL_VAL_Pos (14UL)         /*!< DRV_SEL_VAL (Bit 14)                                  */
#define EMMC_EMMC_PRESET_SDR25_R_REG_DRV_SEL_VAL_Msk (0xc000UL)     /*!< DRV_SEL_VAL (Bitfield-Mask: 0x03)                     */
#define EMMC_EMMC_PRESET_SDR25_R_REG_CLK_GEN_SEL_VAL_Pos (10UL)     /*!< CLK_GEN_SEL_VAL (Bit 10)                              */
#define EMMC_EMMC_PRESET_SDR25_R_REG_CLK_GEN_SEL_VAL_Msk (0x400UL)  /*!< CLK_GEN_SEL_VAL (Bitfield-Mask: 0x01)                 */
#define EMMC_EMMC_PRESET_SDR25_R_REG_FREQ_SEL_VAL_Pos (0UL)         /*!< FREQ_SEL_VAL (Bit 0)                                  */
#define EMMC_EMMC_PRESET_SDR25_R_REG_FREQ_SEL_VAL_Msk (0x3ffUL)     /*!< FREQ_SEL_VAL (Bitfield-Mask: 0x3ff)                   */
/* ================================================  EMMC_PRESET_SDR50_R_REG  ================================================ */
#define EMMC_EMMC_PRESET_SDR50_R_REG_DRV_SEL_VAL_Pos (14UL)         /*!< DRV_SEL_VAL (Bit 14)                                  */
#define EMMC_EMMC_PRESET_SDR50_R_REG_DRV_SEL_VAL_Msk (0xc000UL)     /*!< DRV_SEL_VAL (Bitfield-Mask: 0x03)                     */
#define EMMC_EMMC_PRESET_SDR50_R_REG_CLK_GEN_SEL_VAL_Pos (10UL)     /*!< CLK_GEN_SEL_VAL (Bit 10)                              */
#define EMMC_EMMC_PRESET_SDR50_R_REG_CLK_GEN_SEL_VAL_Msk (0x400UL)  /*!< CLK_GEN_SEL_VAL (Bitfield-Mask: 0x01)                 */
#define EMMC_EMMC_PRESET_SDR50_R_REG_FREQ_SEL_VAL_Pos (0UL)         /*!< FREQ_SEL_VAL (Bit 0)                                  */
#define EMMC_EMMC_PRESET_SDR50_R_REG_FREQ_SEL_VAL_Msk (0x3ffUL)     /*!< FREQ_SEL_VAL (Bitfield-Mask: 0x3ff)                   */
/* ================================================  EMMC_PRESET_UHS2_R_REG  ================================================= */
#define EMMC_EMMC_PRESET_UHS2_R_REG_DRV_SEL_VAL_Pos (14UL)          /*!< DRV_SEL_VAL (Bit 14)                                  */
#define EMMC_EMMC_PRESET_UHS2_R_REG_DRV_SEL_VAL_Msk (0xc000UL)      /*!< DRV_SEL_VAL (Bitfield-Mask: 0x03)                     */
#define EMMC_EMMC_PRESET_UHS2_R_REG_CLK_GEN_SEL_VAL_Pos (10UL)      /*!< CLK_GEN_SEL_VAL (Bit 10)                              */
#define EMMC_EMMC_PRESET_UHS2_R_REG_CLK_GEN_SEL_VAL_Msk (0x400UL)   /*!< CLK_GEN_SEL_VAL (Bitfield-Mask: 0x01)                 */
#define EMMC_EMMC_PRESET_UHS2_R_REG_FREQ_SEL_VAL_Pos (0UL)          /*!< FREQ_SEL_VAL (Bit 0)                                  */
#define EMMC_EMMC_PRESET_UHS2_R_REG_FREQ_SEL_VAL_Msk (0x3ffUL)      /*!< FREQ_SEL_VAL (Bitfield-Mask: 0x3ff)                   */
/* ====================================================  EMMC_PSTATE_REG  ==================================================== */
#define EMMC_EMMC_PSTATE_REG_UHS2_IF_DETECT_Pos (31UL)              /*!< UHS2_IF_DETECT (Bit 31)                               */
#define EMMC_EMMC_PSTATE_REG_UHS2_IF_DETECT_Msk (0x80000000UL)      /*!< UHS2_IF_DETECT (Bitfield-Mask: 0x01)                  */
#define EMMC_EMMC_PSTATE_REG_LANE_SYNC_Pos (30UL)                   /*!< LANE_SYNC (Bit 30)                                    */
#define EMMC_EMMC_PSTATE_REG_LANE_SYNC_Msk (0x40000000UL)           /*!< LANE_SYNC (Bitfield-Mask: 0x01)                       */
#define EMMC_EMMC_PSTATE_REG_IN_DORMANT_ST_Pos (29UL)               /*!< IN_DORMANT_ST (Bit 29)                                */
#define EMMC_EMMC_PSTATE_REG_IN_DORMANT_ST_Msk (0x20000000UL)       /*!< IN_DORMANT_ST (Bitfield-Mask: 0x01)                   */
#define EMMC_EMMC_PSTATE_REG_SUB_CMD_STAT_Pos (28UL)                /*!< SUB_CMD_STAT (Bit 28)                                 */
#define EMMC_EMMC_PSTATE_REG_SUB_CMD_STAT_Msk (0x10000000UL)        /*!< SUB_CMD_STAT (Bitfield-Mask: 0x01)                    */
#define EMMC_EMMC_PSTATE_REG_CMD_ISSUE_ERR_Pos (27UL)               /*!< CMD_ISSUE_ERR (Bit 27)                                */
#define EMMC_EMMC_PSTATE_REG_CMD_ISSUE_ERR_Msk (0x8000000UL)        /*!< CMD_ISSUE_ERR (Bitfield-Mask: 0x01)                   */
#define EMMC_EMMC_PSTATE_REG_HOST_REG_VOL_Pos (25UL)                /*!< HOST_REG_VOL (Bit 25)                                 */
#define EMMC_EMMC_PSTATE_REG_HOST_REG_VOL_Msk (0x2000000UL)         /*!< HOST_REG_VOL (Bitfield-Mask: 0x01)                    */
#define EMMC_EMMC_PSTATE_REG_CMD_LINE_LVL_Pos (24UL)                /*!< CMD_LINE_LVL (Bit 24)                                 */
#define EMMC_EMMC_PSTATE_REG_CMD_LINE_LVL_Msk (0x1000000UL)         /*!< CMD_LINE_LVL (Bitfield-Mask: 0x01)                    */
#define EMMC_EMMC_PSTATE_REG_DAT_3_0_Pos  (20UL)                    /*!< DAT_3_0 (Bit 20)                                      */
#define EMMC_EMMC_PSTATE_REG_DAT_3_0_Msk  (0xf00000UL)              /*!< DAT_3_0 (Bitfield-Mask: 0x0f)                         */
#define EMMC_EMMC_PSTATE_REG_WR_PROTECT_SW_LVL_Pos (19UL)           /*!< WR_PROTECT_SW_LVL (Bit 19)                            */
#define EMMC_EMMC_PSTATE_REG_WR_PROTECT_SW_LVL_Msk (0x80000UL)      /*!< WR_PROTECT_SW_LVL (Bitfield-Mask: 0x01)               */
#define EMMC_EMMC_PSTATE_REG_CARD_DETECT_PIN_LEVEL_Pos (18UL)       /*!< CARD_DETECT_PIN_LEVEL (Bit 18)                        */
#define EMMC_EMMC_PSTATE_REG_CARD_DETECT_PIN_LEVEL_Msk (0x40000UL)  /*!< CARD_DETECT_PIN_LEVEL (Bitfield-Mask: 0x01)           */
#define EMMC_EMMC_PSTATE_REG_CARD_STABLE_Pos (17UL)                 /*!< CARD_STABLE (Bit 17)                                  */
#define EMMC_EMMC_PSTATE_REG_CARD_STABLE_Msk (0x20000UL)            /*!< CARD_STABLE (Bitfield-Mask: 0x01)                     */
#define EMMC_EMMC_PSTATE_REG_CARD_INSERTED_Pos (16UL)               /*!< CARD_INSERTED (Bit 16)                                */
#define EMMC_EMMC_PSTATE_REG_CARD_INSERTED_Msk (0x10000UL)          /*!< CARD_INSERTED (Bitfield-Mask: 0x01)                   */
#define EMMC_EMMC_PSTATE_REG_BUF_RD_ENABLE_Pos (11UL)               /*!< BUF_RD_ENABLE (Bit 11)                                */
#define EMMC_EMMC_PSTATE_REG_BUF_RD_ENABLE_Msk (0x800UL)            /*!< BUF_RD_ENABLE (Bitfield-Mask: 0x01)                   */
#define EMMC_EMMC_PSTATE_REG_BUF_WR_ENABLE_Pos (10UL)               /*!< BUF_WR_ENABLE (Bit 10)                                */
#define EMMC_EMMC_PSTATE_REG_BUF_WR_ENABLE_Msk (0x400UL)            /*!< BUF_WR_ENABLE (Bitfield-Mask: 0x01)                   */
#define EMMC_EMMC_PSTATE_REG_RD_XFER_ACTIVE_Pos (9UL)               /*!< RD_XFER_ACTIVE (Bit 9)                                */
#define EMMC_EMMC_PSTATE_REG_RD_XFER_ACTIVE_Msk (0x200UL)           /*!< RD_XFER_ACTIVE (Bitfield-Mask: 0x01)                  */
#define EMMC_EMMC_PSTATE_REG_WR_XFER_ACTIVE_Pos (8UL)               /*!< WR_XFER_ACTIVE (Bit 8)                                */
#define EMMC_EMMC_PSTATE_REG_WR_XFER_ACTIVE_Msk (0x100UL)           /*!< WR_XFER_ACTIVE (Bitfield-Mask: 0x01)                  */
#define EMMC_EMMC_PSTATE_REG_DAT_7_4_Pos  (4UL)                     /*!< DAT_7_4 (Bit 4)                                       */
#define EMMC_EMMC_PSTATE_REG_DAT_7_4_Msk  (0xf0UL)                  /*!< DAT_7_4 (Bitfield-Mask: 0x0f)                         */
#define EMMC_EMMC_PSTATE_REG_RE_TUNE_REQ_Pos (3UL)                  /*!< RE_TUNE_REQ (Bit 3)                                   */
#define EMMC_EMMC_PSTATE_REG_RE_TUNE_REQ_Msk (0x8UL)                /*!< RE_TUNE_REQ (Bitfield-Mask: 0x01)                     */
#define EMMC_EMMC_PSTATE_REG_DAT_LINE_ACTIVE_Pos (2UL)              /*!< DAT_LINE_ACTIVE (Bit 2)                               */
#define EMMC_EMMC_PSTATE_REG_DAT_LINE_ACTIVE_Msk (0x4UL)            /*!< DAT_LINE_ACTIVE (Bitfield-Mask: 0x01)                 */
#define EMMC_EMMC_PSTATE_REG_CMD_INHIBIT_DAT_Pos (1UL)              /*!< CMD_INHIBIT_DAT (Bit 1)                               */
#define EMMC_EMMC_PSTATE_REG_CMD_INHIBIT_DAT_Msk (0x2UL)            /*!< CMD_INHIBIT_DAT (Bitfield-Mask: 0x01)                 */
#define EMMC_EMMC_PSTATE_REG_CMD_INHIBIT_Pos (0UL)                  /*!< CMD_INHIBIT (Bit 0)                                   */
#define EMMC_EMMC_PSTATE_REG_CMD_INHIBIT_Msk (0x1UL)                /*!< CMD_INHIBIT (Bitfield-Mask: 0x01)                     */
/* ==================================================  EMMC_PWR_CTRL_R_REG  ================================================== */
#define EMMC_EMMC_PWR_CTRL_R_REG_SD_BUS_VOL_VDD2_Pos (5UL)          /*!< SD_BUS_VOL_VDD2 (Bit 5)                               */
#define EMMC_EMMC_PWR_CTRL_R_REG_SD_BUS_VOL_VDD2_Msk (0xe0UL)       /*!< SD_BUS_VOL_VDD2 (Bitfield-Mask: 0x07)                 */
#define EMMC_EMMC_PWR_CTRL_R_REG_SD_BUS_PWR_VDD2_Pos (4UL)          /*!< SD_BUS_PWR_VDD2 (Bit 4)                               */
#define EMMC_EMMC_PWR_CTRL_R_REG_SD_BUS_PWR_VDD2_Msk (0x10UL)       /*!< SD_BUS_PWR_VDD2 (Bitfield-Mask: 0x01)                 */
#define EMMC_EMMC_PWR_CTRL_R_REG_SD_BUS_VOL_VDD1_Pos (1UL)          /*!< SD_BUS_VOL_VDD1 (Bit 1)                               */
#define EMMC_EMMC_PWR_CTRL_R_REG_SD_BUS_VOL_VDD1_Msk (0xeUL)        /*!< SD_BUS_VOL_VDD1 (Bitfield-Mask: 0x07)                 */
#define EMMC_EMMC_PWR_CTRL_R_REG_SD_BUS_PWR_VDD1_Pos (0UL)          /*!< SD_BUS_PWR_VDD1 (Bit 0)                               */
#define EMMC_EMMC_PWR_CTRL_R_REG_SD_BUS_PWR_VDD1_Msk (0x1UL)        /*!< SD_BUS_PWR_VDD1 (Bitfield-Mask: 0x01)                 */
/* ===============================================  EMMC_P_EMBEDDED_CNTRL_REG  =============================================== */
#define EMMC_EMMC_P_EMBEDDED_CNTRL_REG_REG_OFFSET_EMBEDDED_CNTRL_ADDR_Pos (0UL) /*!< REG_OFFSET_EMBEDDED_CNTRL_ADDR (Bit 0)    */
#define EMMC_EMMC_P_EMBEDDED_CNTRL_REG_REG_OFFSET_EMBEDDED_CNTRL_ADDR_Msk (0xfffUL) /*!< REG_OFFSET_EMBEDDED_CNTRL_ADDR (Bitfield-Mask: 0xfff) */
/* ============================================  EMMC_P_VENDOR_SPECIFIC_AREA_REG  ============================================ */
#define EMMC_EMMC_P_VENDOR_SPECIFIC_AREA_REG_REG_OFFSET_ADDR_VENDOR_Pos (0UL) /*!< REG_OFFSET_ADDR_VENDOR (Bit 0)              */
#define EMMC_EMMC_P_VENDOR_SPECIFIC_AREA_REG_REG_OFFSET_ADDR_VENDOR_Msk (0xfffUL) /*!< REG_OFFSET_ADDR_VENDOR (Bitfield-Mask: 0xfff) */
/* ============================================  EMMC_P_VNDR2_SPECIFIC_AREA_REG  ============================================= */
#define EMMC_EMMC_P_VNDR2_SPECIFIC_AREA_REG_REG_OFFSET_ADDR_VNDR2_Pos (0UL) /*!< REG_OFFSET_ADDR_VNDR2 (Bit 0)                 */
#define EMMC_EMMC_P_VNDR2_SPECIFIC_AREA_REG_REG_OFFSET_ADDR_VNDR2_Msk (0xffffUL) /*!< REG_OFFSET_ADDR_VNDR2 (Bitfield-Mask: 0xffff) */
/* ===================================================  EMMC_RESP01_R_REG  =================================================== */
#define EMMC_EMMC_RESP01_R_REG_RESP01_Pos (0UL)                     /*!< RESP01 (Bit 0)                                        */
#define EMMC_EMMC_RESP01_R_REG_RESP01_Msk (0xffffffffUL)            /*!< RESP01 (Bitfield-Mask: 0xffffffff)                    */
/* ===================================================  EMMC_RESP23_R_REG  =================================================== */
#define EMMC_EMMC_RESP23_R_REG_RESP23_Pos (0UL)                     /*!< RESP23 (Bit 0)                                        */
#define EMMC_EMMC_RESP23_R_REG_RESP23_Msk (0xffffffffUL)            /*!< RESP23 (Bitfield-Mask: 0xffffffff)                    */
/* ===================================================  EMMC_RESP45_R_REG  =================================================== */
#define EMMC_EMMC_RESP45_R_REG_RESP45_Pos (0UL)                     /*!< RESP45 (Bit 0)                                        */
#define EMMC_EMMC_RESP45_R_REG_RESP45_Msk (0xffffffffUL)            /*!< RESP45 (Bitfield-Mask: 0xffffffff)                    */
/* ===================================================  EMMC_RESP67_R_REG  =================================================== */
#define EMMC_EMMC_RESP67_R_REG_RESP67_Pos (0UL)                     /*!< RESP67 (Bit 0)                                        */
#define EMMC_EMMC_RESP67_R_REG_RESP67_Msk (0xffffffffUL)            /*!< RESP67 (Bitfield-Mask: 0xffffffff)                    */
/* ===================================================  EMMC_SDMASA_R_REG  =================================================== */
#define EMMC_EMMC_SDMASA_R_REG_BLOCKCNT_SDMASA_Pos (0UL)            /*!< BLOCKCNT_SDMASA (Bit 0)                               */
#define EMMC_EMMC_SDMASA_R_REG_BLOCKCNT_SDMASA_Msk (0xffffffffUL)   /*!< BLOCKCNT_SDMASA (Bitfield-Mask: 0xffffffff)           */
/* ==============================================  EMMC_SLOT_INTR_STATUS_R_REG  ============================================== */
#define EMMC_EMMC_SLOT_INTR_STATUS_R_REG_INTR_SLOT_Pos (0UL)        /*!< INTR_SLOT (Bit 0)                                     */
#define EMMC_EMMC_SLOT_INTR_STATUS_R_REG_INTR_SLOT_Msk (0xffUL)     /*!< INTR_SLOT (Bitfield-Mask: 0xff)                       */
/* ===================================================  EMMC_SW_RST_R_REG  =================================================== */
#define EMMC_EMMC_SW_RST_R_REG_SW_RST_DAT_Pos (2UL)                 /*!< SW_RST_DAT (Bit 2)                                    */
#define EMMC_EMMC_SW_RST_R_REG_SW_RST_DAT_Msk (0x4UL)               /*!< SW_RST_DAT (Bitfield-Mask: 0x01)                      */
#define EMMC_EMMC_SW_RST_R_REG_SW_RST_CMD_Pos (1UL)                 /*!< SW_RST_CMD (Bit 1)                                    */
#define EMMC_EMMC_SW_RST_R_REG_SW_RST_CMD_Msk (0x2UL)               /*!< SW_RST_CMD (Bitfield-Mask: 0x01)                      */
#define EMMC_EMMC_SW_RST_R_REG_SW_RST_ALL_Pos (0UL)                 /*!< SW_RST_ALL (Bit 0)                                    */
#define EMMC_EMMC_SW_RST_R_REG_SW_RST_ALL_Msk (0x1UL)               /*!< SW_RST_ALL (Bitfield-Mask: 0x01)                      */
/* =================================================  EMMC_TOUT_CTRL_R_REG  ================================================== */
#define EMMC_EMMC_TOUT_CTRL_R_REG_TOUT_CNT_Pos (0UL)                /*!< TOUT_CNT (Bit 0)                                      */
#define EMMC_EMMC_TOUT_CTRL_R_REG_TOUT_CNT_Msk (0xfUL)              /*!< TOUT_CNT (Bitfield-Mask: 0x0f)                        */
/* ===================================================  EMMC_VER_ID_R_REG  =================================================== */
#define EMMC_EMMC_VER_ID_R_REG_VER_ID_Pos (0UL)                     /*!< VER_ID (Bit 0)                                        */
#define EMMC_EMMC_VER_ID_R_REG_VER_ID_Msk (0xffffffffUL)            /*!< VER_ID (Bitfield-Mask: 0xffffffff)                    */
/* ==================================================  EMMC_VER_TYPE_R_REG  ================================================== */
#define EMMC_EMMC_VER_TYPE_R_REG_VER_TYPE_Pos (0UL)                 /*!< VER_TYPE (Bit 0)                                      */
#define EMMC_EMMC_VER_TYPE_R_REG_VER_TYPE_Msk (0xffffffffUL)        /*!< VER_TYPE (Bitfield-Mask: 0xffffffff)                  */
/* ==================================================  EMMC_WUP_CTRL_R_REG  ================================================== */
#define EMMC_EMMC_WUP_CTRL_R_REG_CARD_REMOVAL_Pos (2UL)             /*!< CARD_REMOVAL (Bit 2)                                  */
#define EMMC_EMMC_WUP_CTRL_R_REG_CARD_REMOVAL_Msk (0x4UL)           /*!< CARD_REMOVAL (Bitfield-Mask: 0x01)                    */
#define EMMC_EMMC_WUP_CTRL_R_REG_CARD_INSERT_Pos (1UL)              /*!< CARD_INSERT (Bit 1)                                   */
#define EMMC_EMMC_WUP_CTRL_R_REG_CARD_INSERT_Msk (0x2UL)            /*!< CARD_INSERT (Bitfield-Mask: 0x01)                     */
#define EMMC_EMMC_WUP_CTRL_R_REG_CARD_INT_Pos (0UL)                 /*!< CARD_INT (Bit 0)                                      */
#define EMMC_EMMC_WUP_CTRL_R_REG_CARD_INT_Msk (0x1UL)               /*!< CARD_INT (Bitfield-Mask: 0x01)                        */
/* =================================================  EMMC_XFER_MODE_R_REG  ================================================== */
#define EMMC_EMMC_XFER_MODE_R_REG_RESP_INT_DISABLE_Pos (8UL)        /*!< RESP_INT_DISABLE (Bit 8)                              */
#define EMMC_EMMC_XFER_MODE_R_REG_RESP_INT_DISABLE_Msk (0x100UL)    /*!< RESP_INT_DISABLE (Bitfield-Mask: 0x01)                */
#define EMMC_EMMC_XFER_MODE_R_REG_RESP_ERR_CHK_ENABLE_Pos (7UL)     /*!< RESP_ERR_CHK_ENABLE (Bit 7)                           */
#define EMMC_EMMC_XFER_MODE_R_REG_RESP_ERR_CHK_ENABLE_Msk (0x80UL)  /*!< RESP_ERR_CHK_ENABLE (Bitfield-Mask: 0x01)             */
#define EMMC_EMMC_XFER_MODE_R_REG_RESP_TYPE_Pos (6UL)               /*!< RESP_TYPE (Bit 6)                                     */
#define EMMC_EMMC_XFER_MODE_R_REG_RESP_TYPE_Msk (0x40UL)            /*!< RESP_TYPE (Bitfield-Mask: 0x01)                       */
#define EMMC_EMMC_XFER_MODE_R_REG_MULTI_BLK_SEL_Pos (5UL)           /*!< MULTI_BLK_SEL (Bit 5)                                 */
#define EMMC_EMMC_XFER_MODE_R_REG_MULTI_BLK_SEL_Msk (0x20UL)        /*!< MULTI_BLK_SEL (Bitfield-Mask: 0x01)                   */
#define EMMC_EMMC_XFER_MODE_R_REG_DATA_XFER_DIR_Pos (4UL)           /*!< DATA_XFER_DIR (Bit 4)                                 */
#define EMMC_EMMC_XFER_MODE_R_REG_DATA_XFER_DIR_Msk (0x10UL)        /*!< DATA_XFER_DIR (Bitfield-Mask: 0x01)                   */
#define EMMC_EMMC_XFER_MODE_R_REG_AUTO_CMD_ENABLE_Pos (2UL)         /*!< AUTO_CMD_ENABLE (Bit 2)                               */
#define EMMC_EMMC_XFER_MODE_R_REG_AUTO_CMD_ENABLE_Msk (0xcUL)       /*!< AUTO_CMD_ENABLE (Bitfield-Mask: 0x03)                 */
#define EMMC_EMMC_XFER_MODE_R_REG_BLOCK_COUNT_ENABLE_Pos (1UL)      /*!< BLOCK_COUNT_ENABLE (Bit 1)                            */
#define EMMC_EMMC_XFER_MODE_R_REG_BLOCK_COUNT_ENABLE_Msk (0x2UL)    /*!< BLOCK_COUNT_ENABLE (Bitfield-Mask: 0x01)              */
#define EMMC_EMMC_XFER_MODE_R_REG_DMA_EN_EMMC_Pos (0UL)             /*!< DMA_EN_EMMC (Bit 0)                                   */
#define EMMC_EMMC_XFER_MODE_R_REG_DMA_EN_EMMC_Msk (0x1UL)           /*!< DMA_EN_EMMC (Bitfield-Mask: 0x01)                     */


/* =========================================================================================================================== */
/* ================                                           GPADC                                           ================ */
/* =========================================================================================================================== */

/* =================================================  GP_ADC_CLEAR_INT_REG  ================================================== */
#define GPADC_GP_ADC_CLEAR_INT_REG_GP_ADC_CLR_INT_Pos (0UL)         /*!< GP_ADC_CLR_INT (Bit 0)                                */
#define GPADC_GP_ADC_CLEAR_INT_REG_GP_ADC_CLR_INT_Msk (0xffffUL)    /*!< GP_ADC_CLR_INT (Bitfield-Mask: 0xffff)                */
/* ===================================================  GP_ADC_CTRL2_REG  ==================================================== */
#define GPADC_GP_ADC_CTRL2_REG_GP_ADC_STORE_DEL_Pos (13UL)          /*!< GP_ADC_STORE_DEL (Bit 13)                             */
#define GPADC_GP_ADC_CTRL2_REG_GP_ADC_STORE_DEL_Msk (0xe000UL)      /*!< GP_ADC_STORE_DEL (Bitfield-Mask: 0x07)                */
#define GPADC_GP_ADC_CTRL2_REG_GP_ADC_SMPL_TIME_Pos (9UL)           /*!< GP_ADC_SMPL_TIME (Bit 9)                              */
#define GPADC_GP_ADC_CTRL2_REG_GP_ADC_SMPL_TIME_Msk (0x1e00UL)      /*!< GP_ADC_SMPL_TIME (Bitfield-Mask: 0x0f)                */
#define GPADC_GP_ADC_CTRL2_REG_GP_ADC_CONV_NRS_Pos (6UL)            /*!< GP_ADC_CONV_NRS (Bit 6)                               */
#define GPADC_GP_ADC_CTRL2_REG_GP_ADC_CONV_NRS_Msk (0x1c0UL)        /*!< GP_ADC_CONV_NRS (Bitfield-Mask: 0x07)                 */
#define GPADC_GP_ADC_CTRL2_REG_GP_ADC_I20U_Pos (2UL)                /*!< GP_ADC_I20U (Bit 2)                                   */
#define GPADC_GP_ADC_CTRL2_REG_GP_ADC_I20U_Msk (0x4UL)              /*!< GP_ADC_I20U (Bitfield-Mask: 0x01)                     */
#define GPADC_GP_ADC_CTRL2_REG_GP_ADC_ATTN_Pos (0UL)                /*!< GP_ADC_ATTN (Bit 0)                                   */
#define GPADC_GP_ADC_CTRL2_REG_GP_ADC_ATTN_Msk (0x3UL)              /*!< GP_ADC_ATTN (Bitfield-Mask: 0x03)                     */
/* ===================================================  GP_ADC_CTRL3_REG  ==================================================== */
#define GPADC_GP_ADC_CTRL3_REG_GP_ADC_INTERVAL_Pos (8UL)            /*!< GP_ADC_INTERVAL (Bit 8)                               */
#define GPADC_GP_ADC_CTRL3_REG_GP_ADC_INTERVAL_Msk (0xff00UL)       /*!< GP_ADC_INTERVAL (Bitfield-Mask: 0xff)                 */
#define GPADC_GP_ADC_CTRL3_REG_GP_ADC_EN_DEL_Pos (0UL)              /*!< GP_ADC_EN_DEL (Bit 0)                                 */
#define GPADC_GP_ADC_CTRL3_REG_GP_ADC_EN_DEL_Msk (0xffUL)           /*!< GP_ADC_EN_DEL (Bitfield-Mask: 0xff)                   */
/* ====================================================  GP_ADC_CTRL_REG  ==================================================== */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_RESULT_MODE_Pos (15UL)         /*!< GP_ADC_RESULT_MODE (Bit 15)                           */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_RESULT_MODE_Msk (0x18000UL)    /*!< GP_ADC_RESULT_MODE (Bitfield-Mask: 0x03)              */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_DIE_TEMP_EN_Pos (14UL)         /*!< GP_ADC_DIE_TEMP_EN (Bit 14)                           */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_DIE_TEMP_EN_Msk (0x4000UL)     /*!< GP_ADC_DIE_TEMP_EN (Bitfield-Mask: 0x01)              */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_DIFF_TEMP_SEL_Pos (12UL)       /*!< GP_ADC_DIFF_TEMP_SEL (Bit 12)                         */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_DIFF_TEMP_SEL_Msk (0x3000UL)   /*!< GP_ADC_DIFF_TEMP_SEL (Bitfield-Mask: 0x03)            */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_DIFF_TEMP_EN_Pos (11UL)        /*!< GP_ADC_DIFF_TEMP_EN (Bit 11)                          */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_DIFF_TEMP_EN_Msk (0x800UL)     /*!< GP_ADC_DIFF_TEMP_EN (Bitfield-Mask: 0x01)             */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_LDO_HOLD_Pos (10UL)            /*!< GP_ADC_LDO_HOLD (Bit 10)                              */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_LDO_HOLD_Msk (0x400UL)         /*!< GP_ADC_LDO_HOLD (Bitfield-Mask: 0x01)                 */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_CHOP_Pos (9UL)                 /*!< GP_ADC_CHOP (Bit 9)                                   */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_CHOP_Msk (0x200UL)             /*!< GP_ADC_CHOP (Bitfield-Mask: 0x01)                     */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_SIGN_Pos (8UL)                 /*!< GP_ADC_SIGN (Bit 8)                                   */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_SIGN_Msk (0x100UL)             /*!< GP_ADC_SIGN (Bitfield-Mask: 0x01)                     */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_MUTE_Pos (7UL)                 /*!< GP_ADC_MUTE (Bit 7)                                   */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_MUTE_Msk (0x80UL)              /*!< GP_ADC_MUTE (Bitfield-Mask: 0x01)                     */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_SE_Pos (6UL)                   /*!< GP_ADC_SE (Bit 6)                                     */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_SE_Msk (0x40UL)                /*!< GP_ADC_SE (Bitfield-Mask: 0x01)                       */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_MINT_Pos (5UL)                 /*!< GP_ADC_MINT (Bit 5)                                   */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_MINT_Msk (0x20UL)              /*!< GP_ADC_MINT (Bitfield-Mask: 0x01)                     */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_INT_Pos (4UL)                  /*!< GP_ADC_INT (Bit 4)                                    */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_INT_Msk (0x10UL)               /*!< GP_ADC_INT (Bitfield-Mask: 0x01)                      */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_DMA_EN_Pos (3UL)               /*!< GP_ADC_DMA_EN (Bit 3)                                 */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_DMA_EN_Msk (0x8UL)             /*!< GP_ADC_DMA_EN (Bitfield-Mask: 0x01)                   */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_CONT_Pos (2UL)                 /*!< GP_ADC_CONT (Bit 2)                                   */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_CONT_Msk (0x4UL)               /*!< GP_ADC_CONT (Bitfield-Mask: 0x01)                     */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_START_Pos (1UL)                /*!< GP_ADC_START (Bit 1)                                  */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_START_Msk (0x2UL)              /*!< GP_ADC_START (Bitfield-Mask: 0x01)                    */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_EN_Pos (0UL)                   /*!< GP_ADC_EN (Bit 0)                                     */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_EN_Msk (0x1UL)                 /*!< GP_ADC_EN (Bitfield-Mask: 0x01)                       */
/* ====================================================  GP_ADC_OFFN_REG  ==================================================== */
#define GPADC_GP_ADC_OFFN_REG_GP_ADC_OFFN_Pos (0UL)                 /*!< GP_ADC_OFFN (Bit 0)                                   */
#define GPADC_GP_ADC_OFFN_REG_GP_ADC_OFFN_Msk (0x3ffUL)             /*!< GP_ADC_OFFN (Bitfield-Mask: 0x3ff)                    */
/* ====================================================  GP_ADC_OFFP_REG  ==================================================== */
#define GPADC_GP_ADC_OFFP_REG_GP_ADC_OFFP_Pos (0UL)                 /*!< GP_ADC_OFFP (Bit 0)                                   */
#define GPADC_GP_ADC_OFFP_REG_GP_ADC_OFFP_Msk (0x3ffUL)             /*!< GP_ADC_OFFP (Bitfield-Mask: 0x3ff)                    */
/* ===================================================  GP_ADC_RESULT_REG  =================================================== */
#define GPADC_GP_ADC_RESULT_REG_GP_ADC_VAL_Pos (0UL)                /*!< GP_ADC_VAL (Bit 0)                                    */
#define GPADC_GP_ADC_RESULT_REG_GP_ADC_VAL_Msk (0xffffUL)           /*!< GP_ADC_VAL (Bitfield-Mask: 0xffff)                    */
/* ====================================================  GP_ADC_SEL_REG  ===================================================== */
#define GPADC_GP_ADC_SEL_REG_GP_ADC_SEL_MUX2_Pos (11UL)             /*!< GP_ADC_SEL_MUX2 (Bit 11)                              */
#define GPADC_GP_ADC_SEL_REG_GP_ADC_SEL_MUX2_Msk (0x3800UL)         /*!< GP_ADC_SEL_MUX2 (Bitfield-Mask: 0x07)                 */
#define GPADC_GP_ADC_SEL_REG_GP_ADC_SEL_MUX1_Pos (8UL)              /*!< GP_ADC_SEL_MUX1 (Bit 8)                               */
#define GPADC_GP_ADC_SEL_REG_GP_ADC_SEL_MUX1_Msk (0x700UL)          /*!< GP_ADC_SEL_MUX1 (Bitfield-Mask: 0x07)                 */
#define GPADC_GP_ADC_SEL_REG_GP_ADC_SEL_P_Pos (4UL)                 /*!< GP_ADC_SEL_P (Bit 4)                                  */
#define GPADC_GP_ADC_SEL_REG_GP_ADC_SEL_P_Msk (0x70UL)              /*!< GP_ADC_SEL_P (Bitfield-Mask: 0x07)                    */
#define GPADC_GP_ADC_SEL_REG_GP_ADC_SEL_N_Pos (0UL)                 /*!< GP_ADC_SEL_N (Bit 0)                                  */
#define GPADC_GP_ADC_SEL_REG_GP_ADC_SEL_N_Msk (0x7UL)               /*!< GP_ADC_SEL_N (Bitfield-Mask: 0x07)                    */
/* ====================================================  GP_ADC_TRIM_REG  ==================================================== */
#define GPADC_GP_ADC_TRIM_REG_GP_ADC_LDO_LEVEL_Pos (0UL)            /*!< GP_ADC_LDO_LEVEL (Bit 0)                              */
#define GPADC_GP_ADC_TRIM_REG_GP_ADC_LDO_LEVEL_Msk (0x7UL)          /*!< GP_ADC_LDO_LEVEL (Bitfield-Mask: 0x07)                */


/* =========================================================================================================================== */
/* ================                                           GPIO                                            ================ */
/* =========================================================================================================================== */

/* ===================================================  GPIO_CLK_SEL_REG  ==================================================== */
#define GPIO_GPIO_CLK_SEL_REG_DIVN_OUTPUT_EN_Pos (9UL)              /*!< DIVN_OUTPUT_EN (Bit 9)                                */
#define GPIO_GPIO_CLK_SEL_REG_DIVN_OUTPUT_EN_Msk (0x200UL)          /*!< DIVN_OUTPUT_EN (Bitfield-Mask: 0x01)                  */
#define GPIO_GPIO_CLK_SEL_REG_XTAL32M_OUTPUT_EN_Pos (7UL)           /*!< XTAL32M_OUTPUT_EN (Bit 7)                             */
#define GPIO_GPIO_CLK_SEL_REG_XTAL32M_OUTPUT_EN_Msk (0x80UL)        /*!< XTAL32M_OUTPUT_EN (Bitfield-Mask: 0x01)               */
#define GPIO_GPIO_CLK_SEL_REG_RCX_OUTPUT_EN_Pos (6UL)               /*!< RCX_OUTPUT_EN (Bit 6)                                 */
#define GPIO_GPIO_CLK_SEL_REG_RCX_OUTPUT_EN_Msk (0x40UL)            /*!< RCX_OUTPUT_EN (Bitfield-Mask: 0x01)                   */
#define GPIO_GPIO_CLK_SEL_REG_RCLP_OUTPUT_EN_Pos (5UL)              /*!< RCLP_OUTPUT_EN (Bit 5)                                */
#define GPIO_GPIO_CLK_SEL_REG_RCLP_OUTPUT_EN_Msk (0x20UL)           /*!< RCLP_OUTPUT_EN (Bitfield-Mask: 0x01)                  */
#define GPIO_GPIO_CLK_SEL_REG_XTAL32K_OUTPUT_EN_Pos (4UL)           /*!< XTAL32K_OUTPUT_EN (Bit 4)                             */
#define GPIO_GPIO_CLK_SEL_REG_XTAL32K_OUTPUT_EN_Msk (0x10UL)        /*!< XTAL32K_OUTPUT_EN (Bitfield-Mask: 0x01)               */
#define GPIO_GPIO_CLK_SEL_REG_FUNC_CLOCK_EN_Pos (3UL)               /*!< FUNC_CLOCK_EN (Bit 3)                                 */
#define GPIO_GPIO_CLK_SEL_REG_FUNC_CLOCK_EN_Msk (0x8UL)             /*!< FUNC_CLOCK_EN (Bitfield-Mask: 0x01)                   */
#define GPIO_GPIO_CLK_SEL_REG_FUNC_CLOCK_SEL_Pos (0UL)              /*!< FUNC_CLOCK_SEL (Bit 0)                                */
#define GPIO_GPIO_CLK_SEL_REG_FUNC_CLOCK_SEL_Msk (0x7UL)            /*!< FUNC_CLOCK_SEL (Bitfield-Mask: 0x07)                  */
/* ===================================================  LCDC_MAP_CTRL_REG  =================================================== */
#define GPIO_LCDC_MAP_CTRL_REG_MAP_ON_P1_07_EN_Pos (14UL)           /*!< MAP_ON_P1_07_EN (Bit 14)                              */
#define GPIO_LCDC_MAP_CTRL_REG_MAP_ON_P1_07_EN_Msk (0x4000UL)       /*!< MAP_ON_P1_07_EN (Bitfield-Mask: 0x01)                 */
#define GPIO_LCDC_MAP_CTRL_REG_MAP_ON_P1_01_EN_Pos (13UL)           /*!< MAP_ON_P1_01_EN (Bit 13)                              */
#define GPIO_LCDC_MAP_CTRL_REG_MAP_ON_P1_01_EN_Msk (0x2000UL)       /*!< MAP_ON_P1_01_EN (Bitfield-Mask: 0x01)                 */
#define GPIO_LCDC_MAP_CTRL_REG_MAP_ON_P1_00_EN_Pos (12UL)           /*!< MAP_ON_P1_00_EN (Bit 12)                              */
#define GPIO_LCDC_MAP_CTRL_REG_MAP_ON_P1_00_EN_Msk (0x1000UL)       /*!< MAP_ON_P1_00_EN (Bitfield-Mask: 0x01)                 */
#define GPIO_LCDC_MAP_CTRL_REG_MAP_ON_P0_24_EN_Pos (11UL)           /*!< MAP_ON_P0_24_EN (Bit 11)                              */
#define GPIO_LCDC_MAP_CTRL_REG_MAP_ON_P0_24_EN_Msk (0x800UL)        /*!< MAP_ON_P0_24_EN (Bitfield-Mask: 0x01)                 */
#define GPIO_LCDC_MAP_CTRL_REG_MAP_ON_P0_23_EN_Pos (10UL)           /*!< MAP_ON_P0_23_EN (Bit 10)                              */
#define GPIO_LCDC_MAP_CTRL_REG_MAP_ON_P0_23_EN_Msk (0x400UL)        /*!< MAP_ON_P0_23_EN (Bitfield-Mask: 0x01)                 */
#define GPIO_LCDC_MAP_CTRL_REG_MAP_ON_P0_22_EN_Pos (9UL)            /*!< MAP_ON_P0_22_EN (Bit 9)                               */
#define GPIO_LCDC_MAP_CTRL_REG_MAP_ON_P0_22_EN_Msk (0x200UL)        /*!< MAP_ON_P0_22_EN (Bitfield-Mask: 0x01)                 */
#define GPIO_LCDC_MAP_CTRL_REG_MAP_ON_P0_21_EN_Pos (8UL)            /*!< MAP_ON_P0_21_EN (Bit 8)                               */
#define GPIO_LCDC_MAP_CTRL_REG_MAP_ON_P0_21_EN_Msk (0x100UL)        /*!< MAP_ON_P0_21_EN (Bitfield-Mask: 0x01)                 */
#define GPIO_LCDC_MAP_CTRL_REG_MAP_ON_P0_19_EN_Pos (7UL)            /*!< MAP_ON_P0_19_EN (Bit 7)                               */
#define GPIO_LCDC_MAP_CTRL_REG_MAP_ON_P0_19_EN_Msk (0x80UL)         /*!< MAP_ON_P0_19_EN (Bitfield-Mask: 0x01)                 */
#define GPIO_LCDC_MAP_CTRL_REG_MAP_ON_P0_18_EN_Pos (6UL)            /*!< MAP_ON_P0_18_EN (Bit 6)                               */
#define GPIO_LCDC_MAP_CTRL_REG_MAP_ON_P0_18_EN_Msk (0x40UL)         /*!< MAP_ON_P0_18_EN (Bitfield-Mask: 0x01)                 */
#define GPIO_LCDC_MAP_CTRL_REG_MAP_ON_P0_17_EN_Pos (5UL)            /*!< MAP_ON_P0_17_EN (Bit 5)                               */
#define GPIO_LCDC_MAP_CTRL_REG_MAP_ON_P0_17_EN_Msk (0x20UL)         /*!< MAP_ON_P0_17_EN (Bitfield-Mask: 0x01)                 */
#define GPIO_LCDC_MAP_CTRL_REG_MAP_ON_P0_16_EN_Pos (4UL)            /*!< MAP_ON_P0_16_EN (Bit 4)                               */
#define GPIO_LCDC_MAP_CTRL_REG_MAP_ON_P0_16_EN_Msk (0x10UL)         /*!< MAP_ON_P0_16_EN (Bitfield-Mask: 0x01)                 */
#define GPIO_LCDC_MAP_CTRL_REG_MAP_ON_P0_15_EN_Pos (3UL)            /*!< MAP_ON_P0_15_EN (Bit 3)                               */
#define GPIO_LCDC_MAP_CTRL_REG_MAP_ON_P0_15_EN_Msk (0x8UL)          /*!< MAP_ON_P0_15_EN (Bitfield-Mask: 0x01)                 */
#define GPIO_LCDC_MAP_CTRL_REG_MAP_ON_P0_14_EN_Pos (2UL)            /*!< MAP_ON_P0_14_EN (Bit 2)                               */
#define GPIO_LCDC_MAP_CTRL_REG_MAP_ON_P0_14_EN_Msk (0x4UL)          /*!< MAP_ON_P0_14_EN (Bitfield-Mask: 0x01)                 */
#define GPIO_LCDC_MAP_CTRL_REG_MAP_ON_P0_10_EN_Pos (1UL)            /*!< MAP_ON_P0_10_EN (Bit 1)                               */
#define GPIO_LCDC_MAP_CTRL_REG_MAP_ON_P0_10_EN_Msk (0x2UL)          /*!< MAP_ON_P0_10_EN (Bitfield-Mask: 0x01)                 */
#define GPIO_LCDC_MAP_CTRL_REG_MAP_ON_P0_09_EN_Pos (0UL)            /*!< MAP_ON_P0_09_EN (Bit 0)                               */
#define GPIO_LCDC_MAP_CTRL_REG_MAP_ON_P0_09_EN_Msk (0x1UL)          /*!< MAP_ON_P0_09_EN (Bitfield-Mask: 0x01)                 */
/* ====================================================  P0_00_MODE_REG  ===================================================== */
#define GPIO_P0_00_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P0_00_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P0_00_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P0_00_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P0_00_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P0_00_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P0_01_MODE_REG  ===================================================== */
#define GPIO_P0_01_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P0_01_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P0_01_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P0_01_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P0_01_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P0_01_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P0_02_MODE_REG  ===================================================== */
#define GPIO_P0_02_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P0_02_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P0_02_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P0_02_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P0_02_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P0_02_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P0_03_MODE_REG  ===================================================== */
#define GPIO_P0_03_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P0_03_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P0_03_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P0_03_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P0_03_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P0_03_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P0_04_MODE_REG  ===================================================== */
#define GPIO_P0_04_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P0_04_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P0_04_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P0_04_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P0_04_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P0_04_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P0_05_MODE_REG  ===================================================== */
#define GPIO_P0_05_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P0_05_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P0_05_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P0_05_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P0_05_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P0_05_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P0_06_MODE_REG  ===================================================== */
#define GPIO_P0_06_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P0_06_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P0_06_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P0_06_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P0_06_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P0_06_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P0_07_MODE_REG  ===================================================== */
#define GPIO_P0_07_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P0_07_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P0_07_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P0_07_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P0_07_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P0_07_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P0_08_MODE_REG  ===================================================== */
#define GPIO_P0_08_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P0_08_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P0_08_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P0_08_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P0_08_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P0_08_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P0_09_MODE_REG  ===================================================== */
#define GPIO_P0_09_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P0_09_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P0_09_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P0_09_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P0_09_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P0_09_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P0_10_MODE_REG  ===================================================== */
#define GPIO_P0_10_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P0_10_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P0_10_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P0_10_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P0_10_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P0_10_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P0_11_MODE_REG  ===================================================== */
#define GPIO_P0_11_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P0_11_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P0_11_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P0_11_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P0_11_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P0_11_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P0_12_MODE_REG  ===================================================== */
#define GPIO_P0_12_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P0_12_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P0_12_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P0_12_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P0_12_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P0_12_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P0_13_MODE_REG  ===================================================== */
#define GPIO_P0_13_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P0_13_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P0_13_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P0_13_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P0_13_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P0_13_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P0_14_MODE_REG  ===================================================== */
#define GPIO_P0_14_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P0_14_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P0_14_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P0_14_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P0_14_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P0_14_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P0_15_MODE_REG  ===================================================== */
#define GPIO_P0_15_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P0_15_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P0_15_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P0_15_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P0_15_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P0_15_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P0_16_MODE_REG  ===================================================== */
#define GPIO_P0_16_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P0_16_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P0_16_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P0_16_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P0_16_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P0_16_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P0_17_MODE_REG  ===================================================== */
#define GPIO_P0_17_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P0_17_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P0_17_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P0_17_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P0_17_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P0_17_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P0_18_MODE_REG  ===================================================== */
#define GPIO_P0_18_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P0_18_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P0_18_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P0_18_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P0_18_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P0_18_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P0_19_MODE_REG  ===================================================== */
#define GPIO_P0_19_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P0_19_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P0_19_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P0_19_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P0_19_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P0_19_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P0_20_MODE_REG  ===================================================== */
#define GPIO_P0_20_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P0_20_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P0_20_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P0_20_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P0_20_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P0_20_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P0_21_MODE_REG  ===================================================== */
#define GPIO_P0_21_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P0_21_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P0_21_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P0_21_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P0_21_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P0_21_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P0_22_MODE_REG  ===================================================== */
#define GPIO_P0_22_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P0_22_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P0_22_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P0_22_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P0_22_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P0_22_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P0_23_MODE_REG  ===================================================== */
#define GPIO_P0_23_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P0_23_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P0_23_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P0_23_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P0_23_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P0_23_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P0_24_MODE_REG  ===================================================== */
#define GPIO_P0_24_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P0_24_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P0_24_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P0_24_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P0_24_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P0_24_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P0_25_MODE_REG  ===================================================== */
#define GPIO_P0_25_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P0_25_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P0_25_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P0_25_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P0_25_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P0_25_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P0_26_MODE_REG  ===================================================== */
#define GPIO_P0_26_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P0_26_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P0_26_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P0_26_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P0_26_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P0_26_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P0_27_MODE_REG  ===================================================== */
#define GPIO_P0_27_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P0_27_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P0_27_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P0_27_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P0_27_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P0_27_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P0_28_MODE_REG  ===================================================== */
#define GPIO_P0_28_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P0_28_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P0_28_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P0_28_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P0_28_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P0_28_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P0_29_MODE_REG  ===================================================== */
#define GPIO_P0_29_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P0_29_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P0_29_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P0_29_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P0_29_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P0_29_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P0_30_MODE_REG  ===================================================== */
#define GPIO_P0_30_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P0_30_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P0_30_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P0_30_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P0_30_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P0_30_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P0_31_MODE_REG  ===================================================== */
#define GPIO_P0_31_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P0_31_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P0_31_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P0_31_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P0_31_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P0_31_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ======================================================  P0_DATA_REG  ====================================================== */
#define GPIO_P0_DATA_REG_P0_DATA_Pos      (0UL)                     /*!< P0_DATA (Bit 0)                                       */
#define GPIO_P0_DATA_REG_P0_DATA_Msk      (0xffffffffUL)            /*!< P0_DATA (Bitfield-Mask: 0xffffffff)                   */
/* ==================================================  P0_PADPWR_CTRL_REG  =================================================== */
#define GPIO_P0_PADPWR_CTRL_REG_P0_31_OUT_CTRL_Pos (31UL)           /*!< P0_31_OUT_CTRL (Bit 31)                               */
#define GPIO_P0_PADPWR_CTRL_REG_P0_31_OUT_CTRL_Msk (0x80000000UL)   /*!< P0_31_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P0_PADPWR_CTRL_REG_P0_30_OUT_CTRL_Pos (30UL)           /*!< P0_30_OUT_CTRL (Bit 30)                               */
#define GPIO_P0_PADPWR_CTRL_REG_P0_30_OUT_CTRL_Msk (0x40000000UL)   /*!< P0_30_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P0_PADPWR_CTRL_REG_P0_29_OUT_CTRL_Pos (29UL)           /*!< P0_29_OUT_CTRL (Bit 29)                               */
#define GPIO_P0_PADPWR_CTRL_REG_P0_29_OUT_CTRL_Msk (0x20000000UL)   /*!< P0_29_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P0_PADPWR_CTRL_REG_P0_28_OUT_CTRL_Pos (28UL)           /*!< P0_28_OUT_CTRL (Bit 28)                               */
#define GPIO_P0_PADPWR_CTRL_REG_P0_28_OUT_CTRL_Msk (0x10000000UL)   /*!< P0_28_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P0_PADPWR_CTRL_REG_P0_27_OUT_CTRL_Pos (27UL)           /*!< P0_27_OUT_CTRL (Bit 27)                               */
#define GPIO_P0_PADPWR_CTRL_REG_P0_27_OUT_CTRL_Msk (0x8000000UL)    /*!< P0_27_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P0_PADPWR_CTRL_REG_P0_24_OUT_CTRL_Pos (24UL)           /*!< P0_24_OUT_CTRL (Bit 24)                               */
#define GPIO_P0_PADPWR_CTRL_REG_P0_24_OUT_CTRL_Msk (0x1000000UL)    /*!< P0_24_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P0_PADPWR_CTRL_REG_P0_23_OUT_CTRL_Pos (23UL)           /*!< P0_23_OUT_CTRL (Bit 23)                               */
#define GPIO_P0_PADPWR_CTRL_REG_P0_23_OUT_CTRL_Msk (0x800000UL)     /*!< P0_23_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P0_PADPWR_CTRL_REG_P0_22_OUT_CTRL_Pos (22UL)           /*!< P0_22_OUT_CTRL (Bit 22)                               */
#define GPIO_P0_PADPWR_CTRL_REG_P0_22_OUT_CTRL_Msk (0x400000UL)     /*!< P0_22_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P0_PADPWR_CTRL_REG_P0_21_OUT_CTRL_Pos (21UL)           /*!< P0_21_OUT_CTRL (Bit 21)                               */
#define GPIO_P0_PADPWR_CTRL_REG_P0_21_OUT_CTRL_Msk (0x200000UL)     /*!< P0_21_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P0_PADPWR_CTRL_REG_P0_20_OUT_CTRL_Pos (20UL)           /*!< P0_20_OUT_CTRL (Bit 20)                               */
#define GPIO_P0_PADPWR_CTRL_REG_P0_20_OUT_CTRL_Msk (0x100000UL)     /*!< P0_20_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P0_PADPWR_CTRL_REG_P0_19_OUT_CTRL_Pos (19UL)           /*!< P0_19_OUT_CTRL (Bit 19)                               */
#define GPIO_P0_PADPWR_CTRL_REG_P0_19_OUT_CTRL_Msk (0x80000UL)      /*!< P0_19_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P0_PADPWR_CTRL_REG_P0_18_OUT_CTRL_Pos (18UL)           /*!< P0_18_OUT_CTRL (Bit 18)                               */
#define GPIO_P0_PADPWR_CTRL_REG_P0_18_OUT_CTRL_Msk (0x40000UL)      /*!< P0_18_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P0_PADPWR_CTRL_REG_P0_17_OUT_CTRL_Pos (17UL)           /*!< P0_17_OUT_CTRL (Bit 17)                               */
#define GPIO_P0_PADPWR_CTRL_REG_P0_17_OUT_CTRL_Msk (0x20000UL)      /*!< P0_17_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P0_PADPWR_CTRL_REG_P0_16_OUT_CTRL_Pos (16UL)           /*!< P0_16_OUT_CTRL (Bit 16)                               */
#define GPIO_P0_PADPWR_CTRL_REG_P0_16_OUT_CTRL_Msk (0x10000UL)      /*!< P0_16_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P0_PADPWR_CTRL_REG_P0_15_OUT_CTRL_Pos (15UL)           /*!< P0_15_OUT_CTRL (Bit 15)                               */
#define GPIO_P0_PADPWR_CTRL_REG_P0_15_OUT_CTRL_Msk (0x8000UL)       /*!< P0_15_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P0_PADPWR_CTRL_REG_P0_14_OUT_CTRL_Pos (14UL)           /*!< P0_14_OUT_CTRL (Bit 14)                               */
#define GPIO_P0_PADPWR_CTRL_REG_P0_14_OUT_CTRL_Msk (0x4000UL)       /*!< P0_14_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P0_PADPWR_CTRL_REG_P0_11_OUT_CTRL_Pos (11UL)           /*!< P0_11_OUT_CTRL (Bit 11)                               */
#define GPIO_P0_PADPWR_CTRL_REG_P0_11_OUT_CTRL_Msk (0x800UL)        /*!< P0_11_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P0_PADPWR_CTRL_REG_P0_10_OUT_CTRL_Pos (10UL)           /*!< P0_10_OUT_CTRL (Bit 10)                               */
#define GPIO_P0_PADPWR_CTRL_REG_P0_10_OUT_CTRL_Msk (0x400UL)        /*!< P0_10_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P0_PADPWR_CTRL_REG_P0_09_OUT_CTRL_Pos (9UL)            /*!< P0_09_OUT_CTRL (Bit 9)                                */
#define GPIO_P0_PADPWR_CTRL_REG_P0_09_OUT_CTRL_Msk (0x200UL)        /*!< P0_09_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P0_PADPWR_CTRL_REG_P0_08_OUT_CTRL_Pos (8UL)            /*!< P0_08_OUT_CTRL (Bit 8)                                */
#define GPIO_P0_PADPWR_CTRL_REG_P0_08_OUT_CTRL_Msk (0x100UL)        /*!< P0_08_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P0_PADPWR_CTRL_REG_P0_07_OUT_CTRL_Pos (7UL)            /*!< P0_07_OUT_CTRL (Bit 7)                                */
#define GPIO_P0_PADPWR_CTRL_REG_P0_07_OUT_CTRL_Msk (0x80UL)         /*!< P0_07_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P0_PADPWR_CTRL_REG_P0_06_OUT_CTRL_Pos (6UL)            /*!< P0_06_OUT_CTRL (Bit 6)                                */
#define GPIO_P0_PADPWR_CTRL_REG_P0_06_OUT_CTRL_Msk (0x40UL)         /*!< P0_06_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P0_PADPWR_CTRL_REG_P0_05_OUT_CTRL_Pos (5UL)            /*!< P0_05_OUT_CTRL (Bit 5)                                */
#define GPIO_P0_PADPWR_CTRL_REG_P0_05_OUT_CTRL_Msk (0x20UL)         /*!< P0_05_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P0_PADPWR_CTRL_REG_P0_04_OUT_CTRL_Pos (4UL)            /*!< P0_04_OUT_CTRL (Bit 4)                                */
#define GPIO_P0_PADPWR_CTRL_REG_P0_04_OUT_CTRL_Msk (0x10UL)         /*!< P0_04_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P0_PADPWR_CTRL_REG_P0_03_OUT_CTRL_Pos (3UL)            /*!< P0_03_OUT_CTRL (Bit 3)                                */
#define GPIO_P0_PADPWR_CTRL_REG_P0_03_OUT_CTRL_Msk (0x8UL)          /*!< P0_03_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P0_PADPWR_CTRL_REG_P0_02_OUT_CTRL_Pos (2UL)            /*!< P0_02_OUT_CTRL (Bit 2)                                */
#define GPIO_P0_PADPWR_CTRL_REG_P0_02_OUT_CTRL_Msk (0x4UL)          /*!< P0_02_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P0_PADPWR_CTRL_REG_P0_01_OUT_CTRL_Pos (1UL)            /*!< P0_01_OUT_CTRL (Bit 1)                                */
#define GPIO_P0_PADPWR_CTRL_REG_P0_01_OUT_CTRL_Msk (0x2UL)          /*!< P0_01_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P0_PADPWR_CTRL_REG_P0_00_OUT_CTRL_Pos (0UL)            /*!< P0_00_OUT_CTRL (Bit 0)                                */
#define GPIO_P0_PADPWR_CTRL_REG_P0_00_OUT_CTRL_Msk (0x1UL)          /*!< P0_00_OUT_CTRL (Bitfield-Mask: 0x01)                  */
/* ===================================================  P0_RESET_DATA_REG  =================================================== */
#define GPIO_P0_RESET_DATA_REG_P0_RESET_Pos (0UL)                   /*!< P0_RESET (Bit 0)                                      */
#define GPIO_P0_RESET_DATA_REG_P0_RESET_Msk (0xffffffffUL)          /*!< P0_RESET (Bitfield-Mask: 0xffffffff)                  */
/* ====================================================  P0_SET_DATA_REG  ==================================================== */
#define GPIO_P0_SET_DATA_REG_P0_SET_Pos   (0UL)                     /*!< P0_SET (Bit 0)                                        */
#define GPIO_P0_SET_DATA_REG_P0_SET_Msk   (0xffffffffUL)            /*!< P0_SET (Bitfield-Mask: 0xffffffff)                    */
/* ===================================================  P0_WEAK_CTRL_REG  ==================================================== */
#define GPIO_P0_WEAK_CTRL_REG_P0_31_LOWDRV_Pos (31UL)               /*!< P0_31_LOWDRV (Bit 31)                                 */
#define GPIO_P0_WEAK_CTRL_REG_P0_31_LOWDRV_Msk (0x80000000UL)       /*!< P0_31_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P0_WEAK_CTRL_REG_P0_30_LOWDRV_Pos (30UL)               /*!< P0_30_LOWDRV (Bit 30)                                 */
#define GPIO_P0_WEAK_CTRL_REG_P0_30_LOWDRV_Msk (0x40000000UL)       /*!< P0_30_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P0_WEAK_CTRL_REG_P0_29_LOWDRV_Pos (29UL)               /*!< P0_29_LOWDRV (Bit 29)                                 */
#define GPIO_P0_WEAK_CTRL_REG_P0_29_LOWDRV_Msk (0x20000000UL)       /*!< P0_29_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P0_WEAK_CTRL_REG_P0_28_LOWDRV_Pos (28UL)               /*!< P0_28_LOWDRV (Bit 28)                                 */
#define GPIO_P0_WEAK_CTRL_REG_P0_28_LOWDRV_Msk (0x10000000UL)       /*!< P0_28_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P0_WEAK_CTRL_REG_P0_27_LOWDRV_Pos (27UL)               /*!< P0_27_LOWDRV (Bit 27)                                 */
#define GPIO_P0_WEAK_CTRL_REG_P0_27_LOWDRV_Msk (0x8000000UL)        /*!< P0_27_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P0_WEAK_CTRL_REG_P0_24_LOWDRV_Pos (24UL)               /*!< P0_24_LOWDRV (Bit 24)                                 */
#define GPIO_P0_WEAK_CTRL_REG_P0_24_LOWDRV_Msk (0x1000000UL)        /*!< P0_24_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P0_WEAK_CTRL_REG_P0_23_LOWDRV_Pos (23UL)               /*!< P0_23_LOWDRV (Bit 23)                                 */
#define GPIO_P0_WEAK_CTRL_REG_P0_23_LOWDRV_Msk (0x800000UL)         /*!< P0_23_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P0_WEAK_CTRL_REG_P0_22_LOWDRV_Pos (22UL)               /*!< P0_22_LOWDRV (Bit 22)                                 */
#define GPIO_P0_WEAK_CTRL_REG_P0_22_LOWDRV_Msk (0x400000UL)         /*!< P0_22_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P0_WEAK_CTRL_REG_P0_21_LOWDRV_Pos (21UL)               /*!< P0_21_LOWDRV (Bit 21)                                 */
#define GPIO_P0_WEAK_CTRL_REG_P0_21_LOWDRV_Msk (0x200000UL)         /*!< P0_21_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P0_WEAK_CTRL_REG_P0_20_LOWDRV_Pos (20UL)               /*!< P0_20_LOWDRV (Bit 20)                                 */
#define GPIO_P0_WEAK_CTRL_REG_P0_20_LOWDRV_Msk (0x100000UL)         /*!< P0_20_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P0_WEAK_CTRL_REG_P0_19_LOWDRV_Pos (19UL)               /*!< P0_19_LOWDRV (Bit 19)                                 */
#define GPIO_P0_WEAK_CTRL_REG_P0_19_LOWDRV_Msk (0x80000UL)          /*!< P0_19_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P0_WEAK_CTRL_REG_P0_18_LOWDRV_Pos (18UL)               /*!< P0_18_LOWDRV (Bit 18)                                 */
#define GPIO_P0_WEAK_CTRL_REG_P0_18_LOWDRV_Msk (0x40000UL)          /*!< P0_18_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P0_WEAK_CTRL_REG_P0_17_LOWDRV_Pos (17UL)               /*!< P0_17_LOWDRV (Bit 17)                                 */
#define GPIO_P0_WEAK_CTRL_REG_P0_17_LOWDRV_Msk (0x20000UL)          /*!< P0_17_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P0_WEAK_CTRL_REG_P0_16_LOWDRV_Pos (16UL)               /*!< P0_16_LOWDRV (Bit 16)                                 */
#define GPIO_P0_WEAK_CTRL_REG_P0_16_LOWDRV_Msk (0x10000UL)          /*!< P0_16_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P0_WEAK_CTRL_REG_P0_15_LOWDRV_Pos (15UL)               /*!< P0_15_LOWDRV (Bit 15)                                 */
#define GPIO_P0_WEAK_CTRL_REG_P0_15_LOWDRV_Msk (0x8000UL)           /*!< P0_15_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P0_WEAK_CTRL_REG_P0_14_LOWDRV_Pos (14UL)               /*!< P0_14_LOWDRV (Bit 14)                                 */
#define GPIO_P0_WEAK_CTRL_REG_P0_14_LOWDRV_Msk (0x4000UL)           /*!< P0_14_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P0_WEAK_CTRL_REG_P0_11_LOWDRV_Pos (11UL)               /*!< P0_11_LOWDRV (Bit 11)                                 */
#define GPIO_P0_WEAK_CTRL_REG_P0_11_LOWDRV_Msk (0x800UL)            /*!< P0_11_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P0_WEAK_CTRL_REG_P0_10_LOWDRV_Pos (10UL)               /*!< P0_10_LOWDRV (Bit 10)                                 */
#define GPIO_P0_WEAK_CTRL_REG_P0_10_LOWDRV_Msk (0x400UL)            /*!< P0_10_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P0_WEAK_CTRL_REG_P0_09_LOWDRV_Pos (9UL)                /*!< P0_09_LOWDRV (Bit 9)                                  */
#define GPIO_P0_WEAK_CTRL_REG_P0_09_LOWDRV_Msk (0x200UL)            /*!< P0_09_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P0_WEAK_CTRL_REG_P0_08_LOWDRV_Pos (8UL)                /*!< P0_08_LOWDRV (Bit 8)                                  */
#define GPIO_P0_WEAK_CTRL_REG_P0_08_LOWDRV_Msk (0x100UL)            /*!< P0_08_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P0_WEAK_CTRL_REG_P0_07_LOWDRV_Pos (7UL)                /*!< P0_07_LOWDRV (Bit 7)                                  */
#define GPIO_P0_WEAK_CTRL_REG_P0_07_LOWDRV_Msk (0x80UL)             /*!< P0_07_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P0_WEAK_CTRL_REG_P0_06_LOWDRV_Pos (6UL)                /*!< P0_06_LOWDRV (Bit 6)                                  */
#define GPIO_P0_WEAK_CTRL_REG_P0_06_LOWDRV_Msk (0x40UL)             /*!< P0_06_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P0_WEAK_CTRL_REG_P0_05_LOWDRV_Pos (5UL)                /*!< P0_05_LOWDRV (Bit 5)                                  */
#define GPIO_P0_WEAK_CTRL_REG_P0_05_LOWDRV_Msk (0x20UL)             /*!< P0_05_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P0_WEAK_CTRL_REG_P0_04_LOWDRV_Pos (4UL)                /*!< P0_04_LOWDRV (Bit 4)                                  */
#define GPIO_P0_WEAK_CTRL_REG_P0_04_LOWDRV_Msk (0x10UL)             /*!< P0_04_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P0_WEAK_CTRL_REG_P0_03_LOWDRV_Pos (3UL)                /*!< P0_03_LOWDRV (Bit 3)                                  */
#define GPIO_P0_WEAK_CTRL_REG_P0_03_LOWDRV_Msk (0x8UL)              /*!< P0_03_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P0_WEAK_CTRL_REG_P0_02_LOWDRV_Pos (2UL)                /*!< P0_02_LOWDRV (Bit 2)                                  */
#define GPIO_P0_WEAK_CTRL_REG_P0_02_LOWDRV_Msk (0x4UL)              /*!< P0_02_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P0_WEAK_CTRL_REG_P0_01_LOWDRV_Pos (1UL)                /*!< P0_01_LOWDRV (Bit 1)                                  */
#define GPIO_P0_WEAK_CTRL_REG_P0_01_LOWDRV_Msk (0x2UL)              /*!< P0_01_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P0_WEAK_CTRL_REG_P0_00_LOWDRV_Pos (0UL)                /*!< P0_00_LOWDRV (Bit 0)                                  */
#define GPIO_P0_WEAK_CTRL_REG_P0_00_LOWDRV_Msk (0x1UL)              /*!< P0_00_LOWDRV (Bitfield-Mask: 0x01)                    */
/* ====================================================  P1_00_MODE_REG  ===================================================== */
#define GPIO_P1_00_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P1_00_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P1_00_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P1_00_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P1_00_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P1_00_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P1_01_MODE_REG  ===================================================== */
#define GPIO_P1_01_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P1_01_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P1_01_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P1_01_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P1_01_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P1_01_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P1_02_MODE_REG  ===================================================== */
#define GPIO_P1_02_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P1_02_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P1_02_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P1_02_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P1_02_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P1_02_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P1_03_MODE_REG  ===================================================== */
#define GPIO_P1_03_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P1_03_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P1_03_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P1_03_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P1_03_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P1_03_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P1_04_MODE_REG  ===================================================== */
#define GPIO_P1_04_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P1_04_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P1_04_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P1_04_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P1_04_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P1_04_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P1_05_MODE_REG  ===================================================== */
#define GPIO_P1_05_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P1_05_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P1_05_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P1_05_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P1_05_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P1_05_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P1_06_MODE_REG  ===================================================== */
#define GPIO_P1_06_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P1_06_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P1_06_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P1_06_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P1_06_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P1_06_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P1_07_MODE_REG  ===================================================== */
#define GPIO_P1_07_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P1_07_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P1_07_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P1_07_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P1_07_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P1_07_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P1_08_MODE_REG  ===================================================== */
#define GPIO_P1_08_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P1_08_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P1_08_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P1_08_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P1_08_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P1_08_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P1_09_MODE_REG  ===================================================== */
#define GPIO_P1_09_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P1_09_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P1_09_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P1_09_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P1_09_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P1_09_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P1_10_MODE_REG  ===================================================== */
#define GPIO_P1_10_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P1_10_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P1_10_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P1_10_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P1_10_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P1_10_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P1_11_MODE_REG  ===================================================== */
#define GPIO_P1_11_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P1_11_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P1_11_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P1_11_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P1_11_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P1_11_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P1_12_MODE_REG  ===================================================== */
#define GPIO_P1_12_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P1_12_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P1_12_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P1_12_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P1_12_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P1_12_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P1_13_MODE_REG  ===================================================== */
#define GPIO_P1_13_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P1_13_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P1_13_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P1_13_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P1_13_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P1_13_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P1_14_MODE_REG  ===================================================== */
#define GPIO_P1_14_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P1_14_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P1_14_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P1_14_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P1_14_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P1_14_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P1_15_MODE_REG  ===================================================== */
#define GPIO_P1_15_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P1_15_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P1_15_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P1_15_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P1_15_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P1_15_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P1_16_MODE_REG  ===================================================== */
#define GPIO_P1_16_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P1_16_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P1_16_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P1_16_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P1_16_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P1_16_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P1_17_MODE_REG  ===================================================== */
#define GPIO_P1_17_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P1_17_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P1_17_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P1_17_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P1_17_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P1_17_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P1_18_MODE_REG  ===================================================== */
#define GPIO_P1_18_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P1_18_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P1_18_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P1_18_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P1_18_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P1_18_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P1_19_MODE_REG  ===================================================== */
#define GPIO_P1_19_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P1_19_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P1_19_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P1_19_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P1_19_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P1_19_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P1_20_MODE_REG  ===================================================== */
#define GPIO_P1_20_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P1_20_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P1_20_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P1_20_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P1_20_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P1_20_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P1_21_MODE_REG  ===================================================== */
#define GPIO_P1_21_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P1_21_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P1_21_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P1_21_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P1_21_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P1_21_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P1_22_MODE_REG  ===================================================== */
#define GPIO_P1_22_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P1_22_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P1_22_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P1_22_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P1_22_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P1_22_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P1_23_MODE_REG  ===================================================== */
#define GPIO_P1_23_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P1_23_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P1_23_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P1_23_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P1_23_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P1_23_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P1_24_MODE_REG  ===================================================== */
#define GPIO_P1_24_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P1_24_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P1_24_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P1_24_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P1_24_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P1_24_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P1_25_MODE_REG  ===================================================== */
#define GPIO_P1_25_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P1_25_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P1_25_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P1_25_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P1_25_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P1_25_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P1_26_MODE_REG  ===================================================== */
#define GPIO_P1_26_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P1_26_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P1_26_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P1_26_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P1_26_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P1_26_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P1_27_MODE_REG  ===================================================== */
#define GPIO_P1_27_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P1_27_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P1_27_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P1_27_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P1_27_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P1_27_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P1_28_MODE_REG  ===================================================== */
#define GPIO_P1_28_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P1_28_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P1_28_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P1_28_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P1_28_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P1_28_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P1_29_MODE_REG  ===================================================== */
#define GPIO_P1_29_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P1_29_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P1_29_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P1_29_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P1_29_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P1_29_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P1_30_MODE_REG  ===================================================== */
#define GPIO_P1_30_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P1_30_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P1_30_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P1_30_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P1_30_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P1_30_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P1_31_MODE_REG  ===================================================== */
#define GPIO_P1_31_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P1_31_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P1_31_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P1_31_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P1_31_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P1_31_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ======================================================  P1_DATA_REG  ====================================================== */
#define GPIO_P1_DATA_REG_P1_DATA_Pos      (0UL)                     /*!< P1_DATA (Bit 0)                                       */
#define GPIO_P1_DATA_REG_P1_DATA_Msk      (0xffffffffUL)            /*!< P1_DATA (Bitfield-Mask: 0xffffffff)                   */
/* ==================================================  P1_PADPWR_CTRL_REG  =================================================== */
#define GPIO_P1_PADPWR_CTRL_REG_P1_31_OUT_CTRL_Pos (31UL)           /*!< P1_31_OUT_CTRL (Bit 31)                               */
#define GPIO_P1_PADPWR_CTRL_REG_P1_31_OUT_CTRL_Msk (0x80000000UL)   /*!< P1_31_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P1_PADPWR_CTRL_REG_P1_30_OUT_CTRL_Pos (30UL)           /*!< P1_30_OUT_CTRL (Bit 30)                               */
#define GPIO_P1_PADPWR_CTRL_REG_P1_30_OUT_CTRL_Msk (0x40000000UL)   /*!< P1_30_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P1_PADPWR_CTRL_REG_P1_23_OUT_CTRL_Pos (23UL)           /*!< P1_23_OUT_CTRL (Bit 23)                               */
#define GPIO_P1_PADPWR_CTRL_REG_P1_23_OUT_CTRL_Msk (0x800000UL)     /*!< P1_23_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P1_PADPWR_CTRL_REG_P1_22_OUT_CTRL_Pos (22UL)           /*!< P1_22_OUT_CTRL (Bit 22)                               */
#define GPIO_P1_PADPWR_CTRL_REG_P1_22_OUT_CTRL_Msk (0x400000UL)     /*!< P1_22_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P1_PADPWR_CTRL_REG_P1_12_OUT_CTRL_Pos (12UL)           /*!< P1_12_OUT_CTRL (Bit 12)                               */
#define GPIO_P1_PADPWR_CTRL_REG_P1_12_OUT_CTRL_Msk (0x1000UL)       /*!< P1_12_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P1_PADPWR_CTRL_REG_P1_11_OUT_CTRL_Pos (11UL)           /*!< P1_11_OUT_CTRL (Bit 11)                               */
#define GPIO_P1_PADPWR_CTRL_REG_P1_11_OUT_CTRL_Msk (0x800UL)        /*!< P1_11_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P1_PADPWR_CTRL_REG_P1_07_OUT_CTRL_Pos (7UL)            /*!< P1_07_OUT_CTRL (Bit 7)                                */
#define GPIO_P1_PADPWR_CTRL_REG_P1_07_OUT_CTRL_Msk (0x80UL)         /*!< P1_07_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P1_PADPWR_CTRL_REG_P1_06_OUT_CTRL_Pos (6UL)            /*!< P1_06_OUT_CTRL (Bit 6)                                */
#define GPIO_P1_PADPWR_CTRL_REG_P1_06_OUT_CTRL_Msk (0x40UL)         /*!< P1_06_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P1_PADPWR_CTRL_REG_P1_05_OUT_CTRL_Pos (5UL)            /*!< P1_05_OUT_CTRL (Bit 5)                                */
#define GPIO_P1_PADPWR_CTRL_REG_P1_05_OUT_CTRL_Msk (0x20UL)         /*!< P1_05_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P1_PADPWR_CTRL_REG_P1_04_OUT_CTRL_Pos (4UL)            /*!< P1_04_OUT_CTRL (Bit 4)                                */
#define GPIO_P1_PADPWR_CTRL_REG_P1_04_OUT_CTRL_Msk (0x10UL)         /*!< P1_04_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P1_PADPWR_CTRL_REG_P1_03_OUT_CTRL_Pos (3UL)            /*!< P1_03_OUT_CTRL (Bit 3)                                */
#define GPIO_P1_PADPWR_CTRL_REG_P1_03_OUT_CTRL_Msk (0x8UL)          /*!< P1_03_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P1_PADPWR_CTRL_REG_P1_01_OUT_CTRL_Pos (1UL)            /*!< P1_01_OUT_CTRL (Bit 1)                                */
#define GPIO_P1_PADPWR_CTRL_REG_P1_01_OUT_CTRL_Msk (0x2UL)          /*!< P1_01_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P1_PADPWR_CTRL_REG_P1_00_OUT_CTRL_Pos (0UL)            /*!< P1_00_OUT_CTRL (Bit 0)                                */
#define GPIO_P1_PADPWR_CTRL_REG_P1_00_OUT_CTRL_Msk (0x1UL)          /*!< P1_00_OUT_CTRL (Bitfield-Mask: 0x01)                  */
/* ===================================================  P1_RESET_DATA_REG  =================================================== */
#define GPIO_P1_RESET_DATA_REG_P1_RESET_Pos (0UL)                   /*!< P1_RESET (Bit 0)                                      */
#define GPIO_P1_RESET_DATA_REG_P1_RESET_Msk (0xffffffffUL)          /*!< P1_RESET (Bitfield-Mask: 0xffffffff)                  */
/* ====================================================  P1_SET_DATA_REG  ==================================================== */
#define GPIO_P1_SET_DATA_REG_P1_SET_Pos   (0UL)                     /*!< P1_SET (Bit 0)                                        */
#define GPIO_P1_SET_DATA_REG_P1_SET_Msk   (0xffffffffUL)            /*!< P1_SET (Bitfield-Mask: 0xffffffff)                    */
/* ===================================================  P1_WEAK_CTRL_REG  ==================================================== */
#define GPIO_P1_WEAK_CTRL_REG_P1_31_LOWDRV_Pos (31UL)               /*!< P1_31_LOWDRV (Bit 31)                                 */
#define GPIO_P1_WEAK_CTRL_REG_P1_31_LOWDRV_Msk (0x80000000UL)       /*!< P1_31_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P1_WEAK_CTRL_REG_P1_30_LOWDRV_Pos (30UL)               /*!< P1_30_LOWDRV (Bit 30)                                 */
#define GPIO_P1_WEAK_CTRL_REG_P1_30_LOWDRV_Msk (0x40000000UL)       /*!< P1_30_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P1_WEAK_CTRL_REG_P1_27_LOWDRV_Pos (27UL)               /*!< P1_27_LOWDRV (Bit 27)                                 */
#define GPIO_P1_WEAK_CTRL_REG_P1_27_LOWDRV_Msk (0x8000000UL)        /*!< P1_27_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P1_WEAK_CTRL_REG_P1_26_LOWDRV_Pos (26UL)               /*!< P1_26_LOWDRV (Bit 26)                                 */
#define GPIO_P1_WEAK_CTRL_REG_P1_26_LOWDRV_Msk (0x4000000UL)        /*!< P1_26_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P1_WEAK_CTRL_REG_P1_25_LOWDRV_Pos (25UL)               /*!< P1_25_LOWDRV (Bit 25)                                 */
#define GPIO_P1_WEAK_CTRL_REG_P1_25_LOWDRV_Msk (0x2000000UL)        /*!< P1_25_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P1_WEAK_CTRL_REG_P1_24_LOWDRV_Pos (24UL)               /*!< P1_24_LOWDRV (Bit 24)                                 */
#define GPIO_P1_WEAK_CTRL_REG_P1_24_LOWDRV_Msk (0x1000000UL)        /*!< P1_24_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P1_WEAK_CTRL_REG_P1_23_LOWDRV_Pos (23UL)               /*!< P1_23_LOWDRV (Bit 23)                                 */
#define GPIO_P1_WEAK_CTRL_REG_P1_23_LOWDRV_Msk (0x800000UL)         /*!< P1_23_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P1_WEAK_CTRL_REG_P1_22_LOWDRV_Pos (22UL)               /*!< P1_22_LOWDRV (Bit 22)                                 */
#define GPIO_P1_WEAK_CTRL_REG_P1_22_LOWDRV_Msk (0x400000UL)         /*!< P1_22_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P1_WEAK_CTRL_REG_P1_20_LOWDRV_Pos (20UL)               /*!< P1_20_LOWDRV (Bit 20)                                 */
#define GPIO_P1_WEAK_CTRL_REG_P1_20_LOWDRV_Msk (0x100000UL)         /*!< P1_20_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P1_WEAK_CTRL_REG_P1_19_LOWDRV_Pos (19UL)               /*!< P1_19_LOWDRV (Bit 19)                                 */
#define GPIO_P1_WEAK_CTRL_REG_P1_19_LOWDRV_Msk (0x80000UL)          /*!< P1_19_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P1_WEAK_CTRL_REG_P1_15_LOWDRV_Pos (15UL)               /*!< P1_15_LOWDRV (Bit 15)                                 */
#define GPIO_P1_WEAK_CTRL_REG_P1_15_LOWDRV_Msk (0x8000UL)           /*!< P1_15_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P1_WEAK_CTRL_REG_P1_14_LOWDRV_Pos (14UL)               /*!< P1_14_LOWDRV (Bit 14)                                 */
#define GPIO_P1_WEAK_CTRL_REG_P1_14_LOWDRV_Msk (0x4000UL)           /*!< P1_14_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P1_WEAK_CTRL_REG_P1_13_LOWDRV_Pos (13UL)               /*!< P1_13_LOWDRV (Bit 13)                                 */
#define GPIO_P1_WEAK_CTRL_REG_P1_13_LOWDRV_Msk (0x2000UL)           /*!< P1_13_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P1_WEAK_CTRL_REG_P1_12_LOWDRV_Pos (12UL)               /*!< P1_12_LOWDRV (Bit 12)                                 */
#define GPIO_P1_WEAK_CTRL_REG_P1_12_LOWDRV_Msk (0x1000UL)           /*!< P1_12_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P1_WEAK_CTRL_REG_P1_11_LOWDRV_Pos (11UL)               /*!< P1_11_LOWDRV (Bit 11)                                 */
#define GPIO_P1_WEAK_CTRL_REG_P1_11_LOWDRV_Msk (0x800UL)            /*!< P1_11_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P1_WEAK_CTRL_REG_P1_07_LOWDRV_Pos (7UL)                /*!< P1_07_LOWDRV (Bit 7)                                  */
#define GPIO_P1_WEAK_CTRL_REG_P1_07_LOWDRV_Msk (0x80UL)             /*!< P1_07_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P1_WEAK_CTRL_REG_P1_06_LOWDRV_Pos (6UL)                /*!< P1_06_LOWDRV (Bit 6)                                  */
#define GPIO_P1_WEAK_CTRL_REG_P1_06_LOWDRV_Msk (0x40UL)             /*!< P1_06_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P1_WEAK_CTRL_REG_P1_05_LOWDRV_Pos (5UL)                /*!< P1_05_LOWDRV (Bit 5)                                  */
#define GPIO_P1_WEAK_CTRL_REG_P1_05_LOWDRV_Msk (0x20UL)             /*!< P1_05_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P1_WEAK_CTRL_REG_P1_04_LOWDRV_Pos (4UL)                /*!< P1_04_LOWDRV (Bit 4)                                  */
#define GPIO_P1_WEAK_CTRL_REG_P1_04_LOWDRV_Msk (0x10UL)             /*!< P1_04_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P1_WEAK_CTRL_REG_P1_03_LOWDRV_Pos (3UL)                /*!< P1_03_LOWDRV (Bit 3)                                  */
#define GPIO_P1_WEAK_CTRL_REG_P1_03_LOWDRV_Msk (0x8UL)              /*!< P1_03_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P1_WEAK_CTRL_REG_P1_01_LOWDRV_Pos (1UL)                /*!< P1_01_LOWDRV (Bit 1)                                  */
#define GPIO_P1_WEAK_CTRL_REG_P1_01_LOWDRV_Msk (0x2UL)              /*!< P1_01_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P1_WEAK_CTRL_REG_P1_00_LOWDRV_Pos (0UL)                /*!< P1_00_LOWDRV (Bit 0)                                  */
#define GPIO_P1_WEAK_CTRL_REG_P1_00_LOWDRV_Msk (0x1UL)              /*!< P1_00_LOWDRV (Bitfield-Mask: 0x01)                    */
/* ====================================================  P2_00_MODE_REG  ===================================================== */
#define GPIO_P2_00_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P2_00_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P2_00_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P2_00_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P2_00_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P2_00_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P2_01_MODE_REG  ===================================================== */
#define GPIO_P2_01_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P2_01_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P2_01_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P2_01_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P2_01_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P2_01_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P2_02_MODE_REG  ===================================================== */
#define GPIO_P2_02_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P2_02_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P2_02_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P2_02_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P2_02_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P2_02_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P2_03_MODE_REG  ===================================================== */
#define GPIO_P2_03_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P2_03_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P2_03_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P2_03_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P2_03_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P2_03_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P2_04_MODE_REG  ===================================================== */
#define GPIO_P2_04_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P2_04_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P2_04_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P2_04_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P2_04_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P2_04_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P2_05_MODE_REG  ===================================================== */
#define GPIO_P2_05_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P2_05_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P2_05_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P2_05_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P2_05_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P2_05_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P2_06_MODE_REG  ===================================================== */
#define GPIO_P2_06_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P2_06_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P2_06_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P2_06_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P2_06_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P2_06_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P2_07_MODE_REG  ===================================================== */
#define GPIO_P2_07_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P2_07_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P2_07_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P2_07_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P2_07_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P2_07_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P2_08_MODE_REG  ===================================================== */
#define GPIO_P2_08_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P2_08_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P2_08_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P2_08_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P2_08_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P2_08_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P2_09_MODE_REG  ===================================================== */
#define GPIO_P2_09_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P2_09_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P2_09_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P2_09_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P2_09_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P2_09_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P2_10_MODE_REG  ===================================================== */
#define GPIO_P2_10_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P2_10_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P2_10_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P2_10_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P2_10_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P2_10_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P2_11_MODE_REG  ===================================================== */
#define GPIO_P2_11_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P2_11_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P2_11_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P2_11_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P2_11_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P2_11_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P2_12_MODE_REG  ===================================================== */
#define GPIO_P2_12_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P2_12_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P2_12_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P2_12_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P2_12_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P2_12_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P2_13_MODE_REG  ===================================================== */
#define GPIO_P2_13_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P2_13_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P2_13_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P2_13_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P2_13_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P2_13_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ====================================================  P2_14_MODE_REG  ===================================================== */
#define GPIO_P2_14_MODE_REG_PPOD_Pos      (10UL)                    /*!< PPOD (Bit 10)                                         */
#define GPIO_P2_14_MODE_REG_PPOD_Msk      (0x400UL)                 /*!< PPOD (Bitfield-Mask: 0x01)                            */
#define GPIO_P2_14_MODE_REG_PUPD_Pos      (8UL)                     /*!< PUPD (Bit 8)                                          */
#define GPIO_P2_14_MODE_REG_PUPD_Msk      (0x300UL)                 /*!< PUPD (Bitfield-Mask: 0x03)                            */
#define GPIO_P2_14_MODE_REG_PID_Pos       (0UL)                     /*!< PID (Bit 0)                                           */
#define GPIO_P2_14_MODE_REG_PID_Msk       (0x3fUL)                  /*!< PID (Bitfield-Mask: 0x3f)                             */
/* ======================================================  P2_DATA_REG  ====================================================== */
#define GPIO_P2_DATA_REG_P2_DATA_Pos      (0UL)                     /*!< P2_DATA (Bit 0)                                       */
#define GPIO_P2_DATA_REG_P2_DATA_Msk      (0x7fffUL)                /*!< P2_DATA (Bitfield-Mask: 0x7fff)                       */
/* ==================================================  P2_PADPWR_CTRL_REG  =================================================== */
#define GPIO_P2_PADPWR_CTRL_REG_P2_11_OUT_CTRL_Pos (11UL)           /*!< P2_11_OUT_CTRL (Bit 11)                               */
#define GPIO_P2_PADPWR_CTRL_REG_P2_11_OUT_CTRL_Msk (0x800UL)        /*!< P2_11_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P2_PADPWR_CTRL_REG_P2_10_OUT_CTRL_Pos (10UL)           /*!< P2_10_OUT_CTRL (Bit 10)                               */
#define GPIO_P2_PADPWR_CTRL_REG_P2_10_OUT_CTRL_Msk (0x400UL)        /*!< P2_10_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P2_PADPWR_CTRL_REG_P2_09_OUT_CTRL_Pos (9UL)            /*!< P2_09_OUT_CTRL (Bit 9)                                */
#define GPIO_P2_PADPWR_CTRL_REG_P2_09_OUT_CTRL_Msk (0x200UL)        /*!< P2_09_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P2_PADPWR_CTRL_REG_P2_08_OUT_CTRL_Pos (8UL)            /*!< P2_08_OUT_CTRL (Bit 8)                                */
#define GPIO_P2_PADPWR_CTRL_REG_P2_08_OUT_CTRL_Msk (0x100UL)        /*!< P2_08_OUT_CTRL (Bitfield-Mask: 0x01)                  */
#define GPIO_P2_PADPWR_CTRL_REG_P2_01_OUT_CTRL_Pos (1UL)            /*!< P2_01_OUT_CTRL (Bit 1)                                */
#define GPIO_P2_PADPWR_CTRL_REG_P2_01_OUT_CTRL_Msk (0x2UL)          /*!< P2_01_OUT_CTRL (Bitfield-Mask: 0x01)                  */
/* ===================================================  P2_RESET_DATA_REG  =================================================== */
#define GPIO_P2_RESET_DATA_REG_P2_RESET_Pos (0UL)                   /*!< P2_RESET (Bit 0)                                      */
#define GPIO_P2_RESET_DATA_REG_P2_RESET_Msk (0x7fffUL)              /*!< P2_RESET (Bitfield-Mask: 0x7fff)                      */
/* ====================================================  P2_SET_DATA_REG  ==================================================== */
#define GPIO_P2_SET_DATA_REG_P2_SET_Pos   (0UL)                     /*!< P2_SET (Bit 0)                                        */
#define GPIO_P2_SET_DATA_REG_P2_SET_Msk   (0x7fffUL)                /*!< P2_SET (Bitfield-Mask: 0x7fff)                        */
/* ===================================================  P2_WEAK_CTRL_REG  ==================================================== */
#define GPIO_P2_WEAK_CTRL_REG_P2_09_LOWDRV_Pos (9UL)                /*!< P2_09_LOWDRV (Bit 9)                                  */
#define GPIO_P2_WEAK_CTRL_REG_P2_09_LOWDRV_Msk (0x200UL)            /*!< P2_09_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P2_WEAK_CTRL_REG_P2_08_LOWDRV_Pos (8UL)                /*!< P2_08_LOWDRV (Bit 8)                                  */
#define GPIO_P2_WEAK_CTRL_REG_P2_08_LOWDRV_Msk (0x100UL)            /*!< P2_08_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P2_WEAK_CTRL_REG_P2_07_LOWDRV_Pos (7UL)                /*!< P2_07_LOWDRV (Bit 7)                                  */
#define GPIO_P2_WEAK_CTRL_REG_P2_07_LOWDRV_Msk (0x80UL)             /*!< P2_07_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P2_WEAK_CTRL_REG_P2_06_LOWDRV_Pos (6UL)                /*!< P2_06_LOWDRV (Bit 6)                                  */
#define GPIO_P2_WEAK_CTRL_REG_P2_06_LOWDRV_Msk (0x40UL)             /*!< P2_06_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P2_WEAK_CTRL_REG_P2_05_LOWDRV_Pos (5UL)                /*!< P2_05_LOWDRV (Bit 5)                                  */
#define GPIO_P2_WEAK_CTRL_REG_P2_05_LOWDRV_Msk (0x20UL)             /*!< P2_05_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P2_WEAK_CTRL_REG_P2_04_LOWDRV_Pos (4UL)                /*!< P2_04_LOWDRV (Bit 4)                                  */
#define GPIO_P2_WEAK_CTRL_REG_P2_04_LOWDRV_Msk (0x10UL)             /*!< P2_04_LOWDRV (Bitfield-Mask: 0x01)                    */
#define GPIO_P2_WEAK_CTRL_REG_P2_01_LOWDRV_Pos (1UL)                /*!< P2_01_LOWDRV (Bit 1)                                  */
#define GPIO_P2_WEAK_CTRL_REG_P2_01_LOWDRV_Msk (0x2UL)              /*!< P2_01_LOWDRV (Bitfield-Mask: 0x01)                    */
/* ==================================================  PAD_DRIVE_CTRL_REG  =================================================== */
#define GPIO_PAD_DRIVE_CTRL_REG_EMMC_DRIVE_Pos (10UL)               /*!< EMMC_DRIVE (Bit 10)                                   */
#define GPIO_PAD_DRIVE_CTRL_REG_EMMC_DRIVE_Msk (0xc00UL)            /*!< EMMC_DRIVE (Bitfield-Mask: 0x03)                      */
#define GPIO_PAD_DRIVE_CTRL_REG_EMMC_SLEW_Pos (8UL)                 /*!< EMMC_SLEW (Bit 8)                                     */
#define GPIO_PAD_DRIVE_CTRL_REG_EMMC_SLEW_Msk (0x300UL)             /*!< EMMC_SLEW (Bitfield-Mask: 0x03)                       */
#define GPIO_PAD_DRIVE_CTRL_REG_SPI3_DRIVE_Pos (2UL)                /*!< SPI3_DRIVE (Bit 2)                                    */
#define GPIO_PAD_DRIVE_CTRL_REG_SPI3_DRIVE_Msk (0xcUL)              /*!< SPI3_DRIVE (Bitfield-Mask: 0x03)                      */
#define GPIO_PAD_DRIVE_CTRL_REG_SPI3_SLEW_Pos (0UL)                 /*!< SPI3_SLEW (Bit 0)                                     */
#define GPIO_PAD_DRIVE_CTRL_REG_SPI3_SLEW_Msk (0x3UL)               /*!< SPI3_SLEW (Bitfield-Mask: 0x03)                       */


/* =========================================================================================================================== */
/* ================                                           GPREG                                           ================ */
/* =========================================================================================================================== */

/* =======================================================  DEBUG_REG  ======================================================= */
#define GPREG_DEBUG_REG_ETM_TRACE_MAP_ON_PINS_EN_Pos (12UL)         /*!< ETM_TRACE_MAP_ON_PINS_EN (Bit 12)                     */
#define GPREG_DEBUG_REG_ETM_TRACE_MAP_ON_PINS_EN_Msk (0x1000UL)     /*!< ETM_TRACE_MAP_ON_PINS_EN (Bitfield-Mask: 0x01)        */
#define GPREG_DEBUG_REG_SNC_CPU_IS_HALTED_Pos (11UL)                /*!< SNC_CPU_IS_HALTED (Bit 11)                            */
#define GPREG_DEBUG_REG_SNC_CPU_IS_HALTED_Msk (0x800UL)             /*!< SNC_CPU_IS_HALTED (Bitfield-Mask: 0x01)               */
#define GPREG_DEBUG_REG_HALT_SNC_CPU_EN_Pos (10UL)                  /*!< HALT_SNC_CPU_EN (Bit 10)                              */
#define GPREG_DEBUG_REG_HALT_SNC_CPU_EN_Msk (0x400UL)               /*!< HALT_SNC_CPU_EN (Bitfield-Mask: 0x01)                 */
#define GPREG_DEBUG_REG_SNC_CPU_FREEZE_EN_Pos (9UL)                 /*!< SNC_CPU_FREEZE_EN (Bit 9)                             */
#define GPREG_DEBUG_REG_SNC_CPU_FREEZE_EN_Msk (0x200UL)             /*!< SNC_CPU_FREEZE_EN (Bitfield-Mask: 0x01)               */
#define GPREG_DEBUG_REG_CROSS_CPU_HALT_SENSITIVITY_Pos (8UL)        /*!< CROSS_CPU_HALT_SENSITIVITY (Bit 8)                    */
#define GPREG_DEBUG_REG_CROSS_CPU_HALT_SENSITIVITY_Msk (0x100UL)    /*!< CROSS_CPU_HALT_SENSITIVITY (Bitfield-Mask: 0x01)      */
#define GPREG_DEBUG_REG_SYS_CPUWAIT_ON_JTAG_Pos (7UL)               /*!< SYS_CPUWAIT_ON_JTAG (Bit 7)                           */
#define GPREG_DEBUG_REG_SYS_CPUWAIT_ON_JTAG_Msk (0x80UL)            /*!< SYS_CPUWAIT_ON_JTAG (Bitfield-Mask: 0x01)             */
#define GPREG_DEBUG_REG_SYS_CPUWAIT_Pos   (6UL)                     /*!< SYS_CPUWAIT (Bit 6)                                   */
#define GPREG_DEBUG_REG_SYS_CPUWAIT_Msk   (0x40UL)                  /*!< SYS_CPUWAIT (Bitfield-Mask: 0x01)                     */
#define GPREG_DEBUG_REG_CMAC_CPU_IS_HALTED_Pos (5UL)                /*!< CMAC_CPU_IS_HALTED (Bit 5)                            */
#define GPREG_DEBUG_REG_CMAC_CPU_IS_HALTED_Msk (0x20UL)             /*!< CMAC_CPU_IS_HALTED (Bitfield-Mask: 0x01)              */
#define GPREG_DEBUG_REG_SYS_CPU_IS_HALTED_Pos (4UL)                 /*!< SYS_CPU_IS_HALTED (Bit 4)                             */
#define GPREG_DEBUG_REG_SYS_CPU_IS_HALTED_Msk (0x10UL)              /*!< SYS_CPU_IS_HALTED (Bitfield-Mask: 0x01)               */
#define GPREG_DEBUG_REG_HALT_SYS_CPU_EN_Pos (3UL)                   /*!< HALT_SYS_CPU_EN (Bit 3)                               */
#define GPREG_DEBUG_REG_HALT_SYS_CPU_EN_Msk (0x8UL)                 /*!< HALT_SYS_CPU_EN (Bitfield-Mask: 0x01)                 */
#define GPREG_DEBUG_REG_HALT_CMAC_CPU_EN_Pos (2UL)                  /*!< HALT_CMAC_CPU_EN (Bit 2)                              */
#define GPREG_DEBUG_REG_HALT_CMAC_CPU_EN_Msk (0x4UL)                /*!< HALT_CMAC_CPU_EN (Bitfield-Mask: 0x01)                */
#define GPREG_DEBUG_REG_CMAC_CPU_FREEZE_EN_Pos (1UL)                /*!< CMAC_CPU_FREEZE_EN (Bit 1)                            */
#define GPREG_DEBUG_REG_CMAC_CPU_FREEZE_EN_Msk (0x2UL)              /*!< CMAC_CPU_FREEZE_EN (Bitfield-Mask: 0x01)              */
#define GPREG_DEBUG_REG_SYS_CPU_FREEZE_EN_Pos (0UL)                 /*!< SYS_CPU_FREEZE_EN (Bit 0)                             */
#define GPREG_DEBUG_REG_SYS_CPU_FREEZE_EN_Msk (0x1UL)               /*!< SYS_CPU_FREEZE_EN (Bitfield-Mask: 0x01)               */
/* =====================================================  GP_STATUS_REG  ===================================================== */
#define GPREG_GP_STATUS_REG_CAL_PHASE_Pos (0UL)                     /*!< CAL_PHASE (Bit 0)                                     */
#define GPREG_GP_STATUS_REG_CAL_PHASE_Msk (0x1UL)                   /*!< CAL_PHASE (Bitfield-Mask: 0x01)                       */
/* ===================================================  RESET_FREEZE_REG  ==================================================== */
#define GPREG_RESET_FREEZE_REG_FRZ_SWTIM6_Pos (13UL)                /*!< FRZ_SWTIM6 (Bit 13)                                   */
#define GPREG_RESET_FREEZE_REG_FRZ_SWTIM6_Msk (0x2000UL)            /*!< FRZ_SWTIM6 (Bitfield-Mask: 0x01)                      */
#define GPREG_RESET_FREEZE_REG_FRZ_SWTIM5_Pos (12UL)                /*!< FRZ_SWTIM5 (Bit 12)                                   */
#define GPREG_RESET_FREEZE_REG_FRZ_SWTIM5_Msk (0x1000UL)            /*!< FRZ_SWTIM5 (Bitfield-Mask: 0x01)                      */
#define GPREG_RESET_FREEZE_REG_FRZ_SNC_WDOG_Pos (11UL)              /*!< FRZ_SNC_WDOG (Bit 11)                                 */
#define GPREG_RESET_FREEZE_REG_FRZ_SNC_WDOG_Msk (0x800UL)           /*!< FRZ_SNC_WDOG (Bitfield-Mask: 0x01)                    */
#define GPREG_RESET_FREEZE_REG_FRZ_CMAC_WDOG_Pos (10UL)             /*!< FRZ_CMAC_WDOG (Bit 10)                                */
#define GPREG_RESET_FREEZE_REG_FRZ_CMAC_WDOG_Msk (0x400UL)          /*!< FRZ_CMAC_WDOG (Bitfield-Mask: 0x01)                   */
#define GPREG_RESET_FREEZE_REG_FRZ_SWTIM4_Pos (9UL)                 /*!< FRZ_SWTIM4 (Bit 9)                                    */
#define GPREG_RESET_FREEZE_REG_FRZ_SWTIM4_Msk (0x200UL)             /*!< FRZ_SWTIM4 (Bitfield-Mask: 0x01)                      */
#define GPREG_RESET_FREEZE_REG_FRZ_SWTIM3_Pos (8UL)                 /*!< FRZ_SWTIM3 (Bit 8)                                    */
#define GPREG_RESET_FREEZE_REG_FRZ_SWTIM3_Msk (0x100UL)             /*!< FRZ_SWTIM3 (Bitfield-Mask: 0x01)                      */
#define GPREG_RESET_FREEZE_REG_FRZ_PWMLED_Pos (7UL)                 /*!< FRZ_PWMLED (Bit 7)                                    */
#define GPREG_RESET_FREEZE_REG_FRZ_PWMLED_Msk (0x80UL)              /*!< FRZ_PWMLED (Bitfield-Mask: 0x01)                      */
#define GPREG_RESET_FREEZE_REG_FRZ_SWTIM2_Pos (6UL)                 /*!< FRZ_SWTIM2 (Bit 6)                                    */
#define GPREG_RESET_FREEZE_REG_FRZ_SWTIM2_Msk (0x40UL)              /*!< FRZ_SWTIM2 (Bitfield-Mask: 0x01)                      */
#define GPREG_RESET_FREEZE_REG_FRZ_DMA_Pos (5UL)                    /*!< FRZ_DMA (Bit 5)                                       */
#define GPREG_RESET_FREEZE_REG_FRZ_DMA_Msk (0x20UL)                 /*!< FRZ_DMA (Bitfield-Mask: 0x01)                         */
#define GPREG_RESET_FREEZE_REG_FRZ_USB_Pos (4UL)                    /*!< FRZ_USB (Bit 4)                                       */
#define GPREG_RESET_FREEZE_REG_FRZ_USB_Msk (0x10UL)                 /*!< FRZ_USB (Bitfield-Mask: 0x01)                         */
#define GPREG_RESET_FREEZE_REG_FRZ_SYS_WDOG_Pos (3UL)               /*!< FRZ_SYS_WDOG (Bit 3)                                  */
#define GPREG_RESET_FREEZE_REG_FRZ_SYS_WDOG_Msk (0x8UL)             /*!< FRZ_SYS_WDOG (Bitfield-Mask: 0x01)                    */
#define GPREG_RESET_FREEZE_REG_FRZ_RESERVED_Pos (2UL)               /*!< FRZ_RESERVED (Bit 2)                                  */
#define GPREG_RESET_FREEZE_REG_FRZ_RESERVED_Msk (0x4UL)             /*!< FRZ_RESERVED (Bitfield-Mask: 0x01)                    */
#define GPREG_RESET_FREEZE_REG_FRZ_SWTIM_Pos (1UL)                  /*!< FRZ_SWTIM (Bit 1)                                     */
#define GPREG_RESET_FREEZE_REG_FRZ_SWTIM_Msk (0x2UL)                /*!< FRZ_SWTIM (Bitfield-Mask: 0x01)                       */
#define GPREG_RESET_FREEZE_REG_FRZ_WKUPTIM_Pos (0UL)                /*!< FRZ_WKUPTIM (Bit 0)                                   */
#define GPREG_RESET_FREEZE_REG_FRZ_WKUPTIM_Msk (0x1UL)              /*!< FRZ_WKUPTIM (Bitfield-Mask: 0x01)                     */
/* ====================================================  SET_FREEZE_REG  ===================================================== */
#define GPREG_SET_FREEZE_REG_FRZ_SWTIM6_Pos (13UL)                  /*!< FRZ_SWTIM6 (Bit 13)                                   */
#define GPREG_SET_FREEZE_REG_FRZ_SWTIM6_Msk (0x2000UL)              /*!< FRZ_SWTIM6 (Bitfield-Mask: 0x01)                      */
#define GPREG_SET_FREEZE_REG_FRZ_SWTIM5_Pos (12UL)                  /*!< FRZ_SWTIM5 (Bit 12)                                   */
#define GPREG_SET_FREEZE_REG_FRZ_SWTIM5_Msk (0x1000UL)              /*!< FRZ_SWTIM5 (Bitfield-Mask: 0x01)                      */
#define GPREG_SET_FREEZE_REG_FRZ_SNC_WDOG_Pos (11UL)                /*!< FRZ_SNC_WDOG (Bit 11)                                 */
#define GPREG_SET_FREEZE_REG_FRZ_SNC_WDOG_Msk (0x800UL)             /*!< FRZ_SNC_WDOG (Bitfield-Mask: 0x01)                    */
#define GPREG_SET_FREEZE_REG_FRZ_CMAC_WDOG_Pos (10UL)               /*!< FRZ_CMAC_WDOG (Bit 10)                                */
#define GPREG_SET_FREEZE_REG_FRZ_CMAC_WDOG_Msk (0x400UL)            /*!< FRZ_CMAC_WDOG (Bitfield-Mask: 0x01)                   */
#define GPREG_SET_FREEZE_REG_FRZ_SWTIM4_Pos (9UL)                   /*!< FRZ_SWTIM4 (Bit 9)                                    */
#define GPREG_SET_FREEZE_REG_FRZ_SWTIM4_Msk (0x200UL)               /*!< FRZ_SWTIM4 (Bitfield-Mask: 0x01)                      */
#define GPREG_SET_FREEZE_REG_FRZ_SWTIM3_Pos (8UL)                   /*!< FRZ_SWTIM3 (Bit 8)                                    */
#define GPREG_SET_FREEZE_REG_FRZ_SWTIM3_Msk (0x100UL)               /*!< FRZ_SWTIM3 (Bitfield-Mask: 0x01)                      */
#define GPREG_SET_FREEZE_REG_FRZ_PWMLED_Pos (7UL)                   /*!< FRZ_PWMLED (Bit 7)                                    */
#define GPREG_SET_FREEZE_REG_FRZ_PWMLED_Msk (0x80UL)                /*!< FRZ_PWMLED (Bitfield-Mask: 0x01)                      */
#define GPREG_SET_FREEZE_REG_FRZ_SWTIM2_Pos (6UL)                   /*!< FRZ_SWTIM2 (Bit 6)                                    */
#define GPREG_SET_FREEZE_REG_FRZ_SWTIM2_Msk (0x40UL)                /*!< FRZ_SWTIM2 (Bitfield-Mask: 0x01)                      */
#define GPREG_SET_FREEZE_REG_FRZ_DMA_Pos  (5UL)                     /*!< FRZ_DMA (Bit 5)                                       */
#define GPREG_SET_FREEZE_REG_FRZ_DMA_Msk  (0x20UL)                  /*!< FRZ_DMA (Bitfield-Mask: 0x01)                         */
#define GPREG_SET_FREEZE_REG_FRZ_USB_Pos  (4UL)                     /*!< FRZ_USB (Bit 4)                                       */
#define GPREG_SET_FREEZE_REG_FRZ_USB_Msk  (0x10UL)                  /*!< FRZ_USB (Bitfield-Mask: 0x01)                         */
#define GPREG_SET_FREEZE_REG_FRZ_SYS_WDOG_Pos (3UL)                 /*!< FRZ_SYS_WDOG (Bit 3)                                  */
#define GPREG_SET_FREEZE_REG_FRZ_SYS_WDOG_Msk (0x8UL)               /*!< FRZ_SYS_WDOG (Bitfield-Mask: 0x01)                    */
#define GPREG_SET_FREEZE_REG_FRZ_RESERVED_Pos (2UL)                 /*!< FRZ_RESERVED (Bit 2)                                  */
#define GPREG_SET_FREEZE_REG_FRZ_RESERVED_Msk (0x4UL)               /*!< FRZ_RESERVED (Bitfield-Mask: 0x01)                    */
#define GPREG_SET_FREEZE_REG_FRZ_SWTIM_Pos (1UL)                    /*!< FRZ_SWTIM (Bit 1)                                     */
#define GPREG_SET_FREEZE_REG_FRZ_SWTIM_Msk (0x2UL)                  /*!< FRZ_SWTIM (Bitfield-Mask: 0x01)                       */
#define GPREG_SET_FREEZE_REG_FRZ_WKUPTIM_Pos (0UL)                  /*!< FRZ_WKUPTIM (Bit 0)                                   */
#define GPREG_SET_FREEZE_REG_FRZ_WKUPTIM_Msk (0x1UL)                /*!< FRZ_WKUPTIM (Bitfield-Mask: 0x01)                     */
/* ======================================================  USBPAD_REG  ======================================================= */
#define GPREG_USBPAD_REG_USBPHY_FORCE_SW2_ON_Pos (2UL)              /*!< USBPHY_FORCE_SW2_ON (Bit 2)                           */
#define GPREG_USBPAD_REG_USBPHY_FORCE_SW2_ON_Msk (0x4UL)            /*!< USBPHY_FORCE_SW2_ON (Bitfield-Mask: 0x01)             */
#define GPREG_USBPAD_REG_USBPHY_FORCE_SW1_OFF_Pos (1UL)             /*!< USBPHY_FORCE_SW1_OFF (Bit 1)                          */
#define GPREG_USBPAD_REG_USBPHY_FORCE_SW1_OFF_Msk (0x2UL)           /*!< USBPHY_FORCE_SW1_OFF (Bitfield-Mask: 0x01)            */
#define GPREG_USBPAD_REG_USBPAD_EN_Pos    (0UL)                     /*!< USBPAD_EN (Bit 0)                                     */
#define GPREG_USBPAD_REG_USBPAD_EN_Msk    (0x1UL)                   /*!< USBPAD_EN (Bitfield-Mask: 0x01)                       */


/* =========================================================================================================================== */
/* ================                                         GPU_CORE                                          ================ */
/* =========================================================================================================================== */

/* ======================================================  D2_CACHECTL  ====================================================== */
#define GPU_CORE_D2_CACHECTL_D2C_CACHECTL_FLUSH_TX_Pos (3UL)        /*!< D2C_CACHECTL_FLUSH_TX (Bit 3)                         */
#define GPU_CORE_D2_CACHECTL_D2C_CACHECTL_FLUSH_TX_Msk (0x8UL)      /*!< D2C_CACHECTL_FLUSH_TX (Bitfield-Mask: 0x01)           */
#define GPU_CORE_D2_CACHECTL_D2C_CACHECTL_ENABLE_TX_Pos (2UL)       /*!< D2C_CACHECTL_ENABLE_TX (Bit 2)                        */
#define GPU_CORE_D2_CACHECTL_D2C_CACHECTL_ENABLE_TX_Msk (0x4UL)     /*!< D2C_CACHECTL_ENABLE_TX (Bitfield-Mask: 0x01)          */
#define GPU_CORE_D2_CACHECTL_D2C_CACHECTL_FLUSH_FB_Pos (1UL)        /*!< D2C_CACHECTL_FLUSH_FB (Bit 1)                         */
#define GPU_CORE_D2_CACHECTL_D2C_CACHECTL_FLUSH_FB_Msk (0x2UL)      /*!< D2C_CACHECTL_FLUSH_FB (Bitfield-Mask: 0x01)           */
#define GPU_CORE_D2_CACHECTL_D2C_CACHECTL_ENABLE_FB_Pos (0UL)       /*!< D2C_CACHECTL_ENABLE_FB (Bit 0)                        */
#define GPU_CORE_D2_CACHECTL_D2C_CACHECTL_ENABLE_FB_Msk (0x1UL)     /*!< D2C_CACHECTL_ENABLE_FB (Bitfield-Mask: 0x01)          */
/* =======================================================  D2_COLKEY  ======================================================= */
#define GPU_CORE_D2_COLKEY_COLKEY_RGB_Pos (0UL)                     /*!< COLKEY_RGB (Bit 0)                                    */
#define GPU_CORE_D2_COLKEY_COLKEY_RGB_Msk (0xffffffUL)              /*!< COLKEY_RGB (Bitfield-Mask: 0xffffff)                  */
/* =======================================================  D2_COLOR1  ======================================================= */
#define GPU_CORE_D2_COLOR1_COLOR1_Pos     (0UL)                     /*!< COLOR1 (Bit 0)                                        */
#define GPU_CORE_D2_COLOR1_COLOR1_Msk     (0xffffffffUL)            /*!< COLOR1 (Bitfield-Mask: 0xffffffff)                    */
/* =======================================================  D2_COLOR2  ======================================================= */
#define GPU_CORE_D2_COLOR2_COLOR2_Pos     (0UL)                     /*!< COLOR2 (Bit 0)                                        */
#define GPU_CORE_D2_COLOR2_COLOR2_Msk     (0xffffffffUL)            /*!< COLOR2 (Bitfield-Mask: 0xffffffff)                    */
/* ======================================================  D2_CONTROL  ======================================================= */
#define GPU_CORE_D2_CONTROL_D2C_LIMITERPRECISION_Pos (24UL)         /*!< D2C_LIMITERPRECISION (Bit 24)                         */
#define GPU_CORE_D2_CONTROL_D2C_LIMITERPRECISION_Msk (0x1000000UL)  /*!< D2C_LIMITERPRECISION (Bitfield-Mask: 0x01)            */
#define GPU_CORE_D2_CONTROL_D2C_SPANSTORE_Pos (23UL)                /*!< D2C_SPANSTORE (Bit 23)                                */
#define GPU_CORE_D2_CONTROL_D2C_SPANSTORE_Msk (0x800000UL)          /*!< D2C_SPANSTORE (Bitfield-Mask: 0x01)                   */
#define GPU_CORE_D2_CONTROL_D2C_SPANABORT_Pos (22UL)                /*!< D2C_SPANABORT (Bit 22)                                */
#define GPU_CORE_D2_CONTROL_D2C_SPANABORT_Msk (0x400000UL)          /*!< D2C_SPANABORT (Bitfield-Mask: 0x01)                   */
#define GPU_CORE_D2_CONTROL_D2C_UNIONCD_Pos (21UL)                  /*!< D2C_UNIONCD (Bit 21)                                  */
#define GPU_CORE_D2_CONTROL_D2C_UNIONCD_Msk (0x200000UL)            /*!< D2C_UNIONCD (Bitfield-Mask: 0x01)                     */
#define GPU_CORE_D2_CONTROL_D2C_UNIONAB_Pos (20UL)                  /*!< D2C_UNIONAB (Bit 20)                                  */
#define GPU_CORE_D2_CONTROL_D2C_UNIONAB_Msk (0x100000UL)            /*!< D2C_UNIONAB (Bitfield-Mask: 0x01)                     */
#define GPU_CORE_D2_CONTROL_D2C_UNION56_Pos (19UL)                  /*!< D2C_UNION56 (Bit 19)                                  */
#define GPU_CORE_D2_CONTROL_D2C_UNION56_Msk (0x80000UL)             /*!< D2C_UNION56 (Bitfield-Mask: 0x01)                     */
#define GPU_CORE_D2_CONTROL_D2C_UNION34_Pos (18UL)                  /*!< D2C_UNION34 (Bit 18)                                  */
#define GPU_CORE_D2_CONTROL_D2C_UNION34_Msk (0x40000UL)             /*!< D2C_UNION34 (Bitfield-Mask: 0x01)                     */
#define GPU_CORE_D2_CONTROL_D2C_UNION12_Pos (17UL)                  /*!< D2C_UNION12 (Bit 17)                                  */
#define GPU_CORE_D2_CONTROL_D2C_UNION12_Msk (0x20000UL)             /*!< D2C_UNION12 (Bitfield-Mask: 0x01)                     */
#define GPU_CORE_D2_CONTROL_D2C_BAND2ENABLE_Pos (16UL)              /*!< D2C_BAND2ENABLE (Bit 16)                              */
#define GPU_CORE_D2_CONTROL_D2C_BAND2ENABLE_Msk (0x10000UL)         /*!< D2C_BAND2ENABLE (Bitfield-Mask: 0x01)                 */
#define GPU_CORE_D2_CONTROL_D2C_BAND1ENABLE_Pos (15UL)              /*!< D2C_BAND1ENABLE (Bit 15)                              */
#define GPU_CORE_D2_CONTROL_D2C_BAND1ENABLE_Msk (0x8000UL)          /*!< D2C_BAND1ENABLE (Bitfield-Mask: 0x01)                 */
#define GPU_CORE_D2_CONTROL_D2C_LIM6THRESHOLD_Pos (14UL)            /*!< D2C_LIM6THRESHOLD (Bit 14)                            */
#define GPU_CORE_D2_CONTROL_D2C_LIM6THRESHOLD_Msk (0x4000UL)        /*!< D2C_LIM6THRESHOLD (Bitfield-Mask: 0x01)               */
#define GPU_CORE_D2_CONTROL_D2C_LIM5THRESHOLD_Pos (13UL)            /*!< D2C_LIM5THRESHOLD (Bit 13)                            */
#define GPU_CORE_D2_CONTROL_D2C_LIM5THRESHOLD_Msk (0x2000UL)        /*!< D2C_LIM5THRESHOLD (Bitfield-Mask: 0x01)               */
#define GPU_CORE_D2_CONTROL_D2C_LIM4THRESHOLD_Pos (12UL)            /*!< D2C_LIM4THRESHOLD (Bit 12)                            */
#define GPU_CORE_D2_CONTROL_D2C_LIM4THRESHOLD_Msk (0x1000UL)        /*!< D2C_LIM4THRESHOLD (Bitfield-Mask: 0x01)               */
#define GPU_CORE_D2_CONTROL_D2C_LIM3THRESHOLD_Pos (11UL)            /*!< D2C_LIM3THRESHOLD (Bit 11)                            */
#define GPU_CORE_D2_CONTROL_D2C_LIM3THRESHOLD_Msk (0x800UL)         /*!< D2C_LIM3THRESHOLD (Bitfield-Mask: 0x01)               */
#define GPU_CORE_D2_CONTROL_D2C_LIM2THRESHOLD_Pos (10UL)            /*!< D2C_LIM2THRESHOLD (Bit 10)                            */
#define GPU_CORE_D2_CONTROL_D2C_LIM2THRESHOLD_Msk (0x400UL)         /*!< D2C_LIM2THRESHOLD (Bitfield-Mask: 0x01)               */
#define GPU_CORE_D2_CONTROL_D2C_LIM1THRESHOLD_Pos (9UL)             /*!< D2C_LIM1THRESHOLD (Bit 9)                             */
#define GPU_CORE_D2_CONTROL_D2C_LIM1THRESHOLD_Msk (0x200UL)         /*!< D2C_LIM1THRESHOLD (Bitfield-Mask: 0x01)               */
#define GPU_CORE_D2_CONTROL_D2C_QUAD3ENABLE_Pos (8UL)               /*!< D2C_QUAD3ENABLE (Bit 8)                               */
#define GPU_CORE_D2_CONTROL_D2C_QUAD3ENABLE_Msk (0x100UL)           /*!< D2C_QUAD3ENABLE (Bitfield-Mask: 0x01)                 */
#define GPU_CORE_D2_CONTROL_D2C_QUAD2ENABLE_Pos (7UL)               /*!< D2C_QUAD2ENABLE (Bit 7)                               */
#define GPU_CORE_D2_CONTROL_D2C_QUAD2ENABLE_Msk (0x80UL)            /*!< D2C_QUAD2ENABLE (Bitfield-Mask: 0x01)                 */
#define GPU_CORE_D2_CONTROL_D2C_QUAD1ENABLE_Pos (6UL)               /*!< D2C_QUAD1ENABLE (Bit 6)                               */
#define GPU_CORE_D2_CONTROL_D2C_QUAD1ENABLE_Msk (0x40UL)            /*!< D2C_QUAD1ENABLE (Bitfield-Mask: 0x01)                 */
#define GPU_CORE_D2_CONTROL_D2C_LIM6ENABLE_Pos (5UL)                /*!< D2C_LIM6ENABLE (Bit 5)                                */
#define GPU_CORE_D2_CONTROL_D2C_LIM6ENABLE_Msk (0x20UL)             /*!< D2C_LIM6ENABLE (Bitfield-Mask: 0x01)                  */
#define GPU_CORE_D2_CONTROL_D2C_LIM5ENABLE_Pos (4UL)                /*!< D2C_LIM5ENABLE (Bit 4)                                */
#define GPU_CORE_D2_CONTROL_D2C_LIM5ENABLE_Msk (0x10UL)             /*!< D2C_LIM5ENABLE (Bitfield-Mask: 0x01)                  */
#define GPU_CORE_D2_CONTROL_D2C_LIM4ENABLE_Pos (3UL)                /*!< D2C_LIM4ENABLE (Bit 3)                                */
#define GPU_CORE_D2_CONTROL_D2C_LIM4ENABLE_Msk (0x8UL)              /*!< D2C_LIM4ENABLE (Bitfield-Mask: 0x01)                  */
#define GPU_CORE_D2_CONTROL_D2C_LIM3ENABLE_Pos (2UL)                /*!< D2C_LIM3ENABLE (Bit 2)                                */
#define GPU_CORE_D2_CONTROL_D2C_LIM3ENABLE_Msk (0x4UL)              /*!< D2C_LIM3ENABLE (Bitfield-Mask: 0x01)                  */
#define GPU_CORE_D2_CONTROL_D2C_LIM2ENABLE_Pos (1UL)                /*!< D2C_LIM2ENABLE (Bit 1)                                */
#define GPU_CORE_D2_CONTROL_D2C_LIM2ENABLE_Msk (0x2UL)              /*!< D2C_LIM2ENABLE (Bitfield-Mask: 0x01)                  */
#define GPU_CORE_D2_CONTROL_D2C_LIM1ENABLE_Pos (0UL)                /*!< D2C_LIM1ENABLE (Bit 0)                                */
#define GPU_CORE_D2_CONTROL_D2C_LIM1ENABLE_Msk (0x1UL)              /*!< D2C_LIM1ENABLE (Bitfield-Mask: 0x01)                  */
/* ======================================================  D2_CONTROL2  ====================================================== */
#define GPU_CORE_D2_CONTROL2_D2C_RLEFORMAT2_Pos (31UL)              /*!< D2C_RLEFORMAT2 (Bit 31)                               */
#define GPU_CORE_D2_CONTROL2_D2C_RLEFORMAT2_Msk (0x80000000UL)      /*!< D2C_RLEFORMAT2 (Bitfield-Mask: 0x01)                  */
#define GPU_CORE_D2_CONTROL2_D2C_RLEFORMAT1_Pos (30UL)              /*!< D2C_RLEFORMAT1 (Bit 30)                               */
#define GPU_CORE_D2_CONTROL2_D2C_RLEFORMAT1_Msk (0x40000000UL)      /*!< D2C_RLEFORMAT1 (Bitfield-Mask: 0x01)                  */
#define GPU_CORE_D2_CONTROL2_D2C_BDIA_Pos (29UL)                    /*!< D2C_BDIA (Bit 29)                                     */
#define GPU_CORE_D2_CONTROL2_D2C_BDIA_Msk (0x20000000UL)            /*!< D2C_BDIA (Bitfield-Mask: 0x01)                        */
#define GPU_CORE_D2_CONTROL2_D2C_BSIA_Pos (28UL)                    /*!< D2C_BSIA (Bit 28)                                     */
#define GPU_CORE_D2_CONTROL2_D2C_BSIA_Msk (0x10000000UL)            /*!< D2C_BSIA (Bitfield-Mask: 0x01)                        */
#define GPU_CORE_D2_CONTROL2_D2C_CLUTFORMAT1_Pos (27UL)             /*!< D2C_CLUTFORMAT1 (Bit 27)                              */
#define GPU_CORE_D2_CONTROL2_D2C_CLUTFORMAT1_Msk (0x8000000UL)      /*!< D2C_CLUTFORMAT1 (Bitfield-Mask: 0x01)                 */
#define GPU_CORE_D2_CONTROL2_D2C_COLKEY_ENABLE_Pos (26UL)           /*!< D2C_COLKEY_ENABLE (Bit 26)                            */
#define GPU_CORE_D2_CONTROL2_D2C_COLKEY_ENABLE_Msk (0x4000000UL)    /*!< D2C_COLKEY_ENABLE (Bitfield-Mask: 0x01)               */
#define GPU_CORE_D2_CONTROL2_D2C_CLUT_ENABLE_Pos (25UL)             /*!< D2C_CLUT_ENABLE (Bit 25)                              */
#define GPU_CORE_D2_CONTROL2_D2C_CLUT_ENABLE_Msk (0x2000000UL)      /*!< D2C_CLUT_ENABLE (Bitfield-Mask: 0x01)                 */
#define GPU_CORE_D2_CONTROL2_D2C_RLE_ENABLE_Pos (24UL)              /*!< D2C_RLE_ENABLE (Bit 24)                               */
#define GPU_CORE_D2_CONTROL2_D2C_RLE_ENABLE_Msk (0x1000000UL)       /*!< D2C_RLE_ENABLE (Bitfield-Mask: 0x01)                  */
#define GPU_CORE_D2_CONTROL2_D2C_WRITEALPHA2_Pos (23UL)             /*!< D2C_WRITEALPHA2 (Bit 23)                              */
#define GPU_CORE_D2_CONTROL2_D2C_WRITEALPHA2_Msk (0x800000UL)       /*!< D2C_WRITEALPHA2 (Bitfield-Mask: 0x01)                 */
#define GPU_CORE_D2_CONTROL2_D2C_WRITEALPHA1_Pos (22UL)             /*!< D2C_WRITEALPHA1 (Bit 22)                              */
#define GPU_CORE_D2_CONTROL2_D2C_WRITEALPHA1_Msk (0x400000UL)       /*!< D2C_WRITEALPHA1 (Bitfield-Mask: 0x01)                 */
#define GPU_CORE_D2_CONTROL2_D2C_WRITEFORMAT2_Pos (21UL)            /*!< D2C_WRITEFORMAT2 (Bit 21)                             */
#define GPU_CORE_D2_CONTROL2_D2C_WRITEFORMAT2_Msk (0x200000UL)      /*!< D2C_WRITEFORMAT2 (Bitfield-Mask: 0x01)                */
#define GPU_CORE_D2_CONTROL2_D2C_WRITEFORMAT1_Pos (20UL)            /*!< D2C_WRITEFORMAT1 (Bit 20)                             */
#define GPU_CORE_D2_CONTROL2_D2C_WRITEFORMAT1_Msk (0x100000UL)      /*!< D2C_WRITEFORMAT1 (Bitfield-Mask: 0x01)                */
#define GPU_CORE_D2_CONTROL2_D2C_READFORMAT2_Pos (19UL)             /*!< D2C_READFORMAT2 (Bit 19)                              */
#define GPU_CORE_D2_CONTROL2_D2C_READFORMAT2_Msk (0x80000UL)        /*!< D2C_READFORMAT2 (Bitfield-Mask: 0x01)                 */
#define GPU_CORE_D2_CONTROL2_D2C_READFORMAT1_Pos (18UL)             /*!< D2C_READFORMAT1 (Bit 18)                              */
#define GPU_CORE_D2_CONTROL2_D2C_READFORMAT1_Msk (0x40000UL)        /*!< D2C_READFORMAT1 (Bitfield-Mask: 0x01)                 */
#define GPU_CORE_D2_CONTROL2_D2C_TEXTUREFILTERY_Pos (17UL)          /*!< D2C_TEXTUREFILTERY (Bit 17)                           */
#define GPU_CORE_D2_CONTROL2_D2C_TEXTUREFILTERY_Msk (0x20000UL)     /*!< D2C_TEXTUREFILTERY (Bitfield-Mask: 0x01)              */
#define GPU_CORE_D2_CONTROL2_D2C_TEXTUREFILTERX_Pos (16UL)          /*!< D2C_TEXTUREFILTERX (Bit 16)                           */
#define GPU_CORE_D2_CONTROL2_D2C_TEXTUREFILTERX_Msk (0x10000UL)     /*!< D2C_TEXTUREFILTERX (Bitfield-Mask: 0x01)              */
#define GPU_CORE_D2_CONTROL2_D2C_TEXTURECLAMPY_Pos (15UL)           /*!< D2C_TEXTURECLAMPY (Bit 15)                            */
#define GPU_CORE_D2_CONTROL2_D2C_TEXTURECLAMPY_Msk (0x8000UL)       /*!< D2C_TEXTURECLAMPY (Bitfield-Mask: 0x01)               */
#define GPU_CORE_D2_CONTROL2_D2C_TEXTURECLAMPX_Pos (14UL)           /*!< D2C_TEXTURECLAMPX (Bit 14)                            */
#define GPU_CORE_D2_CONTROL2_D2C_TEXTURECLAMPX_Msk (0x4000UL)       /*!< D2C_TEXTURECLAMPX (Bitfield-Mask: 0x01)               */
#define GPU_CORE_D2_CONTROL2_D2C_BC2_Pos  (13UL)                    /*!< D2C_BC2 (Bit 13)                                      */
#define GPU_CORE_D2_CONTROL2_D2C_BC2_Msk  (0x2000UL)                /*!< D2C_BC2 (Bitfield-Mask: 0x01)                         */
#define GPU_CORE_D2_CONTROL2_D2C_BDI_Pos  (12UL)                    /*!< D2C_BDI (Bit 12)                                      */
#define GPU_CORE_D2_CONTROL2_D2C_BDI_Msk  (0x1000UL)                /*!< D2C_BDI (Bitfield-Mask: 0x01)                         */
#define GPU_CORE_D2_CONTROL2_D2C_BSI_Pos  (11UL)                    /*!< D2C_BSI (Bit 11)                                      */
#define GPU_CORE_D2_CONTROL2_D2C_BSI_Msk  (0x800UL)                 /*!< D2C_BSI (Bitfield-Mask: 0x01)                         */
#define GPU_CORE_D2_CONTROL2_D2C_BDF_Pos  (10UL)                    /*!< D2C_BDF (Bit 10)                                      */
#define GPU_CORE_D2_CONTROL2_D2C_BDF_Msk  (0x400UL)                 /*!< D2C_BDF (Bitfield-Mask: 0x01)                         */
#define GPU_CORE_D2_CONTROL2_D2C_BSF_Pos  (9UL)                     /*!< D2C_BSF (Bit 9)                                       */
#define GPU_CORE_D2_CONTROL2_D2C_BSF_Msk  (0x200UL)                 /*!< D2C_BSF (Bitfield-Mask: 0x01)                         */
#define GPU_CORE_D2_CONTROL2_D2C_WRITEFORMAT3_Pos (8UL)             /*!< D2C_WRITEFORMAT3 (Bit 8)                              */
#define GPU_CORE_D2_CONTROL2_D2C_WRITEFORMAT3_Msk (0x100UL)         /*!< D2C_WRITEFORMAT3 (Bitfield-Mask: 0x01)                */
#define GPU_CORE_D2_CONTROL2_D2C_BDFA_Pos (7UL)                     /*!< D2C_BDFA (Bit 7)                                      */
#define GPU_CORE_D2_CONTROL2_D2C_BDFA_Msk (0x80UL)                  /*!< D2C_BDFA (Bitfield-Mask: 0x01)                        */
#define GPU_CORE_D2_CONTROL2_D2C_BSFA_Pos (6UL)                     /*!< D2C_BSFA (Bit 6)                                      */
#define GPU_CORE_D2_CONTROL2_D2C_BSFA_Msk (0x40UL)                  /*!< D2C_BSFA (Bitfield-Mask: 0x01)                        */
#define GPU_CORE_D2_CONTROL2_D2C_READFORMAT4_Pos (5UL)              /*!< D2C_READFORMAT4 (Bit 5)                               */
#define GPU_CORE_D2_CONTROL2_D2C_READFORMAT4_Msk (0x20UL)           /*!< D2C_READFORMAT4 (Bitfield-Mask: 0x01)                 */
#define GPU_CORE_D2_CONTROL2_D2C_READFORMAT3_Pos (4UL)              /*!< D2C_READFORMAT3 (Bit 4)                               */
#define GPU_CORE_D2_CONTROL2_D2C_READFORMAT3_Msk (0x10UL)           /*!< D2C_READFORMAT3 (Bitfield-Mask: 0x01)                 */
#define GPU_CORE_D2_CONTROL2_USE_ACB_Pos  (3UL)                     /*!< USE_ACB (Bit 3)                                       */
#define GPU_CORE_D2_CONTROL2_USE_ACB_Msk  (0x8UL)                   /*!< USE_ACB (Bitfield-Mask: 0x01)                         */
#define GPU_CORE_D2_CONTROL2_D2C_PATTERNSOURCEL5_Pos (2UL)          /*!< D2C_PATTERNSOURCEL5 (Bit 2)                           */
#define GPU_CORE_D2_CONTROL2_D2C_PATTERNSOURCEL5_Msk (0x4UL)        /*!< D2C_PATTERNSOURCEL5 (Bitfield-Mask: 0x01)             */
#define GPU_CORE_D2_CONTROL2_D2C_TEXTUREENABLE_Pos (1UL)            /*!< D2C_TEXTUREENABLE (Bit 1)                             */
#define GPU_CORE_D2_CONTROL2_D2C_TEXTUREENABLE_Msk (0x2UL)          /*!< D2C_TEXTUREENABLE (Bitfield-Mask: 0x01)               */
#define GPU_CORE_D2_CONTROL2_D2C_PATTERNENABLE_Pos (0UL)            /*!< D2C_PATTERNENABLE (Bit 0)                             */
#define GPU_CORE_D2_CONTROL2_D2C_PATTERNENABLE_Msk (0x1UL)          /*!< D2C_PATTERNENABLE (Bitfield-Mask: 0x01)               */
/* ======================================================  D2_CONTROL3  ====================================================== */
#define GPU_CORE_D2_CONTROL3_BURSTLENGTH_MDL_Pos (24UL)             /*!< BURSTLENGTH_MDL (Bit 24)                              */
#define GPU_CORE_D2_CONTROL3_BURSTLENGTH_MDL_Msk (0x7000000UL)      /*!< BURSTLENGTH_MDL (Bitfield-Mask: 0x07)                 */
#define GPU_CORE_D2_CONTROL3_BURSTLENGTH_MTX_Pos (16UL)             /*!< BURSTLENGTH_MTX (Bit 16)                              */
#define GPU_CORE_D2_CONTROL3_BURSTLENGTH_MTX_Msk (0x70000UL)        /*!< BURSTLENGTH_MTX (Bitfield-Mask: 0x07)                 */
#define GPU_CORE_D2_CONTROL3_BURSTLENGTH_MFBW_Pos (8UL)             /*!< BURSTLENGTH_MFBW (Bit 8)                              */
#define GPU_CORE_D2_CONTROL3_BURSTLENGTH_MFBW_Msk (0x700UL)         /*!< BURSTLENGTH_MFBW (Bitfield-Mask: 0x07)                */
#define GPU_CORE_D2_CONTROL3_BURSTLENGTH_MFBR_Pos (0UL)             /*!< BURSTLENGTH_MFBR (Bit 0)                              */
#define GPU_CORE_D2_CONTROL3_BURSTLENGTH_MFBR_Msk (0x7UL)           /*!< BURSTLENGTH_MFBR (Bitfield-Mask: 0x07)                */
/* =====================================================  D2_DLISTSTART  ===================================================== */
#define GPU_CORE_D2_DLISTSTART_DLISTSTART_Pos (0UL)                 /*!< DLISTSTART (Bit 0)                                    */
#define GPU_CORE_D2_DLISTSTART_DLISTSTART_Msk (0xffffffffUL)        /*!< DLISTSTART (Bitfield-Mask: 0xffffffff)                */
/* =====================================================  D2_HWREVISION  ===================================================== */
#define GPU_CORE_D2_HWREVISION_FB_BURSTSPLITTING_Pos (28UL)         /*!< FB_BURSTSPLITTING (Bit 28)                            */
#define GPU_CORE_D2_HWREVISION_FB_BURSTSPLITTING_Msk (0x10000000UL) /*!< FB_BURSTSPLITTING (Bitfield-Mask: 0x01)               */
#define GPU_CORE_D2_HWREVISION_FB_ALPHACHANNELBLENDING_Pos (27UL)   /*!< FB_ALPHACHANNELBLENDING (Bit 27)                      */
#define GPU_CORE_D2_HWREVISION_FB_ALPHACHANNELBLENDING_Msk (0x8000000UL) /*!< FB_ALPHACHANNELBLENDING (Bitfield-Mask: 0x01)    */
#define GPU_CORE_D2_HWREVISION_FB_HILIMITERPRECISION_Pos (26UL)     /*!< FB_HILIMITERPRECISION (Bit 26)                        */
#define GPU_CORE_D2_HWREVISION_FB_HILIMITERPRECISION_Msk (0x4000000UL) /*!< FB_HILIMITERPRECISION (Bitfield-Mask: 0x01)        */
#define GPU_CORE_D2_HWREVISION_FB_COLORKEY_Pos (25UL)               /*!< FB_COLORKEY (Bit 25)                                  */
#define GPU_CORE_D2_HWREVISION_FB_COLORKEY_Msk (0x2000000UL)        /*!< FB_COLORKEY (Bitfield-Mask: 0x01)                     */
#define GPU_CORE_D2_HWREVISION_FB_TEXCLUT256_Pos (24UL)             /*!< FB_TEXCLUT256 (Bit 24)                                */
#define GPU_CORE_D2_HWREVISION_FB_TEXCLUT256_Msk (0x1000000UL)      /*!< FB_TEXCLUT256 (Bitfield-Mask: 0x01)                   */
#define GPU_CORE_D2_HWREVISION_FB_RLEUNIT_Pos (23UL)                /*!< FB_RLEUNIT (Bit 23)                                   */
#define GPU_CORE_D2_HWREVISION_FB_RLEUNIT_Msk (0x800000UL)          /*!< FB_RLEUNIT (Bitfield-Mask: 0x01)                      */
#define GPU_CORE_D2_HWREVISION_FB_FBPREFETCH_Pos (22UL)             /*!< FB_FBPREFETCH (Bit 22)                                */
#define GPU_CORE_D2_HWREVISION_FB_FBPREFETCH_Msk (0x400000UL)       /*!< FB_FBPREFETCH (Bitfield-Mask: 0x01)                   */
#define GPU_CORE_D2_HWREVISION_FB_TEXCLUT_Pos (21UL)                /*!< FB_TEXCLUT (Bit 21)                                   */
#define GPU_CORE_D2_HWREVISION_FB_TEXCLUT_Msk (0x200000UL)          /*!< FB_TEXCLUT (Bitfield-Mask: 0x01)                      */
#define GPU_CORE_D2_HWREVISION_FB_PERFCOUNT_Pos (20UL)              /*!< FB_PERFCOUNT (Bit 20)                                 */
#define GPU_CORE_D2_HWREVISION_FB_PERFCOUNT_Msk (0x100000UL)        /*!< FB_PERFCOUNT (Bitfield-Mask: 0x01)                    */
#define GPU_CORE_D2_HWREVISION_FB_TXCACHE_Pos (19UL)                /*!< FB_TXCACHE (Bit 19)                                   */
#define GPU_CORE_D2_HWREVISION_FB_TXCACHE_Msk (0x80000UL)           /*!< FB_TXCACHE (Bitfield-Mask: 0x01)                      */
#define GPU_CORE_D2_HWREVISION_FB_FBCACHE_Pos (18UL)                /*!< FB_FBCACHE (Bit 18)                                   */
#define GPU_CORE_D2_HWREVISION_FB_FBCACHE_Msk (0x40000UL)           /*!< FB_FBCACHE (Bitfield-Mask: 0x01)                      */
#define GPU_CORE_D2_HWREVISION_FB_DLR_Pos (17UL)                    /*!< FB_DLR (Bit 17)                                       */
#define GPU_CORE_D2_HWREVISION_FB_DLR_Msk (0x20000UL)               /*!< FB_DLR (Bitfield-Mask: 0x01)                          */
#define GPU_CORE_D2_HWREVISION_FB_SWGPU_Pos (16UL)                  /*!< FB_SWGPU (Bit 16)                                     */
#define GPU_CORE_D2_HWREVISION_FB_SWGPU_Msk (0x10000UL)             /*!< FB_SWGPU (Bitfield-Mask: 0x01)                        */
#define GPU_CORE_D2_HWREVISION_HWTYPE_Pos (12UL)                    /*!< HWTYPE (Bit 12)                                       */
#define GPU_CORE_D2_HWREVISION_HWTYPE_Msk (0xf000UL)                /*!< HWTYPE (Bitfield-Mask: 0x0f)                          */
#define GPU_CORE_D2_HWREVISION_HWBRANCH_Pos (8UL)                   /*!< HWBRANCH (Bit 8)                                      */
#define GPU_CORE_D2_HWREVISION_HWBRANCH_Msk (0xf00UL)               /*!< HWBRANCH (Bitfield-Mask: 0x0f)                        */
#define GPU_CORE_D2_HWREVISION_HWREVISION_Pos (0UL)                 /*!< HWREVISION (Bit 0)                                    */
#define GPU_CORE_D2_HWREVISION_HWREVISION_Msk (0xffUL)              /*!< HWREVISION (Bitfield-Mask: 0xff)                      */
/* =======================================================  D2_IRQCTL  ======================================================= */
#define GPU_CORE_D2_IRQCTL_D2IRQCTL_CLR_BUS_ERROR_Pos (5UL)         /*!< D2IRQCTL_CLR_BUS_ERROR (Bit 5)                        */
#define GPU_CORE_D2_IRQCTL_D2IRQCTL_CLR_BUS_ERROR_Msk (0x20UL)      /*!< D2IRQCTL_CLR_BUS_ERROR (Bitfield-Mask: 0x01)          */
#define GPU_CORE_D2_IRQCTL_D2IRQCTL_ENABLE_BUS_ERROR_Pos (4UL)      /*!< D2IRQCTL_ENABLE_BUS_ERROR (Bit 4)                     */
#define GPU_CORE_D2_IRQCTL_D2IRQCTL_ENABLE_BUS_ERROR_Msk (0x10UL)   /*!< D2IRQCTL_ENABLE_BUS_ERROR (Bitfield-Mask: 0x01)       */
#define GPU_CORE_D2_IRQCTL_D2IRQCTL_CLR_FINISH_DLIST_Pos (3UL)      /*!< D2IRQCTL_CLR_FINISH_DLIST (Bit 3)                     */
#define GPU_CORE_D2_IRQCTL_D2IRQCTL_CLR_FINISH_DLIST_Msk (0x8UL)    /*!< D2IRQCTL_CLR_FINISH_DLIST (Bitfield-Mask: 0x01)       */
#define GPU_CORE_D2_IRQCTL_D2IRQCTL_CLR_FINISH_ENUM_Pos (2UL)       /*!< D2IRQCTL_CLR_FINISH_ENUM (Bit 2)                      */
#define GPU_CORE_D2_IRQCTL_D2IRQCTL_CLR_FINISH_ENUM_Msk (0x4UL)     /*!< D2IRQCTL_CLR_FINISH_ENUM (Bitfield-Mask: 0x01)        */
#define GPU_CORE_D2_IRQCTL_D2IRQCTL_ENABLE_FINISH_DLIST_Pos (1UL)   /*!< D2IRQCTL_ENABLE_FINISH_DLIST (Bit 1)                  */
#define GPU_CORE_D2_IRQCTL_D2IRQCTL_ENABLE_FINISH_DLIST_Msk (0x2UL) /*!< D2IRQCTL_ENABLE_FINISH_DLIST (Bitfield-Mask: 0x01)    */
#define GPU_CORE_D2_IRQCTL_D2IRQCTL_ENABLE_FINISH_ENUM_Pos (0UL)    /*!< D2IRQCTL_ENABLE_FINISH_ENUM (Bit 0)                   */
#define GPU_CORE_D2_IRQCTL_D2IRQCTL_ENABLE_FINISH_ENUM_Msk (0x1UL)  /*!< D2IRQCTL_ENABLE_FINISH_ENUM (Bitfield-Mask: 0x01)     */
/* =======================================================  D2_L1BAND  ======================================================= */
#define GPU_CORE_D2_L1BAND_L1BAND_Pos     (0UL)                     /*!< L1BAND (Bit 0)                                        */
#define GPU_CORE_D2_L1BAND_L1BAND_Msk     (0xffffffffUL)            /*!< L1BAND (Bitfield-Mask: 0xffffffff)                    */
/* ======================================================  D2_L1START  ======================================================= */
#define GPU_CORE_D2_L1START_L1START_Pos   (0UL)                     /*!< L1START (Bit 0)                                       */
#define GPU_CORE_D2_L1START_L1START_Msk   (0xffffffffUL)            /*!< L1START (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  D2_L1XADD  ======================================================= */
#define GPU_CORE_D2_L1XADD_L1XADD_Pos     (0UL)                     /*!< L1XADD (Bit 0)                                        */
#define GPU_CORE_D2_L1XADD_L1XADD_Msk     (0xffffffffUL)            /*!< L1XADD (Bitfield-Mask: 0xffffffff)                    */
/* =======================================================  D2_L1YADD  ======================================================= */
#define GPU_CORE_D2_L1YADD_L1YADD_Pos     (0UL)                     /*!< L1YADD (Bit 0)                                        */
#define GPU_CORE_D2_L1YADD_L1YADD_Msk     (0xffffffffUL)            /*!< L1YADD (Bitfield-Mask: 0xffffffff)                    */
/* =======================================================  D2_L2BAND  ======================================================= */
#define GPU_CORE_D2_L2BAND_L2BAND_Pos     (0UL)                     /*!< L2BAND (Bit 0)                                        */
#define GPU_CORE_D2_L2BAND_L2BAND_Msk     (0xffffffffUL)            /*!< L2BAND (Bitfield-Mask: 0xffffffff)                    */
/* ======================================================  D2_L2START  ======================================================= */
#define GPU_CORE_D2_L2START_L2START_Pos   (0UL)                     /*!< L2START (Bit 0)                                       */
#define GPU_CORE_D2_L2START_L2START_Msk   (0xffffffffUL)            /*!< L2START (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  D2_L2XADD  ======================================================= */
#define GPU_CORE_D2_L2XADD_L2XADD_Pos     (0UL)                     /*!< L2XADD (Bit 0)                                        */
#define GPU_CORE_D2_L2XADD_L2XADD_Msk     (0xffffffffUL)            /*!< L2XADD (Bitfield-Mask: 0xffffffff)                    */
/* =======================================================  D2_L2YADD  ======================================================= */
#define GPU_CORE_D2_L2YADD_L2YADD_Pos     (0UL)                     /*!< L2YADD (Bit 0)                                        */
#define GPU_CORE_D2_L2YADD_L2YADD_Msk     (0xffffffffUL)            /*!< L2YADD (Bitfield-Mask: 0xffffffff)                    */
/* ======================================================  D2_L3START  ======================================================= */
#define GPU_CORE_D2_L3START_L3START_Pos   (0UL)                     /*!< L3START (Bit 0)                                       */
#define GPU_CORE_D2_L3START_L3START_Msk   (0xffffffffUL)            /*!< L3START (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  D2_L3XADD  ======================================================= */
#define GPU_CORE_D2_L3XADD_L3XADD_Pos     (0UL)                     /*!< L3XADD (Bit 0)                                        */
#define GPU_CORE_D2_L3XADD_L3XADD_Msk     (0xffffffffUL)            /*!< L3XADD (Bitfield-Mask: 0xffffffff)                    */
/* =======================================================  D2_L3YADD  ======================================================= */
#define GPU_CORE_D2_L3YADD_L3YADD_Pos     (0UL)                     /*!< L3YADD (Bit 0)                                        */
#define GPU_CORE_D2_L3YADD_L3YADD_Msk     (0xffffffffUL)            /*!< L3YADD (Bitfield-Mask: 0xffffffff)                    */
/* ======================================================  D2_L4START  ======================================================= */
#define GPU_CORE_D2_L4START_L4START_Pos   (0UL)                     /*!< L4START (Bit 0)                                       */
#define GPU_CORE_D2_L4START_L4START_Msk   (0xffffffffUL)            /*!< L4START (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  D2_L4XADD  ======================================================= */
#define GPU_CORE_D2_L4XADD_L4XADD_Pos     (0UL)                     /*!< L4XADD (Bit 0)                                        */
#define GPU_CORE_D2_L4XADD_L4XADD_Msk     (0xffffffffUL)            /*!< L4XADD (Bitfield-Mask: 0xffffffff)                    */
/* =======================================================  D2_L4YADD  ======================================================= */
#define GPU_CORE_D2_L4YADD_L4YADD_Pos     (0UL)                     /*!< L4YADD (Bit 0)                                        */
#define GPU_CORE_D2_L4YADD_L4YADD_Msk     (0xffffffffUL)            /*!< L4YADD (Bitfield-Mask: 0xffffffff)                    */
/* ======================================================  D2_L5START  ======================================================= */
#define GPU_CORE_D2_L5START_L5START_Pos   (0UL)                     /*!< L5START (Bit 0)                                       */
#define GPU_CORE_D2_L5START_L5START_Msk   (0xffffffffUL)            /*!< L5START (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  D2_L5XADD  ======================================================= */
#define GPU_CORE_D2_L5XADD_L5XADD_Pos     (0UL)                     /*!< L5XADD (Bit 0)                                        */
#define GPU_CORE_D2_L5XADD_L5XADD_Msk     (0xffffffffUL)            /*!< L5XADD (Bitfield-Mask: 0xffffffff)                    */
/* =======================================================  D2_L5YADD  ======================================================= */
#define GPU_CORE_D2_L5YADD_L5YADD_Pos     (0UL)                     /*!< L5YADD (Bit 0)                                        */
#define GPU_CORE_D2_L5YADD_L5YADD_Msk     (0xffffffffUL)            /*!< L5YADD (Bitfield-Mask: 0xffffffff)                    */
/* ======================================================  D2_L6START  ======================================================= */
#define GPU_CORE_D2_L6START_L6START_Pos   (0UL)                     /*!< L6START (Bit 0)                                       */
#define GPU_CORE_D2_L6START_L6START_Msk   (0xffffffffUL)            /*!< L6START (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  D2_L6XADD  ======================================================= */
#define GPU_CORE_D2_L6XADD_L6XADD_Pos     (0UL)                     /*!< L6XADD (Bit 0)                                        */
#define GPU_CORE_D2_L6XADD_L6XADD_Msk     (0xffffffffUL)            /*!< L6XADD (Bitfield-Mask: 0xffffffff)                    */
/* =======================================================  D2_L6YADD  ======================================================= */
#define GPU_CORE_D2_L6YADD_L6YADD_Pos     (0UL)                     /*!< L6YADD (Bit 0)                                        */
#define GPU_CORE_D2_L6YADD_L6YADD_Msk     (0xffffffffUL)            /*!< L6YADD (Bitfield-Mask: 0xffffffff)                    */
/* ======================================================  D2_LUSTART  ======================================================= */
#define GPU_CORE_D2_LUSTART_LUSTART_Pos   (0UL)                     /*!< LUSTART (Bit 0)                                       */
#define GPU_CORE_D2_LUSTART_LUSTART_Msk   (0xffffffffUL)            /*!< LUSTART (Bitfield-Mask: 0xffffffff)                   */
/* =======================================================  D2_LUXADD  ======================================================= */
#define GPU_CORE_D2_LUXADD_LUXADD_Pos     (0UL)                     /*!< LUXADD (Bit 0)                                        */
#define GPU_CORE_D2_LUXADD_LUXADD_Msk     (0xffffffffUL)            /*!< LUXADD (Bitfield-Mask: 0xffffffff)                    */
/* =======================================================  D2_LUYADD  ======================================================= */
#define GPU_CORE_D2_LUYADD_LUYADD_Pos     (0UL)                     /*!< LUYADD (Bit 0)                                        */
#define GPU_CORE_D2_LUYADD_LUYADD_Msk     (0xffffffffUL)            /*!< LUYADD (Bitfield-Mask: 0xffffffff)                    */
/* ======================================================  D2_LVSTARTF  ====================================================== */
#define GPU_CORE_D2_LVSTARTF_LVSTARTF_Pos (0UL)                     /*!< LVSTARTF (Bit 0)                                      */
#define GPU_CORE_D2_LVSTARTF_LVSTARTF_Msk (0xffffUL)                /*!< LVSTARTF (Bitfield-Mask: 0xffff)                      */
/* ======================================================  D2_LVSTARTI  ====================================================== */
#define GPU_CORE_D2_LVSTARTI_LVSTARTI_Pos (0UL)                     /*!< LVSTARTI (Bit 0)                                      */
#define GPU_CORE_D2_LVSTARTI_LVSTARTI_Msk (0xffffffffUL)            /*!< LVSTARTI (Bitfield-Mask: 0xffffffff)                  */
/* ======================================================  D2_LVXADDI  ======================================================= */
#define GPU_CORE_D2_LVXADDI_LVXADDI_Pos   (0UL)                     /*!< LVXADDI (Bit 0)                                       */
#define GPU_CORE_D2_LVXADDI_LVXADDI_Msk   (0xffffffffUL)            /*!< LVXADDI (Bitfield-Mask: 0xffffffff)                   */
/* ======================================================  D2_LVYADDI  ======================================================= */
#define GPU_CORE_D2_LVYADDI_LVYADDI_Pos   (0UL)                     /*!< LVYADDI (Bit 0)                                       */
#define GPU_CORE_D2_LVYADDI_LVYADDI_Msk   (0xffffffffUL)            /*!< LVYADDI (Bitfield-Mask: 0xffffffff)                   */
/* ======================================================  D2_LVYXADDF  ====================================================== */
#define GPU_CORE_D2_LVYXADDF_D2_LVYADDI_FRAC_Pos (16UL)             /*!< D2_LVYADDI_FRAC (Bit 16)                              */
#define GPU_CORE_D2_LVYXADDF_D2_LVYADDI_FRAC_Msk (0xffff0000UL)     /*!< D2_LVYADDI_FRAC (Bitfield-Mask: 0xffff)               */
#define GPU_CORE_D2_LVYXADDF_D2_LVXADDI_FRAC_Pos (0UL)              /*!< D2_LVXADDI_FRAC (Bit 0)                               */
#define GPU_CORE_D2_LVYXADDF_D2_LVXADDI_FRAC_Msk (0xffffUL)         /*!< D2_LVXADDI_FRAC (Bitfield-Mask: 0xffff)               */
/* =======================================================  D2_ORIGIN  ======================================================= */
#define GPU_CORE_D2_ORIGIN_ORIGIN_Pos     (0UL)                     /*!< ORIGIN (Bit 0)                                        */
#define GPU_CORE_D2_ORIGIN_ORIGIN_Msk     (0xffffffffUL)            /*!< ORIGIN (Bitfield-Mask: 0xffffffff)                    */
/* ======================================================  D2_PATTERN  ======================================================= */
#define GPU_CORE_D2_PATTERN_PATTERN_Pos   (0UL)                     /*!< PATTERN (Bit 0)                                       */
#define GPU_CORE_D2_PATTERN_PATTERN_Msk   (0xffffffffUL)            /*!< PATTERN (Bitfield-Mask: 0xffffffff)                   */
/* =====================================================  D2_PERFCOUNT1  ===================================================== */
#define GPU_CORE_D2_PERFCOUNT1_PERFCOUNT1_Pos (0UL)                 /*!< PERFCOUNT1 (Bit 0)                                    */
#define GPU_CORE_D2_PERFCOUNT1_PERFCOUNT1_Msk (0xffffffffUL)        /*!< PERFCOUNT1 (Bitfield-Mask: 0xffffffff)                */
/* =====================================================  D2_PERFCOUNT2  ===================================================== */
#define GPU_CORE_D2_PERFCOUNT2_PERFCOUNT2_Pos (0UL)                 /*!< PERFCOUNT2 (Bit 0)                                    */
#define GPU_CORE_D2_PERFCOUNT2_PERFCOUNT2_Msk (0xffffffffUL)        /*!< PERFCOUNT2 (Bitfield-Mask: 0xffffffff)                */
/* ====================================================  D2_PERFTRIGGER  ===================================================== */
#define GPU_CORE_D2_PERFTRIGGER_PERFTRIGGER2_Pos (16UL)             /*!< PERFTRIGGER2 (Bit 16)                                 */
#define GPU_CORE_D2_PERFTRIGGER_PERFTRIGGER2_Msk (0xffff0000UL)     /*!< PERFTRIGGER2 (Bitfield-Mask: 0xffff)                  */
#define GPU_CORE_D2_PERFTRIGGER_PERFTRIGGER1_Pos (0UL)              /*!< PERFTRIGGER1 (Bit 0)                                  */
#define GPU_CORE_D2_PERFTRIGGER_PERFTRIGGER1_Msk (0xffffUL)         /*!< PERFTRIGGER1 (Bitfield-Mask: 0xffff)                  */
/* =======================================================  D2_PITCH  ======================================================== */
#define GPU_CORE_D2_PITCH_SSD_Pos         (16UL)                    /*!< SSD (Bit 16)                                          */
#define GPU_CORE_D2_PITCH_SSD_Msk         (0xffff0000UL)            /*!< SSD (Bitfield-Mask: 0xffff)                           */
#define GPU_CORE_D2_PITCH_PITCH_Pos       (0UL)                     /*!< PITCH (Bit 0)                                         */
#define GPU_CORE_D2_PITCH_PITCH_Msk       (0xffffUL)                /*!< PITCH (Bitfield-Mask: 0xffff)                         */
/* ========================================================  D2_SIZE  ======================================================== */
#define GPU_CORE_D2_SIZE_SIZEY_Pos        (16UL)                    /*!< SIZEY (Bit 16)                                        */
#define GPU_CORE_D2_SIZE_SIZEY_Msk        (0xffff0000UL)            /*!< SIZEY (Bitfield-Mask: 0xffff)                         */
#define GPU_CORE_D2_SIZE_SIZEX_Pos        (0UL)                     /*!< SIZEX (Bit 0)                                         */
#define GPU_CORE_D2_SIZE_SIZEX_Msk        (0xffffUL)                /*!< SIZEX (Bitfield-Mask: 0xffff)                         */
/* =======================================================  D2_STATUS  ======================================================= */
#define GPU_CORE_D2_STATUS_D2C_IRQ_BUS_ERROR_SRC_Pos (8UL)          /*!< D2C_IRQ_BUS_ERROR_SRC (Bit 8)                         */
#define GPU_CORE_D2_STATUS_D2C_IRQ_BUS_ERROR_SRC_Msk (0x700UL)      /*!< D2C_IRQ_BUS_ERROR_SRC (Bitfield-Mask: 0x07)           */
#define GPU_CORE_D2_STATUS_D2C_IRQ_BUS_ERROR_Pos (6UL)              /*!< D2C_IRQ_BUS_ERROR (Bit 6)                             */
#define GPU_CORE_D2_STATUS_D2C_IRQ_BUS_ERROR_Msk (0x40UL)           /*!< D2C_IRQ_BUS_ERROR (Bitfield-Mask: 0x01)               */
#define GPU_CORE_D2_STATUS_D2C_IRQ_DLIST_Pos (5UL)                  /*!< D2C_IRQ_DLIST (Bit 5)                                 */
#define GPU_CORE_D2_STATUS_D2C_IRQ_DLIST_Msk (0x20UL)               /*!< D2C_IRQ_DLIST (Bitfield-Mask: 0x01)                   */
#define GPU_CORE_D2_STATUS_D2C_IRQ_ENUM_Pos (4UL)                   /*!< D2C_IRQ_ENUM (Bit 4)                                  */
#define GPU_CORE_D2_STATUS_D2C_IRQ_ENUM_Msk (0x10UL)                /*!< D2C_IRQ_ENUM (Bitfield-Mask: 0x01)                    */
#define GPU_CORE_D2_STATUS_D2C_DLISTACTIVE_Pos (3UL)                /*!< D2C_DLISTACTIVE (Bit 3)                               */
#define GPU_CORE_D2_STATUS_D2C_DLISTACTIVE_Msk (0x8UL)              /*!< D2C_DLISTACTIVE (Bitfield-Mask: 0x01)                 */
#define GPU_CORE_D2_STATUS_D2C_CACHE_DIRTY_Pos (2UL)                /*!< D2C_CACHE_DIRTY (Bit 2)                               */
#define GPU_CORE_D2_STATUS_D2C_CACHE_DIRTY_Msk (0x4UL)              /*!< D2C_CACHE_DIRTY (Bitfield-Mask: 0x01)                 */
#define GPU_CORE_D2_STATUS_D2C_BUSY_WRITE_Pos (1UL)                 /*!< D2C_BUSY_WRITE (Bit 1)                                */
#define GPU_CORE_D2_STATUS_D2C_BUSY_WRITE_Msk (0x2UL)               /*!< D2C_BUSY_WRITE (Bitfield-Mask: 0x01)                  */
#define GPU_CORE_D2_STATUS_D2C_BUSY_ENUM_Pos (0UL)                  /*!< D2C_BUSY_ENUM (Bit 0)                                 */
#define GPU_CORE_D2_STATUS_D2C_BUSY_ENUM_Msk (0x1UL)                /*!< D2C_BUSY_ENUM (Bitfield-Mask: 0x01)                   */
/* ======================================================  D2_TEXCLUT  ======================================================= */
#define GPU_CORE_D2_TEXCLUT_TEXCLUT_INDEX_Pos (24UL)                /*!< TEXCLUT_INDEX (Bit 24)                                */
#define GPU_CORE_D2_TEXCLUT_TEXCLUT_INDEX_Msk (0xff000000UL)        /*!< TEXCLUT_INDEX (Bitfield-Mask: 0xff)                   */
#define GPU_CORE_D2_TEXCLUT_TEXCLUT_RGB_Pos (0UL)                   /*!< TEXCLUT_RGB (Bit 0)                                   */
#define GPU_CORE_D2_TEXCLUT_TEXCLUT_RGB_Msk (0xffffffUL)            /*!< TEXCLUT_RGB (Bitfield-Mask: 0xffffff)                 */
/* ====================================================  D2_TEXCLUT_ADDR  ==================================================== */
#define GPU_CORE_D2_TEXCLUT_ADDR_TEXCLUT_ADDR_Pos (0UL)             /*!< TEXCLUT_ADDR (Bit 0)                                  */
#define GPU_CORE_D2_TEXCLUT_ADDR_TEXCLUT_ADDR_Msk (0xffUL)          /*!< TEXCLUT_ADDR (Bitfield-Mask: 0xff)                    */
/* ====================================================  D2_TEXCLUT_DATA  ==================================================== */
#define GPU_CORE_D2_TEXCLUT_DATA_TEXCLUT_ARGB_Pos (0UL)             /*!< TEXCLUT_ARGB (Bit 0)                                  */
#define GPU_CORE_D2_TEXCLUT_DATA_TEXCLUT_ARGB_Msk (0xffffffffUL)    /*!< TEXCLUT_ARGB (Bitfield-Mask: 0xffffffff)              */
/* ===================================================  D2_TEXCLUT_OFFSET  =================================================== */
#define GPU_CORE_D2_TEXCLUT_OFFSET_TEXCLUT_OFFSET_Pos (0UL)         /*!< TEXCLUT_OFFSET (Bit 0)                                */
#define GPU_CORE_D2_TEXCLUT_OFFSET_TEXCLUT_OFFSET_Msk (0xffUL)      /*!< TEXCLUT_OFFSET (Bitfield-Mask: 0xff)                  */
/* ======================================================  D2_TEXMASK  ======================================================= */
#define GPU_CORE_D2_TEXMASK_TEXVMASK_Pos  (11UL)                    /*!< TEXVMASK (Bit 11)                                     */
#define GPU_CORE_D2_TEXMASK_TEXVMASK_Msk  (0xfffff800UL)            /*!< TEXVMASK (Bitfield-Mask: 0x1fffff)                    */
#define GPU_CORE_D2_TEXMASK_TEXUMASK_Pos  (0UL)                     /*!< TEXUMASK (Bit 0)                                      */
#define GPU_CORE_D2_TEXMASK_TEXUMASK_Msk  (0x7ffUL)                 /*!< TEXUMASK (Bitfield-Mask: 0x7ff)                       */
/* =====================================================  D2_TEXORIGIN  ====================================================== */
#define GPU_CORE_D2_TEXORIGIN_TEXORIGIN_Pos (0UL)                   /*!< TEXORIGIN (Bit 0)                                     */
#define GPU_CORE_D2_TEXORIGIN_TEXORIGIN_Msk (0xffffffffUL)          /*!< TEXORIGIN (Bitfield-Mask: 0xffffffff)                 */
/* ======================================================  D2_TEXPITCH  ====================================================== */
#define GPU_CORE_D2_TEXPITCH_TEXPITCH_Pos (0UL)                     /*!< TEXPITCH (Bit 0)                                      */
#define GPU_CORE_D2_TEXPITCH_TEXPITCH_Msk (0xffffffffUL)            /*!< TEXPITCH (Bitfield-Mask: 0xffffffff)                  */


/* =========================================================================================================================== */
/* ================                                          GPU_REG                                          ================ */
/* =========================================================================================================================== */

/* =====================================================  GPU_CTRL_REG  ====================================================== */
#define GPU_REG_GPU_CTRL_REG_PWRS_B_Pos   (6UL)                     /*!< PWRS_B (Bit 6)                                        */
#define GPU_REG_GPU_CTRL_REG_PWRS_B_Msk   (0x40UL)                  /*!< PWRS_B (Bitfield-Mask: 0x01)                          */
#define GPU_REG_GPU_CTRL_REG_GPU_EN_Pos   (0UL)                     /*!< GPU_EN (Bit 0)                                        */
#define GPU_REG_GPU_CTRL_REG_GPU_EN_Msk   (0x1UL)                   /*!< GPU_EN (Bitfield-Mask: 0x01)                          */


/* =========================================================================================================================== */
/* ================                                            I2C                                            ================ */
/* =========================================================================================================================== */

/* ===============================================  I2C_ACK_GENERAL_CALL_REG  ================================================ */
#define I2C_I2C_ACK_GENERAL_CALL_REG_ACK_GEN_CALL_Pos (0UL)         /*!< ACK_GEN_CALL (Bit 0)                                  */
#define I2C_I2C_ACK_GENERAL_CALL_REG_ACK_GEN_CALL_Msk (0x1UL)       /*!< ACK_GEN_CALL (Bitfield-Mask: 0x01)                    */
/* =================================================  I2C_CLR_ACTIVITY_REG  ================================================== */
#define I2C_I2C_CLR_ACTIVITY_REG_CLR_ACTIVITY_Pos (0UL)             /*!< CLR_ACTIVITY (Bit 0)                                  */
#define I2C_I2C_CLR_ACTIVITY_REG_CLR_ACTIVITY_Msk (0x1UL)           /*!< CLR_ACTIVITY (Bitfield-Mask: 0x01)                    */
/* =================================================  I2C_CLR_GEN_CALL_REG  ================================================== */
#define I2C_I2C_CLR_GEN_CALL_REG_CLR_GEN_CALL_Pos (0UL)             /*!< CLR_GEN_CALL (Bit 0)                                  */
#define I2C_I2C_CLR_GEN_CALL_REG_CLR_GEN_CALL_Msk (0x1UL)           /*!< CLR_GEN_CALL (Bitfield-Mask: 0x01)                    */
/* ===================================================  I2C_CLR_INTR_REG  ==================================================== */
#define I2C_I2C_CLR_INTR_REG_CLR_INTR_Pos (0UL)                     /*!< CLR_INTR (Bit 0)                                      */
#define I2C_I2C_CLR_INTR_REG_CLR_INTR_Msk (0x1UL)                   /*!< CLR_INTR (Bitfield-Mask: 0x01)                        */
/* ==================================================  I2C_CLR_RD_REQ_REG  =================================================== */
#define I2C_I2C_CLR_RD_REQ_REG_CLR_RD_REQ_Pos (0UL)                 /*!< CLR_RD_REQ (Bit 0)                                    */
#define I2C_I2C_CLR_RD_REQ_REG_CLR_RD_REQ_Msk (0x1UL)               /*!< CLR_RD_REQ (Bitfield-Mask: 0x01)                      */
/* ==================================================  I2C_CLR_RX_DONE_REG  ================================================== */
#define I2C_I2C_CLR_RX_DONE_REG_CLR_RX_DONE_Pos (0UL)               /*!< CLR_RX_DONE (Bit 0)                                   */
#define I2C_I2C_CLR_RX_DONE_REG_CLR_RX_DONE_Msk (0x1UL)             /*!< CLR_RX_DONE (Bitfield-Mask: 0x01)                     */
/* ==================================================  I2C_CLR_RX_OVER_REG  ================================================== */
#define I2C_I2C_CLR_RX_OVER_REG_CLR_RX_OVER_Pos (0UL)               /*!< CLR_RX_OVER (Bit 0)                                   */
#define I2C_I2C_CLR_RX_OVER_REG_CLR_RX_OVER_Msk (0x1UL)             /*!< CLR_RX_OVER (Bitfield-Mask: 0x01)                     */
/* =================================================  I2C_CLR_RX_UNDER_REG  ================================================== */
#define I2C_I2C_CLR_RX_UNDER_REG_CLR_RX_UNDER_Pos (0UL)             /*!< CLR_RX_UNDER (Bit 0)                                  */
#define I2C_I2C_CLR_RX_UNDER_REG_CLR_RX_UNDER_Msk (0x1UL)           /*!< CLR_RX_UNDER (Bitfield-Mask: 0x01)                    */
/* =================================================  I2C_CLR_START_DET_REG  ================================================= */
#define I2C_I2C_CLR_START_DET_REG_CLR_START_DET_Pos (0UL)           /*!< CLR_START_DET (Bit 0)                                 */
#define I2C_I2C_CLR_START_DET_REG_CLR_START_DET_Msk (0x1UL)         /*!< CLR_START_DET (Bitfield-Mask: 0x01)                   */
/* =================================================  I2C_CLR_STOP_DET_REG  ================================================== */
#define I2C_I2C_CLR_STOP_DET_REG_CLR_STOP_DET_Pos (0UL)             /*!< CLR_STOP_DET (Bit 0)                                  */
#define I2C_I2C_CLR_STOP_DET_REG_CLR_STOP_DET_Msk (0x1UL)           /*!< CLR_STOP_DET (Bitfield-Mask: 0x01)                    */
/* ==================================================  I2C_CLR_TX_ABRT_REG  ================================================== */
#define I2C_I2C_CLR_TX_ABRT_REG_CLR_TX_ABRT_Pos (0UL)               /*!< CLR_TX_ABRT (Bit 0)                                   */
#define I2C_I2C_CLR_TX_ABRT_REG_CLR_TX_ABRT_Msk (0x1UL)             /*!< CLR_TX_ABRT (Bitfield-Mask: 0x01)                     */
/* ==================================================  I2C_CLR_TX_OVER_REG  ================================================== */
#define I2C_I2C_CLR_TX_OVER_REG_CLR_TX_OVER_Pos (0UL)               /*!< CLR_TX_OVER (Bit 0)                                   */
#define I2C_I2C_CLR_TX_OVER_REG_CLR_TX_OVER_Msk (0x1UL)             /*!< CLR_TX_OVER (Bitfield-Mask: 0x01)                     */
/* ======================================================  I2C_CON_REG  ====================================================== */
#define I2C_I2C_CON_REG_I2C_STOP_DET_IF_MASTER_ACTIVE_Pos (10UL)    /*!< I2C_STOP_DET_IF_MASTER_ACTIVE (Bit 10)                */
#define I2C_I2C_CON_REG_I2C_STOP_DET_IF_MASTER_ACTIVE_Msk (0x400UL) /*!< I2C_STOP_DET_IF_MASTER_ACTIVE (Bitfield-Mask: 0x01)   */
#define I2C_I2C_CON_REG_I2C_RX_FIFO_FULL_HLD_CTRL_Pos (9UL)         /*!< I2C_RX_FIFO_FULL_HLD_CTRL (Bit 9)                     */
#define I2C_I2C_CON_REG_I2C_RX_FIFO_FULL_HLD_CTRL_Msk (0x200UL)     /*!< I2C_RX_FIFO_FULL_HLD_CTRL (Bitfield-Mask: 0x01)       */
#define I2C_I2C_CON_REG_I2C_TX_EMPTY_CTRL_Pos (8UL)                 /*!< I2C_TX_EMPTY_CTRL (Bit 8)                             */
#define I2C_I2C_CON_REG_I2C_TX_EMPTY_CTRL_Msk (0x100UL)             /*!< I2C_TX_EMPTY_CTRL (Bitfield-Mask: 0x01)               */
#define I2C_I2C_CON_REG_I2C_STOP_DET_IFADDRESSED_Pos (7UL)          /*!< I2C_STOP_DET_IFADDRESSED (Bit 7)                      */
#define I2C_I2C_CON_REG_I2C_STOP_DET_IFADDRESSED_Msk (0x80UL)       /*!< I2C_STOP_DET_IFADDRESSED (Bitfield-Mask: 0x01)        */
#define I2C_I2C_CON_REG_I2C_SLAVE_DISABLE_Pos (6UL)                 /*!< I2C_SLAVE_DISABLE (Bit 6)                             */
#define I2C_I2C_CON_REG_I2C_SLAVE_DISABLE_Msk (0x40UL)              /*!< I2C_SLAVE_DISABLE (Bitfield-Mask: 0x01)               */
#define I2C_I2C_CON_REG_I2C_RESTART_EN_Pos (5UL)                    /*!< I2C_RESTART_EN (Bit 5)                                */
#define I2C_I2C_CON_REG_I2C_RESTART_EN_Msk (0x20UL)                 /*!< I2C_RESTART_EN (Bitfield-Mask: 0x01)                  */
#define I2C_I2C_CON_REG_I2C_10BITADDR_MASTER_Pos (4UL)              /*!< I2C_10BITADDR_MASTER (Bit 4)                          */
#define I2C_I2C_CON_REG_I2C_10BITADDR_MASTER_Msk (0x10UL)           /*!< I2C_10BITADDR_MASTER (Bitfield-Mask: 0x01)            */
#define I2C_I2C_CON_REG_I2C_10BITADDR_SLAVE_Pos (3UL)               /*!< I2C_10BITADDR_SLAVE (Bit 3)                           */
#define I2C_I2C_CON_REG_I2C_10BITADDR_SLAVE_Msk (0x8UL)             /*!< I2C_10BITADDR_SLAVE (Bitfield-Mask: 0x01)             */
#define I2C_I2C_CON_REG_I2C_SPEED_Pos     (1UL)                     /*!< I2C_SPEED (Bit 1)                                     */
#define I2C_I2C_CON_REG_I2C_SPEED_Msk     (0x6UL)                   /*!< I2C_SPEED (Bitfield-Mask: 0x03)                       */
#define I2C_I2C_CON_REG_I2C_MASTER_MODE_Pos (0UL)                   /*!< I2C_MASTER_MODE (Bit 0)                               */
#define I2C_I2C_CON_REG_I2C_MASTER_MODE_Msk (0x1UL)                 /*!< I2C_MASTER_MODE (Bitfield-Mask: 0x01)                 */
/* ===================================================  I2C_DATA_CMD_REG  ==================================================== */
#define I2C_I2C_DATA_CMD_REG_I2C_RESTART_Pos (10UL)                 /*!< I2C_RESTART (Bit 10)                                  */
#define I2C_I2C_DATA_CMD_REG_I2C_RESTART_Msk (0x400UL)              /*!< I2C_RESTART (Bitfield-Mask: 0x01)                     */
#define I2C_I2C_DATA_CMD_REG_I2C_STOP_Pos (9UL)                     /*!< I2C_STOP (Bit 9)                                      */
#define I2C_I2C_DATA_CMD_REG_I2C_STOP_Msk (0x200UL)                 /*!< I2C_STOP (Bitfield-Mask: 0x01)                        */
#define I2C_I2C_DATA_CMD_REG_I2C_CMD_Pos  (8UL)                     /*!< I2C_CMD (Bit 8)                                       */
#define I2C_I2C_DATA_CMD_REG_I2C_CMD_Msk  (0x100UL)                 /*!< I2C_CMD (Bitfield-Mask: 0x01)                         */
#define I2C_I2C_DATA_CMD_REG_I2C_DAT_Pos  (0UL)                     /*!< I2C_DAT (Bit 0)                                       */
#define I2C_I2C_DATA_CMD_REG_I2C_DAT_Msk  (0xffUL)                  /*!< I2C_DAT (Bitfield-Mask: 0xff)                         */
/* ====================================================  I2C_DMA_CR_REG  ===================================================== */
#define I2C_I2C_DMA_CR_REG_TDMAE_Pos      (1UL)                     /*!< TDMAE (Bit 1)                                         */
#define I2C_I2C_DMA_CR_REG_TDMAE_Msk      (0x2UL)                   /*!< TDMAE (Bitfield-Mask: 0x01)                           */
#define I2C_I2C_DMA_CR_REG_RDMAE_Pos      (0UL)                     /*!< RDMAE (Bit 0)                                         */
#define I2C_I2C_DMA_CR_REG_RDMAE_Msk      (0x1UL)                   /*!< RDMAE (Bitfield-Mask: 0x01)                           */
/* ===================================================  I2C_DMA_RDLR_REG  ==================================================== */
#define I2C_I2C_DMA_RDLR_REG_DMARDL_Pos   (0UL)                     /*!< DMARDL (Bit 0)                                        */
#define I2C_I2C_DMA_RDLR_REG_DMARDL_Msk   (0x1fUL)                  /*!< DMARDL (Bitfield-Mask: 0x1f)                          */
/* ===================================================  I2C_DMA_TDLR_REG  ==================================================== */
#define I2C_I2C_DMA_TDLR_REG_DMATDL_Pos   (0UL)                     /*!< DMATDL (Bit 0)                                        */
#define I2C_I2C_DMA_TDLR_REG_DMATDL_Msk   (0x1fUL)                  /*!< DMATDL (Bitfield-Mask: 0x1f)                          */
/* ====================================================  I2C_ENABLE_REG  ===================================================== */
#define I2C_I2C_ENABLE_REG_I2C_TX_CMD_BLOCK_Pos (2UL)               /*!< I2C_TX_CMD_BLOCK (Bit 2)                              */
#define I2C_I2C_ENABLE_REG_I2C_TX_CMD_BLOCK_Msk (0x4UL)             /*!< I2C_TX_CMD_BLOCK (Bitfield-Mask: 0x01)                */
#define I2C_I2C_ENABLE_REG_I2C_ABORT_Pos  (1UL)                     /*!< I2C_ABORT (Bit 1)                                     */
#define I2C_I2C_ENABLE_REG_I2C_ABORT_Msk  (0x2UL)                   /*!< I2C_ABORT (Bitfield-Mask: 0x01)                       */
#define I2C_I2C_ENABLE_REG_I2C_EN_Pos     (0UL)                     /*!< I2C_EN (Bit 0)                                        */
#define I2C_I2C_ENABLE_REG_I2C_EN_Msk     (0x1UL)                   /*!< I2C_EN (Bitfield-Mask: 0x01)                          */
/* =================================================  I2C_ENABLE_STATUS_REG  ================================================= */
#define I2C_I2C_ENABLE_STATUS_REG_SLV_RX_DATA_LOST_Pos (2UL)        /*!< SLV_RX_DATA_LOST (Bit 2)                              */
#define I2C_I2C_ENABLE_STATUS_REG_SLV_RX_DATA_LOST_Msk (0x4UL)      /*!< SLV_RX_DATA_LOST (Bitfield-Mask: 0x01)                */
#define I2C_I2C_ENABLE_STATUS_REG_SLV_DISABLED_WHILE_BUSY_Pos (1UL) /*!< SLV_DISABLED_WHILE_BUSY (Bit 1)                       */
#define I2C_I2C_ENABLE_STATUS_REG_SLV_DISABLED_WHILE_BUSY_Msk (0x2UL) /*!< SLV_DISABLED_WHILE_BUSY (Bitfield-Mask: 0x01)       */
#define I2C_I2C_ENABLE_STATUS_REG_IC_EN_Pos (0UL)                   /*!< IC_EN (Bit 0)                                         */
#define I2C_I2C_ENABLE_STATUS_REG_IC_EN_Msk (0x1UL)                 /*!< IC_EN (Bitfield-Mask: 0x01)                           */
/* ==================================================  I2C_FS_SCL_HCNT_REG  ================================================== */
#define I2C_I2C_FS_SCL_HCNT_REG_IC_FS_SCL_HCNT_Pos (0UL)            /*!< IC_FS_SCL_HCNT (Bit 0)                                */
#define I2C_I2C_FS_SCL_HCNT_REG_IC_FS_SCL_HCNT_Msk (0xffffUL)       /*!< IC_FS_SCL_HCNT (Bitfield-Mask: 0xffff)                */
/* ==================================================  I2C_FS_SCL_LCNT_REG  ================================================== */
#define I2C_I2C_FS_SCL_LCNT_REG_IC_FS_SCL_LCNT_Pos (0UL)            /*!< IC_FS_SCL_LCNT (Bit 0)                                */
#define I2C_I2C_FS_SCL_LCNT_REG_IC_FS_SCL_LCNT_Msk (0xffffUL)       /*!< IC_FS_SCL_LCNT (Bitfield-Mask: 0xffff)                */
/* ===================================================  I2C_HS_MADDR_REG  ==================================================== */
#define I2C_I2C_HS_MADDR_REG_I2C_IC_HS_MAR_Pos (0UL)                /*!< I2C_IC_HS_MAR (Bit 0)                                 */
#define I2C_I2C_HS_MADDR_REG_I2C_IC_HS_MAR_Msk (0x7UL)              /*!< I2C_IC_HS_MAR (Bitfield-Mask: 0x07)                   */
/* ==================================================  I2C_HS_SCL_HCNT_REG  ================================================== */
#define I2C_I2C_HS_SCL_HCNT_REG_IC_HS_SCL_HCNT_Pos (0UL)            /*!< IC_HS_SCL_HCNT (Bit 0)                                */
#define I2C_I2C_HS_SCL_HCNT_REG_IC_HS_SCL_HCNT_Msk (0xffffUL)       /*!< IC_HS_SCL_HCNT (Bitfield-Mask: 0xffff)                */
/* ==================================================  I2C_HS_SCL_LCNT_REG  ================================================== */
#define I2C_I2C_HS_SCL_LCNT_REG_IC_HS_SCL_LCNT_Pos (0UL)            /*!< IC_HS_SCL_LCNT (Bit 0)                                */
#define I2C_I2C_HS_SCL_LCNT_REG_IC_HS_SCL_LCNT_Msk (0xffffUL)       /*!< IC_HS_SCL_LCNT (Bitfield-Mask: 0xffff)                */
/* =================================================  I2C_IC_FS_SPKLEN_REG  ================================================== */
#define I2C_I2C_IC_FS_SPKLEN_REG_I2C_FS_SPKLEN_Pos (0UL)            /*!< I2C_FS_SPKLEN (Bit 0)                                 */
#define I2C_I2C_IC_FS_SPKLEN_REG_I2C_FS_SPKLEN_Msk (0xffUL)         /*!< I2C_FS_SPKLEN (Bitfield-Mask: 0xff)                   */
/* =================================================  I2C_IC_HS_SPKLEN_REG  ================================================== */
#define I2C_I2C_IC_HS_SPKLEN_REG_I2C_HS_SPKLEN_Pos (0UL)            /*!< I2C_HS_SPKLEN (Bit 0)                                 */
#define I2C_I2C_IC_HS_SPKLEN_REG_I2C_HS_SPKLEN_Msk (0xffUL)         /*!< I2C_HS_SPKLEN (Bitfield-Mask: 0xff)                   */
/* ===================================================  I2C_INTR_MASK_REG  =================================================== */
#define I2C_I2C_INTR_MASK_REG_M_SCL_STUCK_AT_LOW_Pos (14UL)         /*!< M_SCL_STUCK_AT_LOW (Bit 14)                           */
#define I2C_I2C_INTR_MASK_REG_M_SCL_STUCK_AT_LOW_Msk (0x4000UL)     /*!< M_SCL_STUCK_AT_LOW (Bitfield-Mask: 0x01)              */
#define I2C_I2C_INTR_MASK_REG_M_MASTER_ON_HOLD_Pos (13UL)           /*!< M_MASTER_ON_HOLD (Bit 13)                             */
#define I2C_I2C_INTR_MASK_REG_M_MASTER_ON_HOLD_Msk (0x2000UL)       /*!< M_MASTER_ON_HOLD (Bitfield-Mask: 0x01)                */
#define I2C_I2C_INTR_MASK_REG_M_RESTART_DET_Pos (12UL)              /*!< M_RESTART_DET (Bit 12)                                */
#define I2C_I2C_INTR_MASK_REG_M_RESTART_DET_Msk (0x1000UL)          /*!< M_RESTART_DET (Bitfield-Mask: 0x01)                   */
#define I2C_I2C_INTR_MASK_REG_M_GEN_CALL_Pos (11UL)                 /*!< M_GEN_CALL (Bit 11)                                   */
#define I2C_I2C_INTR_MASK_REG_M_GEN_CALL_Msk (0x800UL)              /*!< M_GEN_CALL (Bitfield-Mask: 0x01)                      */
#define I2C_I2C_INTR_MASK_REG_M_START_DET_Pos (10UL)                /*!< M_START_DET (Bit 10)                                  */
#define I2C_I2C_INTR_MASK_REG_M_START_DET_Msk (0x400UL)             /*!< M_START_DET (Bitfield-Mask: 0x01)                     */
#define I2C_I2C_INTR_MASK_REG_M_STOP_DET_Pos (9UL)                  /*!< M_STOP_DET (Bit 9)                                    */
#define I2C_I2C_INTR_MASK_REG_M_STOP_DET_Msk (0x200UL)              /*!< M_STOP_DET (Bitfield-Mask: 0x01)                      */
#define I2C_I2C_INTR_MASK_REG_M_ACTIVITY_Pos (8UL)                  /*!< M_ACTIVITY (Bit 8)                                    */
#define I2C_I2C_INTR_MASK_REG_M_ACTIVITY_Msk (0x100UL)              /*!< M_ACTIVITY (Bitfield-Mask: 0x01)                      */
#define I2C_I2C_INTR_MASK_REG_M_RX_DONE_Pos (7UL)                   /*!< M_RX_DONE (Bit 7)                                     */
#define I2C_I2C_INTR_MASK_REG_M_RX_DONE_Msk (0x80UL)                /*!< M_RX_DONE (Bitfield-Mask: 0x01)                       */
#define I2C_I2C_INTR_MASK_REG_M_TX_ABRT_Pos (6UL)                   /*!< M_TX_ABRT (Bit 6)                                     */
#define I2C_I2C_INTR_MASK_REG_M_TX_ABRT_Msk (0x40UL)                /*!< M_TX_ABRT (Bitfield-Mask: 0x01)                       */
#define I2C_I2C_INTR_MASK_REG_M_RD_REQ_Pos (5UL)                    /*!< M_RD_REQ (Bit 5)                                      */
#define I2C_I2C_INTR_MASK_REG_M_RD_REQ_Msk (0x20UL)                 /*!< M_RD_REQ (Bitfield-Mask: 0x01)                        */
#define I2C_I2C_INTR_MASK_REG_M_TX_EMPTY_Pos (4UL)                  /*!< M_TX_EMPTY (Bit 4)                                    */
#define I2C_I2C_INTR_MASK_REG_M_TX_EMPTY_Msk (0x10UL)               /*!< M_TX_EMPTY (Bitfield-Mask: 0x01)                      */
#define I2C_I2C_INTR_MASK_REG_M_TX_OVER_Pos (3UL)                   /*!< M_TX_OVER (Bit 3)                                     */
#define I2C_I2C_INTR_MASK_REG_M_TX_OVER_Msk (0x8UL)                 /*!< M_TX_OVER (Bitfield-Mask: 0x01)                       */
#define I2C_I2C_INTR_MASK_REG_M_RX_FULL_Pos (2UL)                   /*!< M_RX_FULL (Bit 2)                                     */
#define I2C_I2C_INTR_MASK_REG_M_RX_FULL_Msk (0x4UL)                 /*!< M_RX_FULL (Bitfield-Mask: 0x01)                       */
#define I2C_I2C_INTR_MASK_REG_M_RX_OVER_Pos (1UL)                   /*!< M_RX_OVER (Bit 1)                                     */
#define I2C_I2C_INTR_MASK_REG_M_RX_OVER_Msk (0x2UL)                 /*!< M_RX_OVER (Bitfield-Mask: 0x01)                       */
#define I2C_I2C_INTR_MASK_REG_M_RX_UNDER_Pos (0UL)                  /*!< M_RX_UNDER (Bit 0)                                    */
#define I2C_I2C_INTR_MASK_REG_M_RX_UNDER_Msk (0x1UL)                /*!< M_RX_UNDER (Bitfield-Mask: 0x01)                      */
/* ===================================================  I2C_INTR_STAT_REG  =================================================== */
#define I2C_I2C_INTR_STAT_REG_R_SCL_STUCK_AT_LOW_Pos (14UL)         /*!< R_SCL_STUCK_AT_LOW (Bit 14)                           */
#define I2C_I2C_INTR_STAT_REG_R_SCL_STUCK_AT_LOW_Msk (0x4000UL)     /*!< R_SCL_STUCK_AT_LOW (Bitfield-Mask: 0x01)              */
#define I2C_I2C_INTR_STAT_REG_R_MASTER_ON_HOLD_Pos (13UL)           /*!< R_MASTER_ON_HOLD (Bit 13)                             */
#define I2C_I2C_INTR_STAT_REG_R_MASTER_ON_HOLD_Msk (0x2000UL)       /*!< R_MASTER_ON_HOLD (Bitfield-Mask: 0x01)                */
#define I2C_I2C_INTR_STAT_REG_R_RESTART_DET_Pos (12UL)              /*!< R_RESTART_DET (Bit 12)                                */
#define I2C_I2C_INTR_STAT_REG_R_RESTART_DET_Msk (0x1000UL)          /*!< R_RESTART_DET (Bitfield-Mask: 0x01)                   */
#define I2C_I2C_INTR_STAT_REG_R_GEN_CALL_Pos (11UL)                 /*!< R_GEN_CALL (Bit 11)                                   */
#define I2C_I2C_INTR_STAT_REG_R_GEN_CALL_Msk (0x800UL)              /*!< R_GEN_CALL (Bitfield-Mask: 0x01)                      */
#define I2C_I2C_INTR_STAT_REG_R_START_DET_Pos (10UL)                /*!< R_START_DET (Bit 10)                                  */
#define I2C_I2C_INTR_STAT_REG_R_START_DET_Msk (0x400UL)             /*!< R_START_DET (Bitfield-Mask: 0x01)                     */
#define I2C_I2C_INTR_STAT_REG_R_STOP_DET_Pos (9UL)                  /*!< R_STOP_DET (Bit 9)                                    */
#define I2C_I2C_INTR_STAT_REG_R_STOP_DET_Msk (0x200UL)              /*!< R_STOP_DET (Bitfield-Mask: 0x01)                      */
#define I2C_I2C_INTR_STAT_REG_R_ACTIVITY_Pos (8UL)                  /*!< R_ACTIVITY (Bit 8)                                    */
#define I2C_I2C_INTR_STAT_REG_R_ACTIVITY_Msk (0x100UL)              /*!< R_ACTIVITY (Bitfield-Mask: 0x01)                      */
#define I2C_I2C_INTR_STAT_REG_R_RX_DONE_Pos (7UL)                   /*!< R_RX_DONE (Bit 7)                                     */
#define I2C_I2C_INTR_STAT_REG_R_RX_DONE_Msk (0x80UL)                /*!< R_RX_DONE (Bitfield-Mask: 0x01)                       */
#define I2C_I2C_INTR_STAT_REG_R_TX_ABRT_Pos (6UL)                   /*!< R_TX_ABRT (Bit 6)                                     */
#define I2C_I2C_INTR_STAT_REG_R_TX_ABRT_Msk (0x40UL)                /*!< R_TX_ABRT (Bitfield-Mask: 0x01)                       */
#define I2C_I2C_INTR_STAT_REG_R_RD_REQ_Pos (5UL)                    /*!< R_RD_REQ (Bit 5)                                      */
#define I2C_I2C_INTR_STAT_REG_R_RD_REQ_Msk (0x20UL)                 /*!< R_RD_REQ (Bitfield-Mask: 0x01)                        */
#define I2C_I2C_INTR_STAT_REG_R_TX_EMPTY_Pos (4UL)                  /*!< R_TX_EMPTY (Bit 4)                                    */
#define I2C_I2C_INTR_STAT_REG_R_TX_EMPTY_Msk (0x10UL)               /*!< R_TX_EMPTY (Bitfield-Mask: 0x01)                      */
#define I2C_I2C_INTR_STAT_REG_R_TX_OVER_Pos (3UL)                   /*!< R_TX_OVER (Bit 3)                                     */
#define I2C_I2C_INTR_STAT_REG_R_TX_OVER_Msk (0x8UL)                 /*!< R_TX_OVER (Bitfield-Mask: 0x01)                       */
#define I2C_I2C_INTR_STAT_REG_R_RX_FULL_Pos (2UL)                   /*!< R_RX_FULL (Bit 2)                                     */
#define I2C_I2C_INTR_STAT_REG_R_RX_FULL_Msk (0x4UL)                 /*!< R_RX_FULL (Bitfield-Mask: 0x01)                       */
#define I2C_I2C_INTR_STAT_REG_R_RX_OVER_Pos (1UL)                   /*!< R_RX_OVER (Bit 1)                                     */
#define I2C_I2C_INTR_STAT_REG_R_RX_OVER_Msk (0x2UL)                 /*!< R_RX_OVER (Bitfield-Mask: 0x01)                       */
#define I2C_I2C_INTR_STAT_REG_R_RX_UNDER_Pos (0UL)                  /*!< R_RX_UNDER (Bit 0)                                    */
#define I2C_I2C_INTR_STAT_REG_R_RX_UNDER_Msk (0x1UL)                /*!< R_RX_UNDER (Bitfield-Mask: 0x01)                      */
/* =================================================  I2C_RAW_INTR_STAT_REG  ================================================= */
#define I2C_I2C_RAW_INTR_STAT_REG_SCL_STUCK_AT_LOW_Pos (14UL)       /*!< SCL_STUCK_AT_LOW (Bit 14)                             */
#define I2C_I2C_RAW_INTR_STAT_REG_SCL_STUCK_AT_LOW_Msk (0x4000UL)   /*!< SCL_STUCK_AT_LOW (Bitfield-Mask: 0x01)                */
#define I2C_I2C_RAW_INTR_STAT_REG_MASTER_ON_HOLD_Pos (13UL)         /*!< MASTER_ON_HOLD (Bit 13)                               */
#define I2C_I2C_RAW_INTR_STAT_REG_MASTER_ON_HOLD_Msk (0x2000UL)     /*!< MASTER_ON_HOLD (Bitfield-Mask: 0x01)                  */
#define I2C_I2C_RAW_INTR_STAT_REG_RESTART_DET_Pos (12UL)            /*!< RESTART_DET (Bit 12)                                  */
#define I2C_I2C_RAW_INTR_STAT_REG_RESTART_DET_Msk (0x1000UL)        /*!< RESTART_DET (Bitfield-Mask: 0x01)                     */
#define I2C_I2C_RAW_INTR_STAT_REG_GEN_CALL_Pos (11UL)               /*!< GEN_CALL (Bit 11)                                     */
#define I2C_I2C_RAW_INTR_STAT_REG_GEN_CALL_Msk (0x800UL)            /*!< GEN_CALL (Bitfield-Mask: 0x01)                        */
#define I2C_I2C_RAW_INTR_STAT_REG_START_DET_Pos (10UL)              /*!< START_DET (Bit 10)                                    */
#define I2C_I2C_RAW_INTR_STAT_REG_START_DET_Msk (0x400UL)           /*!< START_DET (Bitfield-Mask: 0x01)                       */
#define I2C_I2C_RAW_INTR_STAT_REG_STOP_DET_Pos (9UL)                /*!< STOP_DET (Bit 9)                                      */
#define I2C_I2C_RAW_INTR_STAT_REG_STOP_DET_Msk (0x200UL)            /*!< STOP_DET (Bitfield-Mask: 0x01)                        */
#define I2C_I2C_RAW_INTR_STAT_REG_ACTIVITY_Pos (8UL)                /*!< ACTIVITY (Bit 8)                                      */
#define I2C_I2C_RAW_INTR_STAT_REG_ACTIVITY_Msk (0x100UL)            /*!< ACTIVITY (Bitfield-Mask: 0x01)                        */
#define I2C_I2C_RAW_INTR_STAT_REG_RX_DONE_Pos (7UL)                 /*!< RX_DONE (Bit 7)                                       */
#define I2C_I2C_RAW_INTR_STAT_REG_RX_DONE_Msk (0x80UL)              /*!< RX_DONE (Bitfield-Mask: 0x01)                         */
#define I2C_I2C_RAW_INTR_STAT_REG_TX_ABRT_Pos (6UL)                 /*!< TX_ABRT (Bit 6)                                       */
#define I2C_I2C_RAW_INTR_STAT_REG_TX_ABRT_Msk (0x40UL)              /*!< TX_ABRT (Bitfield-Mask: 0x01)                         */
#define I2C_I2C_RAW_INTR_STAT_REG_RD_REQ_Pos (5UL)                  /*!< RD_REQ (Bit 5)                                        */
#define I2C_I2C_RAW_INTR_STAT_REG_RD_REQ_Msk (0x20UL)               /*!< RD_REQ (Bitfield-Mask: 0x01)                          */
#define I2C_I2C_RAW_INTR_STAT_REG_TX_EMPTY_Pos (4UL)                /*!< TX_EMPTY (Bit 4)                                      */
#define I2C_I2C_RAW_INTR_STAT_REG_TX_EMPTY_Msk (0x10UL)             /*!< TX_EMPTY (Bitfield-Mask: 0x01)                        */
#define I2C_I2C_RAW_INTR_STAT_REG_TX_OVER_Pos (3UL)                 /*!< TX_OVER (Bit 3)                                       */
#define I2C_I2C_RAW_INTR_STAT_REG_TX_OVER_Msk (0x8UL)               /*!< TX_OVER (Bitfield-Mask: 0x01)                         */
#define I2C_I2C_RAW_INTR_STAT_REG_RX_FULL_Pos (2UL)                 /*!< RX_FULL (Bit 2)                                       */
#define I2C_I2C_RAW_INTR_STAT_REG_RX_FULL_Msk (0x4UL)               /*!< RX_FULL (Bitfield-Mask: 0x01)                         */
#define I2C_I2C_RAW_INTR_STAT_REG_RX_OVER_Pos (1UL)                 /*!< RX_OVER (Bit 1)                                       */
#define I2C_I2C_RAW_INTR_STAT_REG_RX_OVER_Msk (0x2UL)               /*!< RX_OVER (Bitfield-Mask: 0x01)                         */
#define I2C_I2C_RAW_INTR_STAT_REG_RX_UNDER_Pos (0UL)                /*!< RX_UNDER (Bit 0)                                      */
#define I2C_I2C_RAW_INTR_STAT_REG_RX_UNDER_Msk (0x1UL)              /*!< RX_UNDER (Bitfield-Mask: 0x01)                        */
/* =====================================================  I2C_RXFLR_REG  ===================================================== */
#define I2C_I2C_RXFLR_REG_RXFLR_Pos       (0UL)                     /*!< RXFLR (Bit 0)                                         */
#define I2C_I2C_RXFLR_REG_RXFLR_Msk       (0x3fUL)                  /*!< RXFLR (Bitfield-Mask: 0x3f)                           */
/* =====================================================  I2C_RX_TL_REG  ===================================================== */
#define I2C_I2C_RX_TL_REG_RX_TL_Pos       (0UL)                     /*!< RX_TL (Bit 0)                                         */
#define I2C_I2C_RX_TL_REG_RX_TL_Msk       (0x1fUL)                  /*!< RX_TL (Bitfield-Mask: 0x1f)                           */
/* ======================================================  I2C_SAR_REG  ====================================================== */
#define I2C_I2C_SAR_REG_IC_SAR_Pos        (0UL)                     /*!< IC_SAR (Bit 0)                                        */
#define I2C_I2C_SAR_REG_IC_SAR_Msk        (0x3ffUL)                 /*!< IC_SAR (Bitfield-Mask: 0x3ff)                         */
/* ===================================================  I2C_SDA_HOLD_REG  ==================================================== */
#define I2C_I2C_SDA_HOLD_REG_I2C_SDA_RX_HOLD_Pos (16UL)             /*!< I2C_SDA_RX_HOLD (Bit 16)                              */
#define I2C_I2C_SDA_HOLD_REG_I2C_SDA_RX_HOLD_Msk (0xff0000UL)       /*!< I2C_SDA_RX_HOLD (Bitfield-Mask: 0xff)                 */
#define I2C_I2C_SDA_HOLD_REG_I2C_SDA_TX_HOLD_Pos (0UL)              /*!< I2C_SDA_TX_HOLD (Bit 0)                               */
#define I2C_I2C_SDA_HOLD_REG_I2C_SDA_TX_HOLD_Msk (0xffffUL)         /*!< I2C_SDA_TX_HOLD (Bitfield-Mask: 0xffff)               */
/* ===================================================  I2C_SDA_SETUP_REG  =================================================== */
#define I2C_I2C_SDA_SETUP_REG_SDA_SETUP_Pos (0UL)                   /*!< SDA_SETUP (Bit 0)                                     */
#define I2C_I2C_SDA_SETUP_REG_SDA_SETUP_Msk (0xffUL)                /*!< SDA_SETUP (Bitfield-Mask: 0xff)                       */
/* ==================================================  I2C_SS_SCL_HCNT_REG  ================================================== */
#define I2C_I2C_SS_SCL_HCNT_REG_IC_SS_SCL_HCNT_Pos (0UL)            /*!< IC_SS_SCL_HCNT (Bit 0)                                */
#define I2C_I2C_SS_SCL_HCNT_REG_IC_SS_SCL_HCNT_Msk (0xffffUL)       /*!< IC_SS_SCL_HCNT (Bitfield-Mask: 0xffff)                */
/* ==================================================  I2C_SS_SCL_LCNT_REG  ================================================== */
#define I2C_I2C_SS_SCL_LCNT_REG_IC_SS_SCL_LCNT_Pos (0UL)            /*!< IC_SS_SCL_LCNT (Bit 0)                                */
#define I2C_I2C_SS_SCL_LCNT_REG_IC_SS_SCL_LCNT_Msk (0xffffUL)       /*!< IC_SS_SCL_LCNT (Bitfield-Mask: 0xffff)                */
/* ====================================================  I2C_STATUS_REG  ===================================================== */
#define I2C_I2C_STATUS_REG_LV_HOLD_RX_FIFO_FULL_Pos (10UL)          /*!< LV_HOLD_RX_FIFO_FULL (Bit 10)                         */
#define I2C_I2C_STATUS_REG_LV_HOLD_RX_FIFO_FULL_Msk (0x400UL)       /*!< LV_HOLD_RX_FIFO_FULL (Bitfield-Mask: 0x01)            */
#define I2C_I2C_STATUS_REG_SLV_HOLD_TX_FIFO_EMPTY_Pos (9UL)         /*!< SLV_HOLD_TX_FIFO_EMPTY (Bit 9)                        */
#define I2C_I2C_STATUS_REG_SLV_HOLD_TX_FIFO_EMPTY_Msk (0x200UL)     /*!< SLV_HOLD_TX_FIFO_EMPTY (Bitfield-Mask: 0x01)          */
#define I2C_I2C_STATUS_REG_MST_HOLD_RX_FIFO_FULL_Pos (8UL)          /*!< MST_HOLD_RX_FIFO_FULL (Bit 8)                         */
#define I2C_I2C_STATUS_REG_MST_HOLD_RX_FIFO_FULL_Msk (0x100UL)      /*!< MST_HOLD_RX_FIFO_FULL (Bitfield-Mask: 0x01)           */
#define I2C_I2C_STATUS_REG_MST_HOLD_TX_FIFO_EMPTY_Pos (7UL)         /*!< MST_HOLD_TX_FIFO_EMPTY (Bit 7)                        */
#define I2C_I2C_STATUS_REG_MST_HOLD_TX_FIFO_EMPTY_Msk (0x80UL)      /*!< MST_HOLD_TX_FIFO_EMPTY (Bitfield-Mask: 0x01)          */
#define I2C_I2C_STATUS_REG_SLV_ACTIVITY_Pos (6UL)                   /*!< SLV_ACTIVITY (Bit 6)                                  */
#define I2C_I2C_STATUS_REG_SLV_ACTIVITY_Msk (0x40UL)                /*!< SLV_ACTIVITY (Bitfield-Mask: 0x01)                    */
#define I2C_I2C_STATUS_REG_MST_ACTIVITY_Pos (5UL)                   /*!< MST_ACTIVITY (Bit 5)                                  */
#define I2C_I2C_STATUS_REG_MST_ACTIVITY_Msk (0x20UL)                /*!< MST_ACTIVITY (Bitfield-Mask: 0x01)                    */
#define I2C_I2C_STATUS_REG_RFF_Pos        (4UL)                     /*!< RFF (Bit 4)                                           */
#define I2C_I2C_STATUS_REG_RFF_Msk        (0x10UL)                  /*!< RFF (Bitfield-Mask: 0x01)                             */
#define I2C_I2C_STATUS_REG_RFNE_Pos       (3UL)                     /*!< RFNE (Bit 3)                                          */
#define I2C_I2C_STATUS_REG_RFNE_Msk       (0x8UL)                   /*!< RFNE (Bitfield-Mask: 0x01)                            */
#define I2C_I2C_STATUS_REG_TFE_Pos        (2UL)                     /*!< TFE (Bit 2)                                           */
#define I2C_I2C_STATUS_REG_TFE_Msk        (0x4UL)                   /*!< TFE (Bitfield-Mask: 0x01)                             */
#define I2C_I2C_STATUS_REG_TFNF_Pos       (1UL)                     /*!< TFNF (Bit 1)                                          */
#define I2C_I2C_STATUS_REG_TFNF_Msk       (0x2UL)                   /*!< TFNF (Bitfield-Mask: 0x01)                            */
#define I2C_I2C_STATUS_REG_I2C_ACTIVITY_Pos (0UL)                   /*!< I2C_ACTIVITY (Bit 0)                                  */
#define I2C_I2C_STATUS_REG_I2C_ACTIVITY_Msk (0x1UL)                 /*!< I2C_ACTIVITY (Bitfield-Mask: 0x01)                    */
/* ======================================================  I2C_TAR_REG  ====================================================== */
#define I2C_I2C_TAR_REG_SPECIAL_Pos       (11UL)                    /*!< SPECIAL (Bit 11)                                      */
#define I2C_I2C_TAR_REG_SPECIAL_Msk       (0x800UL)                 /*!< SPECIAL (Bitfield-Mask: 0x01)                         */
#define I2C_I2C_TAR_REG_GC_OR_START_Pos   (10UL)                    /*!< GC_OR_START (Bit 10)                                  */
#define I2C_I2C_TAR_REG_GC_OR_START_Msk   (0x400UL)                 /*!< GC_OR_START (Bitfield-Mask: 0x01)                     */
#define I2C_I2C_TAR_REG_IC_TAR_Pos        (0UL)                     /*!< IC_TAR (Bit 0)                                        */
#define I2C_I2C_TAR_REG_IC_TAR_Msk        (0x3ffUL)                 /*!< IC_TAR (Bitfield-Mask: 0x3ff)                         */
/* =====================================================  I2C_TXFLR_REG  ===================================================== */
#define I2C_I2C_TXFLR_REG_TXFLR_Pos       (0UL)                     /*!< TXFLR (Bit 0)                                         */
#define I2C_I2C_TXFLR_REG_TXFLR_Msk       (0x3fUL)                  /*!< TXFLR (Bitfield-Mask: 0x3f)                           */
/* ================================================  I2C_TX_ABRT_SOURCE_REG  ================================================= */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_USER_ABRT_Pos (16UL)        /*!< ABRT_USER_ABRT (Bit 16)                               */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_USER_ABRT_Msk (0x10000UL)   /*!< ABRT_USER_ABRT (Bitfield-Mask: 0x01)                  */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_SLVRD_INTX_Pos (15UL)       /*!< ABRT_SLVRD_INTX (Bit 15)                              */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_SLVRD_INTX_Msk (0x8000UL)   /*!< ABRT_SLVRD_INTX (Bitfield-Mask: 0x01)                 */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_SLV_ARBLOST_Pos (14UL)      /*!< ABRT_SLV_ARBLOST (Bit 14)                             */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_SLV_ARBLOST_Msk (0x4000UL)  /*!< ABRT_SLV_ARBLOST (Bitfield-Mask: 0x01)                */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_SLVFLUSH_TXFIFO_Pos (13UL)  /*!< ABRT_SLVFLUSH_TXFIFO (Bit 13)                         */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_SLVFLUSH_TXFIFO_Msk (0x2000UL) /*!< ABRT_SLVFLUSH_TXFIFO (Bitfield-Mask: 0x01)         */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ARB_LOST_Pos (12UL)              /*!< ARB_LOST (Bit 12)                                     */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ARB_LOST_Msk (0x1000UL)          /*!< ARB_LOST (Bitfield-Mask: 0x01)                        */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_MASTER_DIS_Pos (11UL)       /*!< ABRT_MASTER_DIS (Bit 11)                              */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_MASTER_DIS_Msk (0x800UL)    /*!< ABRT_MASTER_DIS (Bitfield-Mask: 0x01)                 */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_10B_RD_NORSTRT_Pos (10UL)   /*!< ABRT_10B_RD_NORSTRT (Bit 10)                          */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_10B_RD_NORSTRT_Msk (0x400UL) /*!< ABRT_10B_RD_NORSTRT (Bitfield-Mask: 0x01)            */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_SBYTE_NORSTRT_Pos (9UL)     /*!< ABRT_SBYTE_NORSTRT (Bit 9)                            */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_SBYTE_NORSTRT_Msk (0x200UL) /*!< ABRT_SBYTE_NORSTRT (Bitfield-Mask: 0x01)              */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_HS_NORSTRT_Pos (8UL)        /*!< ABRT_HS_NORSTRT (Bit 8)                               */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_HS_NORSTRT_Msk (0x100UL)    /*!< ABRT_HS_NORSTRT (Bitfield-Mask: 0x01)                 */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_SBYTE_ACKDET_Pos (7UL)      /*!< ABRT_SBYTE_ACKDET (Bit 7)                             */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_SBYTE_ACKDET_Msk (0x80UL)   /*!< ABRT_SBYTE_ACKDET (Bitfield-Mask: 0x01)               */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_HS_ACKDET_Pos (6UL)         /*!< ABRT_HS_ACKDET (Bit 6)                                */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_HS_ACKDET_Msk (0x40UL)      /*!< ABRT_HS_ACKDET (Bitfield-Mask: 0x01)                  */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_GCALL_READ_Pos (5UL)        /*!< ABRT_GCALL_READ (Bit 5)                               */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_GCALL_READ_Msk (0x20UL)     /*!< ABRT_GCALL_READ (Bitfield-Mask: 0x01)                 */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_GCALL_NOACK_Pos (4UL)       /*!< ABRT_GCALL_NOACK (Bit 4)                              */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_GCALL_NOACK_Msk (0x10UL)    /*!< ABRT_GCALL_NOACK (Bitfield-Mask: 0x01)                */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_TXDATA_NOACK_Pos (3UL)      /*!< ABRT_TXDATA_NOACK (Bit 3)                             */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_TXDATA_NOACK_Msk (0x8UL)    /*!< ABRT_TXDATA_NOACK (Bitfield-Mask: 0x01)               */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_10ADDR2_NOACK_Pos (2UL)     /*!< ABRT_10ADDR2_NOACK (Bit 2)                            */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_10ADDR2_NOACK_Msk (0x4UL)   /*!< ABRT_10ADDR2_NOACK (Bitfield-Mask: 0x01)              */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_10ADDR1_NOACK_Pos (1UL)     /*!< ABRT_10ADDR1_NOACK (Bit 1)                            */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_10ADDR1_NOACK_Msk (0x2UL)   /*!< ABRT_10ADDR1_NOACK (Bitfield-Mask: 0x01)              */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_7B_ADDR_NOACK_Pos (0UL)     /*!< ABRT_7B_ADDR_NOACK (Bit 0)                            */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_7B_ADDR_NOACK_Msk (0x1UL)   /*!< ABRT_7B_ADDR_NOACK (Bitfield-Mask: 0x01)              */
/* =====================================================  I2C_TX_TL_REG  ===================================================== */
#define I2C_I2C_TX_TL_REG_TX_TL_Pos       (0UL)                     /*!< TX_TL (Bit 0)                                         */
#define I2C_I2C_TX_TL_REG_TX_TL_Msk       (0x1fUL)                  /*!< TX_TL (Bitfield-Mask: 0x1f)                           */


/* =========================================================================================================================== */
/* ================                                           I2C2                                            ================ */
/* =========================================================================================================================== */

/* ===============================================  I2C2_ACK_GENERAL_CALL_REG  =============================================== */
#define I2C2_I2C2_ACK_GENERAL_CALL_REG_ACK_GEN_CALL_Pos (0UL)       /*!< ACK_GEN_CALL (Bit 0)                                  */
#define I2C2_I2C2_ACK_GENERAL_CALL_REG_ACK_GEN_CALL_Msk (0x1UL)     /*!< ACK_GEN_CALL (Bitfield-Mask: 0x01)                    */
/* =================================================  I2C2_CLR_ACTIVITY_REG  ================================================= */
#define I2C2_I2C2_CLR_ACTIVITY_REG_CLR_ACTIVITY_Pos (0UL)           /*!< CLR_ACTIVITY (Bit 0)                                  */
#define I2C2_I2C2_CLR_ACTIVITY_REG_CLR_ACTIVITY_Msk (0x1UL)         /*!< CLR_ACTIVITY (Bitfield-Mask: 0x01)                    */
/* =================================================  I2C2_CLR_GEN_CALL_REG  ================================================= */
#define I2C2_I2C2_CLR_GEN_CALL_REG_CLR_GEN_CALL_Pos (0UL)           /*!< CLR_GEN_CALL (Bit 0)                                  */
#define I2C2_I2C2_CLR_GEN_CALL_REG_CLR_GEN_CALL_Msk (0x1UL)         /*!< CLR_GEN_CALL (Bitfield-Mask: 0x01)                    */
/* ===================================================  I2C2_CLR_INTR_REG  =================================================== */
#define I2C2_I2C2_CLR_INTR_REG_CLR_INTR_Pos (0UL)                   /*!< CLR_INTR (Bit 0)                                      */
#define I2C2_I2C2_CLR_INTR_REG_CLR_INTR_Msk (0x1UL)                 /*!< CLR_INTR (Bitfield-Mask: 0x01)                        */
/* ==================================================  I2C2_CLR_RD_REQ_REG  ================================================== */
#define I2C2_I2C2_CLR_RD_REQ_REG_CLR_RD_REQ_Pos (0UL)               /*!< CLR_RD_REQ (Bit 0)                                    */
#define I2C2_I2C2_CLR_RD_REQ_REG_CLR_RD_REQ_Msk (0x1UL)             /*!< CLR_RD_REQ (Bitfield-Mask: 0x01)                      */
/* =================================================  I2C2_CLR_RX_DONE_REG  ================================================== */
#define I2C2_I2C2_CLR_RX_DONE_REG_CLR_RX_DONE_Pos (0UL)             /*!< CLR_RX_DONE (Bit 0)                                   */
#define I2C2_I2C2_CLR_RX_DONE_REG_CLR_RX_DONE_Msk (0x1UL)           /*!< CLR_RX_DONE (Bitfield-Mask: 0x01)                     */
/* =================================================  I2C2_CLR_RX_OVER_REG  ================================================== */
#define I2C2_I2C2_CLR_RX_OVER_REG_CLR_RX_OVER_Pos (0UL)             /*!< CLR_RX_OVER (Bit 0)                                   */
#define I2C2_I2C2_CLR_RX_OVER_REG_CLR_RX_OVER_Msk (0x1UL)           /*!< CLR_RX_OVER (Bitfield-Mask: 0x01)                     */
/* =================================================  I2C2_CLR_RX_UNDER_REG  ================================================= */
#define I2C2_I2C2_CLR_RX_UNDER_REG_CLR_RX_UNDER_Pos (0UL)           /*!< CLR_RX_UNDER (Bit 0)                                  */
#define I2C2_I2C2_CLR_RX_UNDER_REG_CLR_RX_UNDER_Msk (0x1UL)         /*!< CLR_RX_UNDER (Bitfield-Mask: 0x01)                    */
/* ================================================  I2C2_CLR_START_DET_REG  ================================================= */
#define I2C2_I2C2_CLR_START_DET_REG_CLR_START_DET_Pos (0UL)         /*!< CLR_START_DET (Bit 0)                                 */
#define I2C2_I2C2_CLR_START_DET_REG_CLR_START_DET_Msk (0x1UL)       /*!< CLR_START_DET (Bitfield-Mask: 0x01)                   */
/* =================================================  I2C2_CLR_STOP_DET_REG  ================================================= */
#define I2C2_I2C2_CLR_STOP_DET_REG_CLR_STOP_DET_Pos (0UL)           /*!< CLR_STOP_DET (Bit 0)                                  */
#define I2C2_I2C2_CLR_STOP_DET_REG_CLR_STOP_DET_Msk (0x1UL)         /*!< CLR_STOP_DET (Bitfield-Mask: 0x01)                    */
/* =================================================  I2C2_CLR_TX_ABRT_REG  ================================================== */
#define I2C2_I2C2_CLR_TX_ABRT_REG_CLR_TX_ABRT_Pos (0UL)             /*!< CLR_TX_ABRT (Bit 0)                                   */
#define I2C2_I2C2_CLR_TX_ABRT_REG_CLR_TX_ABRT_Msk (0x1UL)           /*!< CLR_TX_ABRT (Bitfield-Mask: 0x01)                     */
/* =================================================  I2C2_CLR_TX_OVER_REG  ================================================== */
#define I2C2_I2C2_CLR_TX_OVER_REG_CLR_TX_OVER_Pos (0UL)             /*!< CLR_TX_OVER (Bit 0)                                   */
#define I2C2_I2C2_CLR_TX_OVER_REG_CLR_TX_OVER_Msk (0x1UL)           /*!< CLR_TX_OVER (Bitfield-Mask: 0x01)                     */
/* =====================================================  I2C2_CON_REG  ====================================================== */
#define I2C2_I2C2_CON_REG_I2C_STOP_DET_IF_MASTER_ACTIVE_Pos (10UL)  /*!< I2C_STOP_DET_IF_MASTER_ACTIVE (Bit 10)                */
#define I2C2_I2C2_CON_REG_I2C_STOP_DET_IF_MASTER_ACTIVE_Msk (0x400UL) /*!< I2C_STOP_DET_IF_MASTER_ACTIVE (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_CON_REG_I2C_RX_FIFO_FULL_HLD_CTRL_Pos (9UL)       /*!< I2C_RX_FIFO_FULL_HLD_CTRL (Bit 9)                     */
#define I2C2_I2C2_CON_REG_I2C_RX_FIFO_FULL_HLD_CTRL_Msk (0x200UL)   /*!< I2C_RX_FIFO_FULL_HLD_CTRL (Bitfield-Mask: 0x01)       */
#define I2C2_I2C2_CON_REG_I2C_TX_EMPTY_CTRL_Pos (8UL)               /*!< I2C_TX_EMPTY_CTRL (Bit 8)                             */
#define I2C2_I2C2_CON_REG_I2C_TX_EMPTY_CTRL_Msk (0x100UL)           /*!< I2C_TX_EMPTY_CTRL (Bitfield-Mask: 0x01)               */
#define I2C2_I2C2_CON_REG_I2C_STOP_DET_IFADDRESSED_Pos (7UL)        /*!< I2C_STOP_DET_IFADDRESSED (Bit 7)                      */
#define I2C2_I2C2_CON_REG_I2C_STOP_DET_IFADDRESSED_Msk (0x80UL)     /*!< I2C_STOP_DET_IFADDRESSED (Bitfield-Mask: 0x01)        */
#define I2C2_I2C2_CON_REG_I2C_SLAVE_DISABLE_Pos (6UL)               /*!< I2C_SLAVE_DISABLE (Bit 6)                             */
#define I2C2_I2C2_CON_REG_I2C_SLAVE_DISABLE_Msk (0x40UL)            /*!< I2C_SLAVE_DISABLE (Bitfield-Mask: 0x01)               */
#define I2C2_I2C2_CON_REG_I2C_RESTART_EN_Pos (5UL)                  /*!< I2C_RESTART_EN (Bit 5)                                */
#define I2C2_I2C2_CON_REG_I2C_RESTART_EN_Msk (0x20UL)               /*!< I2C_RESTART_EN (Bitfield-Mask: 0x01)                  */
#define I2C2_I2C2_CON_REG_I2C_10BITADDR_MASTER_Pos (4UL)            /*!< I2C_10BITADDR_MASTER (Bit 4)                          */
#define I2C2_I2C2_CON_REG_I2C_10BITADDR_MASTER_Msk (0x10UL)         /*!< I2C_10BITADDR_MASTER (Bitfield-Mask: 0x01)            */
#define I2C2_I2C2_CON_REG_I2C_10BITADDR_SLAVE_Pos (3UL)             /*!< I2C_10BITADDR_SLAVE (Bit 3)                           */
#define I2C2_I2C2_CON_REG_I2C_10BITADDR_SLAVE_Msk (0x8UL)           /*!< I2C_10BITADDR_SLAVE (Bitfield-Mask: 0x01)             */
#define I2C2_I2C2_CON_REG_I2C_SPEED_Pos   (1UL)                     /*!< I2C_SPEED (Bit 1)                                     */
#define I2C2_I2C2_CON_REG_I2C_SPEED_Msk   (0x6UL)                   /*!< I2C_SPEED (Bitfield-Mask: 0x03)                       */
#define I2C2_I2C2_CON_REG_I2C_MASTER_MODE_Pos (0UL)                 /*!< I2C_MASTER_MODE (Bit 0)                               */
#define I2C2_I2C2_CON_REG_I2C_MASTER_MODE_Msk (0x1UL)               /*!< I2C_MASTER_MODE (Bitfield-Mask: 0x01)                 */
/* ===================================================  I2C2_DATA_CMD_REG  =================================================== */
#define I2C2_I2C2_DATA_CMD_REG_I2C_RESTART_Pos (10UL)               /*!< I2C_RESTART (Bit 10)                                  */
#define I2C2_I2C2_DATA_CMD_REG_I2C_RESTART_Msk (0x400UL)            /*!< I2C_RESTART (Bitfield-Mask: 0x01)                     */
#define I2C2_I2C2_DATA_CMD_REG_I2C_STOP_Pos (9UL)                   /*!< I2C_STOP (Bit 9)                                      */
#define I2C2_I2C2_DATA_CMD_REG_I2C_STOP_Msk (0x200UL)               /*!< I2C_STOP (Bitfield-Mask: 0x01)                        */
#define I2C2_I2C2_DATA_CMD_REG_I2C_CMD_Pos (8UL)                    /*!< I2C_CMD (Bit 8)                                       */
#define I2C2_I2C2_DATA_CMD_REG_I2C_CMD_Msk (0x100UL)                /*!< I2C_CMD (Bitfield-Mask: 0x01)                         */
#define I2C2_I2C2_DATA_CMD_REG_I2C_DAT_Pos (0UL)                    /*!< I2C_DAT (Bit 0)                                       */
#define I2C2_I2C2_DATA_CMD_REG_I2C_DAT_Msk (0xffUL)                 /*!< I2C_DAT (Bitfield-Mask: 0xff)                         */
/* ====================================================  I2C2_DMA_CR_REG  ==================================================== */
#define I2C2_I2C2_DMA_CR_REG_TDMAE_Pos    (1UL)                     /*!< TDMAE (Bit 1)                                         */
#define I2C2_I2C2_DMA_CR_REG_TDMAE_Msk    (0x2UL)                   /*!< TDMAE (Bitfield-Mask: 0x01)                           */
#define I2C2_I2C2_DMA_CR_REG_RDMAE_Pos    (0UL)                     /*!< RDMAE (Bit 0)                                         */
#define I2C2_I2C2_DMA_CR_REG_RDMAE_Msk    (0x1UL)                   /*!< RDMAE (Bitfield-Mask: 0x01)                           */
/* ===================================================  I2C2_DMA_RDLR_REG  =================================================== */
#define I2C2_I2C2_DMA_RDLR_REG_DMARDL_Pos (0UL)                     /*!< DMARDL (Bit 0)                                        */
#define I2C2_I2C2_DMA_RDLR_REG_DMARDL_Msk (0x1fUL)                  /*!< DMARDL (Bitfield-Mask: 0x1f)                          */
/* ===================================================  I2C2_DMA_TDLR_REG  =================================================== */
#define I2C2_I2C2_DMA_TDLR_REG_DMATDL_Pos (0UL)                     /*!< DMATDL (Bit 0)                                        */
#define I2C2_I2C2_DMA_TDLR_REG_DMATDL_Msk (0x1fUL)                  /*!< DMATDL (Bitfield-Mask: 0x1f)                          */
/* ====================================================  I2C2_ENABLE_REG  ==================================================== */
#define I2C2_I2C2_ENABLE_REG_I2C_TX_CMD_BLOCK_Pos (2UL)             /*!< I2C_TX_CMD_BLOCK (Bit 2)                              */
#define I2C2_I2C2_ENABLE_REG_I2C_TX_CMD_BLOCK_Msk (0x4UL)           /*!< I2C_TX_CMD_BLOCK (Bitfield-Mask: 0x01)                */
#define I2C2_I2C2_ENABLE_REG_I2C_ABORT_Pos (1UL)                    /*!< I2C_ABORT (Bit 1)                                     */
#define I2C2_I2C2_ENABLE_REG_I2C_ABORT_Msk (0x2UL)                  /*!< I2C_ABORT (Bitfield-Mask: 0x01)                       */
#define I2C2_I2C2_ENABLE_REG_I2C_EN_Pos   (0UL)                     /*!< I2C_EN (Bit 0)                                        */
#define I2C2_I2C2_ENABLE_REG_I2C_EN_Msk   (0x1UL)                   /*!< I2C_EN (Bitfield-Mask: 0x01)                          */
/* ================================================  I2C2_ENABLE_STATUS_REG  ================================================= */
#define I2C2_I2C2_ENABLE_STATUS_REG_SLV_RX_DATA_LOST_Pos (2UL)      /*!< SLV_RX_DATA_LOST (Bit 2)                              */
#define I2C2_I2C2_ENABLE_STATUS_REG_SLV_RX_DATA_LOST_Msk (0x4UL)    /*!< SLV_RX_DATA_LOST (Bitfield-Mask: 0x01)                */
#define I2C2_I2C2_ENABLE_STATUS_REG_SLV_DISABLED_WHILE_BUSY_Pos (1UL) /*!< SLV_DISABLED_WHILE_BUSY (Bit 1)                     */
#define I2C2_I2C2_ENABLE_STATUS_REG_SLV_DISABLED_WHILE_BUSY_Msk (0x2UL) /*!< SLV_DISABLED_WHILE_BUSY (Bitfield-Mask: 0x01)     */
#define I2C2_I2C2_ENABLE_STATUS_REG_IC_EN_Pos (0UL)                 /*!< IC_EN (Bit 0)                                         */
#define I2C2_I2C2_ENABLE_STATUS_REG_IC_EN_Msk (0x1UL)               /*!< IC_EN (Bitfield-Mask: 0x01)                           */
/* =================================================  I2C2_FS_SCL_HCNT_REG  ================================================== */
#define I2C2_I2C2_FS_SCL_HCNT_REG_IC_FS_SCL_HCNT_Pos (0UL)          /*!< IC_FS_SCL_HCNT (Bit 0)                                */
#define I2C2_I2C2_FS_SCL_HCNT_REG_IC_FS_SCL_HCNT_Msk (0xffffUL)     /*!< IC_FS_SCL_HCNT (Bitfield-Mask: 0xffff)                */
/* =================================================  I2C2_FS_SCL_LCNT_REG  ================================================== */
#define I2C2_I2C2_FS_SCL_LCNT_REG_IC_FS_SCL_LCNT_Pos (0UL)          /*!< IC_FS_SCL_LCNT (Bit 0)                                */
#define I2C2_I2C2_FS_SCL_LCNT_REG_IC_FS_SCL_LCNT_Msk (0xffffUL)     /*!< IC_FS_SCL_LCNT (Bitfield-Mask: 0xffff)                */
/* ===================================================  I2C2_HS_MADDR_REG  =================================================== */
#define I2C2_I2C2_HS_MADDR_REG_I2C_IC_HS_MAR_Pos (0UL)              /*!< I2C_IC_HS_MAR (Bit 0)                                 */
#define I2C2_I2C2_HS_MADDR_REG_I2C_IC_HS_MAR_Msk (0x7UL)            /*!< I2C_IC_HS_MAR (Bitfield-Mask: 0x07)                   */
/* =================================================  I2C2_HS_SCL_HCNT_REG  ================================================== */
#define I2C2_I2C2_HS_SCL_HCNT_REG_IC_HS_SCL_HCNT_Pos (0UL)          /*!< IC_HS_SCL_HCNT (Bit 0)                                */
#define I2C2_I2C2_HS_SCL_HCNT_REG_IC_HS_SCL_HCNT_Msk (0xffffUL)     /*!< IC_HS_SCL_HCNT (Bitfield-Mask: 0xffff)                */
/* =================================================  I2C2_HS_SCL_LCNT_REG  ================================================== */
#define I2C2_I2C2_HS_SCL_LCNT_REG_IC_HS_SCL_LCNT_Pos (0UL)          /*!< IC_HS_SCL_LCNT (Bit 0)                                */
#define I2C2_I2C2_HS_SCL_LCNT_REG_IC_HS_SCL_LCNT_Msk (0xffffUL)     /*!< IC_HS_SCL_LCNT (Bitfield-Mask: 0xffff)                */
/* =================================================  I2C2_IC_FS_SPKLEN_REG  ================================================= */
#define I2C2_I2C2_IC_FS_SPKLEN_REG_I2C_FS_SPKLEN_Pos (0UL)          /*!< I2C_FS_SPKLEN (Bit 0)                                 */
#define I2C2_I2C2_IC_FS_SPKLEN_REG_I2C_FS_SPKLEN_Msk (0xffUL)       /*!< I2C_FS_SPKLEN (Bitfield-Mask: 0xff)                   */
/* =================================================  I2C2_IC_HS_SPKLEN_REG  ================================================= */
#define I2C2_I2C2_IC_HS_SPKLEN_REG_I2C_HS_SPKLEN_Pos (0UL)          /*!< I2C_HS_SPKLEN (Bit 0)                                 */
#define I2C2_I2C2_IC_HS_SPKLEN_REG_I2C_HS_SPKLEN_Msk (0xffUL)       /*!< I2C_HS_SPKLEN (Bitfield-Mask: 0xff)                   */
/* ==================================================  I2C2_INTR_MASK_REG  =================================================== */
#define I2C2_I2C2_INTR_MASK_REG_M_SCL_STUCK_AT_LOW_Pos (14UL)       /*!< M_SCL_STUCK_AT_LOW (Bit 14)                           */
#define I2C2_I2C2_INTR_MASK_REG_M_SCL_STUCK_AT_LOW_Msk (0x4000UL)   /*!< M_SCL_STUCK_AT_LOW (Bitfield-Mask: 0x01)              */
#define I2C2_I2C2_INTR_MASK_REG_M_MASTER_ON_HOLD_Pos (13UL)         /*!< M_MASTER_ON_HOLD (Bit 13)                             */
#define I2C2_I2C2_INTR_MASK_REG_M_MASTER_ON_HOLD_Msk (0x2000UL)     /*!< M_MASTER_ON_HOLD (Bitfield-Mask: 0x01)                */
#define I2C2_I2C2_INTR_MASK_REG_M_RESTART_DET_Pos (12UL)            /*!< M_RESTART_DET (Bit 12)                                */
#define I2C2_I2C2_INTR_MASK_REG_M_RESTART_DET_Msk (0x1000UL)        /*!< M_RESTART_DET (Bitfield-Mask: 0x01)                   */
#define I2C2_I2C2_INTR_MASK_REG_M_GEN_CALL_Pos (11UL)               /*!< M_GEN_CALL (Bit 11)                                   */
#define I2C2_I2C2_INTR_MASK_REG_M_GEN_CALL_Msk (0x800UL)            /*!< M_GEN_CALL (Bitfield-Mask: 0x01)                      */
#define I2C2_I2C2_INTR_MASK_REG_M_START_DET_Pos (10UL)              /*!< M_START_DET (Bit 10)                                  */
#define I2C2_I2C2_INTR_MASK_REG_M_START_DET_Msk (0x400UL)           /*!< M_START_DET (Bitfield-Mask: 0x01)                     */
#define I2C2_I2C2_INTR_MASK_REG_M_STOP_DET_Pos (9UL)                /*!< M_STOP_DET (Bit 9)                                    */
#define I2C2_I2C2_INTR_MASK_REG_M_STOP_DET_Msk (0x200UL)            /*!< M_STOP_DET (Bitfield-Mask: 0x01)                      */
#define I2C2_I2C2_INTR_MASK_REG_M_ACTIVITY_Pos (8UL)                /*!< M_ACTIVITY (Bit 8)                                    */
#define I2C2_I2C2_INTR_MASK_REG_M_ACTIVITY_Msk (0x100UL)            /*!< M_ACTIVITY (Bitfield-Mask: 0x01)                      */
#define I2C2_I2C2_INTR_MASK_REG_M_RX_DONE_Pos (7UL)                 /*!< M_RX_DONE (Bit 7)                                     */
#define I2C2_I2C2_INTR_MASK_REG_M_RX_DONE_Msk (0x80UL)              /*!< M_RX_DONE (Bitfield-Mask: 0x01)                       */
#define I2C2_I2C2_INTR_MASK_REG_M_TX_ABRT_Pos (6UL)                 /*!< M_TX_ABRT (Bit 6)                                     */
#define I2C2_I2C2_INTR_MASK_REG_M_TX_ABRT_Msk (0x40UL)              /*!< M_TX_ABRT (Bitfield-Mask: 0x01)                       */
#define I2C2_I2C2_INTR_MASK_REG_M_RD_REQ_Pos (5UL)                  /*!< M_RD_REQ (Bit 5)                                      */
#define I2C2_I2C2_INTR_MASK_REG_M_RD_REQ_Msk (0x20UL)               /*!< M_RD_REQ (Bitfield-Mask: 0x01)                        */
#define I2C2_I2C2_INTR_MASK_REG_M_TX_EMPTY_Pos (4UL)                /*!< M_TX_EMPTY (Bit 4)                                    */
#define I2C2_I2C2_INTR_MASK_REG_M_TX_EMPTY_Msk (0x10UL)             /*!< M_TX_EMPTY (Bitfield-Mask: 0x01)                      */
#define I2C2_I2C2_INTR_MASK_REG_M_TX_OVER_Pos (3UL)                 /*!< M_TX_OVER (Bit 3)                                     */
#define I2C2_I2C2_INTR_MASK_REG_M_TX_OVER_Msk (0x8UL)               /*!< M_TX_OVER (Bitfield-Mask: 0x01)                       */
#define I2C2_I2C2_INTR_MASK_REG_M_RX_FULL_Pos (2UL)                 /*!< M_RX_FULL (Bit 2)                                     */
#define I2C2_I2C2_INTR_MASK_REG_M_RX_FULL_Msk (0x4UL)               /*!< M_RX_FULL (Bitfield-Mask: 0x01)                       */
#define I2C2_I2C2_INTR_MASK_REG_M_RX_OVER_Pos (1UL)                 /*!< M_RX_OVER (Bit 1)                                     */
#define I2C2_I2C2_INTR_MASK_REG_M_RX_OVER_Msk (0x2UL)               /*!< M_RX_OVER (Bitfield-Mask: 0x01)                       */
#define I2C2_I2C2_INTR_MASK_REG_M_RX_UNDER_Pos (0UL)                /*!< M_RX_UNDER (Bit 0)                                    */
#define I2C2_I2C2_INTR_MASK_REG_M_RX_UNDER_Msk (0x1UL)              /*!< M_RX_UNDER (Bitfield-Mask: 0x01)                      */
/* ==================================================  I2C2_INTR_STAT_REG  =================================================== */
#define I2C2_I2C2_INTR_STAT_REG_R_SCL_STUCK_AT_LOW_Pos (14UL)       /*!< R_SCL_STUCK_AT_LOW (Bit 14)                           */
#define I2C2_I2C2_INTR_STAT_REG_R_SCL_STUCK_AT_LOW_Msk (0x4000UL)   /*!< R_SCL_STUCK_AT_LOW (Bitfield-Mask: 0x01)              */
#define I2C2_I2C2_INTR_STAT_REG_R_MASTER_ON_HOLD_Pos (13UL)         /*!< R_MASTER_ON_HOLD (Bit 13)                             */
#define I2C2_I2C2_INTR_STAT_REG_R_MASTER_ON_HOLD_Msk (0x2000UL)     /*!< R_MASTER_ON_HOLD (Bitfield-Mask: 0x01)                */
#define I2C2_I2C2_INTR_STAT_REG_R_RESTART_DET_Pos (12UL)            /*!< R_RESTART_DET (Bit 12)                                */
#define I2C2_I2C2_INTR_STAT_REG_R_RESTART_DET_Msk (0x1000UL)        /*!< R_RESTART_DET (Bitfield-Mask: 0x01)                   */
#define I2C2_I2C2_INTR_STAT_REG_R_GEN_CALL_Pos (11UL)               /*!< R_GEN_CALL (Bit 11)                                   */
#define I2C2_I2C2_INTR_STAT_REG_R_GEN_CALL_Msk (0x800UL)            /*!< R_GEN_CALL (Bitfield-Mask: 0x01)                      */
#define I2C2_I2C2_INTR_STAT_REG_R_START_DET_Pos (10UL)              /*!< R_START_DET (Bit 10)                                  */
#define I2C2_I2C2_INTR_STAT_REG_R_START_DET_Msk (0x400UL)           /*!< R_START_DET (Bitfield-Mask: 0x01)                     */
#define I2C2_I2C2_INTR_STAT_REG_R_STOP_DET_Pos (9UL)                /*!< R_STOP_DET (Bit 9)                                    */
#define I2C2_I2C2_INTR_STAT_REG_R_STOP_DET_Msk (0x200UL)            /*!< R_STOP_DET (Bitfield-Mask: 0x01)                      */
#define I2C2_I2C2_INTR_STAT_REG_R_ACTIVITY_Pos (8UL)                /*!< R_ACTIVITY (Bit 8)                                    */
#define I2C2_I2C2_INTR_STAT_REG_R_ACTIVITY_Msk (0x100UL)            /*!< R_ACTIVITY (Bitfield-Mask: 0x01)                      */
#define I2C2_I2C2_INTR_STAT_REG_R_RX_DONE_Pos (7UL)                 /*!< R_RX_DONE (Bit 7)                                     */
#define I2C2_I2C2_INTR_STAT_REG_R_RX_DONE_Msk (0x80UL)              /*!< R_RX_DONE (Bitfield-Mask: 0x01)                       */
#define I2C2_I2C2_INTR_STAT_REG_R_TX_ABRT_Pos (6UL)                 /*!< R_TX_ABRT (Bit 6)                                     */
#define I2C2_I2C2_INTR_STAT_REG_R_TX_ABRT_Msk (0x40UL)              /*!< R_TX_ABRT (Bitfield-Mask: 0x01)                       */
#define I2C2_I2C2_INTR_STAT_REG_R_RD_REQ_Pos (5UL)                  /*!< R_RD_REQ (Bit 5)                                      */
#define I2C2_I2C2_INTR_STAT_REG_R_RD_REQ_Msk (0x20UL)               /*!< R_RD_REQ (Bitfield-Mask: 0x01)                        */
#define I2C2_I2C2_INTR_STAT_REG_R_TX_EMPTY_Pos (4UL)                /*!< R_TX_EMPTY (Bit 4)                                    */
#define I2C2_I2C2_INTR_STAT_REG_R_TX_EMPTY_Msk (0x10UL)             /*!< R_TX_EMPTY (Bitfield-Mask: 0x01)                      */
#define I2C2_I2C2_INTR_STAT_REG_R_TX_OVER_Pos (3UL)                 /*!< R_TX_OVER (Bit 3)                                     */
#define I2C2_I2C2_INTR_STAT_REG_R_TX_OVER_Msk (0x8UL)               /*!< R_TX_OVER (Bitfield-Mask: 0x01)                       */
#define I2C2_I2C2_INTR_STAT_REG_R_RX_FULL_Pos (2UL)                 /*!< R_RX_FULL (Bit 2)                                     */
#define I2C2_I2C2_INTR_STAT_REG_R_RX_FULL_Msk (0x4UL)               /*!< R_RX_FULL (Bitfield-Mask: 0x01)                       */
#define I2C2_I2C2_INTR_STAT_REG_R_RX_OVER_Pos (1UL)                 /*!< R_RX_OVER (Bit 1)                                     */
#define I2C2_I2C2_INTR_STAT_REG_R_RX_OVER_Msk (0x2UL)               /*!< R_RX_OVER (Bitfield-Mask: 0x01)                       */
#define I2C2_I2C2_INTR_STAT_REG_R_RX_UNDER_Pos (0UL)                /*!< R_RX_UNDER (Bit 0)                                    */
#define I2C2_I2C2_INTR_STAT_REG_R_RX_UNDER_Msk (0x1UL)              /*!< R_RX_UNDER (Bitfield-Mask: 0x01)                      */
/* ================================================  I2C2_RAW_INTR_STAT_REG  ================================================= */
#define I2C2_I2C2_RAW_INTR_STAT_REG_SCL_STUCK_AT_LOW_Pos (14UL)     /*!< SCL_STUCK_AT_LOW (Bit 14)                             */
#define I2C2_I2C2_RAW_INTR_STAT_REG_SCL_STUCK_AT_LOW_Msk (0x4000UL) /*!< SCL_STUCK_AT_LOW (Bitfield-Mask: 0x01)                */
#define I2C2_I2C2_RAW_INTR_STAT_REG_MASTER_ON_HOLD_Pos (13UL)       /*!< MASTER_ON_HOLD (Bit 13)                               */
#define I2C2_I2C2_RAW_INTR_STAT_REG_MASTER_ON_HOLD_Msk (0x2000UL)   /*!< MASTER_ON_HOLD (Bitfield-Mask: 0x01)                  */
#define I2C2_I2C2_RAW_INTR_STAT_REG_RESTART_DET_Pos (12UL)          /*!< RESTART_DET (Bit 12)                                  */
#define I2C2_I2C2_RAW_INTR_STAT_REG_RESTART_DET_Msk (0x1000UL)      /*!< RESTART_DET (Bitfield-Mask: 0x01)                     */
#define I2C2_I2C2_RAW_INTR_STAT_REG_GEN_CALL_Pos (11UL)             /*!< GEN_CALL (Bit 11)                                     */
#define I2C2_I2C2_RAW_INTR_STAT_REG_GEN_CALL_Msk (0x800UL)          /*!< GEN_CALL (Bitfield-Mask: 0x01)                        */
#define I2C2_I2C2_RAW_INTR_STAT_REG_START_DET_Pos (10UL)            /*!< START_DET (Bit 10)                                    */
#define I2C2_I2C2_RAW_INTR_STAT_REG_START_DET_Msk (0x400UL)         /*!< START_DET (Bitfield-Mask: 0x01)                       */
#define I2C2_I2C2_RAW_INTR_STAT_REG_STOP_DET_Pos (9UL)              /*!< STOP_DET (Bit 9)                                      */
#define I2C2_I2C2_RAW_INTR_STAT_REG_STOP_DET_Msk (0x200UL)          /*!< STOP_DET (Bitfield-Mask: 0x01)                        */
#define I2C2_I2C2_RAW_INTR_STAT_REG_ACTIVITY_Pos (8UL)              /*!< ACTIVITY (Bit 8)                                      */
#define I2C2_I2C2_RAW_INTR_STAT_REG_ACTIVITY_Msk (0x100UL)          /*!< ACTIVITY (Bitfield-Mask: 0x01)                        */
#define I2C2_I2C2_RAW_INTR_STAT_REG_RX_DONE_Pos (7UL)               /*!< RX_DONE (Bit 7)                                       */
#define I2C2_I2C2_RAW_INTR_STAT_REG_RX_DONE_Msk (0x80UL)            /*!< RX_DONE (Bitfield-Mask: 0x01)                         */
#define I2C2_I2C2_RAW_INTR_STAT_REG_TX_ABRT_Pos (6UL)               /*!< TX_ABRT (Bit 6)                                       */
#define I2C2_I2C2_RAW_INTR_STAT_REG_TX_ABRT_Msk (0x40UL)            /*!< TX_ABRT (Bitfield-Mask: 0x01)                         */
#define I2C2_I2C2_RAW_INTR_STAT_REG_RD_REQ_Pos (5UL)                /*!< RD_REQ (Bit 5)                                        */
#define I2C2_I2C2_RAW_INTR_STAT_REG_RD_REQ_Msk (0x20UL)             /*!< RD_REQ (Bitfield-Mask: 0x01)                          */
#define I2C2_I2C2_RAW_INTR_STAT_REG_TX_EMPTY_Pos (4UL)              /*!< TX_EMPTY (Bit 4)                                      */
#define I2C2_I2C2_RAW_INTR_STAT_REG_TX_EMPTY_Msk (0x10UL)           /*!< TX_EMPTY (Bitfield-Mask: 0x01)                        */
#define I2C2_I2C2_RAW_INTR_STAT_REG_TX_OVER_Pos (3UL)               /*!< TX_OVER (Bit 3)                                       */
#define I2C2_I2C2_RAW_INTR_STAT_REG_TX_OVER_Msk (0x8UL)             /*!< TX_OVER (Bitfield-Mask: 0x01)                         */
#define I2C2_I2C2_RAW_INTR_STAT_REG_RX_FULL_Pos (2UL)               /*!< RX_FULL (Bit 2)                                       */
#define I2C2_I2C2_RAW_INTR_STAT_REG_RX_FULL_Msk (0x4UL)             /*!< RX_FULL (Bitfield-Mask: 0x01)                         */
#define I2C2_I2C2_RAW_INTR_STAT_REG_RX_OVER_Pos (1UL)               /*!< RX_OVER (Bit 1)                                       */
#define I2C2_I2C2_RAW_INTR_STAT_REG_RX_OVER_Msk (0x2UL)             /*!< RX_OVER (Bitfield-Mask: 0x01)                         */
#define I2C2_I2C2_RAW_INTR_STAT_REG_RX_UNDER_Pos (0UL)              /*!< RX_UNDER (Bit 0)                                      */
#define I2C2_I2C2_RAW_INTR_STAT_REG_RX_UNDER_Msk (0x1UL)            /*!< RX_UNDER (Bitfield-Mask: 0x01)                        */
/* ====================================================  I2C2_RXFLR_REG  ===================================================== */
#define I2C2_I2C2_RXFLR_REG_RXFLR_Pos     (0UL)                     /*!< RXFLR (Bit 0)                                         */
#define I2C2_I2C2_RXFLR_REG_RXFLR_Msk     (0x3fUL)                  /*!< RXFLR (Bitfield-Mask: 0x3f)                           */
/* ====================================================  I2C2_RX_TL_REG  ===================================================== */
#define I2C2_I2C2_RX_TL_REG_RX_TL_Pos     (0UL)                     /*!< RX_TL (Bit 0)                                         */
#define I2C2_I2C2_RX_TL_REG_RX_TL_Msk     (0x1fUL)                  /*!< RX_TL (Bitfield-Mask: 0x1f)                           */
/* =====================================================  I2C2_SAR_REG  ====================================================== */
#define I2C2_I2C2_SAR_REG_IC_SAR_Pos      (0UL)                     /*!< IC_SAR (Bit 0)                                        */
#define I2C2_I2C2_SAR_REG_IC_SAR_Msk      (0x3ffUL)                 /*!< IC_SAR (Bitfield-Mask: 0x3ff)                         */
/* ===================================================  I2C2_SDA_HOLD_REG  =================================================== */
#define I2C2_I2C2_SDA_HOLD_REG_I2C_SDA_RX_HOLD_Pos (16UL)           /*!< I2C_SDA_RX_HOLD (Bit 16)                              */
#define I2C2_I2C2_SDA_HOLD_REG_I2C_SDA_RX_HOLD_Msk (0xff0000UL)     /*!< I2C_SDA_RX_HOLD (Bitfield-Mask: 0xff)                 */
#define I2C2_I2C2_SDA_HOLD_REG_I2C_SDA_TX_HOLD_Pos (0UL)            /*!< I2C_SDA_TX_HOLD (Bit 0)                               */
#define I2C2_I2C2_SDA_HOLD_REG_I2C_SDA_TX_HOLD_Msk (0xffffUL)       /*!< I2C_SDA_TX_HOLD (Bitfield-Mask: 0xffff)               */
/* ==================================================  I2C2_SDA_SETUP_REG  =================================================== */
#define I2C2_I2C2_SDA_SETUP_REG_SDA_SETUP_Pos (0UL)                 /*!< SDA_SETUP (Bit 0)                                     */
#define I2C2_I2C2_SDA_SETUP_REG_SDA_SETUP_Msk (0xffUL)              /*!< SDA_SETUP (Bitfield-Mask: 0xff)                       */
/* =================================================  I2C2_SS_SCL_HCNT_REG  ================================================== */
#define I2C2_I2C2_SS_SCL_HCNT_REG_IC_SS_SCL_HCNT_Pos (0UL)          /*!< IC_SS_SCL_HCNT (Bit 0)                                */
#define I2C2_I2C2_SS_SCL_HCNT_REG_IC_SS_SCL_HCNT_Msk (0xffffUL)     /*!< IC_SS_SCL_HCNT (Bitfield-Mask: 0xffff)                */
/* =================================================  I2C2_SS_SCL_LCNT_REG  ================================================== */
#define I2C2_I2C2_SS_SCL_LCNT_REG_IC_SS_SCL_LCNT_Pos (0UL)          /*!< IC_SS_SCL_LCNT (Bit 0)                                */
#define I2C2_I2C2_SS_SCL_LCNT_REG_IC_SS_SCL_LCNT_Msk (0xffffUL)     /*!< IC_SS_SCL_LCNT (Bitfield-Mask: 0xffff)                */
/* ====================================================  I2C2_STATUS_REG  ==================================================== */
#define I2C2_I2C2_STATUS_REG_LV_HOLD_RX_FIFO_FULL_Pos (10UL)        /*!< LV_HOLD_RX_FIFO_FULL (Bit 10)                         */
#define I2C2_I2C2_STATUS_REG_LV_HOLD_RX_FIFO_FULL_Msk (0x400UL)     /*!< LV_HOLD_RX_FIFO_FULL (Bitfield-Mask: 0x01)            */
#define I2C2_I2C2_STATUS_REG_SLV_HOLD_TX_FIFO_EMPTY_Pos (9UL)       /*!< SLV_HOLD_TX_FIFO_EMPTY (Bit 9)                        */
#define I2C2_I2C2_STATUS_REG_SLV_HOLD_TX_FIFO_EMPTY_Msk (0x200UL)   /*!< SLV_HOLD_TX_FIFO_EMPTY (Bitfield-Mask: 0x01)          */
#define I2C2_I2C2_STATUS_REG_MST_HOLD_RX_FIFO_FULL_Pos (8UL)        /*!< MST_HOLD_RX_FIFO_FULL (Bit 8)                         */
#define I2C2_I2C2_STATUS_REG_MST_HOLD_RX_FIFO_FULL_Msk (0x100UL)    /*!< MST_HOLD_RX_FIFO_FULL (Bitfield-Mask: 0x01)           */
#define I2C2_I2C2_STATUS_REG_MST_HOLD_TX_FIFO_EMPTY_Pos (7UL)       /*!< MST_HOLD_TX_FIFO_EMPTY (Bit 7)                        */
#define I2C2_I2C2_STATUS_REG_MST_HOLD_TX_FIFO_EMPTY_Msk (0x80UL)    /*!< MST_HOLD_TX_FIFO_EMPTY (Bitfield-Mask: 0x01)          */
#define I2C2_I2C2_STATUS_REG_SLV_ACTIVITY_Pos (6UL)                 /*!< SLV_ACTIVITY (Bit 6)                                  */
#define I2C2_I2C2_STATUS_REG_SLV_ACTIVITY_Msk (0x40UL)              /*!< SLV_ACTIVITY (Bitfield-Mask: 0x01)                    */
#define I2C2_I2C2_STATUS_REG_MST_ACTIVITY_Pos (5UL)                 /*!< MST_ACTIVITY (Bit 5)                                  */
#define I2C2_I2C2_STATUS_REG_MST_ACTIVITY_Msk (0x20UL)              /*!< MST_ACTIVITY (Bitfield-Mask: 0x01)                    */
#define I2C2_I2C2_STATUS_REG_RFF_Pos      (4UL)                     /*!< RFF (Bit 4)                                           */
#define I2C2_I2C2_STATUS_REG_RFF_Msk      (0x10UL)                  /*!< RFF (Bitfield-Mask: 0x01)                             */
#define I2C2_I2C2_STATUS_REG_RFNE_Pos     (3UL)                     /*!< RFNE (Bit 3)                                          */
#define I2C2_I2C2_STATUS_REG_RFNE_Msk     (0x8UL)                   /*!< RFNE (Bitfield-Mask: 0x01)                            */
#define I2C2_I2C2_STATUS_REG_TFE_Pos      (2UL)                     /*!< TFE (Bit 2)                                           */
#define I2C2_I2C2_STATUS_REG_TFE_Msk      (0x4UL)                   /*!< TFE (Bitfield-Mask: 0x01)                             */
#define I2C2_I2C2_STATUS_REG_TFNF_Pos     (1UL)                     /*!< TFNF (Bit 1)                                          */
#define I2C2_I2C2_STATUS_REG_TFNF_Msk     (0x2UL)                   /*!< TFNF (Bitfield-Mask: 0x01)                            */
#define I2C2_I2C2_STATUS_REG_I2C_ACTIVITY_Pos (0UL)                 /*!< I2C_ACTIVITY (Bit 0)                                  */
#define I2C2_I2C2_STATUS_REG_I2C_ACTIVITY_Msk (0x1UL)               /*!< I2C_ACTIVITY (Bitfield-Mask: 0x01)                    */
/* =====================================================  I2C2_TAR_REG  ====================================================== */
#define I2C2_I2C2_TAR_REG_SPECIAL_Pos     (11UL)                    /*!< SPECIAL (Bit 11)                                      */
#define I2C2_I2C2_TAR_REG_SPECIAL_Msk     (0x800UL)                 /*!< SPECIAL (Bitfield-Mask: 0x01)                         */
#define I2C2_I2C2_TAR_REG_GC_OR_START_Pos (10UL)                    /*!< GC_OR_START (Bit 10)                                  */
#define I2C2_I2C2_TAR_REG_GC_OR_START_Msk (0x400UL)                 /*!< GC_OR_START (Bitfield-Mask: 0x01)                     */
#define I2C2_I2C2_TAR_REG_IC_TAR_Pos      (0UL)                     /*!< IC_TAR (Bit 0)                                        */
#define I2C2_I2C2_TAR_REG_IC_TAR_Msk      (0x3ffUL)                 /*!< IC_TAR (Bitfield-Mask: 0x3ff)                         */
/* ====================================================  I2C2_TXFLR_REG  ===================================================== */
#define I2C2_I2C2_TXFLR_REG_TXFLR_Pos     (0UL)                     /*!< TXFLR (Bit 0)                                         */
#define I2C2_I2C2_TXFLR_REG_TXFLR_Msk     (0x3fUL)                  /*!< TXFLR (Bitfield-Mask: 0x3f)                           */
/* ================================================  I2C2_TX_ABRT_SOURCE_REG  ================================================ */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_USER_ABRT_Pos (16UL)      /*!< ABRT_USER_ABRT (Bit 16)                               */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_USER_ABRT_Msk (0x10000UL) /*!< ABRT_USER_ABRT (Bitfield-Mask: 0x01)                  */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_SLVRD_INTX_Pos (15UL)     /*!< ABRT_SLVRD_INTX (Bit 15)                              */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_SLVRD_INTX_Msk (0x8000UL) /*!< ABRT_SLVRD_INTX (Bitfield-Mask: 0x01)                 */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_SLV_ARBLOST_Pos (14UL)    /*!< ABRT_SLV_ARBLOST (Bit 14)                             */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_SLV_ARBLOST_Msk (0x4000UL) /*!< ABRT_SLV_ARBLOST (Bitfield-Mask: 0x01)               */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_SLVFLUSH_TXFIFO_Pos (13UL) /*!< ABRT_SLVFLUSH_TXFIFO (Bit 13)                        */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_SLVFLUSH_TXFIFO_Msk (0x2000UL) /*!< ABRT_SLVFLUSH_TXFIFO (Bitfield-Mask: 0x01)       */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ARB_LOST_Pos (12UL)            /*!< ARB_LOST (Bit 12)                                     */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ARB_LOST_Msk (0x1000UL)        /*!< ARB_LOST (Bitfield-Mask: 0x01)                        */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_MASTER_DIS_Pos (11UL)     /*!< ABRT_MASTER_DIS (Bit 11)                              */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_MASTER_DIS_Msk (0x800UL)  /*!< ABRT_MASTER_DIS (Bitfield-Mask: 0x01)                 */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_10B_RD_NORSTRT_Pos (10UL) /*!< ABRT_10B_RD_NORSTRT (Bit 10)                          */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_10B_RD_NORSTRT_Msk (0x400UL) /*!< ABRT_10B_RD_NORSTRT (Bitfield-Mask: 0x01)          */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_SBYTE_NORSTRT_Pos (9UL)   /*!< ABRT_SBYTE_NORSTRT (Bit 9)                            */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_SBYTE_NORSTRT_Msk (0x200UL) /*!< ABRT_SBYTE_NORSTRT (Bitfield-Mask: 0x01)            */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_HS_NORSTRT_Pos (8UL)      /*!< ABRT_HS_NORSTRT (Bit 8)                               */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_HS_NORSTRT_Msk (0x100UL)  /*!< ABRT_HS_NORSTRT (Bitfield-Mask: 0x01)                 */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_SBYTE_ACKDET_Pos (7UL)    /*!< ABRT_SBYTE_ACKDET (Bit 7)                             */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_SBYTE_ACKDET_Msk (0x80UL) /*!< ABRT_SBYTE_ACKDET (Bitfield-Mask: 0x01)               */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_HS_ACKDET_Pos (6UL)       /*!< ABRT_HS_ACKDET (Bit 6)                                */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_HS_ACKDET_Msk (0x40UL)    /*!< ABRT_HS_ACKDET (Bitfield-Mask: 0x01)                  */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_GCALL_READ_Pos (5UL)      /*!< ABRT_GCALL_READ (Bit 5)                               */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_GCALL_READ_Msk (0x20UL)   /*!< ABRT_GCALL_READ (Bitfield-Mask: 0x01)                 */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_GCALL_NOACK_Pos (4UL)     /*!< ABRT_GCALL_NOACK (Bit 4)                              */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_GCALL_NOACK_Msk (0x10UL)  /*!< ABRT_GCALL_NOACK (Bitfield-Mask: 0x01)                */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_TXDATA_NOACK_Pos (3UL)    /*!< ABRT_TXDATA_NOACK (Bit 3)                             */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_TXDATA_NOACK_Msk (0x8UL)  /*!< ABRT_TXDATA_NOACK (Bitfield-Mask: 0x01)               */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_10ADDR2_NOACK_Pos (2UL)   /*!< ABRT_10ADDR2_NOACK (Bit 2)                            */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_10ADDR2_NOACK_Msk (0x4UL) /*!< ABRT_10ADDR2_NOACK (Bitfield-Mask: 0x01)              */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_10ADDR1_NOACK_Pos (1UL)   /*!< ABRT_10ADDR1_NOACK (Bit 1)                            */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_10ADDR1_NOACK_Msk (0x2UL) /*!< ABRT_10ADDR1_NOACK (Bitfield-Mask: 0x01)              */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_7B_ADDR_NOACK_Pos (0UL)   /*!< ABRT_7B_ADDR_NOACK (Bit 0)                            */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_7B_ADDR_NOACK_Msk (0x1UL) /*!< ABRT_7B_ADDR_NOACK (Bitfield-Mask: 0x01)              */
/* ====================================================  I2C2_TX_TL_REG  ===================================================== */
#define I2C2_I2C2_TX_TL_REG_TX_TL_Pos     (0UL)                     /*!< TX_TL (Bit 0)                                         */
#define I2C2_I2C2_TX_TL_REG_TX_TL_Msk     (0x1fUL)                  /*!< TX_TL (Bitfield-Mask: 0x1f)                           */


/* =========================================================================================================================== */
/* ================                                           I2C3                                            ================ */
/* =========================================================================================================================== */

/* ===============================================  I2C3_ACK_GENERAL_CALL_REG  =============================================== */
#define I2C3_I2C3_ACK_GENERAL_CALL_REG_ACK_GEN_CALL_Pos (0UL)       /*!< ACK_GEN_CALL (Bit 0)                                  */
#define I2C3_I2C3_ACK_GENERAL_CALL_REG_ACK_GEN_CALL_Msk (0x1UL)     /*!< ACK_GEN_CALL (Bitfield-Mask: 0x01)                    */
/* =================================================  I2C3_CLR_ACTIVITY_REG  ================================================= */
#define I2C3_I2C3_CLR_ACTIVITY_REG_CLR_ACTIVITY_Pos (0UL)           /*!< CLR_ACTIVITY (Bit 0)                                  */
#define I2C3_I2C3_CLR_ACTIVITY_REG_CLR_ACTIVITY_Msk (0x1UL)         /*!< CLR_ACTIVITY (Bitfield-Mask: 0x01)                    */
/* =================================================  I2C3_CLR_GEN_CALL_REG  ================================================= */
#define I2C3_I2C3_CLR_GEN_CALL_REG_CLR_GEN_CALL_Pos (0UL)           /*!< CLR_GEN_CALL (Bit 0)                                  */
#define I2C3_I2C3_CLR_GEN_CALL_REG_CLR_GEN_CALL_Msk (0x1UL)         /*!< CLR_GEN_CALL (Bitfield-Mask: 0x01)                    */
/* ===================================================  I2C3_CLR_INTR_REG  =================================================== */
#define I2C3_I2C3_CLR_INTR_REG_CLR_INTR_Pos (0UL)                   /*!< CLR_INTR (Bit 0)                                      */
#define I2C3_I2C3_CLR_INTR_REG_CLR_INTR_Msk (0x1UL)                 /*!< CLR_INTR (Bitfield-Mask: 0x01)                        */
/* ==================================================  I2C3_CLR_RD_REQ_REG  ================================================== */
#define I2C3_I2C3_CLR_RD_REQ_REG_CLR_RD_REQ_Pos (0UL)               /*!< CLR_RD_REQ (Bit 0)                                    */
#define I2C3_I2C3_CLR_RD_REQ_REG_CLR_RD_REQ_Msk (0x1UL)             /*!< CLR_RD_REQ (Bitfield-Mask: 0x01)                      */
/* =================================================  I2C3_CLR_RX_DONE_REG  ================================================== */
#define I2C3_I2C3_CLR_RX_DONE_REG_CLR_RX_DONE_Pos (0UL)             /*!< CLR_RX_DONE (Bit 0)                                   */
#define I2C3_I2C3_CLR_RX_DONE_REG_CLR_RX_DONE_Msk (0x1UL)           /*!< CLR_RX_DONE (Bitfield-Mask: 0x01)                     */
/* =================================================  I2C3_CLR_RX_OVER_REG  ================================================== */
#define I2C3_I2C3_CLR_RX_OVER_REG_CLR_RX_OVER_Pos (0UL)             /*!< CLR_RX_OVER (Bit 0)                                   */
#define I2C3_I2C3_CLR_RX_OVER_REG_CLR_RX_OVER_Msk (0x1UL)           /*!< CLR_RX_OVER (Bitfield-Mask: 0x01)                     */
/* =================================================  I2C3_CLR_RX_UNDER_REG  ================================================= */
#define I2C3_I2C3_CLR_RX_UNDER_REG_CLR_RX_UNDER_Pos (0UL)           /*!< CLR_RX_UNDER (Bit 0)                                  */
#define I2C3_I2C3_CLR_RX_UNDER_REG_CLR_RX_UNDER_Msk (0x1UL)         /*!< CLR_RX_UNDER (Bitfield-Mask: 0x01)                    */
/* ================================================  I2C3_CLR_START_DET_REG  ================================================= */
#define I2C3_I2C3_CLR_START_DET_REG_CLR_START_DET_Pos (0UL)         /*!< CLR_START_DET (Bit 0)                                 */
#define I2C3_I2C3_CLR_START_DET_REG_CLR_START_DET_Msk (0x1UL)       /*!< CLR_START_DET (Bitfield-Mask: 0x01)                   */
/* =================================================  I2C3_CLR_STOP_DET_REG  ================================================= */
#define I2C3_I2C3_CLR_STOP_DET_REG_CLR_STOP_DET_Pos (0UL)           /*!< CLR_STOP_DET (Bit 0)                                  */
#define I2C3_I2C3_CLR_STOP_DET_REG_CLR_STOP_DET_Msk (0x1UL)         /*!< CLR_STOP_DET (Bitfield-Mask: 0x01)                    */
/* =================================================  I2C3_CLR_TX_ABRT_REG  ================================================== */
#define I2C3_I2C3_CLR_TX_ABRT_REG_CLR_TX_ABRT_Pos (0UL)             /*!< CLR_TX_ABRT (Bit 0)                                   */
#define I2C3_I2C3_CLR_TX_ABRT_REG_CLR_TX_ABRT_Msk (0x1UL)           /*!< CLR_TX_ABRT (Bitfield-Mask: 0x01)                     */
/* =================================================  I2C3_CLR_TX_OVER_REG  ================================================== */
#define I2C3_I2C3_CLR_TX_OVER_REG_CLR_TX_OVER_Pos (0UL)             /*!< CLR_TX_OVER (Bit 0)                                   */
#define I2C3_I2C3_CLR_TX_OVER_REG_CLR_TX_OVER_Msk (0x1UL)           /*!< CLR_TX_OVER (Bitfield-Mask: 0x01)                     */
/* =====================================================  I2C3_CON_REG  ====================================================== */
#define I2C3_I2C3_CON_REG_I2C_STOP_DET_IF_MASTER_ACTIVE_Pos (10UL)  /*!< I2C_STOP_DET_IF_MASTER_ACTIVE (Bit 10)                */
#define I2C3_I2C3_CON_REG_I2C_STOP_DET_IF_MASTER_ACTIVE_Msk (0x400UL) /*!< I2C_STOP_DET_IF_MASTER_ACTIVE (Bitfield-Mask: 0x01) */
#define I2C3_I2C3_CON_REG_I2C_RX_FIFO_FULL_HLD_CTRL_Pos (9UL)       /*!< I2C_RX_FIFO_FULL_HLD_CTRL (Bit 9)                     */
#define I2C3_I2C3_CON_REG_I2C_RX_FIFO_FULL_HLD_CTRL_Msk (0x200UL)   /*!< I2C_RX_FIFO_FULL_HLD_CTRL (Bitfield-Mask: 0x01)       */
#define I2C3_I2C3_CON_REG_I2C_TX_EMPTY_CTRL_Pos (8UL)               /*!< I2C_TX_EMPTY_CTRL (Bit 8)                             */
#define I2C3_I2C3_CON_REG_I2C_TX_EMPTY_CTRL_Msk (0x100UL)           /*!< I2C_TX_EMPTY_CTRL (Bitfield-Mask: 0x01)               */
#define I2C3_I2C3_CON_REG_I2C_STOP_DET_IFADDRESSED_Pos (7UL)        /*!< I2C_STOP_DET_IFADDRESSED (Bit 7)                      */
#define I2C3_I2C3_CON_REG_I2C_STOP_DET_IFADDRESSED_Msk (0x80UL)     /*!< I2C_STOP_DET_IFADDRESSED (Bitfield-Mask: 0x01)        */
#define I2C3_I2C3_CON_REG_I2C_SLAVE_DISABLE_Pos (6UL)               /*!< I2C_SLAVE_DISABLE (Bit 6)                             */
#define I2C3_I2C3_CON_REG_I2C_SLAVE_DISABLE_Msk (0x40UL)            /*!< I2C_SLAVE_DISABLE (Bitfield-Mask: 0x01)               */
#define I2C3_I2C3_CON_REG_I2C_RESTART_EN_Pos (5UL)                  /*!< I2C_RESTART_EN (Bit 5)                                */
#define I2C3_I2C3_CON_REG_I2C_RESTART_EN_Msk (0x20UL)               /*!< I2C_RESTART_EN (Bitfield-Mask: 0x01)                  */
#define I2C3_I2C3_CON_REG_I2C_10BITADDR_MASTER_Pos (4UL)            /*!< I2C_10BITADDR_MASTER (Bit 4)                          */
#define I2C3_I2C3_CON_REG_I2C_10BITADDR_MASTER_Msk (0x10UL)         /*!< I2C_10BITADDR_MASTER (Bitfield-Mask: 0x01)            */
#define I2C3_I2C3_CON_REG_I2C_10BITADDR_SLAVE_Pos (3UL)             /*!< I2C_10BITADDR_SLAVE (Bit 3)                           */
#define I2C3_I2C3_CON_REG_I2C_10BITADDR_SLAVE_Msk (0x8UL)           /*!< I2C_10BITADDR_SLAVE (Bitfield-Mask: 0x01)             */
#define I2C3_I2C3_CON_REG_I2C_SPEED_Pos   (1UL)                     /*!< I2C_SPEED (Bit 1)                                     */
#define I2C3_I2C3_CON_REG_I2C_SPEED_Msk   (0x6UL)                   /*!< I2C_SPEED (Bitfield-Mask: 0x03)                       */
#define I2C3_I2C3_CON_REG_I2C_MASTER_MODE_Pos (0UL)                 /*!< I2C_MASTER_MODE (Bit 0)                               */
#define I2C3_I2C3_CON_REG_I2C_MASTER_MODE_Msk (0x1UL)               /*!< I2C_MASTER_MODE (Bitfield-Mask: 0x01)                 */
/* ===================================================  I2C3_DATA_CMD_REG  =================================================== */
#define I2C3_I2C3_DATA_CMD_REG_I2C_RESTART_Pos (10UL)               /*!< I2C_RESTART (Bit 10)                                  */
#define I2C3_I2C3_DATA_CMD_REG_I2C_RESTART_Msk (0x400UL)            /*!< I2C_RESTART (Bitfield-Mask: 0x01)                     */
#define I2C3_I2C3_DATA_CMD_REG_I2C_STOP_Pos (9UL)                   /*!< I2C_STOP (Bit 9)                                      */
#define I2C3_I2C3_DATA_CMD_REG_I2C_STOP_Msk (0x200UL)               /*!< I2C_STOP (Bitfield-Mask: 0x01)                        */
#define I2C3_I2C3_DATA_CMD_REG_I2C_CMD_Pos (8UL)                    /*!< I2C_CMD (Bit 8)                                       */
#define I2C3_I2C3_DATA_CMD_REG_I2C_CMD_Msk (0x100UL)                /*!< I2C_CMD (Bitfield-Mask: 0x01)                         */
#define I2C3_I2C3_DATA_CMD_REG_I2C_DAT_Pos (0UL)                    /*!< I2C_DAT (Bit 0)                                       */
#define I2C3_I2C3_DATA_CMD_REG_I2C_DAT_Msk (0xffUL)                 /*!< I2C_DAT (Bitfield-Mask: 0xff)                         */
/* ====================================================  I2C3_DMA_CR_REG  ==================================================== */
#define I2C3_I2C3_DMA_CR_REG_TDMAE_Pos    (1UL)                     /*!< TDMAE (Bit 1)                                         */
#define I2C3_I2C3_DMA_CR_REG_TDMAE_Msk    (0x2UL)                   /*!< TDMAE (Bitfield-Mask: 0x01)                           */
#define I2C3_I2C3_DMA_CR_REG_RDMAE_Pos    (0UL)                     /*!< RDMAE (Bit 0)                                         */
#define I2C3_I2C3_DMA_CR_REG_RDMAE_Msk    (0x1UL)                   /*!< RDMAE (Bitfield-Mask: 0x01)                           */
/* ===================================================  I2C3_DMA_RDLR_REG  =================================================== */
#define I2C3_I2C3_DMA_RDLR_REG_DMARDL_Pos (0UL)                     /*!< DMARDL (Bit 0)                                        */
#define I2C3_I2C3_DMA_RDLR_REG_DMARDL_Msk (0x1fUL)                  /*!< DMARDL (Bitfield-Mask: 0x1f)                          */
/* ===================================================  I2C3_DMA_TDLR_REG  =================================================== */
#define I2C3_I2C3_DMA_TDLR_REG_DMATDL_Pos (0UL)                     /*!< DMATDL (Bit 0)                                        */
#define I2C3_I2C3_DMA_TDLR_REG_DMATDL_Msk (0x1fUL)                  /*!< DMATDL (Bitfield-Mask: 0x1f)                          */
/* ====================================================  I2C3_ENABLE_REG  ==================================================== */
#define I2C3_I2C3_ENABLE_REG_I2C_TX_CMD_BLOCK_Pos (2UL)             /*!< I2C_TX_CMD_BLOCK (Bit 2)                              */
#define I2C3_I2C3_ENABLE_REG_I2C_TX_CMD_BLOCK_Msk (0x4UL)           /*!< I2C_TX_CMD_BLOCK (Bitfield-Mask: 0x01)                */
#define I2C3_I2C3_ENABLE_REG_I2C_ABORT_Pos (1UL)                    /*!< I2C_ABORT (Bit 1)                                     */
#define I2C3_I2C3_ENABLE_REG_I2C_ABORT_Msk (0x2UL)                  /*!< I2C_ABORT (Bitfield-Mask: 0x01)                       */
#define I2C3_I2C3_ENABLE_REG_I2C_EN_Pos   (0UL)                     /*!< I2C_EN (Bit 0)                                        */
#define I2C3_I2C3_ENABLE_REG_I2C_EN_Msk   (0x1UL)                   /*!< I2C_EN (Bitfield-Mask: 0x01)                          */
/* ================================================  I2C3_ENABLE_STATUS_REG  ================================================= */
#define I2C3_I2C3_ENABLE_STATUS_REG_SLV_RX_DATA_LOST_Pos (2UL)      /*!< SLV_RX_DATA_LOST (Bit 2)                              */
#define I2C3_I2C3_ENABLE_STATUS_REG_SLV_RX_DATA_LOST_Msk (0x4UL)    /*!< SLV_RX_DATA_LOST (Bitfield-Mask: 0x01)                */
#define I2C3_I2C3_ENABLE_STATUS_REG_SLV_DISABLED_WHILE_BUSY_Pos (1UL) /*!< SLV_DISABLED_WHILE_BUSY (Bit 1)                     */
#define I2C3_I2C3_ENABLE_STATUS_REG_SLV_DISABLED_WHILE_BUSY_Msk (0x2UL) /*!< SLV_DISABLED_WHILE_BUSY (Bitfield-Mask: 0x01)     */
#define I2C3_I2C3_ENABLE_STATUS_REG_IC_EN_Pos (0UL)                 /*!< IC_EN (Bit 0)                                         */
#define I2C3_I2C3_ENABLE_STATUS_REG_IC_EN_Msk (0x1UL)               /*!< IC_EN (Bitfield-Mask: 0x01)                           */
/* =================================================  I2C3_FS_SCL_HCNT_REG  ================================================== */
#define I2C3_I2C3_FS_SCL_HCNT_REG_IC_FS_SCL_HCNT_Pos (0UL)          /*!< IC_FS_SCL_HCNT (Bit 0)                                */
#define I2C3_I2C3_FS_SCL_HCNT_REG_IC_FS_SCL_HCNT_Msk (0xffffUL)     /*!< IC_FS_SCL_HCNT (Bitfield-Mask: 0xffff)                */
/* =================================================  I2C3_FS_SCL_LCNT_REG  ================================================== */
#define I2C3_I2C3_FS_SCL_LCNT_REG_IC_FS_SCL_LCNT_Pos (0UL)          /*!< IC_FS_SCL_LCNT (Bit 0)                                */
#define I2C3_I2C3_FS_SCL_LCNT_REG_IC_FS_SCL_LCNT_Msk (0xffffUL)     /*!< IC_FS_SCL_LCNT (Bitfield-Mask: 0xffff)                */
/* ===================================================  I2C3_HS_MADDR_REG  =================================================== */
#define I2C3_I2C3_HS_MADDR_REG_I2C_IC_HS_MAR_Pos (0UL)              /*!< I2C_IC_HS_MAR (Bit 0)                                 */
#define I2C3_I2C3_HS_MADDR_REG_I2C_IC_HS_MAR_Msk (0x7UL)            /*!< I2C_IC_HS_MAR (Bitfield-Mask: 0x07)                   */
/* =================================================  I2C3_HS_SCL_HCNT_REG  ================================================== */
#define I2C3_I2C3_HS_SCL_HCNT_REG_IC_HS_SCL_HCNT_Pos (0UL)          /*!< IC_HS_SCL_HCNT (Bit 0)                                */
#define I2C3_I2C3_HS_SCL_HCNT_REG_IC_HS_SCL_HCNT_Msk (0xffffUL)     /*!< IC_HS_SCL_HCNT (Bitfield-Mask: 0xffff)                */
/* =================================================  I2C3_HS_SCL_LCNT_REG  ================================================== */
#define I2C3_I2C3_HS_SCL_LCNT_REG_IC_HS_SCL_LCNT_Pos (0UL)          /*!< IC_HS_SCL_LCNT (Bit 0)                                */
#define I2C3_I2C3_HS_SCL_LCNT_REG_IC_HS_SCL_LCNT_Msk (0xffffUL)     /*!< IC_HS_SCL_LCNT (Bitfield-Mask: 0xffff)                */
/* =================================================  I2C3_IC_FS_SPKLEN_REG  ================================================= */
#define I2C3_I2C3_IC_FS_SPKLEN_REG_I2C_FS_SPKLEN_Pos (0UL)          /*!< I2C_FS_SPKLEN (Bit 0)                                 */
#define I2C3_I2C3_IC_FS_SPKLEN_REG_I2C_FS_SPKLEN_Msk (0xffUL)       /*!< I2C_FS_SPKLEN (Bitfield-Mask: 0xff)                   */
/* =================================================  I2C3_IC_HS_SPKLEN_REG  ================================================= */
#define I2C3_I2C3_IC_HS_SPKLEN_REG_I2C_HS_SPKLEN_Pos (0UL)          /*!< I2C_HS_SPKLEN (Bit 0)                                 */
#define I2C3_I2C3_IC_HS_SPKLEN_REG_I2C_HS_SPKLEN_Msk (0xffUL)       /*!< I2C_HS_SPKLEN (Bitfield-Mask: 0xff)                   */
/* ==================================================  I2C3_INTR_MASK_REG  =================================================== */
#define I2C3_I2C3_INTR_MASK_REG_M_SCL_STUCK_AT_LOW_Pos (14UL)       /*!< M_SCL_STUCK_AT_LOW (Bit 14)                           */
#define I2C3_I2C3_INTR_MASK_REG_M_SCL_STUCK_AT_LOW_Msk (0x4000UL)   /*!< M_SCL_STUCK_AT_LOW (Bitfield-Mask: 0x01)              */
#define I2C3_I2C3_INTR_MASK_REG_M_MASTER_ON_HOLD_Pos (13UL)         /*!< M_MASTER_ON_HOLD (Bit 13)                             */
#define I2C3_I2C3_INTR_MASK_REG_M_MASTER_ON_HOLD_Msk (0x2000UL)     /*!< M_MASTER_ON_HOLD (Bitfield-Mask: 0x01)                */
#define I2C3_I2C3_INTR_MASK_REG_M_RESTART_DET_Pos (12UL)            /*!< M_RESTART_DET (Bit 12)                                */
#define I2C3_I2C3_INTR_MASK_REG_M_RESTART_DET_Msk (0x1000UL)        /*!< M_RESTART_DET (Bitfield-Mask: 0x01)                   */
#define I2C3_I2C3_INTR_MASK_REG_M_GEN_CALL_Pos (11UL)               /*!< M_GEN_CALL (Bit 11)                                   */
#define I2C3_I2C3_INTR_MASK_REG_M_GEN_CALL_Msk (0x800UL)            /*!< M_GEN_CALL (Bitfield-Mask: 0x01)                      */
#define I2C3_I2C3_INTR_MASK_REG_M_START_DET_Pos (10UL)              /*!< M_START_DET (Bit 10)                                  */
#define I2C3_I2C3_INTR_MASK_REG_M_START_DET_Msk (0x400UL)           /*!< M_START_DET (Bitfield-Mask: 0x01)                     */
#define I2C3_I2C3_INTR_MASK_REG_M_STOP_DET_Pos (9UL)                /*!< M_STOP_DET (Bit 9)                                    */
#define I2C3_I2C3_INTR_MASK_REG_M_STOP_DET_Msk (0x200UL)            /*!< M_STOP_DET (Bitfield-Mask: 0x01)                      */
#define I2C3_I2C3_INTR_MASK_REG_M_ACTIVITY_Pos (8UL)                /*!< M_ACTIVITY (Bit 8)                                    */
#define I2C3_I2C3_INTR_MASK_REG_M_ACTIVITY_Msk (0x100UL)            /*!< M_ACTIVITY (Bitfield-Mask: 0x01)                      */
#define I2C3_I2C3_INTR_MASK_REG_M_RX_DONE_Pos (7UL)                 /*!< M_RX_DONE (Bit 7)                                     */
#define I2C3_I2C3_INTR_MASK_REG_M_RX_DONE_Msk (0x80UL)              /*!< M_RX_DONE (Bitfield-Mask: 0x01)                       */
#define I2C3_I2C3_INTR_MASK_REG_M_TX_ABRT_Pos (6UL)                 /*!< M_TX_ABRT (Bit 6)                                     */
#define I2C3_I2C3_INTR_MASK_REG_M_TX_ABRT_Msk (0x40UL)              /*!< M_TX_ABRT (Bitfield-Mask: 0x01)                       */
#define I2C3_I2C3_INTR_MASK_REG_M_RD_REQ_Pos (5UL)                  /*!< M_RD_REQ (Bit 5)                                      */
#define I2C3_I2C3_INTR_MASK_REG_M_RD_REQ_Msk (0x20UL)               /*!< M_RD_REQ (Bitfield-Mask: 0x01)                        */
#define I2C3_I2C3_INTR_MASK_REG_M_TX_EMPTY_Pos (4UL)                /*!< M_TX_EMPTY (Bit 4)                                    */
#define I2C3_I2C3_INTR_MASK_REG_M_TX_EMPTY_Msk (0x10UL)             /*!< M_TX_EMPTY (Bitfield-Mask: 0x01)                      */
#define I2C3_I2C3_INTR_MASK_REG_M_TX_OVER_Pos (3UL)                 /*!< M_TX_OVER (Bit 3)                                     */
#define I2C3_I2C3_INTR_MASK_REG_M_TX_OVER_Msk (0x8UL)               /*!< M_TX_OVER (Bitfield-Mask: 0x01)                       */
#define I2C3_I2C3_INTR_MASK_REG_M_RX_FULL_Pos (2UL)                 /*!< M_RX_FULL (Bit 2)                                     */
#define I2C3_I2C3_INTR_MASK_REG_M_RX_FULL_Msk (0x4UL)               /*!< M_RX_FULL (Bitfield-Mask: 0x01)                       */
#define I2C3_I2C3_INTR_MASK_REG_M_RX_OVER_Pos (1UL)                 /*!< M_RX_OVER (Bit 1)                                     */
#define I2C3_I2C3_INTR_MASK_REG_M_RX_OVER_Msk (0x2UL)               /*!< M_RX_OVER (Bitfield-Mask: 0x01)                       */
#define I2C3_I2C3_INTR_MASK_REG_M_RX_UNDER_Pos (0UL)                /*!< M_RX_UNDER (Bit 0)                                    */
#define I2C3_I2C3_INTR_MASK_REG_M_RX_UNDER_Msk (0x1UL)              /*!< M_RX_UNDER (Bitfield-Mask: 0x01)                      */
/* ==================================================  I2C3_INTR_STAT_REG  =================================================== */
#define I2C3_I2C3_INTR_STAT_REG_R_SCL_STUCK_AT_LOW_Pos (14UL)       /*!< R_SCL_STUCK_AT_LOW (Bit 14)                           */
#define I2C3_I2C3_INTR_STAT_REG_R_SCL_STUCK_AT_LOW_Msk (0x4000UL)   /*!< R_SCL_STUCK_AT_LOW (Bitfield-Mask: 0x01)              */
#define I2C3_I2C3_INTR_STAT_REG_R_MASTER_ON_HOLD_Pos (13UL)         /*!< R_MASTER_ON_HOLD (Bit 13)                             */
#define I2C3_I2C3_INTR_STAT_REG_R_MASTER_ON_HOLD_Msk (0x2000UL)     /*!< R_MASTER_ON_HOLD (Bitfield-Mask: 0x01)                */
#define I2C3_I2C3_INTR_STAT_REG_R_RESTART_DET_Pos (12UL)            /*!< R_RESTART_DET (Bit 12)                                */
#define I2C3_I2C3_INTR_STAT_REG_R_RESTART_DET_Msk (0x1000UL)        /*!< R_RESTART_DET (Bitfield-Mask: 0x01)                   */
#define I2C3_I2C3_INTR_STAT_REG_R_GEN_CALL_Pos (11UL)               /*!< R_GEN_CALL (Bit 11)                                   */
#define I2C3_I2C3_INTR_STAT_REG_R_GEN_CALL_Msk (0x800UL)            /*!< R_GEN_CALL (Bitfield-Mask: 0x01)                      */
#define I2C3_I2C3_INTR_STAT_REG_R_START_DET_Pos (10UL)              /*!< R_START_DET (Bit 10)                                  */
#define I2C3_I2C3_INTR_STAT_REG_R_START_DET_Msk (0x400UL)           /*!< R_START_DET (Bitfield-Mask: 0x01)                     */
#define I2C3_I2C3_INTR_STAT_REG_R_STOP_DET_Pos (9UL)                /*!< R_STOP_DET (Bit 9)                                    */
#define I2C3_I2C3_INTR_STAT_REG_R_STOP_DET_Msk (0x200UL)            /*!< R_STOP_DET (Bitfield-Mask: 0x01)                      */
#define I2C3_I2C3_INTR_STAT_REG_R_ACTIVITY_Pos (8UL)                /*!< R_ACTIVITY (Bit 8)                                    */
#define I2C3_I2C3_INTR_STAT_REG_R_ACTIVITY_Msk (0x100UL)            /*!< R_ACTIVITY (Bitfield-Mask: 0x01)                      */
#define I2C3_I2C3_INTR_STAT_REG_R_RX_DONE_Pos (7UL)                 /*!< R_RX_DONE (Bit 7)                                     */
#define I2C3_I2C3_INTR_STAT_REG_R_RX_DONE_Msk (0x80UL)              /*!< R_RX_DONE (Bitfield-Mask: 0x01)                       */
#define I2C3_I2C3_INTR_STAT_REG_R_TX_ABRT_Pos (6UL)                 /*!< R_TX_ABRT (Bit 6)                                     */
#define I2C3_I2C3_INTR_STAT_REG_R_TX_ABRT_Msk (0x40UL)              /*!< R_TX_ABRT (Bitfield-Mask: 0x01)                       */
#define I2C3_I2C3_INTR_STAT_REG_R_RD_REQ_Pos (5UL)                  /*!< R_RD_REQ (Bit 5)                                      */
#define I2C3_I2C3_INTR_STAT_REG_R_RD_REQ_Msk (0x20UL)               /*!< R_RD_REQ (Bitfield-Mask: 0x01)                        */
#define I2C3_I2C3_INTR_STAT_REG_R_TX_EMPTY_Pos (4UL)                /*!< R_TX_EMPTY (Bit 4)                                    */
#define I2C3_I2C3_INTR_STAT_REG_R_TX_EMPTY_Msk (0x10UL)             /*!< R_TX_EMPTY (Bitfield-Mask: 0x01)                      */
#define I2C3_I2C3_INTR_STAT_REG_R_TX_OVER_Pos (3UL)                 /*!< R_TX_OVER (Bit 3)                                     */
#define I2C3_I2C3_INTR_STAT_REG_R_TX_OVER_Msk (0x8UL)               /*!< R_TX_OVER (Bitfield-Mask: 0x01)                       */
#define I2C3_I2C3_INTR_STAT_REG_R_RX_FULL_Pos (2UL)                 /*!< R_RX_FULL (Bit 2)                                     */
#define I2C3_I2C3_INTR_STAT_REG_R_RX_FULL_Msk (0x4UL)               /*!< R_RX_FULL (Bitfield-Mask: 0x01)                       */
#define I2C3_I2C3_INTR_STAT_REG_R_RX_OVER_Pos (1UL)                 /*!< R_RX_OVER (Bit 1)                                     */
#define I2C3_I2C3_INTR_STAT_REG_R_RX_OVER_Msk (0x2UL)               /*!< R_RX_OVER (Bitfield-Mask: 0x01)                       */
#define I2C3_I2C3_INTR_STAT_REG_R_RX_UNDER_Pos (0UL)                /*!< R_RX_UNDER (Bit 0)                                    */
#define I2C3_I2C3_INTR_STAT_REG_R_RX_UNDER_Msk (0x1UL)              /*!< R_RX_UNDER (Bitfield-Mask: 0x01)                      */
/* ================================================  I2C3_RAW_INTR_STAT_REG  ================================================= */
#define I2C3_I2C3_RAW_INTR_STAT_REG_SCL_STUCK_AT_LOW_Pos (14UL)     /*!< SCL_STUCK_AT_LOW (Bit 14)                             */
#define I2C3_I2C3_RAW_INTR_STAT_REG_SCL_STUCK_AT_LOW_Msk (0x4000UL) /*!< SCL_STUCK_AT_LOW (Bitfield-Mask: 0x01)                */
#define I2C3_I2C3_RAW_INTR_STAT_REG_MASTER_ON_HOLD_Pos (13UL)       /*!< MASTER_ON_HOLD (Bit 13)                               */
#define I2C3_I2C3_RAW_INTR_STAT_REG_MASTER_ON_HOLD_Msk (0x2000UL)   /*!< MASTER_ON_HOLD (Bitfield-Mask: 0x01)                  */
#define I2C3_I2C3_RAW_INTR_STAT_REG_RESTART_DET_Pos (12UL)          /*!< RESTART_DET (Bit 12)                                  */
#define I2C3_I2C3_RAW_INTR_STAT_REG_RESTART_DET_Msk (0x1000UL)      /*!< RESTART_DET (Bitfield-Mask: 0x01)                     */
#define I2C3_I2C3_RAW_INTR_STAT_REG_GEN_CALL_Pos (11UL)             /*!< GEN_CALL (Bit 11)                                     */
#define I2C3_I2C3_RAW_INTR_STAT_REG_GEN_CALL_Msk (0x800UL)          /*!< GEN_CALL (Bitfield-Mask: 0x01)                        */
#define I2C3_I2C3_RAW_INTR_STAT_REG_START_DET_Pos (10UL)            /*!< START_DET (Bit 10)                                    */
#define I2C3_I2C3_RAW_INTR_STAT_REG_START_DET_Msk (0x400UL)         /*!< START_DET (Bitfield-Mask: 0x01)                       */
#define I2C3_I2C3_RAW_INTR_STAT_REG_STOP_DET_Pos (9UL)              /*!< STOP_DET (Bit 9)                                      */
#define I2C3_I2C3_RAW_INTR_STAT_REG_STOP_DET_Msk (0x200UL)          /*!< STOP_DET (Bitfield-Mask: 0x01)                        */
#define I2C3_I2C3_RAW_INTR_STAT_REG_ACTIVITY_Pos (8UL)              /*!< ACTIVITY (Bit 8)                                      */
#define I2C3_I2C3_RAW_INTR_STAT_REG_ACTIVITY_Msk (0x100UL)          /*!< ACTIVITY (Bitfield-Mask: 0x01)                        */
#define I2C3_I2C3_RAW_INTR_STAT_REG_RX_DONE_Pos (7UL)               /*!< RX_DONE (Bit 7)                                       */
#define I2C3_I2C3_RAW_INTR_STAT_REG_RX_DONE_Msk (0x80UL)            /*!< RX_DONE (Bitfield-Mask: 0x01)                         */
#define I2C3_I2C3_RAW_INTR_STAT_REG_TX_ABRT_Pos (6UL)               /*!< TX_ABRT (Bit 6)                                       */
#define I2C3_I2C3_RAW_INTR_STAT_REG_TX_ABRT_Msk (0x40UL)            /*!< TX_ABRT (Bitfield-Mask: 0x01)                         */
#define I2C3_I2C3_RAW_INTR_STAT_REG_RD_REQ_Pos (5UL)                /*!< RD_REQ (Bit 5)                                        */
#define I2C3_I2C3_RAW_INTR_STAT_REG_RD_REQ_Msk (0x20UL)             /*!< RD_REQ (Bitfield-Mask: 0x01)                          */
#define I2C3_I2C3_RAW_INTR_STAT_REG_TX_EMPTY_Pos (4UL)              /*!< TX_EMPTY (Bit 4)                                      */
#define I2C3_I2C3_RAW_INTR_STAT_REG_TX_EMPTY_Msk (0x10UL)           /*!< TX_EMPTY (Bitfield-Mask: 0x01)                        */
#define I2C3_I2C3_RAW_INTR_STAT_REG_TX_OVER_Pos (3UL)               /*!< TX_OVER (Bit 3)                                       */
#define I2C3_I2C3_RAW_INTR_STAT_REG_TX_OVER_Msk (0x8UL)             /*!< TX_OVER (Bitfield-Mask: 0x01)                         */
#define I2C3_I2C3_RAW_INTR_STAT_REG_RX_FULL_Pos (2UL)               /*!< RX_FULL (Bit 2)                                       */
#define I2C3_I2C3_RAW_INTR_STAT_REG_RX_FULL_Msk (0x4UL)             /*!< RX_FULL (Bitfield-Mask: 0x01)                         */
#define I2C3_I2C3_RAW_INTR_STAT_REG_RX_OVER_Pos (1UL)               /*!< RX_OVER (Bit 1)                                       */
#define I2C3_I2C3_RAW_INTR_STAT_REG_RX_OVER_Msk (0x2UL)             /*!< RX_OVER (Bitfield-Mask: 0x01)                         */
#define I2C3_I2C3_RAW_INTR_STAT_REG_RX_UNDER_Pos (0UL)              /*!< RX_UNDER (Bit 0)                                      */
#define I2C3_I2C3_RAW_INTR_STAT_REG_RX_UNDER_Msk (0x1UL)            /*!< RX_UNDER (Bitfield-Mask: 0x01)                        */
/* ====================================================  I2C3_RXFLR_REG  ===================================================== */
#define I2C3_I2C3_RXFLR_REG_RXFLR_Pos     (0UL)                     /*!< RXFLR (Bit 0)                                         */
#define I2C3_I2C3_RXFLR_REG_RXFLR_Msk     (0x3fUL)                  /*!< RXFLR (Bitfield-Mask: 0x3f)                           */
/* ====================================================  I2C3_RX_TL_REG  ===================================================== */
#define I2C3_I2C3_RX_TL_REG_RX_TL_Pos     (0UL)                     /*!< RX_TL (Bit 0)                                         */
#define I2C3_I2C3_RX_TL_REG_RX_TL_Msk     (0x1fUL)                  /*!< RX_TL (Bitfield-Mask: 0x1f)                           */
/* =====================================================  I2C3_SAR_REG  ====================================================== */
#define I2C3_I2C3_SAR_REG_IC_SAR_Pos      (0UL)                     /*!< IC_SAR (Bit 0)                                        */
#define I2C3_I2C3_SAR_REG_IC_SAR_Msk      (0x3ffUL)                 /*!< IC_SAR (Bitfield-Mask: 0x3ff)                         */
/* ===================================================  I2C3_SDA_HOLD_REG  =================================================== */
#define I2C3_I2C3_SDA_HOLD_REG_I2C_SDA_RX_HOLD_Pos (16UL)           /*!< I2C_SDA_RX_HOLD (Bit 16)                              */
#define I2C3_I2C3_SDA_HOLD_REG_I2C_SDA_RX_HOLD_Msk (0xff0000UL)     /*!< I2C_SDA_RX_HOLD (Bitfield-Mask: 0xff)                 */
#define I2C3_I2C3_SDA_HOLD_REG_I2C_SDA_TX_HOLD_Pos (0UL)            /*!< I2C_SDA_TX_HOLD (Bit 0)                               */
#define I2C3_I2C3_SDA_HOLD_REG_I2C_SDA_TX_HOLD_Msk (0xffffUL)       /*!< I2C_SDA_TX_HOLD (Bitfield-Mask: 0xffff)               */
/* ==================================================  I2C3_SDA_SETUP_REG  =================================================== */
#define I2C3_I2C3_SDA_SETUP_REG_SDA_SETUP_Pos (0UL)                 /*!< SDA_SETUP (Bit 0)                                     */
#define I2C3_I2C3_SDA_SETUP_REG_SDA_SETUP_Msk (0xffUL)              /*!< SDA_SETUP (Bitfield-Mask: 0xff)                       */
/* =================================================  I2C3_SS_SCL_HCNT_REG  ================================================== */
#define I2C3_I2C3_SS_SCL_HCNT_REG_IC_SS_SCL_HCNT_Pos (0UL)          /*!< IC_SS_SCL_HCNT (Bit 0)                                */
#define I2C3_I2C3_SS_SCL_HCNT_REG_IC_SS_SCL_HCNT_Msk (0xffffUL)     /*!< IC_SS_SCL_HCNT (Bitfield-Mask: 0xffff)                */
/* =================================================  I2C3_SS_SCL_LCNT_REG  ================================================== */
#define I2C3_I2C3_SS_SCL_LCNT_REG_IC_SS_SCL_LCNT_Pos (0UL)          /*!< IC_SS_SCL_LCNT (Bit 0)                                */
#define I2C3_I2C3_SS_SCL_LCNT_REG_IC_SS_SCL_LCNT_Msk (0xffffUL)     /*!< IC_SS_SCL_LCNT (Bitfield-Mask: 0xffff)                */
/* ====================================================  I2C3_STATUS_REG  ==================================================== */
#define I2C3_I2C3_STATUS_REG_LV_HOLD_RX_FIFO_FULL_Pos (10UL)        /*!< LV_HOLD_RX_FIFO_FULL (Bit 10)                         */
#define I2C3_I2C3_STATUS_REG_LV_HOLD_RX_FIFO_FULL_Msk (0x400UL)     /*!< LV_HOLD_RX_FIFO_FULL (Bitfield-Mask: 0x01)            */
#define I2C3_I2C3_STATUS_REG_SLV_HOLD_TX_FIFO_EMPTY_Pos (9UL)       /*!< SLV_HOLD_TX_FIFO_EMPTY (Bit 9)                        */
#define I2C3_I2C3_STATUS_REG_SLV_HOLD_TX_FIFO_EMPTY_Msk (0x200UL)   /*!< SLV_HOLD_TX_FIFO_EMPTY (Bitfield-Mask: 0x01)          */
#define I2C3_I2C3_STATUS_REG_MST_HOLD_RX_FIFO_FULL_Pos (8UL)        /*!< MST_HOLD_RX_FIFO_FULL (Bit 8)                         */
#define I2C3_I2C3_STATUS_REG_MST_HOLD_RX_FIFO_FULL_Msk (0x100UL)    /*!< MST_HOLD_RX_FIFO_FULL (Bitfield-Mask: 0x01)           */
#define I2C3_I2C3_STATUS_REG_MST_HOLD_TX_FIFO_EMPTY_Pos (7UL)       /*!< MST_HOLD_TX_FIFO_EMPTY (Bit 7)                        */
#define I2C3_I2C3_STATUS_REG_MST_HOLD_TX_FIFO_EMPTY_Msk (0x80UL)    /*!< MST_HOLD_TX_FIFO_EMPTY (Bitfield-Mask: 0x01)          */
#define I2C3_I2C3_STATUS_REG_SLV_ACTIVITY_Pos (6UL)                 /*!< SLV_ACTIVITY (Bit 6)                                  */
#define I2C3_I2C3_STATUS_REG_SLV_ACTIVITY_Msk (0x40UL)              /*!< SLV_ACTIVITY (Bitfield-Mask: 0x01)                    */
#define I2C3_I2C3_STATUS_REG_MST_ACTIVITY_Pos (5UL)                 /*!< MST_ACTIVITY (Bit 5)                                  */
#define I2C3_I2C3_STATUS_REG_MST_ACTIVITY_Msk (0x20UL)              /*!< MST_ACTIVITY (Bitfield-Mask: 0x01)                    */
#define I2C3_I2C3_STATUS_REG_RFF_Pos      (4UL)                     /*!< RFF (Bit 4)                                           */
#define I2C3_I2C3_STATUS_REG_RFF_Msk      (0x10UL)                  /*!< RFF (Bitfield-Mask: 0x01)                             */
#define I2C3_I2C3_STATUS_REG_RFNE_Pos     (3UL)                     /*!< RFNE (Bit 3)                                          */
#define I2C3_I2C3_STATUS_REG_RFNE_Msk     (0x8UL)                   /*!< RFNE (Bitfield-Mask: 0x01)                            */
#define I2C3_I2C3_STATUS_REG_TFE_Pos      (2UL)                     /*!< TFE (Bit 2)                                           */
#define I2C3_I2C3_STATUS_REG_TFE_Msk      (0x4UL)                   /*!< TFE (Bitfield-Mask: 0x01)                             */
#define I2C3_I2C3_STATUS_REG_TFNF_Pos     (1UL)                     /*!< TFNF (Bit 1)                                          */
#define I2C3_I2C3_STATUS_REG_TFNF_Msk     (0x2UL)                   /*!< TFNF (Bitfield-Mask: 0x01)                            */
#define I2C3_I2C3_STATUS_REG_I2C_ACTIVITY_Pos (0UL)                 /*!< I2C_ACTIVITY (Bit 0)                                  */
#define I2C3_I2C3_STATUS_REG_I2C_ACTIVITY_Msk (0x1UL)               /*!< I2C_ACTIVITY (Bitfield-Mask: 0x01)                    */
/* =====================================================  I2C3_TAR_REG  ====================================================== */
#define I2C3_I2C3_TAR_REG_SPECIAL_Pos     (11UL)                    /*!< SPECIAL (Bit 11)                                      */
#define I2C3_I2C3_TAR_REG_SPECIAL_Msk     (0x800UL)                 /*!< SPECIAL (Bitfield-Mask: 0x01)                         */
#define I2C3_I2C3_TAR_REG_GC_OR_START_Pos (10UL)                    /*!< GC_OR_START (Bit 10)                                  */
#define I2C3_I2C3_TAR_REG_GC_OR_START_Msk (0x400UL)                 /*!< GC_OR_START (Bitfield-Mask: 0x01)                     */
#define I2C3_I2C3_TAR_REG_IC_TAR_Pos      (0UL)                     /*!< IC_TAR (Bit 0)                                        */
#define I2C3_I2C3_TAR_REG_IC_TAR_Msk      (0x3ffUL)                 /*!< IC_TAR (Bitfield-Mask: 0x3ff)                         */
/* ====================================================  I2C3_TXFLR_REG  ===================================================== */
#define I2C3_I2C3_TXFLR_REG_TXFLR_Pos     (0UL)                     /*!< TXFLR (Bit 0)                                         */
#define I2C3_I2C3_TXFLR_REG_TXFLR_Msk     (0x3fUL)                  /*!< TXFLR (Bitfield-Mask: 0x3f)                           */
/* ================================================  I2C3_TX_ABRT_SOURCE_REG  ================================================ */
#define I2C3_I2C3_TX_ABRT_SOURCE_REG_ABRT_USER_ABRT_Pos (16UL)      /*!< ABRT_USER_ABRT (Bit 16)                               */
#define I2C3_I2C3_TX_ABRT_SOURCE_REG_ABRT_USER_ABRT_Msk (0x10000UL) /*!< ABRT_USER_ABRT (Bitfield-Mask: 0x01)                  */
#define I2C3_I2C3_TX_ABRT_SOURCE_REG_ABRT_SLVRD_INTX_Pos (15UL)     /*!< ABRT_SLVRD_INTX (Bit 15)                              */
#define I2C3_I2C3_TX_ABRT_SOURCE_REG_ABRT_SLVRD_INTX_Msk (0x8000UL) /*!< ABRT_SLVRD_INTX (Bitfield-Mask: 0x01)                 */
#define I2C3_I2C3_TX_ABRT_SOURCE_REG_ABRT_SLV_ARBLOST_Pos (14UL)    /*!< ABRT_SLV_ARBLOST (Bit 14)                             */
#define I2C3_I2C3_TX_ABRT_SOURCE_REG_ABRT_SLV_ARBLOST_Msk (0x4000UL) /*!< ABRT_SLV_ARBLOST (Bitfield-Mask: 0x01)               */
#define I2C3_I2C3_TX_ABRT_SOURCE_REG_ABRT_SLVFLUSH_TXFIFO_Pos (13UL) /*!< ABRT_SLVFLUSH_TXFIFO (Bit 13)                        */
#define I2C3_I2C3_TX_ABRT_SOURCE_REG_ABRT_SLVFLUSH_TXFIFO_Msk (0x2000UL) /*!< ABRT_SLVFLUSH_TXFIFO (Bitfield-Mask: 0x01)       */
#define I2C3_I2C3_TX_ABRT_SOURCE_REG_ARB_LOST_Pos (12UL)            /*!< ARB_LOST (Bit 12)                                     */
#define I2C3_I2C3_TX_ABRT_SOURCE_REG_ARB_LOST_Msk (0x1000UL)        /*!< ARB_LOST (Bitfield-Mask: 0x01)                        */
#define I2C3_I2C3_TX_ABRT_SOURCE_REG_ABRT_MASTER_DIS_Pos (11UL)     /*!< ABRT_MASTER_DIS (Bit 11)                              */
#define I2C3_I2C3_TX_ABRT_SOURCE_REG_ABRT_MASTER_DIS_Msk (0x800UL)  /*!< ABRT_MASTER_DIS (Bitfield-Mask: 0x01)                 */
#define I2C3_I2C3_TX_ABRT_SOURCE_REG_ABRT_10B_RD_NORSTRT_Pos (10UL) /*!< ABRT_10B_RD_NORSTRT (Bit 10)                          */
#define I2C3_I2C3_TX_ABRT_SOURCE_REG_ABRT_10B_RD_NORSTRT_Msk (0x400UL) /*!< ABRT_10B_RD_NORSTRT (Bitfield-Mask: 0x01)          */
#define I2C3_I2C3_TX_ABRT_SOURCE_REG_ABRT_SBYTE_NORSTRT_Pos (9UL)   /*!< ABRT_SBYTE_NORSTRT (Bit 9)                            */
#define I2C3_I2C3_TX_ABRT_SOURCE_REG_ABRT_SBYTE_NORSTRT_Msk (0x200UL) /*!< ABRT_SBYTE_NORSTRT (Bitfield-Mask: 0x01)            */
#define I2C3_I2C3_TX_ABRT_SOURCE_REG_ABRT_HS_NORSTRT_Pos (8UL)      /*!< ABRT_HS_NORSTRT (Bit 8)                               */
#define I2C3_I2C3_TX_ABRT_SOURCE_REG_ABRT_HS_NORSTRT_Msk (0x100UL)  /*!< ABRT_HS_NORSTRT (Bitfield-Mask: 0x01)                 */
#define I2C3_I2C3_TX_ABRT_SOURCE_REG_ABRT_SBYTE_ACKDET_Pos (7UL)    /*!< ABRT_SBYTE_ACKDET (Bit 7)                             */
#define I2C3_I2C3_TX_ABRT_SOURCE_REG_ABRT_SBYTE_ACKDET_Msk (0x80UL) /*!< ABRT_SBYTE_ACKDET (Bitfield-Mask: 0x01)               */
#define I2C3_I2C3_TX_ABRT_SOURCE_REG_ABRT_HS_ACKDET_Pos (6UL)       /*!< ABRT_HS_ACKDET (Bit 6)                                */
#define I2C3_I2C3_TX_ABRT_SOURCE_REG_ABRT_HS_ACKDET_Msk (0x40UL)    /*!< ABRT_HS_ACKDET (Bitfield-Mask: 0x01)                  */
#define I2C3_I2C3_TX_ABRT_SOURCE_REG_ABRT_GCALL_READ_Pos (5UL)      /*!< ABRT_GCALL_READ (Bit 5)                               */
#define I2C3_I2C3_TX_ABRT_SOURCE_REG_ABRT_GCALL_READ_Msk (0x20UL)   /*!< ABRT_GCALL_READ (Bitfield-Mask: 0x01)                 */
#define I2C3_I2C3_TX_ABRT_SOURCE_REG_ABRT_GCALL_NOACK_Pos (4UL)     /*!< ABRT_GCALL_NOACK (Bit 4)                              */
#define I2C3_I2C3_TX_ABRT_SOURCE_REG_ABRT_GCALL_NOACK_Msk (0x10UL)  /*!< ABRT_GCALL_NOACK (Bitfield-Mask: 0x01)                */
#define I2C3_I2C3_TX_ABRT_SOURCE_REG_ABRT_TXDATA_NOACK_Pos (3UL)    /*!< ABRT_TXDATA_NOACK (Bit 3)                             */
#define I2C3_I2C3_TX_ABRT_SOURCE_REG_ABRT_TXDATA_NOACK_Msk (0x8UL)  /*!< ABRT_TXDATA_NOACK (Bitfield-Mask: 0x01)               */
#define I2C3_I2C3_TX_ABRT_SOURCE_REG_ABRT_10ADDR2_NOACK_Pos (2UL)   /*!< ABRT_10ADDR2_NOACK (Bit 2)                            */
#define I2C3_I2C3_TX_ABRT_SOURCE_REG_ABRT_10ADDR2_NOACK_Msk (0x4UL) /*!< ABRT_10ADDR2_NOACK (Bitfield-Mask: 0x01)              */
#define I2C3_I2C3_TX_ABRT_SOURCE_REG_ABRT_10ADDR1_NOACK_Pos (1UL)   /*!< ABRT_10ADDR1_NOACK (Bit 1)                            */
#define I2C3_I2C3_TX_ABRT_SOURCE_REG_ABRT_10ADDR1_NOACK_Msk (0x2UL) /*!< ABRT_10ADDR1_NOACK (Bitfield-Mask: 0x01)              */
#define I2C3_I2C3_TX_ABRT_SOURCE_REG_ABRT_7B_ADDR_NOACK_Pos (0UL)   /*!< ABRT_7B_ADDR_NOACK (Bit 0)                            */
#define I2C3_I2C3_TX_ABRT_SOURCE_REG_ABRT_7B_ADDR_NOACK_Msk (0x1UL) /*!< ABRT_7B_ADDR_NOACK (Bitfield-Mask: 0x01)              */
/* ====================================================  I2C3_TX_TL_REG  ===================================================== */
#define I2C3_I2C3_TX_TL_REG_TX_TL_Pos     (0UL)                     /*!< TX_TL (Bit 0)                                         */
#define I2C3_I2C3_TX_TL_REG_TX_TL_Msk     (0x1fUL)                  /*!< TX_TL (Bitfield-Mask: 0x1f)                           */


/* =========================================================================================================================== */
/* ================                                            I3C                                            ================ */
/* =========================================================================================================================== */

/* =============================================  I3C_BUS_FREE_AVAIL_TIMING_REG  ============================================= */
#define I3C_I3C_BUS_FREE_AVAIL_TIMING_REG_BUS_FREE_TIME_Pos (0UL)   /*!< BUS_FREE_TIME (Bit 0)                                 */
#define I3C_I3C_BUS_FREE_AVAIL_TIMING_REG_BUS_FREE_TIME_Msk (0xffffUL) /*!< BUS_FREE_TIME (Bitfield-Mask: 0xffff)              */
/* ==============================================  I3C_COMMAND_QUEUE_PORT_REG  =============================================== */
#define I3C_I3C_COMMAND_QUEUE_PORT_REG_COMMAND_Pos (0UL)            /*!< COMMAND (Bit 0)                                       */
#define I3C_I3C_COMMAND_QUEUE_PORT_REG_COMMAND_Msk (0xffffffffUL)   /*!< COMMAND (Bitfield-Mask: 0xffffffff)                   */
/* ============================================  I3C_DATA_BUFFER_STAT_LEVEL_REG  ============================================= */
#define I3C_I3C_DATA_BUFFER_STAT_LEVEL_REG_RX_BUF_BLR_Pos (16UL)    /*!< RX_BUF_BLR (Bit 16)                                   */
#define I3C_I3C_DATA_BUFFER_STAT_LEVEL_REG_RX_BUF_BLR_Msk (0xff0000UL) /*!< RX_BUF_BLR (Bitfield-Mask: 0xff)                   */
#define I3C_I3C_DATA_BUFFER_STAT_LEVEL_REG_TX_BUF_EMPTY_LOC_Pos (0UL) /*!< TX_BUF_EMPTY_LOC (Bit 0)                            */
#define I3C_I3C_DATA_BUFFER_STAT_LEVEL_REG_TX_BUF_EMPTY_LOC_Msk (0xffUL) /*!< TX_BUF_EMPTY_LOC (Bitfield-Mask: 0xff)           */
/* =============================================  I3C_DATA_BUFFER_THLD_CTRL_REG  ============================================= */
#define I3C_I3C_DATA_BUFFER_THLD_CTRL_REG_RX_START_THLD_Pos (24UL)  /*!< RX_START_THLD (Bit 24)                                */
#define I3C_I3C_DATA_BUFFER_THLD_CTRL_REG_RX_START_THLD_Msk (0x7000000UL) /*!< RX_START_THLD (Bitfield-Mask: 0x07)             */
#define I3C_I3C_DATA_BUFFER_THLD_CTRL_REG_TX_START_THLD_Pos (16UL)  /*!< TX_START_THLD (Bit 16)                                */
#define I3C_I3C_DATA_BUFFER_THLD_CTRL_REG_TX_START_THLD_Msk (0x70000UL) /*!< TX_START_THLD (Bitfield-Mask: 0x07)               */
#define I3C_I3C_DATA_BUFFER_THLD_CTRL_REG_RX_BUF_THLD_Pos (8UL)     /*!< RX_BUF_THLD (Bit 8)                                   */
#define I3C_I3C_DATA_BUFFER_THLD_CTRL_REG_RX_BUF_THLD_Msk (0x700UL) /*!< RX_BUF_THLD (Bitfield-Mask: 0x07)                     */
#define I3C_I3C_DATA_BUFFER_THLD_CTRL_REG_TX_EMPTY_BUF_THLD_Pos (0UL) /*!< TX_EMPTY_BUF_THLD (Bit 0)                           */
#define I3C_I3C_DATA_BUFFER_THLD_CTRL_REG_TX_EMPTY_BUF_THLD_Msk (0x7UL) /*!< TX_EMPTY_BUF_THLD (Bitfield-Mask: 0x07)           */
/* ==================================================  I3C_DEVICE_ADDR_REG  ================================================== */
#define I3C_I3C_DEVICE_ADDR_REG_DYNAMIC_ADDR_VALID_Pos (31UL)       /*!< DYNAMIC_ADDR_VALID (Bit 31)                           */
#define I3C_I3C_DEVICE_ADDR_REG_DYNAMIC_ADDR_VALID_Msk (0x80000000UL) /*!< DYNAMIC_ADDR_VALID (Bitfield-Mask: 0x01)            */
#define I3C_I3C_DEVICE_ADDR_REG_DYNAMIC_ADDR_Pos (16UL)             /*!< DYNAMIC_ADDR (Bit 16)                                 */
#define I3C_I3C_DEVICE_ADDR_REG_DYNAMIC_ADDR_Msk (0x7f0000UL)       /*!< DYNAMIC_ADDR (Bitfield-Mask: 0x7f)                    */
/* =============================================  I3C_DEVICE_ADDR_TABLE_PTR_REG  ============================================= */
#define I3C_I3C_DEVICE_ADDR_TABLE_PTR_REG_DEV_ADDR_TABLE_DEPTH_Pos (16UL) /*!< DEV_ADDR_TABLE_DEPTH (Bit 16)                   */
#define I3C_I3C_DEVICE_ADDR_TABLE_PTR_REG_DEV_ADDR_TABLE_DEPTH_Msk (0xffff0000UL) /*!< DEV_ADDR_TABLE_DEPTH (Bitfield-Mask: 0xffff) */
#define I3C_I3C_DEVICE_ADDR_TABLE_PTR_REG_P_DEV_ADDR_TABLE_START_ADDR_Pos (0UL) /*!< P_DEV_ADDR_TABLE_START_ADDR (Bit 0)       */
#define I3C_I3C_DEVICE_ADDR_TABLE_PTR_REG_P_DEV_ADDR_TABLE_START_ADDR_Msk (0xffffUL) /*!< P_DEV_ADDR_TABLE_START_ADDR (Bitfield-Mask: 0xffff) */
/* =============================================  I3C_DEVICE_CTRL_EXTENDED_REG  ============================================== */
#define I3C_I3C_DEVICE_CTRL_EXTENDED_REG_DEV_OPERATION_MODE_Pos (0UL) /*!< DEV_OPERATION_MODE (Bit 0)                          */
#define I3C_I3C_DEVICE_CTRL_EXTENDED_REG_DEV_OPERATION_MODE_Msk (0x3UL) /*!< DEV_OPERATION_MODE (Bitfield-Mask: 0x03)          */
/* ==================================================  I3C_DEVICE_CTRL_REG  ================================================== */
#define I3C_I3C_DEVICE_CTRL_REG_ENABLE_Pos (31UL)                   /*!< ENABLE (Bit 31)                                       */
#define I3C_I3C_DEVICE_CTRL_REG_ENABLE_Msk (0x80000000UL)           /*!< ENABLE (Bitfield-Mask: 0x01)                          */
#define I3C_I3C_DEVICE_CTRL_REG_RESUME_Pos (30UL)                   /*!< RESUME (Bit 30)                                       */
#define I3C_I3C_DEVICE_CTRL_REG_RESUME_Msk (0x40000000UL)           /*!< RESUME (Bitfield-Mask: 0x01)                          */
#define I3C_I3C_DEVICE_CTRL_REG_ABORT_Pos (29UL)                    /*!< ABORT (Bit 29)                                        */
#define I3C_I3C_DEVICE_CTRL_REG_ABORT_Msk (0x20000000UL)            /*!< ABORT (Bitfield-Mask: 0x01)                           */
#define I3C_I3C_DEVICE_CTRL_REG_DMA_ENABLE_I3C_Pos (28UL)           /*!< DMA_ENABLE_I3C (Bit 28)                               */
#define I3C_I3C_DEVICE_CTRL_REG_DMA_ENABLE_I3C_Msk (0x10000000UL)   /*!< DMA_ENABLE_I3C (Bitfield-Mask: 0x01)                  */
#define I3C_I3C_DEVICE_CTRL_REG_HOT_JOIN_CTRL_Pos (8UL)             /*!< HOT_JOIN_CTRL (Bit 8)                                 */
#define I3C_I3C_DEVICE_CTRL_REG_HOT_JOIN_CTRL_Msk (0x100UL)         /*!< HOT_JOIN_CTRL (Bitfield-Mask: 0x01)                   */
#define I3C_I3C_DEVICE_CTRL_REG_I2C_SLAVE_PRESENT_Pos (7UL)         /*!< I2C_SLAVE_PRESENT (Bit 7)                             */
#define I3C_I3C_DEVICE_CTRL_REG_I2C_SLAVE_PRESENT_Msk (0x80UL)      /*!< I2C_SLAVE_PRESENT (Bitfield-Mask: 0x01)               */
#define I3C_I3C_DEVICE_CTRL_REG_IBA_INCLUDE_Pos (0UL)               /*!< IBA_INCLUDE (Bit 0)                                   */
#define I3C_I3C_DEVICE_CTRL_REG_IBA_INCLUDE_Msk (0x1UL)             /*!< IBA_INCLUDE (Bitfield-Mask: 0x01)                     */
/* ==============================================  I3C_DEV_ADDR_TABLE_LOC1_REG  ============================================== */
#define I3C_I3C_DEV_ADDR_TABLE_LOC1_REG_LEGACY_I2C_DEVICE_Pos (31UL) /*!< LEGACY_I2C_DEVICE (Bit 31)                           */
#define I3C_I3C_DEV_ADDR_TABLE_LOC1_REG_LEGACY_I2C_DEVICE_Msk (0x80000000UL) /*!< LEGACY_I2C_DEVICE (Bitfield-Mask: 0x01)      */
#define I3C_I3C_DEV_ADDR_TABLE_LOC1_REG_DEV_NACK_RETRY_CNT_Pos (29UL) /*!< DEV_NACK_RETRY_CNT (Bit 29)                         */
#define I3C_I3C_DEV_ADDR_TABLE_LOC1_REG_DEV_NACK_RETRY_CNT_Msk (0x60000000UL) /*!< DEV_NACK_RETRY_CNT (Bitfield-Mask: 0x03)    */
#define I3C_I3C_DEV_ADDR_TABLE_LOC1_REG_DEV_DYNAMIC_ADDR_Pos (16UL) /*!< DEV_DYNAMIC_ADDR (Bit 16)                             */
#define I3C_I3C_DEV_ADDR_TABLE_LOC1_REG_DEV_DYNAMIC_ADDR_Msk (0xff0000UL) /*!< DEV_DYNAMIC_ADDR (Bitfield-Mask: 0xff)          */
#define I3C_I3C_DEV_ADDR_TABLE_LOC1_REG_DEV_STATIC_ADDR_Pos (0UL)   /*!< DEV_STATIC_ADDR (Bit 0)                               */
#define I3C_I3C_DEV_ADDR_TABLE_LOC1_REG_DEV_STATIC_ADDR_Msk (0x7fUL) /*!< DEV_STATIC_ADDR (Bitfield-Mask: 0x7f)                */
/* ==============================================  I3C_DEV_ADDR_TABLE_LOC2_REG  ============================================== */
#define I3C_I3C_DEV_ADDR_TABLE_LOC2_REG_LEGACY_I2C_DEVICE_Pos (31UL) /*!< LEGACY_I2C_DEVICE (Bit 31)                           */
#define I3C_I3C_DEV_ADDR_TABLE_LOC2_REG_LEGACY_I2C_DEVICE_Msk (0x80000000UL) /*!< LEGACY_I2C_DEVICE (Bitfield-Mask: 0x01)      */
#define I3C_I3C_DEV_ADDR_TABLE_LOC2_REG_DEV_NACK_RETRY_CNT_Pos (29UL) /*!< DEV_NACK_RETRY_CNT (Bit 29)                         */
#define I3C_I3C_DEV_ADDR_TABLE_LOC2_REG_DEV_NACK_RETRY_CNT_Msk (0x60000000UL) /*!< DEV_NACK_RETRY_CNT (Bitfield-Mask: 0x03)    */
#define I3C_I3C_DEV_ADDR_TABLE_LOC2_REG_DEV_DYNAMIC_ADDR_Pos (16UL) /*!< DEV_DYNAMIC_ADDR (Bit 16)                             */
#define I3C_I3C_DEV_ADDR_TABLE_LOC2_REG_DEV_DYNAMIC_ADDR_Msk (0xff0000UL) /*!< DEV_DYNAMIC_ADDR (Bitfield-Mask: 0xff)          */
#define I3C_I3C_DEV_ADDR_TABLE_LOC2_REG_DEV_STATIC_ADDR_Pos (0UL)   /*!< DEV_STATIC_ADDR (Bit 0)                               */
#define I3C_I3C_DEV_ADDR_TABLE_LOC2_REG_DEV_STATIC_ADDR_Msk (0x7fUL) /*!< DEV_STATIC_ADDR (Bitfield-Mask: 0x7f)                */
/* ==============================================  I3C_DEV_ADDR_TABLE_LOC3_REG  ============================================== */
#define I3C_I3C_DEV_ADDR_TABLE_LOC3_REG_LEGACY_I2C_DEVICE_Pos (31UL) /*!< LEGACY_I2C_DEVICE (Bit 31)                           */
#define I3C_I3C_DEV_ADDR_TABLE_LOC3_REG_LEGACY_I2C_DEVICE_Msk (0x80000000UL) /*!< LEGACY_I2C_DEVICE (Bitfield-Mask: 0x01)      */
#define I3C_I3C_DEV_ADDR_TABLE_LOC3_REG_DEV_NACK_RETRY_CNT_Pos (29UL) /*!< DEV_NACK_RETRY_CNT (Bit 29)                         */
#define I3C_I3C_DEV_ADDR_TABLE_LOC3_REG_DEV_NACK_RETRY_CNT_Msk (0x60000000UL) /*!< DEV_NACK_RETRY_CNT (Bitfield-Mask: 0x03)    */
#define I3C_I3C_DEV_ADDR_TABLE_LOC3_REG_DEV_DYNAMIC_ADDR_Pos (16UL) /*!< DEV_DYNAMIC_ADDR (Bit 16)                             */
#define I3C_I3C_DEV_ADDR_TABLE_LOC3_REG_DEV_DYNAMIC_ADDR_Msk (0xff0000UL) /*!< DEV_DYNAMIC_ADDR (Bitfield-Mask: 0xff)          */
#define I3C_I3C_DEV_ADDR_TABLE_LOC3_REG_DEV_STATIC_ADDR_Pos (0UL)   /*!< DEV_STATIC_ADDR (Bit 0)                               */
#define I3C_I3C_DEV_ADDR_TABLE_LOC3_REG_DEV_STATIC_ADDR_Msk (0x7fUL) /*!< DEV_STATIC_ADDR (Bitfield-Mask: 0x7f)                */
/* ==============================================  I3C_DEV_ADDR_TABLE_LOC4_REG  ============================================== */
#define I3C_I3C_DEV_ADDR_TABLE_LOC4_REG_LEGACY_I2C_DEVICE_Pos (31UL) /*!< LEGACY_I2C_DEVICE (Bit 31)                           */
#define I3C_I3C_DEV_ADDR_TABLE_LOC4_REG_LEGACY_I2C_DEVICE_Msk (0x80000000UL) /*!< LEGACY_I2C_DEVICE (Bitfield-Mask: 0x01)      */
#define I3C_I3C_DEV_ADDR_TABLE_LOC4_REG_DEV_NACK_RETRY_CNT_Pos (29UL) /*!< DEV_NACK_RETRY_CNT (Bit 29)                         */
#define I3C_I3C_DEV_ADDR_TABLE_LOC4_REG_DEV_NACK_RETRY_CNT_Msk (0x60000000UL) /*!< DEV_NACK_RETRY_CNT (Bitfield-Mask: 0x03)    */
#define I3C_I3C_DEV_ADDR_TABLE_LOC4_REG_DEV_DYNAMIC_ADDR_Pos (16UL) /*!< DEV_DYNAMIC_ADDR (Bit 16)                             */
#define I3C_I3C_DEV_ADDR_TABLE_LOC4_REG_DEV_DYNAMIC_ADDR_Msk (0xff0000UL) /*!< DEV_DYNAMIC_ADDR (Bitfield-Mask: 0xff)          */
#define I3C_I3C_DEV_ADDR_TABLE_LOC4_REG_DEV_STATIC_ADDR_Pos (0UL)   /*!< DEV_STATIC_ADDR (Bit 0)                               */
#define I3C_I3C_DEV_ADDR_TABLE_LOC4_REG_DEV_STATIC_ADDR_Msk (0x7fUL) /*!< DEV_STATIC_ADDR (Bitfield-Mask: 0x7f)                */
/* ==============================================  I3C_DEV_ADDR_TABLE_LOC5_REG  ============================================== */
#define I3C_I3C_DEV_ADDR_TABLE_LOC5_REG_LEGACY_I2C_DEVICE_Pos (31UL) /*!< LEGACY_I2C_DEVICE (Bit 31)                           */
#define I3C_I3C_DEV_ADDR_TABLE_LOC5_REG_LEGACY_I2C_DEVICE_Msk (0x80000000UL) /*!< LEGACY_I2C_DEVICE (Bitfield-Mask: 0x01)      */
#define I3C_I3C_DEV_ADDR_TABLE_LOC5_REG_DEV_NACK_RETRY_CNT_Pos (29UL) /*!< DEV_NACK_RETRY_CNT (Bit 29)                         */
#define I3C_I3C_DEV_ADDR_TABLE_LOC5_REG_DEV_NACK_RETRY_CNT_Msk (0x60000000UL) /*!< DEV_NACK_RETRY_CNT (Bitfield-Mask: 0x03)    */
#define I3C_I3C_DEV_ADDR_TABLE_LOC5_REG_DEV_DYNAMIC_ADDR_Pos (16UL) /*!< DEV_DYNAMIC_ADDR (Bit 16)                             */
#define I3C_I3C_DEV_ADDR_TABLE_LOC5_REG_DEV_DYNAMIC_ADDR_Msk (0xff0000UL) /*!< DEV_DYNAMIC_ADDR (Bitfield-Mask: 0xff)          */
#define I3C_I3C_DEV_ADDR_TABLE_LOC5_REG_DEV_STATIC_ADDR_Pos (0UL)   /*!< DEV_STATIC_ADDR (Bit 0)                               */
#define I3C_I3C_DEV_ADDR_TABLE_LOC5_REG_DEV_STATIC_ADDR_Msk (0x7fUL) /*!< DEV_STATIC_ADDR (Bitfield-Mask: 0x7f)                */
/* ==============================================  I3C_DEV_ADDR_TABLE_LOC6_REG  ============================================== */
#define I3C_I3C_DEV_ADDR_TABLE_LOC6_REG_LEGACY_I2C_DEVICE_Pos (31UL) /*!< LEGACY_I2C_DEVICE (Bit 31)                           */
#define I3C_I3C_DEV_ADDR_TABLE_LOC6_REG_LEGACY_I2C_DEVICE_Msk (0x80000000UL) /*!< LEGACY_I2C_DEVICE (Bitfield-Mask: 0x01)      */
#define I3C_I3C_DEV_ADDR_TABLE_LOC6_REG_DEV_NACK_RETRY_CNT_Pos (29UL) /*!< DEV_NACK_RETRY_CNT (Bit 29)                         */
#define I3C_I3C_DEV_ADDR_TABLE_LOC6_REG_DEV_NACK_RETRY_CNT_Msk (0x60000000UL) /*!< DEV_NACK_RETRY_CNT (Bitfield-Mask: 0x03)    */
#define I3C_I3C_DEV_ADDR_TABLE_LOC6_REG_DEV_DYNAMIC_ADDR_Pos (16UL) /*!< DEV_DYNAMIC_ADDR (Bit 16)                             */
#define I3C_I3C_DEV_ADDR_TABLE_LOC6_REG_DEV_DYNAMIC_ADDR_Msk (0xff0000UL) /*!< DEV_DYNAMIC_ADDR (Bitfield-Mask: 0xff)          */
#define I3C_I3C_DEV_ADDR_TABLE_LOC6_REG_DEV_STATIC_ADDR_Pos (0UL)   /*!< DEV_STATIC_ADDR (Bit 0)                               */
#define I3C_I3C_DEV_ADDR_TABLE_LOC6_REG_DEV_STATIC_ADDR_Msk (0x7fUL) /*!< DEV_STATIC_ADDR (Bitfield-Mask: 0x7f)                */
/* ==============================================  I3C_DEV_ADDR_TABLE_LOC7_REG  ============================================== */
#define I3C_I3C_DEV_ADDR_TABLE_LOC7_REG_LEGACY_I2C_DEVICE_Pos (31UL) /*!< LEGACY_I2C_DEVICE (Bit 31)                           */
#define I3C_I3C_DEV_ADDR_TABLE_LOC7_REG_LEGACY_I2C_DEVICE_Msk (0x80000000UL) /*!< LEGACY_I2C_DEVICE (Bitfield-Mask: 0x01)      */
#define I3C_I3C_DEV_ADDR_TABLE_LOC7_REG_DEV_NACK_RETRY_CNT_Pos (29UL) /*!< DEV_NACK_RETRY_CNT (Bit 29)                         */
#define I3C_I3C_DEV_ADDR_TABLE_LOC7_REG_DEV_NACK_RETRY_CNT_Msk (0x60000000UL) /*!< DEV_NACK_RETRY_CNT (Bitfield-Mask: 0x03)    */
#define I3C_I3C_DEV_ADDR_TABLE_LOC7_REG_DEV_DYNAMIC_ADDR_Pos (16UL) /*!< DEV_DYNAMIC_ADDR (Bit 16)                             */
#define I3C_I3C_DEV_ADDR_TABLE_LOC7_REG_DEV_DYNAMIC_ADDR_Msk (0xff0000UL) /*!< DEV_DYNAMIC_ADDR (Bitfield-Mask: 0xff)          */
#define I3C_I3C_DEV_ADDR_TABLE_LOC7_REG_DEV_STATIC_ADDR_Pos (0UL)   /*!< DEV_STATIC_ADDR (Bit 0)                               */
#define I3C_I3C_DEV_ADDR_TABLE_LOC7_REG_DEV_STATIC_ADDR_Msk (0x7fUL) /*!< DEV_STATIC_ADDR (Bitfield-Mask: 0x7f)                */
/* ==============================================  I3C_DEV_ADDR_TABLE_LOC8_REG  ============================================== */
#define I3C_I3C_DEV_ADDR_TABLE_LOC8_REG_LEGACY_I2C_DEVICE_Pos (31UL) /*!< LEGACY_I2C_DEVICE (Bit 31)                           */
#define I3C_I3C_DEV_ADDR_TABLE_LOC8_REG_LEGACY_I2C_DEVICE_Msk (0x80000000UL) /*!< LEGACY_I2C_DEVICE (Bitfield-Mask: 0x01)      */
#define I3C_I3C_DEV_ADDR_TABLE_LOC8_REG_DEV_NACK_RETRY_CNT_Pos (29UL) /*!< DEV_NACK_RETRY_CNT (Bit 29)                         */
#define I3C_I3C_DEV_ADDR_TABLE_LOC8_REG_DEV_NACK_RETRY_CNT_Msk (0x60000000UL) /*!< DEV_NACK_RETRY_CNT (Bitfield-Mask: 0x03)    */
#define I3C_I3C_DEV_ADDR_TABLE_LOC8_REG_DEV_DYNAMIC_ADDR_Pos (16UL) /*!< DEV_DYNAMIC_ADDR (Bit 16)                             */
#define I3C_I3C_DEV_ADDR_TABLE_LOC8_REG_DEV_DYNAMIC_ADDR_Msk (0xff0000UL) /*!< DEV_DYNAMIC_ADDR (Bitfield-Mask: 0xff)          */
#define I3C_I3C_DEV_ADDR_TABLE_LOC8_REG_DEV_STATIC_ADDR_Pos (0UL)   /*!< DEV_STATIC_ADDR (Bit 0)                               */
#define I3C_I3C_DEV_ADDR_TABLE_LOC8_REG_DEV_STATIC_ADDR_Msk (0x7fUL) /*!< DEV_STATIC_ADDR (Bitfield-Mask: 0x7f)                */
/* =============================================  I3C_DEV_CHAR_TABLE1_LOC1_REG  ============================================== */
#define I3C_I3C_DEV_CHAR_TABLE1_LOC1_REG_LSB_PROVISIONAL_ID_Pos (0UL) /*!< LSB_PROVISIONAL_ID (Bit 0)                          */
#define I3C_I3C_DEV_CHAR_TABLE1_LOC1_REG_LSB_PROVISIONAL_ID_Msk (0xffffffffUL) /*!< LSB_PROVISIONAL_ID (Bitfield-Mask: 0xffffffff) */
/* =============================================  I3C_DEV_CHAR_TABLE1_LOC2_REG  ============================================== */
#define I3C_I3C_DEV_CHAR_TABLE1_LOC2_REG_MSB_PROVISIONAL_ID_Pos (0UL) /*!< MSB_PROVISIONAL_ID (Bit 0)                          */
#define I3C_I3C_DEV_CHAR_TABLE1_LOC2_REG_MSB_PROVISIONAL_ID_Msk (0xffffUL) /*!< MSB_PROVISIONAL_ID (Bitfield-Mask: 0xffff)     */
/* =============================================  I3C_DEV_CHAR_TABLE1_LOC3_REG  ============================================== */
#define I3C_I3C_DEV_CHAR_TABLE1_LOC3_REG_BCR_Pos (8UL)              /*!< BCR (Bit 8)                                           */
#define I3C_I3C_DEV_CHAR_TABLE1_LOC3_REG_BCR_Msk (0xff00UL)         /*!< BCR (Bitfield-Mask: 0xff)                             */
#define I3C_I3C_DEV_CHAR_TABLE1_LOC3_REG_DCR_Pos (0UL)              /*!< DCR (Bit 0)                                           */
#define I3C_I3C_DEV_CHAR_TABLE1_LOC3_REG_DCR_Msk (0xffUL)           /*!< DCR (Bitfield-Mask: 0xff)                             */
/* =============================================  I3C_DEV_CHAR_TABLE1_LOC4_REG  ============================================== */
#define I3C_I3C_DEV_CHAR_TABLE1_LOC4_REG_DEV_DYNAMIC_ADDR_LOC4_Pos (0UL) /*!< DEV_DYNAMIC_ADDR_LOC4 (Bit 0)                    */
#define I3C_I3C_DEV_CHAR_TABLE1_LOC4_REG_DEV_DYNAMIC_ADDR_LOC4_Msk (0xffUL) /*!< DEV_DYNAMIC_ADDR_LOC4 (Bitfield-Mask: 0xff)   */
/* =============================================  I3C_DEV_CHAR_TABLE2_LOC1_REG  ============================================== */
#define I3C_I3C_DEV_CHAR_TABLE2_LOC1_REG_LSB_PROVISIONAL_ID_Pos (0UL) /*!< LSB_PROVISIONAL_ID (Bit 0)                          */
#define I3C_I3C_DEV_CHAR_TABLE2_LOC1_REG_LSB_PROVISIONAL_ID_Msk (0xffffffffUL) /*!< LSB_PROVISIONAL_ID (Bitfield-Mask: 0xffffffff) */
/* =============================================  I3C_DEV_CHAR_TABLE2_LOC2_REG  ============================================== */
#define I3C_I3C_DEV_CHAR_TABLE2_LOC2_REG_MSB_PROVISIONAL_ID_Pos (0UL) /*!< MSB_PROVISIONAL_ID (Bit 0)                          */
#define I3C_I3C_DEV_CHAR_TABLE2_LOC2_REG_MSB_PROVISIONAL_ID_Msk (0xffffUL) /*!< MSB_PROVISIONAL_ID (Bitfield-Mask: 0xffff)     */
/* =============================================  I3C_DEV_CHAR_TABLE2_LOC3_REG  ============================================== */
#define I3C_I3C_DEV_CHAR_TABLE2_LOC3_REG_BCR_Pos (8UL)              /*!< BCR (Bit 8)                                           */
#define I3C_I3C_DEV_CHAR_TABLE2_LOC3_REG_BCR_Msk (0xff00UL)         /*!< BCR (Bitfield-Mask: 0xff)                             */
#define I3C_I3C_DEV_CHAR_TABLE2_LOC3_REG_DCR_Pos (0UL)              /*!< DCR (Bit 0)                                           */
#define I3C_I3C_DEV_CHAR_TABLE2_LOC3_REG_DCR_Msk (0xffUL)           /*!< DCR (Bitfield-Mask: 0xff)                             */
/* =============================================  I3C_DEV_CHAR_TABLE2_LOC4_REG  ============================================== */
#define I3C_I3C_DEV_CHAR_TABLE2_LOC4_REG_DEV_DYNAMIC_ADDR_LOC4_Pos (0UL) /*!< DEV_DYNAMIC_ADDR_LOC4 (Bit 0)                    */
#define I3C_I3C_DEV_CHAR_TABLE2_LOC4_REG_DEV_DYNAMIC_ADDR_LOC4_Msk (0xffUL) /*!< DEV_DYNAMIC_ADDR_LOC4 (Bitfield-Mask: 0xff)   */
/* =============================================  I3C_DEV_CHAR_TABLE3_LOC1_REG  ============================================== */
#define I3C_I3C_DEV_CHAR_TABLE3_LOC1_REG_LSB_PROVISIONAL_ID_Pos (0UL) /*!< LSB_PROVISIONAL_ID (Bit 0)                          */
#define I3C_I3C_DEV_CHAR_TABLE3_LOC1_REG_LSB_PROVISIONAL_ID_Msk (0xffffffffUL) /*!< LSB_PROVISIONAL_ID (Bitfield-Mask: 0xffffffff) */
/* =============================================  I3C_DEV_CHAR_TABLE3_LOC2_REG  ============================================== */
#define I3C_I3C_DEV_CHAR_TABLE3_LOC2_REG_MSB_PROVISIONAL_ID_Pos (0UL) /*!< MSB_PROVISIONAL_ID (Bit 0)                          */
#define I3C_I3C_DEV_CHAR_TABLE3_LOC2_REG_MSB_PROVISIONAL_ID_Msk (0xffffUL) /*!< MSB_PROVISIONAL_ID (Bitfield-Mask: 0xffff)     */
/* =============================================  I3C_DEV_CHAR_TABLE3_LOC3_REG  ============================================== */
#define I3C_I3C_DEV_CHAR_TABLE3_LOC3_REG_BCR_Pos (8UL)              /*!< BCR (Bit 8)                                           */
#define I3C_I3C_DEV_CHAR_TABLE3_LOC3_REG_BCR_Msk (0xff00UL)         /*!< BCR (Bitfield-Mask: 0xff)                             */
#define I3C_I3C_DEV_CHAR_TABLE3_LOC3_REG_DCR_Pos (0UL)              /*!< DCR (Bit 0)                                           */
#define I3C_I3C_DEV_CHAR_TABLE3_LOC3_REG_DCR_Msk (0xffUL)           /*!< DCR (Bitfield-Mask: 0xff)                             */
/* =============================================  I3C_DEV_CHAR_TABLE3_LOC4_REG  ============================================== */
#define I3C_I3C_DEV_CHAR_TABLE3_LOC4_REG_DEV_DYNAMIC_ADDR_LOC4_Pos (0UL) /*!< DEV_DYNAMIC_ADDR_LOC4 (Bit 0)                    */
#define I3C_I3C_DEV_CHAR_TABLE3_LOC4_REG_DEV_DYNAMIC_ADDR_LOC4_Msk (0xffUL) /*!< DEV_DYNAMIC_ADDR_LOC4 (Bitfield-Mask: 0xff)   */
/* =============================================  I3C_DEV_CHAR_TABLE4_LOC1_REG  ============================================== */
#define I3C_I3C_DEV_CHAR_TABLE4_LOC1_REG_LSB_PROVISIONAL_ID_Pos (0UL) /*!< LSB_PROVISIONAL_ID (Bit 0)                          */
#define I3C_I3C_DEV_CHAR_TABLE4_LOC1_REG_LSB_PROVISIONAL_ID_Msk (0xffffffffUL) /*!< LSB_PROVISIONAL_ID (Bitfield-Mask: 0xffffffff) */
/* =============================================  I3C_DEV_CHAR_TABLE4_LOC2_REG  ============================================== */
#define I3C_I3C_DEV_CHAR_TABLE4_LOC2_REG_MSB_PROVISIONAL_ID_Pos (0UL) /*!< MSB_PROVISIONAL_ID (Bit 0)                          */
#define I3C_I3C_DEV_CHAR_TABLE4_LOC2_REG_MSB_PROVISIONAL_ID_Msk (0xffffUL) /*!< MSB_PROVISIONAL_ID (Bitfield-Mask: 0xffff)     */
/* =============================================  I3C_DEV_CHAR_TABLE4_LOC3_REG  ============================================== */
#define I3C_I3C_DEV_CHAR_TABLE4_LOC3_REG_BCR_Pos (8UL)              /*!< BCR (Bit 8)                                           */
#define I3C_I3C_DEV_CHAR_TABLE4_LOC3_REG_BCR_Msk (0xff00UL)         /*!< BCR (Bitfield-Mask: 0xff)                             */
#define I3C_I3C_DEV_CHAR_TABLE4_LOC3_REG_DCR_Pos (0UL)              /*!< DCR (Bit 0)                                           */
#define I3C_I3C_DEV_CHAR_TABLE4_LOC3_REG_DCR_Msk (0xffUL)           /*!< DCR (Bitfield-Mask: 0xff)                             */
/* =============================================  I3C_DEV_CHAR_TABLE4_LOC4_REG  ============================================== */
#define I3C_I3C_DEV_CHAR_TABLE4_LOC4_REG_DEV_DYNAMIC_ADDR_LOC4_Pos (0UL) /*!< DEV_DYNAMIC_ADDR_LOC4 (Bit 0)                    */
#define I3C_I3C_DEV_CHAR_TABLE4_LOC4_REG_DEV_DYNAMIC_ADDR_LOC4_Msk (0xffUL) /*!< DEV_DYNAMIC_ADDR_LOC4 (Bitfield-Mask: 0xff)   */
/* =============================================  I3C_DEV_CHAR_TABLE5_LOC1_REG  ============================================== */
#define I3C_I3C_DEV_CHAR_TABLE5_LOC1_REG_LSB_PROVISIONAL_ID_Pos (0UL) /*!< LSB_PROVISIONAL_ID (Bit 0)                          */
#define I3C_I3C_DEV_CHAR_TABLE5_LOC1_REG_LSB_PROVISIONAL_ID_Msk (0xffffffffUL) /*!< LSB_PROVISIONAL_ID (Bitfield-Mask: 0xffffffff) */
/* =============================================  I3C_DEV_CHAR_TABLE5_LOC2_REG  ============================================== */
#define I3C_I3C_DEV_CHAR_TABLE5_LOC2_REG_MSB_PROVISIONAL_ID_Pos (0UL) /*!< MSB_PROVISIONAL_ID (Bit 0)                          */
#define I3C_I3C_DEV_CHAR_TABLE5_LOC2_REG_MSB_PROVISIONAL_ID_Msk (0xffffUL) /*!< MSB_PROVISIONAL_ID (Bitfield-Mask: 0xffff)     */
/* =============================================  I3C_DEV_CHAR_TABLE5_LOC3_REG  ============================================== */
#define I3C_I3C_DEV_CHAR_TABLE5_LOC3_REG_BCR_Pos (8UL)              /*!< BCR (Bit 8)                                           */
#define I3C_I3C_DEV_CHAR_TABLE5_LOC3_REG_BCR_Msk (0xff00UL)         /*!< BCR (Bitfield-Mask: 0xff)                             */
#define I3C_I3C_DEV_CHAR_TABLE5_LOC3_REG_DCR_Pos (0UL)              /*!< DCR (Bit 0)                                           */
#define I3C_I3C_DEV_CHAR_TABLE5_LOC3_REG_DCR_Msk (0xffUL)           /*!< DCR (Bitfield-Mask: 0xff)                             */
/* =============================================  I3C_DEV_CHAR_TABLE5_LOC4_REG  ============================================== */
#define I3C_I3C_DEV_CHAR_TABLE5_LOC4_REG_DEV_DYNAMIC_ADDR_LOC4_Pos (0UL) /*!< DEV_DYNAMIC_ADDR_LOC4 (Bit 0)                    */
#define I3C_I3C_DEV_CHAR_TABLE5_LOC4_REG_DEV_DYNAMIC_ADDR_LOC4_Msk (0xffUL) /*!< DEV_DYNAMIC_ADDR_LOC4 (Bitfield-Mask: 0xff)   */
/* =============================================  I3C_DEV_CHAR_TABLE6_LOC1_REG  ============================================== */
#define I3C_I3C_DEV_CHAR_TABLE6_LOC1_REG_LSB_PROVISIONAL_ID_Pos (0UL) /*!< LSB_PROVISIONAL_ID (Bit 0)                          */
#define I3C_I3C_DEV_CHAR_TABLE6_LOC1_REG_LSB_PROVISIONAL_ID_Msk (0xffffffffUL) /*!< LSB_PROVISIONAL_ID (Bitfield-Mask: 0xffffffff) */
/* =============================================  I3C_DEV_CHAR_TABLE6_LOC2_REG  ============================================== */
#define I3C_I3C_DEV_CHAR_TABLE6_LOC2_REG_MSB_PROVISIONAL_ID_Pos (0UL) /*!< MSB_PROVISIONAL_ID (Bit 0)                          */
#define I3C_I3C_DEV_CHAR_TABLE6_LOC2_REG_MSB_PROVISIONAL_ID_Msk (0xffffUL) /*!< MSB_PROVISIONAL_ID (Bitfield-Mask: 0xffff)     */
/* =============================================  I3C_DEV_CHAR_TABLE6_LOC3_REG  ============================================== */
#define I3C_I3C_DEV_CHAR_TABLE6_LOC3_REG_BCR_Pos (8UL)              /*!< BCR (Bit 8)                                           */
#define I3C_I3C_DEV_CHAR_TABLE6_LOC3_REG_BCR_Msk (0xff00UL)         /*!< BCR (Bitfield-Mask: 0xff)                             */
#define I3C_I3C_DEV_CHAR_TABLE6_LOC3_REG_DCR_Pos (0UL)              /*!< DCR (Bit 0)                                           */
#define I3C_I3C_DEV_CHAR_TABLE6_LOC3_REG_DCR_Msk (0xffUL)           /*!< DCR (Bitfield-Mask: 0xff)                             */
/* =============================================  I3C_DEV_CHAR_TABLE6_LOC4_REG  ============================================== */
#define I3C_I3C_DEV_CHAR_TABLE6_LOC4_REG_DEV_DYNAMIC_ADDR_LOC4_Pos (0UL) /*!< DEV_DYNAMIC_ADDR_LOC4 (Bit 0)                    */
#define I3C_I3C_DEV_CHAR_TABLE6_LOC4_REG_DEV_DYNAMIC_ADDR_LOC4_Msk (0xffUL) /*!< DEV_DYNAMIC_ADDR_LOC4 (Bitfield-Mask: 0xff)   */
/* =============================================  I3C_DEV_CHAR_TABLE7_LOC1_REG  ============================================== */
#define I3C_I3C_DEV_CHAR_TABLE7_LOC1_REG_LSB_PROVISIONAL_ID_Pos (0UL) /*!< LSB_PROVISIONAL_ID (Bit 0)                          */
#define I3C_I3C_DEV_CHAR_TABLE7_LOC1_REG_LSB_PROVISIONAL_ID_Msk (0xffffffffUL) /*!< LSB_PROVISIONAL_ID (Bitfield-Mask: 0xffffffff) */
/* =============================================  I3C_DEV_CHAR_TABLE7_LOC2_REG  ============================================== */
#define I3C_I3C_DEV_CHAR_TABLE7_LOC2_REG_MSB_PROVISIONAL_ID_Pos (0UL) /*!< MSB_PROVISIONAL_ID (Bit 0)                          */
#define I3C_I3C_DEV_CHAR_TABLE7_LOC2_REG_MSB_PROVISIONAL_ID_Msk (0xffffUL) /*!< MSB_PROVISIONAL_ID (Bitfield-Mask: 0xffff)     */
/* =============================================  I3C_DEV_CHAR_TABLE7_LOC3_REG  ============================================== */
#define I3C_I3C_DEV_CHAR_TABLE7_LOC3_REG_BCR_Pos (8UL)              /*!< BCR (Bit 8)                                           */
#define I3C_I3C_DEV_CHAR_TABLE7_LOC3_REG_BCR_Msk (0xff00UL)         /*!< BCR (Bitfield-Mask: 0xff)                             */
#define I3C_I3C_DEV_CHAR_TABLE7_LOC3_REG_DCR_Pos (0UL)              /*!< DCR (Bit 0)                                           */
#define I3C_I3C_DEV_CHAR_TABLE7_LOC3_REG_DCR_Msk (0xffUL)           /*!< DCR (Bitfield-Mask: 0xff)                             */
/* =============================================  I3C_DEV_CHAR_TABLE7_LOC4_REG  ============================================== */
#define I3C_I3C_DEV_CHAR_TABLE7_LOC4_REG_DEV_DYNAMIC_ADDR_LOC4_Pos (0UL) /*!< DEV_DYNAMIC_ADDR_LOC4 (Bit 0)                    */
#define I3C_I3C_DEV_CHAR_TABLE7_LOC4_REG_DEV_DYNAMIC_ADDR_LOC4_Msk (0xffUL) /*!< DEV_DYNAMIC_ADDR_LOC4 (Bitfield-Mask: 0xff)   */
/* =============================================  I3C_DEV_CHAR_TABLE8_LOC1_REG  ============================================== */
#define I3C_I3C_DEV_CHAR_TABLE8_LOC1_REG_LSB_PROVISIONAL_ID_Pos (0UL) /*!< LSB_PROVISIONAL_ID (Bit 0)                          */
#define I3C_I3C_DEV_CHAR_TABLE8_LOC1_REG_LSB_PROVISIONAL_ID_Msk (0xffffffffUL) /*!< LSB_PROVISIONAL_ID (Bitfield-Mask: 0xffffffff) */
/* =============================================  I3C_DEV_CHAR_TABLE8_LOC2_REG  ============================================== */
#define I3C_I3C_DEV_CHAR_TABLE8_LOC2_REG_MSB_PROVISIONAL_ID_Pos (0UL) /*!< MSB_PROVISIONAL_ID (Bit 0)                          */
#define I3C_I3C_DEV_CHAR_TABLE8_LOC2_REG_MSB_PROVISIONAL_ID_Msk (0xffffUL) /*!< MSB_PROVISIONAL_ID (Bitfield-Mask: 0xffff)     */
/* =============================================  I3C_DEV_CHAR_TABLE8_LOC3_REG  ============================================== */
#define I3C_I3C_DEV_CHAR_TABLE8_LOC3_REG_BCR_Pos (8UL)              /*!< BCR (Bit 8)                                           */
#define I3C_I3C_DEV_CHAR_TABLE8_LOC3_REG_BCR_Msk (0xff00UL)         /*!< BCR (Bitfield-Mask: 0xff)                             */
#define I3C_I3C_DEV_CHAR_TABLE8_LOC3_REG_DCR_Pos (0UL)              /*!< DCR (Bit 0)                                           */
#define I3C_I3C_DEV_CHAR_TABLE8_LOC3_REG_DCR_Msk (0xffUL)           /*!< DCR (Bitfield-Mask: 0xff)                             */
/* =============================================  I3C_DEV_CHAR_TABLE8_LOC4_REG  ============================================== */
#define I3C_I3C_DEV_CHAR_TABLE8_LOC4_REG_DEV_DYNAMIC_ADDR_LOC4_Pos (0UL) /*!< DEV_DYNAMIC_ADDR_LOC4 (Bit 0)                    */
#define I3C_I3C_DEV_CHAR_TABLE8_LOC4_REG_DEV_DYNAMIC_ADDR_LOC4_Msk (0xffUL) /*!< DEV_DYNAMIC_ADDR_LOC4 (Bitfield-Mask: 0xff)   */
/* ============================================  I3C_DEV_CHAR_TABLE_POINTER_REG  ============================================= */
#define I3C_I3C_DEV_CHAR_TABLE_POINTER_REG_PRESENT_DEV_CHAR_TABLE_INDX_Pos (19UL) /*!< PRESENT_DEV_CHAR_TABLE_INDX (Bit 19)    */
#define I3C_I3C_DEV_CHAR_TABLE_POINTER_REG_PRESENT_DEV_CHAR_TABLE_INDX_Msk (0x380000UL) /*!< PRESENT_DEV_CHAR_TABLE_INDX (Bitfield-Mask: 0x07) */
#define I3C_I3C_DEV_CHAR_TABLE_POINTER_REG_DEV_CHAR_TABLE_DEPTH_Pos (12UL) /*!< DEV_CHAR_TABLE_DEPTH (Bit 12)                  */
#define I3C_I3C_DEV_CHAR_TABLE_POINTER_REG_DEV_CHAR_TABLE_DEPTH_Msk (0x7f000UL) /*!< DEV_CHAR_TABLE_DEPTH (Bitfield-Mask: 0x7f) */
#define I3C_I3C_DEV_CHAR_TABLE_POINTER_REG_P_DEV_CHAR_TABLE_START_ADDR_Pos (0UL) /*!< P_DEV_CHAR_TABLE_START_ADDR (Bit 0)      */
#define I3C_I3C_DEV_CHAR_TABLE_POINTER_REG_P_DEV_CHAR_TABLE_START_ADDR_Msk (0xfffUL) /*!< P_DEV_CHAR_TABLE_START_ADDR (Bitfield-Mask: 0xfff) */
/* =================================================  I3C_HW_CAPABILITY_REG  ================================================= */
#define I3C_I3C_HW_CAPABILITY_REG_SLV_IBI_CAP_Pos (19UL)            /*!< SLV_IBI_CAP (Bit 19)                                  */
#define I3C_I3C_HW_CAPABILITY_REG_SLV_IBI_CAP_Msk (0x80000UL)       /*!< SLV_IBI_CAP (Bitfield-Mask: 0x01)                     */
#define I3C_I3C_HW_CAPABILITY_REG_SLV_HJ_CAP_Pos (18UL)             /*!< SLV_HJ_CAP (Bit 18)                                   */
#define I3C_I3C_HW_CAPABILITY_REG_SLV_HJ_CAP_Msk (0x40000UL)        /*!< SLV_HJ_CAP (Bitfield-Mask: 0x01)                      */
#define I3C_I3C_HW_CAPABILITY_REG_DMA_EN_Pos (17UL)                 /*!< DMA_EN (Bit 17)                                       */
#define I3C_I3C_HW_CAPABILITY_REG_DMA_EN_Msk (0x20000UL)            /*!< DMA_EN (Bitfield-Mask: 0x01)                          */
#define I3C_I3C_HW_CAPABILITY_REG_HDR_TX_CLOCK_PERIOD_Pos (11UL)    /*!< HDR_TX_CLOCK_PERIOD (Bit 11)                          */
#define I3C_I3C_HW_CAPABILITY_REG_HDR_TX_CLOCK_PERIOD_Msk (0x1f800UL) /*!< HDR_TX_CLOCK_PERIOD (Bitfield-Mask: 0x3f)           */
#define I3C_I3C_HW_CAPABILITY_REG_CLOCK_PERIOD_Pos (5UL)            /*!< CLOCK_PERIOD (Bit 5)                                  */
#define I3C_I3C_HW_CAPABILITY_REG_CLOCK_PERIOD_Msk (0x7e0UL)        /*!< CLOCK_PERIOD (Bitfield-Mask: 0x3f)                    */
#define I3C_I3C_HW_CAPABILITY_REG_HDR_TS_EN_Pos (4UL)               /*!< HDR_TS_EN (Bit 4)                                     */
#define I3C_I3C_HW_CAPABILITY_REG_HDR_TS_EN_Msk (0x10UL)            /*!< HDR_TS_EN (Bitfield-Mask: 0x01)                       */
#define I3C_I3C_HW_CAPABILITY_REG_HDR_DDR_EN_Pos (3UL)              /*!< HDR_DDR_EN (Bit 3)                                    */
#define I3C_I3C_HW_CAPABILITY_REG_HDR_DDR_EN_Msk (0x8UL)            /*!< HDR_DDR_EN (Bitfield-Mask: 0x01)                      */
#define I3C_I3C_HW_CAPABILITY_REG_DEVICE_ROLE_CONFIG_Pos (0UL)      /*!< DEVICE_ROLE_CONFIG (Bit 0)                            */
#define I3C_I3C_HW_CAPABILITY_REG_DEVICE_ROLE_CONFIG_Msk (0x7UL)    /*!< DEVICE_ROLE_CONFIG (Bitfield-Mask: 0x07)              */
/* ================================================  I3C_IBI_QUEUE_CTRL_REG  ================================================= */
#define I3C_I3C_IBI_QUEUE_CTRL_REG_NOTIFY_SIR_REJECTED_Pos (3UL)    /*!< NOTIFY_SIR_REJECTED (Bit 3)                           */
#define I3C_I3C_IBI_QUEUE_CTRL_REG_NOTIFY_SIR_REJECTED_Msk (0x8UL)  /*!< NOTIFY_SIR_REJECTED (Bitfield-Mask: 0x01)             */
#define I3C_I3C_IBI_QUEUE_CTRL_REG_NOTIFY_HJ_REJECTED_Pos (0UL)     /*!< NOTIFY_HJ_REJECTED (Bit 0)                            */
#define I3C_I3C_IBI_QUEUE_CTRL_REG_NOTIFY_HJ_REJECTED_Msk (0x1UL)   /*!< NOTIFY_HJ_REJECTED (Bitfield-Mask: 0x01)              */
/* =============================================  I3C_IBI_QUEUE_STATUS_DATA_REG  ============================================= */
#define I3C_I3C_IBI_QUEUE_STATUS_DATA_REG_IBI_STS_Pos (28UL)        /*!< IBI_STS (Bit 28)                                      */
#define I3C_I3C_IBI_QUEUE_STATUS_DATA_REG_IBI_STS_Msk (0xf0000000UL) /*!< IBI_STS (Bitfield-Mask: 0x0f)                        */
#define I3C_I3C_IBI_QUEUE_STATUS_DATA_REG_IBI_ID_Pos (8UL)          /*!< IBI_ID (Bit 8)                                        */
#define I3C_I3C_IBI_QUEUE_STATUS_DATA_REG_IBI_ID_Msk (0xff00UL)     /*!< IBI_ID (Bitfield-Mask: 0xff)                          */
#define I3C_I3C_IBI_QUEUE_STATUS_DATA_REG_DATA_LENGTH_Pos (0UL)     /*!< DATA_LENGTH (Bit 0)                                   */
#define I3C_I3C_IBI_QUEUE_STATUS_DATA_REG_DATA_LENGTH_Msk (0xffUL)  /*!< DATA_LENGTH (Bitfield-Mask: 0xff)                     */
/* ==============================================  I3C_IBI_SIR_REQ_REJECT_REG  =============================================== */
#define I3C_I3C_IBI_SIR_REQ_REJECT_REG_SIR_REQ_REJECT_Pos (0UL)     /*!< SIR_REQ_REJECT (Bit 0)                                */
#define I3C_I3C_IBI_SIR_REQ_REJECT_REG_SIR_REQ_REJECT_Msk (0xffffffffUL) /*!< SIR_REQ_REJECT (Bitfield-Mask: 0xffffffff)       */
/* ==================================================  I3C_INTR_FORCE_REG  =================================================== */
#define I3C_I3C_INTR_FORCE_REG_TRANSFER_ERR_FORCE_EN_Pos (9UL)      /*!< TRANSFER_ERR_FORCE_EN (Bit 9)                         */
#define I3C_I3C_INTR_FORCE_REG_TRANSFER_ERR_FORCE_EN_Msk (0x200UL)  /*!< TRANSFER_ERR_FORCE_EN (Bitfield-Mask: 0x01)           */
#define I3C_I3C_INTR_FORCE_REG_TRANSFER_ABORT_FORCE_EN_Pos (5UL)    /*!< TRANSFER_ABORT_FORCE_EN (Bit 5)                       */
#define I3C_I3C_INTR_FORCE_REG_TRANSFER_ABORT_FORCE_EN_Msk (0x20UL) /*!< TRANSFER_ABORT_FORCE_EN (Bitfield-Mask: 0x01)         */
#define I3C_I3C_INTR_FORCE_REG_RESP_READY_FORCE_EN_Pos (4UL)        /*!< RESP_READY_FORCE_EN (Bit 4)                           */
#define I3C_I3C_INTR_FORCE_REG_RESP_READY_FORCE_EN_Msk (0x10UL)     /*!< RESP_READY_FORCE_EN (Bitfield-Mask: 0x01)             */
#define I3C_I3C_INTR_FORCE_REG_CMD_QUEUE_READY_FORCE_EN_Pos (3UL)   /*!< CMD_QUEUE_READY_FORCE_EN (Bit 3)                      */
#define I3C_I3C_INTR_FORCE_REG_CMD_QUEUE_READY_FORCE_EN_Msk (0x8UL) /*!< CMD_QUEUE_READY_FORCE_EN (Bitfield-Mask: 0x01)        */
#define I3C_I3C_INTR_FORCE_REG_IBI_THLD_FORCE_EN_Pos (2UL)          /*!< IBI_THLD_FORCE_EN (Bit 2)                             */
#define I3C_I3C_INTR_FORCE_REG_IBI_THLD_FORCE_EN_Msk (0x4UL)        /*!< IBI_THLD_FORCE_EN (Bitfield-Mask: 0x01)               */
#define I3C_I3C_INTR_FORCE_REG_RX_THLD_FORCE_EN_Pos (1UL)           /*!< RX_THLD_FORCE_EN (Bit 1)                              */
#define I3C_I3C_INTR_FORCE_REG_RX_THLD_FORCE_EN_Msk (0x2UL)         /*!< RX_THLD_FORCE_EN (Bitfield-Mask: 0x01)                */
#define I3C_I3C_INTR_FORCE_REG_TX_THLD_FORCE_EN_Pos (0UL)           /*!< TX_THLD_FORCE_EN (Bit 0)                              */
#define I3C_I3C_INTR_FORCE_REG_TX_THLD_FORCE_EN_Msk (0x1UL)         /*!< TX_THLD_FORCE_EN (Bitfield-Mask: 0x01)                */
/* ================================================  I3C_INTR_SIGNAL_EN_REG  ================================================= */
#define I3C_I3C_INTR_SIGNAL_EN_REG_TRANSFER_ERR_SIGNAL_EN_Pos (9UL) /*!< TRANSFER_ERR_SIGNAL_EN (Bit 9)                        */
#define I3C_I3C_INTR_SIGNAL_EN_REG_TRANSFER_ERR_SIGNAL_EN_Msk (0x200UL) /*!< TRANSFER_ERR_SIGNAL_EN (Bitfield-Mask: 0x01)      */
#define I3C_I3C_INTR_SIGNAL_EN_REG_TRANSFER_ABORT_SIGNAL_EN_Pos (5UL) /*!< TRANSFER_ABORT_SIGNAL_EN (Bit 5)                    */
#define I3C_I3C_INTR_SIGNAL_EN_REG_TRANSFER_ABORT_SIGNAL_EN_Msk (0x20UL) /*!< TRANSFER_ABORT_SIGNAL_EN (Bitfield-Mask: 0x01)   */
#define I3C_I3C_INTR_SIGNAL_EN_REG_RESP_READY_SIGNAL_EN_Pos (4UL)   /*!< RESP_READY_SIGNAL_EN (Bit 4)                          */
#define I3C_I3C_INTR_SIGNAL_EN_REG_RESP_READY_SIGNAL_EN_Msk (0x10UL) /*!< RESP_READY_SIGNAL_EN (Bitfield-Mask: 0x01)           */
#define I3C_I3C_INTR_SIGNAL_EN_REG_CMD_QUEUE_READY_SIGNAL_EN_Pos (3UL) /*!< CMD_QUEUE_READY_SIGNAL_EN (Bit 3)                  */
#define I3C_I3C_INTR_SIGNAL_EN_REG_CMD_QUEUE_READY_SIGNAL_EN_Msk (0x8UL) /*!< CMD_QUEUE_READY_SIGNAL_EN (Bitfield-Mask: 0x01)  */
#define I3C_I3C_INTR_SIGNAL_EN_REG_IBI_THLD_SIGNAL_EN_Pos (2UL)     /*!< IBI_THLD_SIGNAL_EN (Bit 2)                            */
#define I3C_I3C_INTR_SIGNAL_EN_REG_IBI_THLD_SIGNAL_EN_Msk (0x4UL)   /*!< IBI_THLD_SIGNAL_EN (Bitfield-Mask: 0x01)              */
#define I3C_I3C_INTR_SIGNAL_EN_REG_RX_THLD_SIGNAL_EN_Pos (1UL)      /*!< RX_THLD_SIGNAL_EN (Bit 1)                             */
#define I3C_I3C_INTR_SIGNAL_EN_REG_RX_THLD_SIGNAL_EN_Msk (0x2UL)    /*!< RX_THLD_SIGNAL_EN (Bitfield-Mask: 0x01)               */
#define I3C_I3C_INTR_SIGNAL_EN_REG_TX_THLD_SIGNAL_EN_Pos (0UL)      /*!< TX_THLD_SIGNAL_EN (Bit 0)                             */
#define I3C_I3C_INTR_SIGNAL_EN_REG_TX_THLD_SIGNAL_EN_Msk (0x1UL)    /*!< TX_THLD_SIGNAL_EN (Bitfield-Mask: 0x01)               */
/* ================================================  I3C_INTR_STATUS_EN_REG  ================================================= */
#define I3C_I3C_INTR_STATUS_EN_REG_TRANSFER_ERR_STS_EN_Pos (9UL)    /*!< TRANSFER_ERR_STS_EN (Bit 9)                           */
#define I3C_I3C_INTR_STATUS_EN_REG_TRANSFER_ERR_STS_EN_Msk (0x200UL) /*!< TRANSFER_ERR_STS_EN (Bitfield-Mask: 0x01)            */
#define I3C_I3C_INTR_STATUS_EN_REG_TRANSFER_ABORT_STS_EN_Pos (5UL)  /*!< TRANSFER_ABORT_STS_EN (Bit 5)                         */
#define I3C_I3C_INTR_STATUS_EN_REG_TRANSFER_ABORT_STS_EN_Msk (0x20UL) /*!< TRANSFER_ABORT_STS_EN (Bitfield-Mask: 0x01)         */
#define I3C_I3C_INTR_STATUS_EN_REG_RESP_READY_STS_EN_Pos (4UL)      /*!< RESP_READY_STS_EN (Bit 4)                             */
#define I3C_I3C_INTR_STATUS_EN_REG_RESP_READY_STS_EN_Msk (0x10UL)   /*!< RESP_READY_STS_EN (Bitfield-Mask: 0x01)               */
#define I3C_I3C_INTR_STATUS_EN_REG_CMD_QUEUE_READY_STS_EN_Pos (3UL) /*!< CMD_QUEUE_READY_STS_EN (Bit 3)                        */
#define I3C_I3C_INTR_STATUS_EN_REG_CMD_QUEUE_READY_STS_EN_Msk (0x8UL) /*!< CMD_QUEUE_READY_STS_EN (Bitfield-Mask: 0x01)        */
#define I3C_I3C_INTR_STATUS_EN_REG_IBI_THLD_STS_EN_Pos (2UL)        /*!< IBI_THLD_STS_EN (Bit 2)                               */
#define I3C_I3C_INTR_STATUS_EN_REG_IBI_THLD_STS_EN_Msk (0x4UL)      /*!< IBI_THLD_STS_EN (Bitfield-Mask: 0x01)                 */
#define I3C_I3C_INTR_STATUS_EN_REG_RX_THLD_STS_EN_Pos (1UL)         /*!< RX_THLD_STS_EN (Bit 1)                                */
#define I3C_I3C_INTR_STATUS_EN_REG_RX_THLD_STS_EN_Msk (0x2UL)       /*!< RX_THLD_STS_EN (Bitfield-Mask: 0x01)                  */
#define I3C_I3C_INTR_STATUS_EN_REG_TX_THLD_STS_EN_Pos (0UL)         /*!< TX_THLD_STS_EN (Bit 0)                                */
#define I3C_I3C_INTR_STATUS_EN_REG_TX_THLD_STS_EN_Msk (0x1UL)       /*!< TX_THLD_STS_EN (Bitfield-Mask: 0x01)                  */
/* ==================================================  I3C_INTR_STATUS_REG  ================================================== */
#define I3C_I3C_INTR_STATUS_REG_TRANSFER_ERR_STS_Pos (9UL)          /*!< TRANSFER_ERR_STS (Bit 9)                              */
#define I3C_I3C_INTR_STATUS_REG_TRANSFER_ERR_STS_Msk (0x200UL)      /*!< TRANSFER_ERR_STS (Bitfield-Mask: 0x01)                */
#define I3C_I3C_INTR_STATUS_REG_TRANSFER_ABORT_STS_Pos (5UL)        /*!< TRANSFER_ABORT_STS (Bit 5)                            */
#define I3C_I3C_INTR_STATUS_REG_TRANSFER_ABORT_STS_Msk (0x20UL)     /*!< TRANSFER_ABORT_STS (Bitfield-Mask: 0x01)              */
#define I3C_I3C_INTR_STATUS_REG_RESP_READY_STS_Pos (4UL)            /*!< RESP_READY_STS (Bit 4)                                */
#define I3C_I3C_INTR_STATUS_REG_RESP_READY_STS_Msk (0x10UL)         /*!< RESP_READY_STS (Bitfield-Mask: 0x01)                  */
#define I3C_I3C_INTR_STATUS_REG_CMD_QUEUE_READY_STS_Pos (3UL)       /*!< CMD_QUEUE_READY_STS (Bit 3)                           */
#define I3C_I3C_INTR_STATUS_REG_CMD_QUEUE_READY_STS_Msk (0x8UL)     /*!< CMD_QUEUE_READY_STS (Bitfield-Mask: 0x01)             */
#define I3C_I3C_INTR_STATUS_REG_IBI_THLD_STS_Pos (2UL)              /*!< IBI_THLD_STS (Bit 2)                                  */
#define I3C_I3C_INTR_STATUS_REG_IBI_THLD_STS_Msk (0x4UL)            /*!< IBI_THLD_STS (Bitfield-Mask: 0x01)                    */
#define I3C_I3C_INTR_STATUS_REG_RX_THLD_STS_Pos (1UL)               /*!< RX_THLD_STS (Bit 1)                                   */
#define I3C_I3C_INTR_STATUS_REG_RX_THLD_STS_Msk (0x2UL)             /*!< RX_THLD_STS (Bitfield-Mask: 0x01)                     */
#define I3C_I3C_INTR_STATUS_REG_TX_THLD_STS_Pos (0UL)               /*!< TX_THLD_STS (Bit 0)                                   */
#define I3C_I3C_INTR_STATUS_REG_TX_THLD_STS_Msk (0x1UL)             /*!< TX_THLD_STS (Bitfield-Mask: 0x01)                     */
/* =================================================  I3C_PRESENT_STATE_REG  ================================================= */
#define I3C_I3C_PRESENT_STATE_REG_MASTER_IDLE_Pos (28UL)            /*!< MASTER_IDLE (Bit 28)                                  */
#define I3C_I3C_PRESENT_STATE_REG_MASTER_IDLE_Msk (0x10000000UL)    /*!< MASTER_IDLE (Bitfield-Mask: 0x01)                     */
#define I3C_I3C_PRESENT_STATE_REG_CMD_TID_Pos (24UL)                /*!< CMD_TID (Bit 24)                                      */
#define I3C_I3C_PRESENT_STATE_REG_CMD_TID_Msk (0xf000000UL)         /*!< CMD_TID (Bitfield-Mask: 0x0f)                         */
#define I3C_I3C_PRESENT_STATE_REG_CM_TFR_ST_STS_Pos (16UL)          /*!< CM_TFR_ST_STS (Bit 16)                                */
#define I3C_I3C_PRESENT_STATE_REG_CM_TFR_ST_STS_Msk (0x3f0000UL)    /*!< CM_TFR_ST_STS (Bitfield-Mask: 0x3f)                   */
#define I3C_I3C_PRESENT_STATE_REG_CM_TFR_STS_Pos (8UL)              /*!< CM_TFR_STS (Bit 8)                                    */
#define I3C_I3C_PRESENT_STATE_REG_CM_TFR_STS_Msk (0x3f00UL)         /*!< CM_TFR_STS (Bitfield-Mask: 0x3f)                      */
#define I3C_I3C_PRESENT_STATE_REG_CURRENT_MASTER_Pos (2UL)          /*!< CURRENT_MASTER (Bit 2)                                */
#define I3C_I3C_PRESENT_STATE_REG_CURRENT_MASTER_Msk (0x4UL)        /*!< CURRENT_MASTER (Bitfield-Mask: 0x01)                  */
#define I3C_I3C_PRESENT_STATE_REG_SDA_LINE_SIGNAL_LEVEL_Pos (1UL)   /*!< SDA_LINE_SIGNAL_LEVEL (Bit 1)                         */
#define I3C_I3C_PRESENT_STATE_REG_SDA_LINE_SIGNAL_LEVEL_Msk (0x2UL) /*!< SDA_LINE_SIGNAL_LEVEL (Bitfield-Mask: 0x01)           */
#define I3C_I3C_PRESENT_STATE_REG_SCL_LINE_SIGNAL_LEVEL_Pos (0UL)   /*!< SCL_LINE_SIGNAL_LEVEL (Bit 0)                         */
#define I3C_I3C_PRESENT_STATE_REG_SCL_LINE_SIGNAL_LEVEL_Msk (0x1UL) /*!< SCL_LINE_SIGNAL_LEVEL (Bitfield-Mask: 0x01)           */
/* =============================================  I3C_QUEUE_SIZE_CAPABILITY_REG  ============================================= */
#define I3C_I3C_QUEUE_SIZE_CAPABILITY_REG_IBI_BUF_SIZE_Pos (16UL)   /*!< IBI_BUF_SIZE (Bit 16)                                 */
#define I3C_I3C_QUEUE_SIZE_CAPABILITY_REG_IBI_BUF_SIZE_Msk (0xf0000UL) /*!< IBI_BUF_SIZE (Bitfield-Mask: 0x0f)                 */
#define I3C_I3C_QUEUE_SIZE_CAPABILITY_REG_RESP_BUF_SIZE_Pos (12UL)  /*!< RESP_BUF_SIZE (Bit 12)                                */
#define I3C_I3C_QUEUE_SIZE_CAPABILITY_REG_RESP_BUF_SIZE_Msk (0xf000UL) /*!< RESP_BUF_SIZE (Bitfield-Mask: 0x0f)                */
#define I3C_I3C_QUEUE_SIZE_CAPABILITY_REG_CMD_BUF_SIZE_Pos (8UL)    /*!< CMD_BUF_SIZE (Bit 8)                                  */
#define I3C_I3C_QUEUE_SIZE_CAPABILITY_REG_CMD_BUF_SIZE_Msk (0xf00UL) /*!< CMD_BUF_SIZE (Bitfield-Mask: 0x0f)                   */
#define I3C_I3C_QUEUE_SIZE_CAPABILITY_REG_RX_BUF_SIZE_Pos (4UL)     /*!< RX_BUF_SIZE (Bit 4)                                   */
#define I3C_I3C_QUEUE_SIZE_CAPABILITY_REG_RX_BUF_SIZE_Msk (0xf0UL)  /*!< RX_BUF_SIZE (Bitfield-Mask: 0x0f)                     */
#define I3C_I3C_QUEUE_SIZE_CAPABILITY_REG_TX_BUF_SIZE_Pos (0UL)     /*!< TX_BUF_SIZE (Bit 0)                                   */
#define I3C_I3C_QUEUE_SIZE_CAPABILITY_REG_TX_BUF_SIZE_Msk (0xfUL)   /*!< TX_BUF_SIZE (Bitfield-Mask: 0x0f)                     */
/* ==============================================  I3C_QUEUE_STATUS_LEVEL_REG  =============================================== */
#define I3C_I3C_QUEUE_STATUS_LEVEL_REG_IBI_STS_CNT_Pos (24UL)       /*!< IBI_STS_CNT (Bit 24)                                  */
#define I3C_I3C_QUEUE_STATUS_LEVEL_REG_IBI_STS_CNT_Msk (0x1f000000UL) /*!< IBI_STS_CNT (Bitfield-Mask: 0x1f)                   */
#define I3C_I3C_QUEUE_STATUS_LEVEL_REG_IBI_BUF_BLR_Pos (16UL)       /*!< IBI_BUF_BLR (Bit 16)                                  */
#define I3C_I3C_QUEUE_STATUS_LEVEL_REG_IBI_BUF_BLR_Msk (0xff0000UL) /*!< IBI_BUF_BLR (Bitfield-Mask: 0xff)                     */
#define I3C_I3C_QUEUE_STATUS_LEVEL_REG_RESP_BUF_BLR_Pos (8UL)       /*!< RESP_BUF_BLR (Bit 8)                                  */
#define I3C_I3C_QUEUE_STATUS_LEVEL_REG_RESP_BUF_BLR_Msk (0xff00UL)  /*!< RESP_BUF_BLR (Bitfield-Mask: 0xff)                    */
#define I3C_I3C_QUEUE_STATUS_LEVEL_REG_CMD_QUEUE_EMPTY_LOC_Pos (0UL) /*!< CMD_QUEUE_EMPTY_LOC (Bit 0)                          */
#define I3C_I3C_QUEUE_STATUS_LEVEL_REG_CMD_QUEUE_EMPTY_LOC_Msk (0xffUL) /*!< CMD_QUEUE_EMPTY_LOC (Bitfield-Mask: 0xff)         */
/* ================================================  I3C_QUEUE_THLD_CTRL_REG  ================================================ */
#define I3C_I3C_QUEUE_THLD_CTRL_REG_IBI_STATUS_THLD_Pos (24UL)      /*!< IBI_STATUS_THLD (Bit 24)                              */
#define I3C_I3C_QUEUE_THLD_CTRL_REG_IBI_STATUS_THLD_Msk (0xff000000UL) /*!< IBI_STATUS_THLD (Bitfield-Mask: 0xff)              */
#define I3C_I3C_QUEUE_THLD_CTRL_REG_RESP_BUF_THLD_Pos (8UL)         /*!< RESP_BUF_THLD (Bit 8)                                 */
#define I3C_I3C_QUEUE_THLD_CTRL_REG_RESP_BUF_THLD_Msk (0xff00UL)    /*!< RESP_BUF_THLD (Bitfield-Mask: 0xff)                   */
#define I3C_I3C_QUEUE_THLD_CTRL_REG_CMD_EMPTY_BUF_THLD_Pos (0UL)    /*!< CMD_EMPTY_BUF_THLD (Bit 0)                            */
#define I3C_I3C_QUEUE_THLD_CTRL_REG_CMD_EMPTY_BUF_THLD_Msk (0xffUL) /*!< CMD_EMPTY_BUF_THLD (Bitfield-Mask: 0xff)              */
/* ==================================================  I3C_RESET_CTRL_REG  =================================================== */
#define I3C_I3C_RESET_CTRL_REG_IBI_QUEUE_RST_Pos (5UL)              /*!< IBI_QUEUE_RST (Bit 5)                                 */
#define I3C_I3C_RESET_CTRL_REG_IBI_QUEUE_RST_Msk (0x20UL)           /*!< IBI_QUEUE_RST (Bitfield-Mask: 0x01)                   */
#define I3C_I3C_RESET_CTRL_REG_RX_FIFO_RST_Pos (4UL)                /*!< RX_FIFO_RST (Bit 4)                                   */
#define I3C_I3C_RESET_CTRL_REG_RX_FIFO_RST_Msk (0x10UL)             /*!< RX_FIFO_RST (Bitfield-Mask: 0x01)                     */
#define I3C_I3C_RESET_CTRL_REG_TX_FIFO_RST_Pos (3UL)                /*!< TX_FIFO_RST (Bit 3)                                   */
#define I3C_I3C_RESET_CTRL_REG_TX_FIFO_RST_Msk (0x8UL)              /*!< TX_FIFO_RST (Bitfield-Mask: 0x01)                     */
#define I3C_I3C_RESET_CTRL_REG_RESP_QUEUE_RST_Pos (2UL)             /*!< RESP_QUEUE_RST (Bit 2)                                */
#define I3C_I3C_RESET_CTRL_REG_RESP_QUEUE_RST_Msk (0x4UL)           /*!< RESP_QUEUE_RST (Bitfield-Mask: 0x01)                  */
#define I3C_I3C_RESET_CTRL_REG_CMD_QUEUE_RST_Pos (1UL)              /*!< CMD_QUEUE_RST (Bit 1)                                 */
#define I3C_I3C_RESET_CTRL_REG_CMD_QUEUE_RST_Msk (0x2UL)            /*!< CMD_QUEUE_RST (Bitfield-Mask: 0x01)                   */
#define I3C_I3C_RESET_CTRL_REG_SOFT_RST_Pos (0UL)                   /*!< SOFT_RST (Bit 0)                                      */
#define I3C_I3C_RESET_CTRL_REG_SOFT_RST_Msk (0x1UL)                 /*!< SOFT_RST (Bitfield-Mask: 0x01)                        */
/* ==============================================  I3C_RESPONSE_QUEUE_PORT_REG  ============================================== */
#define I3C_I3C_RESPONSE_QUEUE_PORT_REG_RESPONSE_Pos (0UL)          /*!< RESPONSE (Bit 0)                                      */
#define I3C_I3C_RESPONSE_QUEUE_PORT_REG_RESPONSE_Msk (0xffffffffUL) /*!< RESPONSE (Bitfield-Mask: 0xffffffff)                  */
/* ================================================  I3C_RX_TX_DATA_PORT_REG  ================================================ */
#define I3C_I3C_RX_TX_DATA_PORT_REG_RX_TX_DATA_PORT_Pos (0UL)       /*!< RX_TX_DATA_PORT (Bit 0)                               */
#define I3C_I3C_RX_TX_DATA_PORT_REG_RX_TX_DATA_PORT_Msk (0xffffffffUL) /*!< RX_TX_DATA_PORT (Bitfield-Mask: 0xffffffff)        */
/* ==============================================  I3C_SCL_EXT_LCNT_TIMING_REG  ============================================== */
#define I3C_I3C_SCL_EXT_LCNT_TIMING_REG_I3C_EXT_LCNT_4_Pos (24UL)   /*!< I3C_EXT_LCNT_4 (Bit 24)                               */
#define I3C_I3C_SCL_EXT_LCNT_TIMING_REG_I3C_EXT_LCNT_4_Msk (0xff000000UL) /*!< I3C_EXT_LCNT_4 (Bitfield-Mask: 0xff)            */
#define I3C_I3C_SCL_EXT_LCNT_TIMING_REG_I3C_EXT_LCNT_3_Pos (16UL)   /*!< I3C_EXT_LCNT_3 (Bit 16)                               */
#define I3C_I3C_SCL_EXT_LCNT_TIMING_REG_I3C_EXT_LCNT_3_Msk (0xff0000UL) /*!< I3C_EXT_LCNT_3 (Bitfield-Mask: 0xff)              */
#define I3C_I3C_SCL_EXT_LCNT_TIMING_REG_I3C_EXT_LCNT_2_Pos (8UL)    /*!< I3C_EXT_LCNT_2 (Bit 8)                                */
#define I3C_I3C_SCL_EXT_LCNT_TIMING_REG_I3C_EXT_LCNT_2_Msk (0xff00UL) /*!< I3C_EXT_LCNT_2 (Bitfield-Mask: 0xff)                */
#define I3C_I3C_SCL_EXT_LCNT_TIMING_REG_I3C_EXT_LCNT_1_Pos (0UL)    /*!< I3C_EXT_LCNT_1 (Bit 0)                                */
#define I3C_I3C_SCL_EXT_LCNT_TIMING_REG_I3C_EXT_LCNT_1_Msk (0xffUL) /*!< I3C_EXT_LCNT_1 (Bitfield-Mask: 0xff)                  */
/* ============================================  I3C_SCL_EXT_TERMN_LCNT_TIME_REG  ============================================ */
#define I3C_I3C_SCL_EXT_TERMN_LCNT_TIME_REG_I3C_EXT_TERMN_LCNT_Pos (0UL) /*!< I3C_EXT_TERMN_LCNT (Bit 0)                       */
#define I3C_I3C_SCL_EXT_TERMN_LCNT_TIME_REG_I3C_EXT_TERMN_LCNT_Msk (0xfUL) /*!< I3C_EXT_TERMN_LCNT (Bitfield-Mask: 0x0f)       */
/* ==============================================  I3C_SCL_I2C_FMP_TIMING_REG  =============================================== */
#define I3C_I3C_SCL_I2C_FMP_TIMING_REG_I2C_FMP_HCNT_Pos (16UL)      /*!< I2C_FMP_HCNT (Bit 16)                                 */
#define I3C_I3C_SCL_I2C_FMP_TIMING_REG_I2C_FMP_HCNT_Msk (0xff0000UL) /*!< I2C_FMP_HCNT (Bitfield-Mask: 0xff)                   */
#define I3C_I3C_SCL_I2C_FMP_TIMING_REG_I2C_FMP_LCNT_Pos (0UL)       /*!< I2C_FMP_LCNT (Bit 0)                                  */
#define I3C_I3C_SCL_I2C_FMP_TIMING_REG_I2C_FMP_LCNT_Msk (0xffffUL)  /*!< I2C_FMP_LCNT (Bitfield-Mask: 0xffff)                  */
/* ===============================================  I3C_SCL_I2C_FM_TIMING_REG  =============================================== */
#define I3C_I3C_SCL_I2C_FM_TIMING_REG_I2C_FM_HCNT_Pos (16UL)        /*!< I2C_FM_HCNT (Bit 16)                                  */
#define I3C_I3C_SCL_I2C_FM_TIMING_REG_I2C_FM_HCNT_Msk (0xffff0000UL) /*!< I2C_FM_HCNT (Bitfield-Mask: 0xffff)                  */
#define I3C_I3C_SCL_I2C_FM_TIMING_REG_I2C_FM_LCNT_Pos (0UL)         /*!< I2C_FM_LCNT (Bit 0)                                   */
#define I3C_I3C_SCL_I2C_FM_TIMING_REG_I2C_FM_LCNT_Msk (0xffffUL)    /*!< I2C_FM_LCNT (Bitfield-Mask: 0xffff)                   */
/* ===============================================  I3C_SCL_I3C_OD_TIMING_REG  =============================================== */
#define I3C_I3C_SCL_I3C_OD_TIMING_REG_I3C_OD_HCNT_Pos (16UL)        /*!< I3C_OD_HCNT (Bit 16)                                  */
#define I3C_I3C_SCL_I3C_OD_TIMING_REG_I3C_OD_HCNT_Msk (0xff0000UL)  /*!< I3C_OD_HCNT (Bitfield-Mask: 0xff)                     */
#define I3C_I3C_SCL_I3C_OD_TIMING_REG_I3C_OD_LCNT_Pos (0UL)         /*!< I3C_OD_LCNT (Bit 0)                                   */
#define I3C_I3C_SCL_I3C_OD_TIMING_REG_I3C_OD_LCNT_Msk (0xffUL)      /*!< I3C_OD_LCNT (Bitfield-Mask: 0xff)                     */
/* ===============================================  I3C_SCL_I3C_PP_TIMING_REG  =============================================== */
#define I3C_I3C_SCL_I3C_PP_TIMING_REG_I3C_PP_HCNT_Pos (16UL)        /*!< I3C_PP_HCNT (Bit 16)                                  */
#define I3C_I3C_SCL_I3C_PP_TIMING_REG_I3C_PP_HCNT_Msk (0xff0000UL)  /*!< I3C_PP_HCNT (Bitfield-Mask: 0xff)                     */
#define I3C_I3C_SCL_I3C_PP_TIMING_REG_I3C_PP_LCNT_Pos (0UL)         /*!< I3C_PP_LCNT (Bit 0)                                   */
#define I3C_I3C_SCL_I3C_PP_TIMING_REG_I3C_PP_LCNT_Msk (0xffUL)      /*!< I3C_PP_LCNT (Bitfield-Mask: 0xff)                     */
/* ==============================================  I3C_SDA_HOLD_DLY_TIMING_REG  ============================================== */
#define I3C_I3C_SDA_HOLD_DLY_TIMING_REG_SDA_TX_HOLD_Pos (16UL)      /*!< SDA_TX_HOLD (Bit 16)                                  */
#define I3C_I3C_SDA_HOLD_DLY_TIMING_REG_SDA_TX_HOLD_Msk (0x70000UL) /*!< SDA_TX_HOLD (Bitfield-Mask: 0x07)                     */
/* ===============================================  I3C_SLV_EVENT_STATUS_REG  ================================================ */
#define I3C_I3C_SLV_EVENT_STATUS_REG_MWL_UPDATED_Pos (7UL)          /*!< MWL_UPDATED (Bit 7)                                   */
#define I3C_I3C_SLV_EVENT_STATUS_REG_MWL_UPDATED_Msk (0x80UL)       /*!< MWL_UPDATED (Bitfield-Mask: 0x01)                     */
#define I3C_I3C_SLV_EVENT_STATUS_REG_MRL_UPDATED_Pos (6UL)          /*!< MRL_UPDATED (Bit 6)                                   */
#define I3C_I3C_SLV_EVENT_STATUS_REG_MRL_UPDATED_Msk (0x40UL)       /*!< MRL_UPDATED (Bitfield-Mask: 0x01)                     */
#define I3C_I3C_SLV_EVENT_STATUS_REG_ACTIVITY_STATE_Pos (4UL)       /*!< ACTIVITY_STATE (Bit 4)                                */
#define I3C_I3C_SLV_EVENT_STATUS_REG_ACTIVITY_STATE_Msk (0x30UL)    /*!< ACTIVITY_STATE (Bitfield-Mask: 0x03)                  */
/* ============================================  I3C_VENDOR_SPECIFIC_REG_PTR_REG  ============================================ */
#define I3C_I3C_VENDOR_SPECIFIC_REG_PTR_REG_P_VENDOR_REG_START_ADDR_Pos (0UL) /*!< P_VENDOR_REG_START_ADDR (Bit 0)             */
#define I3C_I3C_VENDOR_SPECIFIC_REG_PTR_REG_P_VENDOR_REG_START_ADDR_Msk (0xffffUL) /*!< P_VENDOR_REG_START_ADDR (Bitfield-Mask: 0xffff) */
/* ====================================================  I3C_VER_ID_REG  ===================================================== */
#define I3C_I3C_VER_ID_REG_I3C_VER_ID_Pos (0UL)                     /*!< I3C_VER_ID (Bit 0)                                    */
#define I3C_I3C_VER_ID_REG_I3C_VER_ID_Msk (0xffffffffUL)            /*!< I3C_VER_ID (Bitfield-Mask: 0xffffffff)                */
/* ===================================================  I3C_VER_TYPE_REG  ==================================================== */
#define I3C_I3C_VER_TYPE_REG_I3C_VER_TYPE_Pos (0UL)                 /*!< I3C_VER_TYPE (Bit 0)                                  */
#define I3C_I3C_VER_TYPE_REG_I3C_VER_TYPE_Msk (0xffffffffUL)        /*!< I3C_VER_TYPE (Bitfield-Mask: 0xffffffff)              */


/* =========================================================================================================================== */
/* ================                                           LCDC                                            ================ */
/* =========================================================================================================================== */

/* =================================================  LCDC_BACKPORCHXY_REG  ================================================== */
#define LCDC_LCDC_BACKPORCHXY_REG_BPORCH_X_Pos (16UL)               /*!< BPORCH_X (Bit 16)                                     */
#define LCDC_LCDC_BACKPORCHXY_REG_BPORCH_X_Msk (0xffff0000UL)       /*!< BPORCH_X (Bitfield-Mask: 0xffff)                      */
#define LCDC_LCDC_BACKPORCHXY_REG_BPORCH_Y_Pos (0UL)                /*!< BPORCH_Y (Bit 0)                                      */
#define LCDC_LCDC_BACKPORCHXY_REG_BPORCH_Y_Msk (0xffffUL)           /*!< BPORCH_Y (Bitfield-Mask: 0xffff)                      */
/* ===================================================  LCDC_BGCOLOR_REG  ==================================================== */
#define LCDC_LCDC_BGCOLOR_REG_BG_RED_Pos  (24UL)                    /*!< BG_RED (Bit 24)                                       */
#define LCDC_LCDC_BGCOLOR_REG_BG_RED_Msk  (0xff000000UL)            /*!< BG_RED (Bitfield-Mask: 0xff)                          */
#define LCDC_LCDC_BGCOLOR_REG_BG_GREEN_Pos (16UL)                   /*!< BG_GREEN (Bit 16)                                     */
#define LCDC_LCDC_BGCOLOR_REG_BG_GREEN_Msk (0xff0000UL)             /*!< BG_GREEN (Bitfield-Mask: 0xff)                        */
#define LCDC_LCDC_BGCOLOR_REG_BG_BLUE_Pos (8UL)                     /*!< BG_BLUE (Bit 8)                                       */
#define LCDC_LCDC_BGCOLOR_REG_BG_BLUE_Msk (0xff00UL)                /*!< BG_BLUE (Bitfield-Mask: 0xff)                         */
#define LCDC_LCDC_BGCOLOR_REG_BG_ALPHA_Pos (0UL)                    /*!< BG_ALPHA (Bit 0)                                      */
#define LCDC_LCDC_BGCOLOR_REG_BG_ALPHA_Msk (0xffUL)                 /*!< BG_ALPHA (Bitfield-Mask: 0xff)                        */
/* ==================================================  LCDC_BLANKINGXY_REG  ================================================== */
#define LCDC_LCDC_BLANKINGXY_REG_BLANKING_X_Pos (16UL)              /*!< BLANKING_X (Bit 16)                                   */
#define LCDC_LCDC_BLANKINGXY_REG_BLANKING_X_Msk (0xffff0000UL)      /*!< BLANKING_X (Bitfield-Mask: 0xffff)                    */
#define LCDC_LCDC_BLANKINGXY_REG_BLANKING_Y_Pos (0UL)               /*!< BLANKING_Y (Bit 0)                                    */
#define LCDC_LCDC_BLANKINGXY_REG_BLANKING_Y_Msk (0xffffUL)          /*!< BLANKING_Y (Bitfield-Mask: 0xffff)                    */
/* ==================================================  LCDC_CLKCTRL_CG_REG  ================================================== */
#define LCDC_LCDC_CLKCTRL_CG_REG_LCDC_SWAP_PIX_FORMAT_CLK_Pos (2UL) /*!< LCDC_SWAP_PIX_FORMAT_CLK (Bit 2)                      */
#define LCDC_LCDC_CLKCTRL_CG_REG_LCDC_SWAP_PIX_FORMAT_CLK_Msk (0x4UL) /*!< LCDC_SWAP_PIX_FORMAT_CLK (Bitfield-Mask: 0x01)      */
#define LCDC_LCDC_CLKCTRL_CG_REG_LCDC_INV_CLK_POLARITY_Pos (1UL)    /*!< LCDC_INV_CLK_POLARITY (Bit 1)                         */
#define LCDC_LCDC_CLKCTRL_CG_REG_LCDC_INV_CLK_POLARITY_Msk (0x2UL)  /*!< LCDC_INV_CLK_POLARITY (Bitfield-Mask: 0x01)           */
/* ===================================================  LCDC_CLKCTRL_REG  ==================================================== */
#define LCDC_LCDC_CLKCTRL_REG_SEC_CLK_DIV_Pos (27UL)                /*!< SEC_CLK_DIV (Bit 27)                                  */
#define LCDC_LCDC_CLKCTRL_REG_SEC_CLK_DIV_Msk (0xf8000000UL)        /*!< SEC_CLK_DIV (Bitfield-Mask: 0x1f)                     */
#define LCDC_LCDC_CLKCTRL_REG_DMA_HOLD_Pos (8UL)                    /*!< DMA_HOLD (Bit 8)                                      */
#define LCDC_LCDC_CLKCTRL_REG_DMA_HOLD_Msk (0x3f00UL)               /*!< DMA_HOLD (Bitfield-Mask: 0x3f)                        */
#define LCDC_LCDC_CLKCTRL_REG_CLK_DIV_Pos (0UL)                     /*!< CLK_DIV (Bit 0)                                       */
#define LCDC_LCDC_CLKCTRL_REG_CLK_DIV_Msk (0x3fUL)                  /*!< CLK_DIV (Bitfield-Mask: 0x3f)                         */
/* ====================================================  LCDC_COLMOD_REG  ==================================================== */
#define LCDC_LCDC_COLMOD_REG_COLMODES_Pos (0UL)                     /*!< COLMODES (Bit 0)                                      */
#define LCDC_LCDC_COLMOD_REG_COLMODES_Msk (0x1ffffUL)               /*!< COLMODES (Bitfield-Mask: 0x1ffff)                     */
/* =====================================================  LCDC_CONF_REG  ===================================================== */
#define LCDC_LCDC_CONF_REG_CONF_Pos       (0UL)                     /*!< CONF (Bit 0)                                          */
#define LCDC_LCDC_CONF_REG_CONF_Msk       (0xffffffffUL)            /*!< CONF (Bitfield-Mask: 0xffffffff)                      */
/* =====================================================  LCDC_CRC_REG  ====================================================== */
#define LCDC_LCDC_CRC_REG_CRC_Pos         (0UL)                     /*!< CRC (Bit 0)                                           */
#define LCDC_LCDC_CRC_REG_CRC_Msk         (0xffffffffUL)            /*!< CRC (Bitfield-Mask: 0xffffffff)                       */
/* ===================================================  LCDC_DBIB_CFG_REG  =================================================== */
#define LCDC_LCDC_DBIB_CFG_REG_DBIB_INTERFACE_EN_Pos (31UL)         /*!< DBIB_INTERFACE_EN (Bit 31)                            */
#define LCDC_LCDC_DBIB_CFG_REG_DBIB_INTERFACE_EN_Msk (0x80000000UL) /*!< DBIB_INTERFACE_EN (Bitfield-Mask: 0x01)               */
#define LCDC_LCDC_DBIB_CFG_REG_DBIB_CSX_CFG_EN_Pos (30UL)           /*!< DBIB_CSX_CFG_EN (Bit 30)                              */
#define LCDC_LCDC_DBIB_CFG_REG_DBIB_CSX_CFG_EN_Msk (0x40000000UL)   /*!< DBIB_CSX_CFG_EN (Bitfield-Mask: 0x01)                 */
#define LCDC_LCDC_DBIB_CFG_REG_DBIB_CSX_CFG_Pos (29UL)              /*!< DBIB_CSX_CFG (Bit 29)                                 */
#define LCDC_LCDC_DBIB_CFG_REG_DBIB_CSX_CFG_Msk (0x20000000UL)      /*!< DBIB_CSX_CFG (Bitfield-Mask: 0x01)                    */
#define LCDC_LCDC_DBIB_CFG_REG_DBIB_TE_DISABLE_Pos (28UL)           /*!< DBIB_TE_DISABLE (Bit 28)                              */
#define LCDC_LCDC_DBIB_CFG_REG_DBIB_TE_DISABLE_Msk (0x10000000UL)   /*!< DBIB_TE_DISABLE (Bitfield-Mask: 0x01)                 */
#define LCDC_LCDC_DBIB_CFG_REG_SPI_DC_AS_SPI_SD1_Pos (27UL)         /*!< SPI_DC_AS_SPI_SD1 (Bit 27)                            */
#define LCDC_LCDC_DBIB_CFG_REG_SPI_DC_AS_SPI_SD1_Msk (0x8000000UL)  /*!< SPI_DC_AS_SPI_SD1 (Bitfield-Mask: 0x01)               */
#define LCDC_LCDC_DBIB_CFG_REG_DBIB_FORCE_IDLE_Pos (26UL)           /*!< DBIB_FORCE_IDLE (Bit 26)                              */
#define LCDC_LCDC_DBIB_CFG_REG_DBIB_FORCE_IDLE_Msk (0x4000000UL)    /*!< DBIB_FORCE_IDLE (Bitfield-Mask: 0x01)                 */
#define LCDC_LCDC_DBIB_CFG_REG_DBIB_RESX_OUT_EN_Pos (25UL)          /*!< DBIB_RESX_OUT_EN (Bit 25)                             */
#define LCDC_LCDC_DBIB_CFG_REG_DBIB_RESX_OUT_EN_Msk (0x2000000UL)   /*!< DBIB_RESX_OUT_EN (Bitfield-Mask: 0x01)                */
#define LCDC_LCDC_DBIB_CFG_REG_SUB_PIXEL_REVERSE_Pos (24UL)         /*!< SUB_PIXEL_REVERSE (Bit 24)                            */
#define LCDC_LCDC_DBIB_CFG_REG_SUB_PIXEL_REVERSE_Msk (0x1000000UL)  /*!< SUB_PIXEL_REVERSE (Bitfield-Mask: 0x01)               */
#define LCDC_LCDC_DBIB_CFG_REG_SPI3_EN_Pos (23UL)                   /*!< SPI3_EN (Bit 23)                                      */
#define LCDC_LCDC_DBIB_CFG_REG_SPI3_EN_Msk (0x800000UL)             /*!< SPI3_EN (Bitfield-Mask: 0x01)                         */
#define LCDC_LCDC_DBIB_CFG_REG_SPI4_EN_Pos (22UL)                   /*!< SPI4_EN (Bit 22)                                      */
#define LCDC_LCDC_DBIB_CFG_REG_SPI4_EN_Msk (0x400000UL)             /*!< SPI4_EN (Bitfield-Mask: 0x01)                         */
#define LCDC_LCDC_DBIB_CFG_REG_DBIB_BACK_PRESSURE_EN_Pos (21UL)     /*!< DBIB_BACK_PRESSURE_EN (Bit 21)                        */
#define LCDC_LCDC_DBIB_CFG_REG_DBIB_BACK_PRESSURE_EN_Msk (0x200000UL) /*!< DBIB_BACK_PRESSURE_EN (Bitfield-Mask: 0x01)         */
#define LCDC_LCDC_DBIB_CFG_REG_SPI_CLK_PHASE_Pos (20UL)             /*!< SPI_CLK_PHASE (Bit 20)                                */
#define LCDC_LCDC_DBIB_CFG_REG_SPI_CLK_PHASE_Msk (0x100000UL)       /*!< SPI_CLK_PHASE (Bitfield-Mask: 0x01)                   */
#define LCDC_LCDC_DBIB_CFG_REG_SPI_CLK_POLARITY_Pos (19UL)          /*!< SPI_CLK_POLARITY (Bit 19)                             */
#define LCDC_LCDC_DBIB_CFG_REG_SPI_CLK_POLARITY_Msk (0x80000UL)     /*!< SPI_CLK_POLARITY (Bitfield-Mask: 0x01)                */
#define LCDC_LCDC_DBIB_CFG_REG_SPID_JDI_Pos (18UL)                  /*!< SPID_JDI (Bit 18)                                     */
#define LCDC_LCDC_DBIB_CFG_REG_SPID_JDI_Msk (0x40000UL)             /*!< SPID_JDI (Bitfield-Mask: 0x01)                        */
#define LCDC_LCDC_DBIB_CFG_REG_CMD_DATA_AS_HEADER_Pos (17UL)        /*!< CMD_DATA_AS_HEADER (Bit 17)                           */
#define LCDC_LCDC_DBIB_CFG_REG_CMD_DATA_AS_HEADER_Msk (0x20000UL)   /*!< CMD_DATA_AS_HEADER (Bitfield-Mask: 0x01)              */
#define LCDC_LCDC_DBIB_CFG_REG_BIT_ORDER_ADDR_INVERT_Pos (16UL)     /*!< BIT_ORDER_ADDR_INVERT (Bit 16)                        */
#define LCDC_LCDC_DBIB_CFG_REG_BIT_ORDER_ADDR_INVERT_Msk (0x10000UL) /*!< BIT_ORDER_ADDR_INVERT (Bitfield-Mask: 0x01)          */
#define LCDC_LCDC_DBIB_CFG_REG_SPI_2BYTE_ADDR_Pos (15UL)            /*!< SPI_2BYTE_ADDR (Bit 15)                               */
#define LCDC_LCDC_DBIB_CFG_REG_SPI_2BYTE_ADDR_Msk (0x8000UL)        /*!< SPI_2BYTE_ADDR (Bitfield-Mask: 0x01)                  */
#define LCDC_LCDC_DBIB_CFG_REG_PIX_CLK_AT_DBIB_CLK_Pos (14UL)       /*!< PIX_CLK_AT_DBIB_CLK (Bit 14)                          */
#define LCDC_LCDC_DBIB_CFG_REG_PIX_CLK_AT_DBIB_CLK_Msk (0x4000UL)   /*!< PIX_CLK_AT_DBIB_CLK (Bitfield-Mask: 0x01)             */
#define LCDC_LCDC_DBIB_CFG_REG_EXT_CTRL_EN_Pos (13UL)               /*!< EXT_CTRL_EN (Bit 13)                                  */
#define LCDC_LCDC_DBIB_CFG_REG_EXT_CTRL_EN_Msk (0x2000UL)           /*!< EXT_CTRL_EN (Bitfield-Mask: 0x01)                     */
#define LCDC_LCDC_DBIB_CFG_REG_HORIZONTAL_BLANK_EN_Pos (12UL)       /*!< HORIZONTAL_BLANK_EN (Bit 12)                          */
#define LCDC_LCDC_DBIB_CFG_REG_HORIZONTAL_BLANK_EN_Msk (0x1000UL)   /*!< HORIZONTAL_BLANK_EN (Bitfield-Mask: 0x01)             */
#define LCDC_LCDC_DBIB_CFG_REG_DUAL_SPI_SUBPIXEL_EXTRACT_EN_Pos (11UL) /*!< DUAL_SPI_SUBPIXEL_EXTRACT_EN (Bit 11)              */
#define LCDC_LCDC_DBIB_CFG_REG_DUAL_SPI_SUBPIXEL_EXTRACT_EN_Msk (0x800UL) /*!< DUAL_SPI_SUBPIXEL_EXTRACT_EN (Bitfield-Mask: 0x01) */
#define LCDC_LCDC_DBIB_CFG_REG_QUAD_SPI_EN_Pos (10UL)               /*!< QUAD_SPI_EN (Bit 10)                                  */
#define LCDC_LCDC_DBIB_CFG_REG_QUAD_SPI_EN_Msk (0x400UL)            /*!< QUAD_SPI_EN (Bitfield-Mask: 0x01)                     */
#define LCDC_LCDC_DBIB_CFG_REG_DUAL_SPI_EN_Pos (9UL)                /*!< DUAL_SPI_EN (Bit 9)                                   */
#define LCDC_LCDC_DBIB_CFG_REG_DUAL_SPI_EN_Msk (0x200UL)            /*!< DUAL_SPI_EN (Bitfield-Mask: 0x01)                     */
#define LCDC_LCDC_DBIB_CFG_REG_DBIB_INTERFACE_WIDTH_Pos (6UL)       /*!< DBIB_INTERFACE_WIDTH (Bit 6)                          */
#define LCDC_LCDC_DBIB_CFG_REG_DBIB_INTERFACE_WIDTH_Msk (0x1c0UL)   /*!< DBIB_INTERFACE_WIDTH (Bitfield-Mask: 0x07)            */
#define LCDC_LCDC_DBIB_CFG_REG_DBIB_DATA_ORDER_Pos (3UL)            /*!< DBIB_DATA_ORDER (Bit 3)                               */
#define LCDC_LCDC_DBIB_CFG_REG_DBIB_DATA_ORDER_Msk (0x38UL)         /*!< DBIB_DATA_ORDER (Bitfield-Mask: 0x07)                 */
#define LCDC_LCDC_DBIB_CFG_REG_DBIB_COLOR_FMT_Pos (0UL)             /*!< DBIB_COLOR_FMT (Bit 0)                                */
#define LCDC_LCDC_DBIB_CFG_REG_DBIB_COLOR_FMT_Msk (0x7UL)           /*!< DBIB_COLOR_FMT (Bitfield-Mask: 0x07)                  */
/* ===================================================  LCDC_DBIB_CMD_REG  =================================================== */
#define LCDC_LCDC_DBIB_CMD_REG_PART_UPDATE_Pos (31UL)               /*!< PART_UPDATE (Bit 31)                                  */
#define LCDC_LCDC_DBIB_CMD_REG_PART_UPDATE_Msk (0x80000000UL)       /*!< PART_UPDATE (Bitfield-Mask: 0x01)                     */
#define LCDC_LCDC_DBIB_CMD_REG_DBIB_CMD_SEND_Pos (30UL)             /*!< DBIB_CMD_SEND (Bit 30)                                */
#define LCDC_LCDC_DBIB_CMD_REG_DBIB_CMD_SEND_Msk (0x40000000UL)     /*!< DBIB_CMD_SEND (Bitfield-Mask: 0x01)                   */
#define LCDC_LCDC_DBIB_CMD_REG_CMD_WIDTH_Pos (28UL)                 /*!< CMD_WIDTH (Bit 28)                                    */
#define LCDC_LCDC_DBIB_CMD_REG_CMD_WIDTH_Msk (0x30000000UL)         /*!< CMD_WIDTH (Bitfield-Mask: 0x03)                       */
#define LCDC_LCDC_DBIB_CMD_REG_QSPI_SERIAL_CMD_TRANS_Pos (27UL)     /*!< QSPI_SERIAL_CMD_TRANS (Bit 27)                        */
#define LCDC_LCDC_DBIB_CMD_REG_QSPI_SERIAL_CMD_TRANS_Msk (0x8000000UL) /*!< QSPI_SERIAL_CMD_TRANS (Bitfield-Mask: 0x01)        */
#define LCDC_LCDC_DBIB_CMD_REG_RD_MODE_EN_Pos (26UL)                /*!< RD_MODE_EN (Bit 26)                                   */
#define LCDC_LCDC_DBIB_CMD_REG_RD_MODE_EN_Msk (0x4000000UL)         /*!< RD_MODE_EN (Bitfield-Mask: 0x01)                      */
#define LCDC_LCDC_DBIB_CMD_REG_FMTCTRL_EXPOSE_SETTING_Pos (25UL)    /*!< FMTCTRL_EXPOSE_SETTING (Bit 25)                       */
#define LCDC_LCDC_DBIB_CMD_REG_FMTCTRL_EXPOSE_SETTING_Msk (0x2000000UL) /*!< FMTCTRL_EXPOSE_SETTING (Bitfield-Mask: 0x01)      */
#define LCDC_LCDC_DBIB_CMD_REG_ST_INT_CMD_TYPE_Pos (24UL)           /*!< ST_INT_CMD_TYPE (Bit 24)                              */
#define LCDC_LCDC_DBIB_CMD_REG_ST_INT_CMD_TYPE_Msk (0x1000000UL)    /*!< ST_INT_CMD_TYPE (Bitfield-Mask: 0x01)                 */
#define LCDC_LCDC_DBIB_CMD_REG_DBIB_CMD_VAL_Pos (0UL)               /*!< DBIB_CMD_VAL (Bit 0)                                  */
#define LCDC_LCDC_DBIB_CMD_REG_DBIB_CMD_VAL_Msk (0xffffUL)          /*!< DBIB_CMD_VAL (Bitfield-Mask: 0xffff)                  */
/* ==================================================  LCDC_DBIB_RDAT_REG  =================================================== */
#define LCDC_LCDC_DBIB_RDAT_REG_DBIB_RDAT_Pos (0UL)                 /*!< DBIB_RDAT (Bit 0)                                     */
#define LCDC_LCDC_DBIB_RDAT_REG_DBIB_RDAT_Msk (0xffffffffUL)        /*!< DBIB_RDAT (Bitfield-Mask: 0xffffffff)                 */
/* ==================================================  LCDC_FMTCTRL_2_REG  =================================================== */
#define LCDC_LCDC_FMTCTRL_2_REG_FMTCTRL_2_Pos (0UL)                 /*!< FMTCTRL_2 (Bit 0)                                     */
#define LCDC_LCDC_FMTCTRL_2_REG_FMTCTRL_2_Msk (0xffffffffUL)        /*!< FMTCTRL_2 (Bitfield-Mask: 0xffffffff)                 */
/* ==================================================  LCDC_FMTCTRL_3_REG  =================================================== */
#define LCDC_LCDC_FMTCTRL_3_REG_XRST_HIGH_STATE_Pos (0UL)           /*!< XRST_HIGH_STATE (Bit 0)                               */
#define LCDC_LCDC_FMTCTRL_3_REG_XRST_HIGH_STATE_Msk (0x3ffUL)       /*!< XRST_HIGH_STATE (Bitfield-Mask: 0x3ff)                */
/* ===================================================  LCDC_FMTCTRL_REG  ==================================================== */
#define LCDC_LCDC_FMTCTRL_REG_FMTCTRL_Pos (0UL)                     /*!< FMTCTRL (Bit 0)                                       */
#define LCDC_LCDC_FMTCTRL_REG_FMTCTRL_Msk (0xffffffffUL)            /*!< FMTCTRL (Bitfield-Mask: 0xffffffff)                   */
/* =================================================  LCDC_FRONTPORCHXY_REG  ================================================= */
#define LCDC_LCDC_FRONTPORCHXY_REG_FPORCH_X_Pos (16UL)              /*!< FPORCH_X (Bit 16)                                     */
#define LCDC_LCDC_FRONTPORCHXY_REG_FPORCH_X_Msk (0xffff0000UL)      /*!< FPORCH_X (Bitfield-Mask: 0xffff)                      */
#define LCDC_LCDC_FRONTPORCHXY_REG_FPORCH_Y_Pos (0UL)               /*!< FPORCH_Y (Bit 0)                                      */
#define LCDC_LCDC_FRONTPORCHXY_REG_FPORCH_Y_Msk (0xffffUL)          /*!< FPORCH_Y (Bitfield-Mask: 0xffff)                      */
/* =====================================================  LCDC_GPIO_REG  ===================================================== */
#define LCDC_LCDC_GPIO_REG_DPI_CM_ASSERT_Pos (16UL)                 /*!< DPI_CM_ASSERT (Bit 16)                                */
#define LCDC_LCDC_GPIO_REG_DPI_CM_ASSERT_Msk (0x10000UL)            /*!< DPI_CM_ASSERT (Bitfield-Mask: 0x01)                   */
#define LCDC_LCDC_GPIO_REG_DPI_SD_ASSERT_Pos (15UL)                 /*!< DPI_SD_ASSERT (Bit 15)                                */
#define LCDC_LCDC_GPIO_REG_DPI_SD_ASSERT_Msk (0x8000UL)             /*!< DPI_SD_ASSERT (Bitfield-Mask: 0x01)                   */
#define LCDC_LCDC_GPIO_REG_GPIO_SPI_SI_ON_SD_PAD_Pos (5UL)          /*!< GPIO_SPI_SI_ON_SD_PAD (Bit 5)                         */
#define LCDC_LCDC_GPIO_REG_GPIO_SPI_SI_ON_SD_PAD_Msk (0x20UL)       /*!< GPIO_SPI_SI_ON_SD_PAD (Bitfield-Mask: 0x01)           */
#define LCDC_LCDC_GPIO_REG_GPIO_OUTPUT_MODE_Pos (3UL)               /*!< GPIO_OUTPUT_MODE (Bit 3)                              */
#define LCDC_LCDC_GPIO_REG_GPIO_OUTPUT_MODE_Msk (0x18UL)            /*!< GPIO_OUTPUT_MODE (Bitfield-Mask: 0x03)                */
#define LCDC_LCDC_GPIO_REG_GPIO_OUTPUT_EN_Pos (2UL)                 /*!< GPIO_OUTPUT_EN (Bit 2)                                */
#define LCDC_LCDC_GPIO_REG_GPIO_OUTPUT_EN_Msk (0x4UL)               /*!< GPIO_OUTPUT_EN (Bitfield-Mask: 0x01)                  */
#define LCDC_LCDC_GPIO_REG_TE_INV_Pos     (1UL)                     /*!< TE_INV (Bit 1)                                        */
#define LCDC_LCDC_GPIO_REG_TE_INV_Msk     (0x2UL)                   /*!< TE_INV (Bitfield-Mask: 0x01)                          */
/* ====================================================  LCDC_IDREG_REG  ===================================================== */
#define LCDC_LCDC_IDREG_REG_LCDC_ID_Pos   (0UL)                     /*!< LCDC_ID (Bit 0)                                       */
#define LCDC_LCDC_IDREG_REG_LCDC_ID_Msk   (0xffffffffUL)            /*!< LCDC_ID (Bitfield-Mask: 0xffffffff)                   */
/* ==================================================  LCDC_INTERRUPT_REG  =================================================== */
#define LCDC_LCDC_INTERRUPT_REG_IRQ_TRIGGER_SEL_Pos (31UL)          /*!< IRQ_TRIGGER_SEL (Bit 31)                              */
#define LCDC_LCDC_INTERRUPT_REG_IRQ_TRIGGER_SEL_Msk (0x80000000UL)  /*!< IRQ_TRIGGER_SEL (Bitfield-Mask: 0x01)                 */
#define LCDC_LCDC_INTERRUPT_REG_FE_IRQ_EN_Pos (4UL)                 /*!< FE_IRQ_EN (Bit 4)                                     */
#define LCDC_LCDC_INTERRUPT_REG_FE_IRQ_EN_Msk (0x10UL)              /*!< FE_IRQ_EN (Bitfield-Mask: 0x01)                       */
#define LCDC_LCDC_INTERRUPT_REG_TE_IRQ_EN_Pos (3UL)                 /*!< TE_IRQ_EN (Bit 3)                                     */
#define LCDC_LCDC_INTERRUPT_REG_TE_IRQ_EN_Msk (0x8UL)               /*!< TE_IRQ_EN (Bitfield-Mask: 0x01)                       */
#define LCDC_LCDC_INTERRUPT_REG_HSYNC_IRQ_EN_Pos (1UL)              /*!< HSYNC_IRQ_EN (Bit 1)                                  */
#define LCDC_LCDC_INTERRUPT_REG_HSYNC_IRQ_EN_Msk (0x2UL)            /*!< HSYNC_IRQ_EN (Bitfield-Mask: 0x01)                    */
#define LCDC_LCDC_INTERRUPT_REG_VSYNC_IRQ_EN_Pos (0UL)              /*!< VSYNC_IRQ_EN (Bit 0)                                  */
#define LCDC_LCDC_INTERRUPT_REG_VSYNC_IRQ_EN_Msk (0x1UL)            /*!< VSYNC_IRQ_EN (Bitfield-Mask: 0x01)                    */
/* ===============================================  LCDC_LAYER0_BASEADDR_REG  ================================================ */
#define LCDC_LCDC_LAYER0_BASEADDR_REG_L0_BASE_ADDR_Pos (0UL)        /*!< L0_BASE_ADDR (Bit 0)                                  */
#define LCDC_LCDC_LAYER0_BASEADDR_REG_L0_BASE_ADDR_Msk (0xffffffffUL) /*!< L0_BASE_ADDR (Bitfield-Mask: 0xffffffff)            */
/* =================================================  LCDC_LAYER0_MODE_REG  ================================================== */
#define LCDC_LCDC_LAYER0_MODE_REG_L0_EN_Pos (31UL)                  /*!< L0_EN (Bit 31)                                        */
#define LCDC_LCDC_LAYER0_MODE_REG_L0_EN_Msk (0x80000000UL)          /*!< L0_EN (Bitfield-Mask: 0x01)                           */
#define LCDC_LCDC_LAYER0_MODE_REG_L0_FORCE_ALPHA_Pos (30UL)         /*!< L0_FORCE_ALPHA (Bit 30)                               */
#define LCDC_LCDC_LAYER0_MODE_REG_L0_FORCE_ALPHA_Msk (0x40000000UL) /*!< L0_FORCE_ALPHA (Bitfield-Mask: 0x01)                  */
#define LCDC_LCDC_LAYER0_MODE_REG_L0_PREMUL_IMG_ALPHA_Pos (28UL)    /*!< L0_PREMUL_IMG_ALPHA (Bit 28)                          */
#define LCDC_LCDC_LAYER0_MODE_REG_L0_PREMUL_IMG_ALPHA_Msk (0x10000000UL) /*!< L0_PREMUL_IMG_ALPHA (Bitfield-Mask: 0x01)        */
#define LCDC_LCDC_LAYER0_MODE_REG_L0_ASSERT_HLOCK_DMA_Pos (27UL)    /*!< L0_ASSERT_HLOCK_DMA (Bit 27)                          */
#define LCDC_LCDC_LAYER0_MODE_REG_L0_ASSERT_HLOCK_DMA_Msk (0x8000000UL) /*!< L0_ASSERT_HLOCK_DMA (Bitfield-Mask: 0x01)         */
#define LCDC_LCDC_LAYER0_MODE_REG_L0_ALPHA_Pos (16UL)               /*!< L0_ALPHA (Bit 16)                                     */
#define LCDC_LCDC_LAYER0_MODE_REG_L0_ALPHA_Msk (0xff0000UL)         /*!< L0_ALPHA (Bitfield-Mask: 0xff)                        */
#define LCDC_LCDC_LAYER0_MODE_REG_L0_DST_BLEND_Pos (12UL)           /*!< L0_DST_BLEND (Bit 12)                                 */
#define LCDC_LCDC_LAYER0_MODE_REG_L0_DST_BLEND_Msk (0xf000UL)       /*!< L0_DST_BLEND (Bitfield-Mask: 0x0f)                    */
#define LCDC_LCDC_LAYER0_MODE_REG_L0_SRC_BLEND_Pos (8UL)            /*!< L0_SRC_BLEND (Bit 8)                                  */
#define LCDC_LCDC_LAYER0_MODE_REG_L0_SRC_BLEND_Msk (0xf00UL)        /*!< L0_SRC_BLEND (Bitfield-Mask: 0x0f)                    */
#define LCDC_LCDC_LAYER0_MODE_REG_L0_COLOR_MODE_Pos (0UL)           /*!< L0_COLOR_MODE (Bit 0)                                 */
#define LCDC_LCDC_LAYER0_MODE_REG_L0_COLOR_MODE_Msk (0x1fUL)        /*!< L0_COLOR_MODE (Bitfield-Mask: 0x1f)                   */
/* =================================================  LCDC_LAYER0_RESXY_REG  ================================================= */
#define LCDC_LCDC_LAYER0_RESXY_REG_L0_RES_X_Pos (16UL)              /*!< L0_RES_X (Bit 16)                                     */
#define LCDC_LCDC_LAYER0_RESXY_REG_L0_RES_X_Msk (0xffff0000UL)      /*!< L0_RES_X (Bitfield-Mask: 0xffff)                      */
#define LCDC_LCDC_LAYER0_RESXY_REG_L0_RES_Y_Pos (0UL)               /*!< L0_RES_Y (Bit 0)                                      */
#define LCDC_LCDC_LAYER0_RESXY_REG_L0_RES_Y_Msk (0xffffUL)          /*!< L0_RES_Y (Bitfield-Mask: 0xffff)                      */
/* ================================================  LCDC_LAYER0_SIZEXY_REG  ================================================= */
#define LCDC_LCDC_LAYER0_SIZEXY_REG_L0_SIZE_X_Pos (16UL)            /*!< L0_SIZE_X (Bit 16)                                    */
#define LCDC_LCDC_LAYER0_SIZEXY_REG_L0_SIZE_X_Msk (0xffff0000UL)    /*!< L0_SIZE_X (Bitfield-Mask: 0xffff)                     */
#define LCDC_LCDC_LAYER0_SIZEXY_REG_L0_SIZE_Y_Pos (0UL)             /*!< L0_SIZE_Y (Bit 0)                                     */
#define LCDC_LCDC_LAYER0_SIZEXY_REG_L0_SIZE_Y_Msk (0xffffUL)        /*!< L0_SIZE_Y (Bitfield-Mask: 0xffff)                     */
/* ================================================  LCDC_LAYER0_STARTXY_REG  ================================================ */
#define LCDC_LCDC_LAYER0_STARTXY_REG_L0_START_X_Pos (16UL)          /*!< L0_START_X (Bit 16)                                   */
#define LCDC_LCDC_LAYER0_STARTXY_REG_L0_START_X_Msk (0xffff0000UL)  /*!< L0_START_X (Bitfield-Mask: 0xffff)                    */
#define LCDC_LCDC_LAYER0_STARTXY_REG_L0_START_Y_Pos (0UL)           /*!< L0_START_Y (Bit 0)                                    */
#define LCDC_LCDC_LAYER0_STARTXY_REG_L0_START_Y_Msk (0xffffUL)      /*!< L0_START_Y (Bitfield-Mask: 0xffff)                    */
/* ================================================  LCDC_LAYER0_STRIDE_REG  ================================================= */
#define LCDC_LCDC_LAYER0_STRIDE_REG_L0_DMA_PREFETCH_Pos (25UL)      /*!< L0_DMA_PREFETCH (Bit 25)                              */
#define LCDC_LCDC_LAYER0_STRIDE_REG_L0_DMA_PREFETCH_Msk (0xe000000UL) /*!< L0_DMA_PREFETCH (Bitfield-Mask: 0x07)               */
#define LCDC_LCDC_LAYER0_STRIDE_REG_L0_FIFO_THR_Pos (19UL)          /*!< L0_FIFO_THR (Bit 19)                                  */
#define LCDC_LCDC_LAYER0_STRIDE_REG_L0_FIFO_THR_Msk (0x180000UL)    /*!< L0_FIFO_THR (Bitfield-Mask: 0x03)                     */
#define LCDC_LCDC_LAYER0_STRIDE_REG_L0_NO_16BEAT_BURST_Pos (16UL)   /*!< L0_NO_16BEAT_BURST (Bit 16)                           */
#define LCDC_LCDC_LAYER0_STRIDE_REG_L0_NO_16BEAT_BURST_Msk (0x10000UL) /*!< L0_NO_16BEAT_BURST (Bitfield-Mask: 0x01)           */
#define LCDC_LCDC_LAYER0_STRIDE_REG_L0_STRIDE_Pos (0UL)             /*!< L0_STRIDE (Bit 0)                                     */
#define LCDC_LCDC_LAYER0_STRIDE_REG_L0_STRIDE_Msk (0xffffUL)        /*!< L0_STRIDE (Bitfield-Mask: 0xffff)                     */
/* ===============================================  LCDC_LAYER1_BASEADDR_REG  ================================================ */
#define LCDC_LCDC_LAYER1_BASEADDR_REG_L1_BASE_ADDR_Pos (0UL)        /*!< L1_BASE_ADDR (Bit 0)                                  */
#define LCDC_LCDC_LAYER1_BASEADDR_REG_L1_BASE_ADDR_Msk (0xffffffffUL) /*!< L1_BASE_ADDR (Bitfield-Mask: 0xffffffff)            */
/* =================================================  LCDC_LAYER1_MODE_REG  ================================================== */
#define LCDC_LCDC_LAYER1_MODE_REG_L1_EN_Pos (31UL)                  /*!< L1_EN (Bit 31)                                        */
#define LCDC_LCDC_LAYER1_MODE_REG_L1_EN_Msk (0x80000000UL)          /*!< L1_EN (Bitfield-Mask: 0x01)                           */
#define LCDC_LCDC_LAYER1_MODE_REG_L1_FORCE_ALPHA_Pos (30UL)         /*!< L1_FORCE_ALPHA (Bit 30)                               */
#define LCDC_LCDC_LAYER1_MODE_REG_L1_FORCE_ALPHA_Msk (0x40000000UL) /*!< L1_FORCE_ALPHA (Bitfield-Mask: 0x01)                  */
#define LCDC_LCDC_LAYER1_MODE_REG_L1_PREMUL_IMG_ALPHA_Pos (28UL)    /*!< L1_PREMUL_IMG_ALPHA (Bit 28)                          */
#define LCDC_LCDC_LAYER1_MODE_REG_L1_PREMUL_IMG_ALPHA_Msk (0x10000000UL) /*!< L1_PREMUL_IMG_ALPHA (Bitfield-Mask: 0x01)        */
#define LCDC_LCDC_LAYER1_MODE_REG_L1_ASSERT_HLOCK_DMA_Pos (27UL)    /*!< L1_ASSERT_HLOCK_DMA (Bit 27)                          */
#define LCDC_LCDC_LAYER1_MODE_REG_L1_ASSERT_HLOCK_DMA_Msk (0x8000000UL) /*!< L1_ASSERT_HLOCK_DMA (Bitfield-Mask: 0x01)         */
#define LCDC_LCDC_LAYER1_MODE_REG_L1_ALPHA_Pos (16UL)               /*!< L1_ALPHA (Bit 16)                                     */
#define LCDC_LCDC_LAYER1_MODE_REG_L1_ALPHA_Msk (0xff0000UL)         /*!< L1_ALPHA (Bitfield-Mask: 0xff)                        */
#define LCDC_LCDC_LAYER1_MODE_REG_L1_DST_BLEND_Pos (12UL)           /*!< L1_DST_BLEND (Bit 12)                                 */
#define LCDC_LCDC_LAYER1_MODE_REG_L1_DST_BLEND_Msk (0xf000UL)       /*!< L1_DST_BLEND (Bitfield-Mask: 0x0f)                    */
#define LCDC_LCDC_LAYER1_MODE_REG_L1_SRC_BLEND_Pos (8UL)            /*!< L1_SRC_BLEND (Bit 8)                                  */
#define LCDC_LCDC_LAYER1_MODE_REG_L1_SRC_BLEND_Msk (0xf00UL)        /*!< L1_SRC_BLEND (Bitfield-Mask: 0x0f)                    */
#define LCDC_LCDC_LAYER1_MODE_REG_L1_COLOR_MODE_Pos (0UL)           /*!< L1_COLOR_MODE (Bit 0)                                 */
#define LCDC_LCDC_LAYER1_MODE_REG_L1_COLOR_MODE_Msk (0x1fUL)        /*!< L1_COLOR_MODE (Bitfield-Mask: 0x1f)                   */
/* =================================================  LCDC_LAYER1_RESXY_REG  ================================================= */
#define LCDC_LCDC_LAYER1_RESXY_REG_L1_RES_X_Pos (16UL)              /*!< L1_RES_X (Bit 16)                                     */
#define LCDC_LCDC_LAYER1_RESXY_REG_L1_RES_X_Msk (0xffff0000UL)      /*!< L1_RES_X (Bitfield-Mask: 0xffff)                      */
#define LCDC_LCDC_LAYER1_RESXY_REG_L1_RES_Y_Pos (0UL)               /*!< L1_RES_Y (Bit 0)                                      */
#define LCDC_LCDC_LAYER1_RESXY_REG_L1_RES_Y_Msk (0xffffUL)          /*!< L1_RES_Y (Bitfield-Mask: 0xffff)                      */
/* ================================================  LCDC_LAYER1_SIZEXY_REG  ================================================= */
#define LCDC_LCDC_LAYER1_SIZEXY_REG_L1_SIZE_X_Pos (16UL)            /*!< L1_SIZE_X (Bit 16)                                    */
#define LCDC_LCDC_LAYER1_SIZEXY_REG_L1_SIZE_X_Msk (0xffff0000UL)    /*!< L1_SIZE_X (Bitfield-Mask: 0xffff)                     */
#define LCDC_LCDC_LAYER1_SIZEXY_REG_L1_SIZE_Y_Pos (0UL)             /*!< L1_SIZE_Y (Bit 0)                                     */
#define LCDC_LCDC_LAYER1_SIZEXY_REG_L1_SIZE_Y_Msk (0xffffUL)        /*!< L1_SIZE_Y (Bitfield-Mask: 0xffff)                     */
/* ================================================  LCDC_LAYER1_STARTXY_REG  ================================================ */
#define LCDC_LCDC_LAYER1_STARTXY_REG_L1_START_X_Pos (16UL)          /*!< L1_START_X (Bit 16)                                   */
#define LCDC_LCDC_LAYER1_STARTXY_REG_L1_START_X_Msk (0xffff0000UL)  /*!< L1_START_X (Bitfield-Mask: 0xffff)                    */
#define LCDC_LCDC_LAYER1_STARTXY_REG_L1_START_Y_Pos (0UL)           /*!< L1_START_Y (Bit 0)                                    */
#define LCDC_LCDC_LAYER1_STARTXY_REG_L1_START_Y_Msk (0xffffUL)      /*!< L1_START_Y (Bitfield-Mask: 0xffff)                    */
/* ================================================  LCDC_LAYER1_STRIDE_REG  ================================================= */
#define LCDC_LCDC_LAYER1_STRIDE_REG_L1_DMA_PREFETCH_Pos (25UL)      /*!< L1_DMA_PREFETCH (Bit 25)                              */
#define LCDC_LCDC_LAYER1_STRIDE_REG_L1_DMA_PREFETCH_Msk (0xe000000UL) /*!< L1_DMA_PREFETCH (Bitfield-Mask: 0x07)               */
#define LCDC_LCDC_LAYER1_STRIDE_REG_L1_FIFO_THR_Pos (19UL)          /*!< L1_FIFO_THR (Bit 19)                                  */
#define LCDC_LCDC_LAYER1_STRIDE_REG_L1_FIFO_THR_Msk (0x180000UL)    /*!< L1_FIFO_THR (Bitfield-Mask: 0x03)                     */
#define LCDC_LCDC_LAYER1_STRIDE_REG_L1_NO_16BEAT_BURST_Pos (16UL)   /*!< L1_NO_16BEAT_BURST (Bit 16)                           */
#define LCDC_LCDC_LAYER1_STRIDE_REG_L1_NO_16BEAT_BURST_Msk (0x10000UL) /*!< L1_NO_16BEAT_BURST (Bitfield-Mask: 0x01)           */
#define LCDC_LCDC_LAYER1_STRIDE_REG_L1_STRIDE_Pos (0UL)             /*!< L1_STRIDE (Bit 0)                                     */
#define LCDC_LCDC_LAYER1_STRIDE_REG_L1_STRIDE_Msk (0xffffUL)        /*!< L1_STRIDE (Bitfield-Mask: 0xffff)                     */
/* =====================================================  LCDC_MODE_REG  ===================================================== */
#define LCDC_LCDC_MODE_REG_MODE_EN_Pos    (31UL)                    /*!< MODE_EN (Bit 31)                                      */
#define LCDC_LCDC_MODE_REG_MODE_EN_Msk    (0x80000000UL)            /*!< MODE_EN (Bitfield-Mask: 0x01)                         */
#define LCDC_LCDC_MODE_REG_VSYNC_POL_Pos  (28UL)                    /*!< VSYNC_POL (Bit 28)                                    */
#define LCDC_LCDC_MODE_REG_VSYNC_POL_Msk  (0x10000000UL)            /*!< VSYNC_POL (Bitfield-Mask: 0x01)                       */
#define LCDC_LCDC_MODE_REG_HSYNC_POL_Pos  (27UL)                    /*!< HSYNC_POL (Bit 27)                                    */
#define LCDC_LCDC_MODE_REG_HSYNC_POL_Msk  (0x8000000UL)             /*!< HSYNC_POL (Bitfield-Mask: 0x01)                       */
#define LCDC_LCDC_MODE_REG_DE_POL_Pos     (26UL)                    /*!< DE_POL (Bit 26)                                       */
#define LCDC_LCDC_MODE_REG_DE_POL_Msk     (0x4000000UL)             /*!< DE_POL (Bitfield-Mask: 0x01)                          */
#define LCDC_LCDC_MODE_REG_DITH_MODE_Pos  (24UL)                    /*!< DITH_MODE (Bit 24)                                    */
#define LCDC_LCDC_MODE_REG_DITH_MODE_Msk  (0x3000000UL)             /*!< DITH_MODE (Bitfield-Mask: 0x03)                       */
#define LCDC_LCDC_MODE_REG_VSYNC_SCPL_Pos (23UL)                    /*!< VSYNC_SCPL (Bit 23)                                   */
#define LCDC_LCDC_MODE_REG_VSYNC_SCPL_Msk (0x800000UL)              /*!< VSYNC_SCPL (Bitfield-Mask: 0x01)                      */
#define LCDC_LCDC_MODE_REG_PIXCLKOUT_POL_Pos (22UL)                 /*!< PIXCLKOUT_POL (Bit 22)                                */
#define LCDC_LCDC_MODE_REG_PIXCLKOUT_POL_Msk (0x400000UL)           /*!< PIXCLKOUT_POL (Bitfield-Mask: 0x01)                   */
#define LCDC_LCDC_MODE_REG_GLOBAL_GAMMA_EN_Pos (20UL)               /*!< GLOBAL_GAMMA_EN (Bit 20)                              */
#define LCDC_LCDC_MODE_REG_GLOBAL_GAMMA_EN_Msk (0x100000UL)         /*!< GLOBAL_GAMMA_EN (Bitfield-Mask: 0x01)                 */
#define LCDC_LCDC_MODE_REG_FORCE_BLANK_Pos (19UL)                   /*!< FORCE_BLANK (Bit 19)                                  */
#define LCDC_LCDC_MODE_REG_FORCE_BLANK_Msk (0x80000UL)              /*!< FORCE_BLANK (Bitfield-Mask: 0x01)                     */
#define LCDC_LCDC_MODE_REG_UNDERRUN_PREVENTION_EN_Pos (18UL)        /*!< UNDERRUN_PREVENTION_EN (Bit 18)                       */
#define LCDC_LCDC_MODE_REG_UNDERRUN_PREVENTION_EN_Msk (0x40000UL)   /*!< UNDERRUN_PREVENTION_EN (Bitfield-Mask: 0x01)          */
#define LCDC_LCDC_MODE_REG_SFRAME_UPD_Pos (17UL)                    /*!< SFRAME_UPD (Bit 17)                                   */
#define LCDC_LCDC_MODE_REG_SFRAME_UPD_Msk (0x20000UL)               /*!< SFRAME_UPD (Bitfield-Mask: 0x01)                      */
#define LCDC_LCDC_MODE_REG_DPI2_CONFIG_Pos (12UL)                   /*!< DPI2_CONFIG (Bit 12)                                  */
#define LCDC_LCDC_MODE_REG_DPI2_CONFIG_Msk (0x7000UL)               /*!< DPI2_CONFIG (Bitfield-Mask: 0x07)                     */
#define LCDC_LCDC_MODE_REG_PIXCLKOUT_SEL_Pos (11UL)                 /*!< PIXCLKOUT_SEL (Bit 11)                                */
#define LCDC_LCDC_MODE_REG_PIXCLKOUT_SEL_Msk (0x800UL)              /*!< PIXCLKOUT_SEL (Bitfield-Mask: 0x01)                   */
#define LCDC_LCDC_MODE_REG_OUT_MODE_Pos   (5UL)                     /*!< OUT_MODE (Bit 5)                                      */
#define LCDC_LCDC_MODE_REG_OUT_MODE_Msk   (0x1e0UL)                 /*!< OUT_MODE (Bitfield-Mask: 0x0f)                        */
#define LCDC_LCDC_MODE_REG_DBIB_OFF_Pos   (4UL)                     /*!< DBIB_OFF (Bit 4)                                      */
#define LCDC_LCDC_MODE_REG_DBIB_OFF_Msk   (0x10UL)                  /*!< DBIB_OFF (Bitfield-Mask: 0x01)                        */
#define LCDC_LCDC_MODE_REG_FORM_OFF_Pos   (3UL)                     /*!< FORM_OFF (Bit 3)                                      */
#define LCDC_LCDC_MODE_REG_FORM_OFF_Msk   (0x8UL)                   /*!< FORM_OFF (Bitfield-Mask: 0x01)                        */
#define LCDC_LCDC_MODE_REG_DSCAN_Pos      (1UL)                     /*!< DSCAN (Bit 1)                                         */
#define LCDC_LCDC_MODE_REG_DSCAN_Msk      (0x2UL)                   /*!< DSCAN (Bitfield-Mask: 0x01)                           */
#define LCDC_LCDC_MODE_REG_TMODE_Pos      (0UL)                     /*!< TMODE (Bit 0)                                         */
#define LCDC_LCDC_MODE_REG_TMODE_Msk      (0x1UL)                   /*!< TMODE (Bitfield-Mask: 0x01)                           */
/* ===================================================  LCDC_PALETTE_255  ==================================================== */
#define LCDC_LCDC_PALETTE_255_PALLETE_R_Pos (16UL)                  /*!< PALLETE_R (Bit 16)                                    */
#define LCDC_LCDC_PALETTE_255_PALLETE_R_Msk (0xff0000UL)            /*!< PALLETE_R (Bitfield-Mask: 0xff)                       */
#define LCDC_LCDC_PALETTE_255_PALLETE_G_Pos (8UL)                   /*!< PALLETE_G (Bit 8)                                     */
#define LCDC_LCDC_PALETTE_255_PALLETE_G_Msk (0xff00UL)              /*!< PALLETE_G (Bitfield-Mask: 0xff)                       */
#define LCDC_LCDC_PALETTE_255_PALLETE_B_Pos (0UL)                   /*!< PALLETE_B (Bit 0)                                     */
#define LCDC_LCDC_PALETTE_255_PALLETE_B_Msk (0xffUL)                /*!< PALLETE_B (Bitfield-Mask: 0xff)                       */
/* ===================================================  LCDC_PALETTE_BASE  =================================================== */
#define LCDC_LCDC_PALETTE_BASE_PALLETE_R_Pos (16UL)                 /*!< PALLETE_R (Bit 16)                                    */
#define LCDC_LCDC_PALETTE_BASE_PALLETE_R_Msk (0xff0000UL)           /*!< PALLETE_R (Bitfield-Mask: 0xff)                       */
#define LCDC_LCDC_PALETTE_BASE_PALLETE_G_Pos (8UL)                  /*!< PALLETE_G (Bit 8)                                     */
#define LCDC_LCDC_PALETTE_BASE_PALLETE_G_Msk (0xff00UL)             /*!< PALLETE_G (Bitfield-Mask: 0xff)                       */
#define LCDC_LCDC_PALETTE_BASE_PALLETE_B_Pos (0UL)                  /*!< PALLETE_B (Bit 0)                                     */
#define LCDC_LCDC_PALETTE_BASE_PALLETE_B_Msk (0xffUL)               /*!< PALLETE_B (Bitfield-Mask: 0xff)                       */
/* ====================================================  LCDC_RESXY_REG  ===================================================== */
#define LCDC_LCDC_RESXY_REG_RES_X_Pos     (16UL)                    /*!< RES_X (Bit 16)                                        */
#define LCDC_LCDC_RESXY_REG_RES_X_Msk     (0xffff0000UL)            /*!< RES_X (Bitfield-Mask: 0xffff)                         */
#define LCDC_LCDC_RESXY_REG_RES_Y_Pos     (0UL)                     /*!< RES_Y (Bit 0)                                         */
#define LCDC_LCDC_RESXY_REG_RES_Y_Msk     (0xffffUL)                /*!< RES_Y (Bitfield-Mask: 0xffff)                         */
/* ===================================================  LCDC_STARTXY_REG  ==================================================== */
#define LCDC_LCDC_STARTXY_REG_START_X_Pos (16UL)                    /*!< START_X (Bit 16)                                      */
#define LCDC_LCDC_STARTXY_REG_START_X_Msk (0xffff0000UL)            /*!< START_X (Bitfield-Mask: 0xffff)                       */
#define LCDC_LCDC_STARTXY_REG_START_Y_Pos (0UL)                     /*!< START_Y (Bit 0)                                       */
#define LCDC_LCDC_STARTXY_REG_START_Y_Msk (0xffffUL)                /*!< START_Y (Bitfield-Mask: 0xffff)                       */
/* ====================================================  LCDC_STATUS_REG  ==================================================== */
#define LCDC_LCDC_STATUS_REG_SPI_RD_WR_OP_Pos (16UL)                /*!< SPI_RD_WR_OP (Bit 16)                                 */
#define LCDC_LCDC_STATUS_REG_SPI_RD_WR_OP_Msk (0x10000UL)           /*!< SPI_RD_WR_OP (Bitfield-Mask: 0x01)                    */
#define LCDC_LCDC_STATUS_REG_DBIB_CMD_FIFO_FULL_Pos (15UL)          /*!< DBIB_CMD_FIFO_FULL (Bit 15)                           */
#define LCDC_LCDC_STATUS_REG_DBIB_CMD_FIFO_FULL_Msk (0x8000UL)      /*!< DBIB_CMD_FIFO_FULL (Bitfield-Mask: 0x01)              */
#define LCDC_LCDC_STATUS_REG_DBI_SPI_CS_Pos (14UL)                  /*!< DBI_SPI_CS (Bit 14)                                   */
#define LCDC_LCDC_STATUS_REG_DBI_SPI_CS_Msk (0x4000UL)              /*!< DBI_SPI_CS (Bitfield-Mask: 0x01)                      */
#define LCDC_LCDC_STATUS_REG_FRAME_END_Pos (13UL)                   /*!< FRAME_END (Bit 13)                                    */
#define LCDC_LCDC_STATUS_REG_FRAME_END_Msk (0x2000UL)               /*!< FRAME_END (Bitfield-Mask: 0x01)                       */
#define LCDC_LCDC_STATUS_REG_DBIB_OUT_TRANS_PENDING_Pos (12UL)      /*!< DBIB_OUT_TRANS_PENDING (Bit 12)                       */
#define LCDC_LCDC_STATUS_REG_DBIB_OUT_TRANS_PENDING_Msk (0x1000UL)  /*!< DBIB_OUT_TRANS_PENDING (Bitfield-Mask: 0x01)          */
#define LCDC_LCDC_STATUS_REG_DBIB_CMD_PENDING_Pos (11UL)            /*!< DBIB_CMD_PENDING (Bit 11)                             */
#define LCDC_LCDC_STATUS_REG_DBIB_CMD_PENDING_Msk (0x800UL)         /*!< DBIB_CMD_PENDING (Bitfield-Mask: 0x01)                */
#define LCDC_LCDC_STATUS_REG_DBIB_DATA_PENDING_Pos (10UL)           /*!< DBIB_DATA_PENDING (Bit 10)                            */
#define LCDC_LCDC_STATUS_REG_DBIB_DATA_PENDING_Msk (0x400UL)        /*!< DBIB_DATA_PENDING (Bitfield-Mask: 0x01)               */
#define LCDC_LCDC_STATUS_REG_DBIB_TE_Pos  (8UL)                     /*!< DBIB_TE (Bit 8)                                       */
#define LCDC_LCDC_STATUS_REG_DBIB_TE_Msk  (0x100UL)                 /*!< DBIB_TE (Bitfield-Mask: 0x01)                         */
#define LCDC_LCDC_STATUS_REG_STICKY_UNDERFLOW_Pos (7UL)             /*!< STICKY_UNDERFLOW (Bit 7)                              */
#define LCDC_LCDC_STATUS_REG_STICKY_UNDERFLOW_Msk (0x80UL)          /*!< STICKY_UNDERFLOW (Bitfield-Mask: 0x01)                */
#define LCDC_LCDC_STATUS_REG_UNDERFLOW_Pos (6UL)                    /*!< UNDERFLOW (Bit 6)                                     */
#define LCDC_LCDC_STATUS_REG_UNDERFLOW_Msk (0x40UL)                 /*!< UNDERFLOW (Bitfield-Mask: 0x01)                       */
#define LCDC_LCDC_STATUS_REG_LAST_ROW_Pos (5UL)                     /*!< LAST_ROW (Bit 5)                                      */
#define LCDC_LCDC_STATUS_REG_LAST_ROW_Msk (0x20UL)                  /*!< LAST_ROW (Bitfield-Mask: 0x01)                        */
#define LCDC_LCDC_STATUS_REG_STAT_CSYNC_Pos (4UL)                   /*!< STAT_CSYNC (Bit 4)                                    */
#define LCDC_LCDC_STATUS_REG_STAT_CSYNC_Msk (0x10UL)                /*!< STAT_CSYNC (Bitfield-Mask: 0x01)                      */
#define LCDC_LCDC_STATUS_REG_STAT_VSYNC_Pos (3UL)                   /*!< STAT_VSYNC (Bit 3)                                    */
#define LCDC_LCDC_STATUS_REG_STAT_VSYNC_Msk (0x8UL)                 /*!< STAT_VSYNC (Bitfield-Mask: 0x01)                      */
#define LCDC_LCDC_STATUS_REG_STAT_HSYNC_Pos (2UL)                   /*!< STAT_HSYNC (Bit 2)                                    */
#define LCDC_LCDC_STATUS_REG_STAT_HSYNC_Msk (0x4UL)                 /*!< STAT_HSYNC (Bitfield-Mask: 0x01)                      */
#define LCDC_LCDC_STATUS_REG_STAT_DE_Pos  (1UL)                     /*!< STAT_DE (Bit 1)                                       */
#define LCDC_LCDC_STATUS_REG_STAT_DE_Msk  (0x2UL)                   /*!< STAT_DE (Bitfield-Mask: 0x01)                         */
#define LCDC_LCDC_STATUS_REG_STAT_ACTIVE_Pos (0UL)                  /*!< STAT_ACTIVE (Bit 0)                                   */
#define LCDC_LCDC_STATUS_REG_STAT_ACTIVE_Msk (0x1UL)                /*!< STAT_ACTIVE (Bitfield-Mask: 0x01)                     */


/* =========================================================================================================================== */
/* ================                                          MEMCTRL                                          ================ */
/* =========================================================================================================================== */

/* ====================================================  BUSY_RESET_REG  ===================================================== */
#define MEMCTRL_BUSY_RESET_REG_BUSY_SDADC_Pos (30UL)                /*!< BUSY_SDADC (Bit 30)                                   */
#define MEMCTRL_BUSY_RESET_REG_BUSY_SDADC_Msk (0xc0000000UL)        /*!< BUSY_SDADC (Bitfield-Mask: 0x03)                      */
#define MEMCTRL_BUSY_RESET_REG_BUSY_GPADC_Pos (28UL)                /*!< BUSY_GPADC (Bit 28)                                   */
#define MEMCTRL_BUSY_RESET_REG_BUSY_GPADC_Msk (0x30000000UL)        /*!< BUSY_GPADC (Bitfield-Mask: 0x03)                      */
#define MEMCTRL_BUSY_RESET_REG_BUSY_SRC2_Pos (26UL)                 /*!< BUSY_SRC2 (Bit 26)                                    */
#define MEMCTRL_BUSY_RESET_REG_BUSY_SRC2_Msk (0xc000000UL)          /*!< BUSY_SRC2 (Bitfield-Mask: 0x03)                       */
#define MEMCTRL_BUSY_RESET_REG_BUSY_SRC_Pos (24UL)                  /*!< BUSY_SRC (Bit 24)                                     */
#define MEMCTRL_BUSY_RESET_REG_BUSY_SRC_Msk (0x3000000UL)           /*!< BUSY_SRC (Bitfield-Mask: 0x03)                        */
#define MEMCTRL_BUSY_RESET_REG_BUSY_PDM_Pos (22UL)                  /*!< BUSY_PDM (Bit 22)                                     */
#define MEMCTRL_BUSY_RESET_REG_BUSY_PDM_Msk (0xc00000UL)            /*!< BUSY_PDM (Bitfield-Mask: 0x03)                        */
#define MEMCTRL_BUSY_RESET_REG_BUSY_PCM_Pos (20UL)                  /*!< BUSY_PCM (Bit 20)                                     */
#define MEMCTRL_BUSY_RESET_REG_BUSY_PCM_Msk (0x300000UL)            /*!< BUSY_PCM (Bitfield-Mask: 0x03)                        */
#define MEMCTRL_BUSY_RESET_REG_BUSY_I3C_Pos (18UL)                  /*!< BUSY_I3C (Bit 18)                                     */
#define MEMCTRL_BUSY_RESET_REG_BUSY_I3C_Msk (0xc0000UL)             /*!< BUSY_I3C (Bitfield-Mask: 0x03)                        */
#define MEMCTRL_BUSY_RESET_REG_BUSY_I2C3_Pos (16UL)                 /*!< BUSY_I2C3 (Bit 16)                                    */
#define MEMCTRL_BUSY_RESET_REG_BUSY_I2C3_Msk (0x30000UL)            /*!< BUSY_I2C3 (Bitfield-Mask: 0x03)                       */
#define MEMCTRL_BUSY_RESET_REG_BUSY_I2C2_Pos (14UL)                 /*!< BUSY_I2C2 (Bit 14)                                    */
#define MEMCTRL_BUSY_RESET_REG_BUSY_I2C2_Msk (0xc000UL)             /*!< BUSY_I2C2 (Bitfield-Mask: 0x03)                       */
#define MEMCTRL_BUSY_RESET_REG_BUSY_I2C_Pos (12UL)                  /*!< BUSY_I2C (Bit 12)                                     */
#define MEMCTRL_BUSY_RESET_REG_BUSY_I2C_Msk (0x3000UL)              /*!< BUSY_I2C (Bitfield-Mask: 0x03)                        */
#define MEMCTRL_BUSY_RESET_REG_BUSY_SPI3_Pos (10UL)                 /*!< BUSY_SPI3 (Bit 10)                                    */
#define MEMCTRL_BUSY_RESET_REG_BUSY_SPI3_Msk (0xc00UL)              /*!< BUSY_SPI3 (Bitfield-Mask: 0x03)                       */
#define MEMCTRL_BUSY_RESET_REG_BUSY_SPI2_Pos (8UL)                  /*!< BUSY_SPI2 (Bit 8)                                     */
#define MEMCTRL_BUSY_RESET_REG_BUSY_SPI2_Msk (0x300UL)              /*!< BUSY_SPI2 (Bitfield-Mask: 0x03)                       */
#define MEMCTRL_BUSY_RESET_REG_BUSY_SPI_Pos (6UL)                   /*!< BUSY_SPI (Bit 6)                                      */
#define MEMCTRL_BUSY_RESET_REG_BUSY_SPI_Msk (0xc0UL)                /*!< BUSY_SPI (Bitfield-Mask: 0x03)                        */
#define MEMCTRL_BUSY_RESET_REG_BUSY_UART3_Pos (4UL)                 /*!< BUSY_UART3 (Bit 4)                                    */
#define MEMCTRL_BUSY_RESET_REG_BUSY_UART3_Msk (0x30UL)              /*!< BUSY_UART3 (Bitfield-Mask: 0x03)                      */
#define MEMCTRL_BUSY_RESET_REG_BUSY_UART2_Pos (2UL)                 /*!< BUSY_UART2 (Bit 2)                                    */
#define MEMCTRL_BUSY_RESET_REG_BUSY_UART2_Msk (0xcUL)               /*!< BUSY_UART2 (Bitfield-Mask: 0x03)                      */
#define MEMCTRL_BUSY_RESET_REG_BUSY_UART_Pos (0UL)                  /*!< BUSY_UART (Bit 0)                                     */
#define MEMCTRL_BUSY_RESET_REG_BUSY_UART_Msk (0x3UL)                /*!< BUSY_UART (Bitfield-Mask: 0x03)                       */
/* ====================================================  BUSY_RESET_REG2  ==================================================== */
#define MEMCTRL_BUSY_RESET_REG2_BUSY_TIMER6_Pos (10UL)              /*!< BUSY_TIMER6 (Bit 10)                                  */
#define MEMCTRL_BUSY_RESET_REG2_BUSY_TIMER6_Msk (0xc00UL)           /*!< BUSY_TIMER6 (Bitfield-Mask: 0x03)                     */
#define MEMCTRL_BUSY_RESET_REG2_BUSY_TIMER5_Pos (8UL)               /*!< BUSY_TIMER5 (Bit 8)                                   */
#define MEMCTRL_BUSY_RESET_REG2_BUSY_TIMER5_Msk (0x300UL)           /*!< BUSY_TIMER5 (Bitfield-Mask: 0x03)                     */
#define MEMCTRL_BUSY_RESET_REG2_BUSY_TIMER4_Pos (6UL)               /*!< BUSY_TIMER4 (Bit 6)                                   */
#define MEMCTRL_BUSY_RESET_REG2_BUSY_TIMER4_Msk (0xc0UL)            /*!< BUSY_TIMER4 (Bitfield-Mask: 0x03)                     */
#define MEMCTRL_BUSY_RESET_REG2_BUSY_TIMER3_Pos (4UL)               /*!< BUSY_TIMER3 (Bit 4)                                   */
#define MEMCTRL_BUSY_RESET_REG2_BUSY_TIMER3_Msk (0x30UL)            /*!< BUSY_TIMER3 (Bitfield-Mask: 0x03)                     */
#define MEMCTRL_BUSY_RESET_REG2_BUSY_TIMER2_Pos (2UL)               /*!< BUSY_TIMER2 (Bit 2)                                   */
#define MEMCTRL_BUSY_RESET_REG2_BUSY_TIMER2_Msk (0xcUL)             /*!< BUSY_TIMER2 (Bitfield-Mask: 0x03)                     */
#define MEMCTRL_BUSY_RESET_REG2_BUSY_TIMER_Pos (0UL)                /*!< BUSY_TIMER (Bit 0)                                    */
#define MEMCTRL_BUSY_RESET_REG2_BUSY_TIMER_Msk (0x3UL)              /*!< BUSY_TIMER (Bitfield-Mask: 0x03)                      */
/* =====================================================  BUSY_SET_REG  ====================================================== */
#define MEMCTRL_BUSY_SET_REG_BUSY_SDADC_Pos (30UL)                  /*!< BUSY_SDADC (Bit 30)                                   */
#define MEMCTRL_BUSY_SET_REG_BUSY_SDADC_Msk (0xc0000000UL)          /*!< BUSY_SDADC (Bitfield-Mask: 0x03)                      */
#define MEMCTRL_BUSY_SET_REG_BUSY_GPADC_Pos (28UL)                  /*!< BUSY_GPADC (Bit 28)                                   */
#define MEMCTRL_BUSY_SET_REG_BUSY_GPADC_Msk (0x30000000UL)          /*!< BUSY_GPADC (Bitfield-Mask: 0x03)                      */
#define MEMCTRL_BUSY_SET_REG_BUSY_SRC2_Pos (26UL)                   /*!< BUSY_SRC2 (Bit 26)                                    */
#define MEMCTRL_BUSY_SET_REG_BUSY_SRC2_Msk (0xc000000UL)            /*!< BUSY_SRC2 (Bitfield-Mask: 0x03)                       */
#define MEMCTRL_BUSY_SET_REG_BUSY_SRC_Pos (24UL)                    /*!< BUSY_SRC (Bit 24)                                     */
#define MEMCTRL_BUSY_SET_REG_BUSY_SRC_Msk (0x3000000UL)             /*!< BUSY_SRC (Bitfield-Mask: 0x03)                        */
#define MEMCTRL_BUSY_SET_REG_BUSY_PDM_Pos (22UL)                    /*!< BUSY_PDM (Bit 22)                                     */
#define MEMCTRL_BUSY_SET_REG_BUSY_PDM_Msk (0xc00000UL)              /*!< BUSY_PDM (Bitfield-Mask: 0x03)                        */
#define MEMCTRL_BUSY_SET_REG_BUSY_PCM_Pos (20UL)                    /*!< BUSY_PCM (Bit 20)                                     */
#define MEMCTRL_BUSY_SET_REG_BUSY_PCM_Msk (0x300000UL)              /*!< BUSY_PCM (Bitfield-Mask: 0x03)                        */
#define MEMCTRL_BUSY_SET_REG_BUSY_I3C_Pos (18UL)                    /*!< BUSY_I3C (Bit 18)                                     */
#define MEMCTRL_BUSY_SET_REG_BUSY_I3C_Msk (0xc0000UL)               /*!< BUSY_I3C (Bitfield-Mask: 0x03)                        */
#define MEMCTRL_BUSY_SET_REG_BUSY_I2C3_Pos (16UL)                   /*!< BUSY_I2C3 (Bit 16)                                    */
#define MEMCTRL_BUSY_SET_REG_BUSY_I2C3_Msk (0x30000UL)              /*!< BUSY_I2C3 (Bitfield-Mask: 0x03)                       */
#define MEMCTRL_BUSY_SET_REG_BUSY_I2C2_Pos (14UL)                   /*!< BUSY_I2C2 (Bit 14)                                    */
#define MEMCTRL_BUSY_SET_REG_BUSY_I2C2_Msk (0xc000UL)               /*!< BUSY_I2C2 (Bitfield-Mask: 0x03)                       */
#define MEMCTRL_BUSY_SET_REG_BUSY_I2C_Pos (12UL)                    /*!< BUSY_I2C (Bit 12)                                     */
#define MEMCTRL_BUSY_SET_REG_BUSY_I2C_Msk (0x3000UL)                /*!< BUSY_I2C (Bitfield-Mask: 0x03)                        */
#define MEMCTRL_BUSY_SET_REG_BUSY_SPI3_Pos (10UL)                   /*!< BUSY_SPI3 (Bit 10)                                    */
#define MEMCTRL_BUSY_SET_REG_BUSY_SPI3_Msk (0xc00UL)                /*!< BUSY_SPI3 (Bitfield-Mask: 0x03)                       */
#define MEMCTRL_BUSY_SET_REG_BUSY_SPI2_Pos (8UL)                    /*!< BUSY_SPI2 (Bit 8)                                     */
#define MEMCTRL_BUSY_SET_REG_BUSY_SPI2_Msk (0x300UL)                /*!< BUSY_SPI2 (Bitfield-Mask: 0x03)                       */
#define MEMCTRL_BUSY_SET_REG_BUSY_SPI_Pos (6UL)                     /*!< BUSY_SPI (Bit 6)                                      */
#define MEMCTRL_BUSY_SET_REG_BUSY_SPI_Msk (0xc0UL)                  /*!< BUSY_SPI (Bitfield-Mask: 0x03)                        */
#define MEMCTRL_BUSY_SET_REG_BUSY_UART3_Pos (4UL)                   /*!< BUSY_UART3 (Bit 4)                                    */
#define MEMCTRL_BUSY_SET_REG_BUSY_UART3_Msk (0x30UL)                /*!< BUSY_UART3 (Bitfield-Mask: 0x03)                      */
#define MEMCTRL_BUSY_SET_REG_BUSY_UART2_Pos (2UL)                   /*!< BUSY_UART2 (Bit 2)                                    */
#define MEMCTRL_BUSY_SET_REG_BUSY_UART2_Msk (0xcUL)                 /*!< BUSY_UART2 (Bitfield-Mask: 0x03)                      */
#define MEMCTRL_BUSY_SET_REG_BUSY_UART_Pos (0UL)                    /*!< BUSY_UART (Bit 0)                                     */
#define MEMCTRL_BUSY_SET_REG_BUSY_UART_Msk (0x3UL)                  /*!< BUSY_UART (Bitfield-Mask: 0x03)                       */
/* =====================================================  BUSY_SET_REG2  ===================================================== */
#define MEMCTRL_BUSY_SET_REG2_BUSY_TIMER6_Pos (10UL)                /*!< BUSY_TIMER6 (Bit 10)                                  */
#define MEMCTRL_BUSY_SET_REG2_BUSY_TIMER6_Msk (0xc00UL)             /*!< BUSY_TIMER6 (Bitfield-Mask: 0x03)                     */
#define MEMCTRL_BUSY_SET_REG2_BUSY_TIMER5_Pos (8UL)                 /*!< BUSY_TIMER5 (Bit 8)                                   */
#define MEMCTRL_BUSY_SET_REG2_BUSY_TIMER5_Msk (0x300UL)             /*!< BUSY_TIMER5 (Bitfield-Mask: 0x03)                     */
#define MEMCTRL_BUSY_SET_REG2_BUSY_TIMER4_Pos (6UL)                 /*!< BUSY_TIMER4 (Bit 6)                                   */
#define MEMCTRL_BUSY_SET_REG2_BUSY_TIMER4_Msk (0xc0UL)              /*!< BUSY_TIMER4 (Bitfield-Mask: 0x03)                     */
#define MEMCTRL_BUSY_SET_REG2_BUSY_TIMER3_Pos (4UL)                 /*!< BUSY_TIMER3 (Bit 4)                                   */
#define MEMCTRL_BUSY_SET_REG2_BUSY_TIMER3_Msk (0x30UL)              /*!< BUSY_TIMER3 (Bitfield-Mask: 0x03)                     */
#define MEMCTRL_BUSY_SET_REG2_BUSY_TIMER2_Pos (2UL)                 /*!< BUSY_TIMER2 (Bit 2)                                   */
#define MEMCTRL_BUSY_SET_REG2_BUSY_TIMER2_Msk (0xcUL)               /*!< BUSY_TIMER2 (Bitfield-Mask: 0x03)                     */
#define MEMCTRL_BUSY_SET_REG2_BUSY_TIMER_Pos (0UL)                  /*!< BUSY_TIMER (Bit 0)                                    */
#define MEMCTRL_BUSY_SET_REG2_BUSY_TIMER_Msk (0x3UL)                /*!< BUSY_TIMER (Bitfield-Mask: 0x03)                      */
/* =====================================================  BUSY_STAT_REG  ===================================================== */
#define MEMCTRL_BUSY_STAT_REG_BUSY_SDADC_Pos (30UL)                 /*!< BUSY_SDADC (Bit 30)                                   */
#define MEMCTRL_BUSY_STAT_REG_BUSY_SDADC_Msk (0xc0000000UL)         /*!< BUSY_SDADC (Bitfield-Mask: 0x03)                      */
#define MEMCTRL_BUSY_STAT_REG_BUSY_GPADC_Pos (28UL)                 /*!< BUSY_GPADC (Bit 28)                                   */
#define MEMCTRL_BUSY_STAT_REG_BUSY_GPADC_Msk (0x30000000UL)         /*!< BUSY_GPADC (Bitfield-Mask: 0x03)                      */
#define MEMCTRL_BUSY_STAT_REG_BUSY_SRC2_Pos (26UL)                  /*!< BUSY_SRC2 (Bit 26)                                    */
#define MEMCTRL_BUSY_STAT_REG_BUSY_SRC2_Msk (0xc000000UL)           /*!< BUSY_SRC2 (Bitfield-Mask: 0x03)                       */
#define MEMCTRL_BUSY_STAT_REG_BUSY_SRC_Pos (24UL)                   /*!< BUSY_SRC (Bit 24)                                     */
#define MEMCTRL_BUSY_STAT_REG_BUSY_SRC_Msk (0x3000000UL)            /*!< BUSY_SRC (Bitfield-Mask: 0x03)                        */
#define MEMCTRL_BUSY_STAT_REG_BUSY_PDM_Pos (22UL)                   /*!< BUSY_PDM (Bit 22)                                     */
#define MEMCTRL_BUSY_STAT_REG_BUSY_PDM_Msk (0xc00000UL)             /*!< BUSY_PDM (Bitfield-Mask: 0x03)                        */
#define MEMCTRL_BUSY_STAT_REG_BUSY_PCM_Pos (20UL)                   /*!< BUSY_PCM (Bit 20)                                     */
#define MEMCTRL_BUSY_STAT_REG_BUSY_PCM_Msk (0x300000UL)             /*!< BUSY_PCM (Bitfield-Mask: 0x03)                        */
#define MEMCTRL_BUSY_STAT_REG_BUSY_I3C_Pos (18UL)                   /*!< BUSY_I3C (Bit 18)                                     */
#define MEMCTRL_BUSY_STAT_REG_BUSY_I3C_Msk (0xc0000UL)              /*!< BUSY_I3C (Bitfield-Mask: 0x03)                        */
#define MEMCTRL_BUSY_STAT_REG_BUSY_I2C3_Pos (16UL)                  /*!< BUSY_I2C3 (Bit 16)                                    */
#define MEMCTRL_BUSY_STAT_REG_BUSY_I2C3_Msk (0x30000UL)             /*!< BUSY_I2C3 (Bitfield-Mask: 0x03)                       */
#define MEMCTRL_BUSY_STAT_REG_BUSY_I2C2_Pos (14UL)                  /*!< BUSY_I2C2 (Bit 14)                                    */
#define MEMCTRL_BUSY_STAT_REG_BUSY_I2C2_Msk (0xc000UL)              /*!< BUSY_I2C2 (Bitfield-Mask: 0x03)                       */
#define MEMCTRL_BUSY_STAT_REG_BUSY_I2C_Pos (12UL)                   /*!< BUSY_I2C (Bit 12)                                     */
#define MEMCTRL_BUSY_STAT_REG_BUSY_I2C_Msk (0x3000UL)               /*!< BUSY_I2C (Bitfield-Mask: 0x03)                        */
#define MEMCTRL_BUSY_STAT_REG_BUSY_SPI3_Pos (10UL)                  /*!< BUSY_SPI3 (Bit 10)                                    */
#define MEMCTRL_BUSY_STAT_REG_BUSY_SPI3_Msk (0xc00UL)               /*!< BUSY_SPI3 (Bitfield-Mask: 0x03)                       */
#define MEMCTRL_BUSY_STAT_REG_BUSY_SPI2_Pos (8UL)                   /*!< BUSY_SPI2 (Bit 8)                                     */
#define MEMCTRL_BUSY_STAT_REG_BUSY_SPI2_Msk (0x300UL)               /*!< BUSY_SPI2 (Bitfield-Mask: 0x03)                       */
#define MEMCTRL_BUSY_STAT_REG_BUSY_SPI_Pos (6UL)                    /*!< BUSY_SPI (Bit 6)                                      */
#define MEMCTRL_BUSY_STAT_REG_BUSY_SPI_Msk (0xc0UL)                 /*!< BUSY_SPI (Bitfield-Mask: 0x03)                        */
#define MEMCTRL_BUSY_STAT_REG_BUSY_UART3_Pos (4UL)                  /*!< BUSY_UART3 (Bit 4)                                    */
#define MEMCTRL_BUSY_STAT_REG_BUSY_UART3_Msk (0x30UL)               /*!< BUSY_UART3 (Bitfield-Mask: 0x03)                      */
#define MEMCTRL_BUSY_STAT_REG_BUSY_UART2_Pos (2UL)                  /*!< BUSY_UART2 (Bit 2)                                    */
#define MEMCTRL_BUSY_STAT_REG_BUSY_UART2_Msk (0xcUL)                /*!< BUSY_UART2 (Bitfield-Mask: 0x03)                      */
#define MEMCTRL_BUSY_STAT_REG_BUSY_UART_Pos (0UL)                   /*!< BUSY_UART (Bit 0)                                     */
#define MEMCTRL_BUSY_STAT_REG_BUSY_UART_Msk (0x3UL)                 /*!< BUSY_UART (Bitfield-Mask: 0x03)                       */
/* ====================================================  BUSY_STAT_REG2  ===================================================== */
#define MEMCTRL_BUSY_STAT_REG2_BUSY_TIMER6_Pos (10UL)               /*!< BUSY_TIMER6 (Bit 10)                                  */
#define MEMCTRL_BUSY_STAT_REG2_BUSY_TIMER6_Msk (0xc00UL)            /*!< BUSY_TIMER6 (Bitfield-Mask: 0x03)                     */
#define MEMCTRL_BUSY_STAT_REG2_BUSY_TIMER5_Pos (8UL)                /*!< BUSY_TIMER5 (Bit 8)                                   */
#define MEMCTRL_BUSY_STAT_REG2_BUSY_TIMER5_Msk (0x300UL)            /*!< BUSY_TIMER5 (Bitfield-Mask: 0x03)                     */
#define MEMCTRL_BUSY_STAT_REG2_BUSY_TIMER4_Pos (6UL)                /*!< BUSY_TIMER4 (Bit 6)                                   */
#define MEMCTRL_BUSY_STAT_REG2_BUSY_TIMER4_Msk (0xc0UL)             /*!< BUSY_TIMER4 (Bitfield-Mask: 0x03)                     */
#define MEMCTRL_BUSY_STAT_REG2_BUSY_TIMER3_Pos (4UL)                /*!< BUSY_TIMER3 (Bit 4)                                   */
#define MEMCTRL_BUSY_STAT_REG2_BUSY_TIMER3_Msk (0x30UL)             /*!< BUSY_TIMER3 (Bitfield-Mask: 0x03)                     */
#define MEMCTRL_BUSY_STAT_REG2_BUSY_TIMER2_Pos (2UL)                /*!< BUSY_TIMER2 (Bit 2)                                   */
#define MEMCTRL_BUSY_STAT_REG2_BUSY_TIMER2_Msk (0xcUL)              /*!< BUSY_TIMER2 (Bitfield-Mask: 0x03)                     */
#define MEMCTRL_BUSY_STAT_REG2_BUSY_TIMER_Pos (0UL)                 /*!< BUSY_TIMER (Bit 0)                                    */
#define MEMCTRL_BUSY_STAT_REG2_BUSY_TIMER_Msk (0x3UL)               /*!< BUSY_TIMER (Bitfield-Mask: 0x03)                      */
/* ====================================================  CMAC_STATUS_REG  ==================================================== */
#define MEMCTRL_CMAC_STATUS_REG_CMI_CLEAR_READY_Pos (13UL)          /*!< CMI_CLEAR_READY (Bit 13)                              */
#define MEMCTRL_CMAC_STATUS_REG_CMI_CLEAR_READY_Msk (0x2000UL)      /*!< CMI_CLEAR_READY (Bitfield-Mask: 0x01)                 */
#define MEMCTRL_CMAC_STATUS_REG_CMI_NOT_READY_Pos (12UL)            /*!< CMI_NOT_READY (Bit 12)                                */
#define MEMCTRL_CMAC_STATUS_REG_CMI_NOT_READY_Msk (0x1000UL)        /*!< CMI_NOT_READY (Bitfield-Mask: 0x01)                   */
#define MEMCTRL_CMAC_STATUS_REG_AHB_RFMON_WR_BUFF_CNT_Pos (8UL)     /*!< AHB_RFMON_WR_BUFF_CNT (Bit 8)                         */
#define MEMCTRL_CMAC_STATUS_REG_AHB_RFMON_WR_BUFF_CNT_Msk (0xf00UL) /*!< AHB_RFMON_WR_BUFF_CNT (Bitfield-Mask: 0x0f)           */
#define MEMCTRL_CMAC_STATUS_REG_AHB_SYS2CMAC_WR_BUFF_CNT_Pos (4UL)  /*!< AHB_SYS2CMAC_WR_BUFF_CNT (Bit 4)                      */
#define MEMCTRL_CMAC_STATUS_REG_AHB_SYS2CMAC_WR_BUFF_CNT_Msk (0xf0UL) /*!< AHB_SYS2CMAC_WR_BUFF_CNT (Bitfield-Mask: 0x0f)      */
#define MEMCTRL_CMAC_STATUS_REG_AHB_RFMON_CLR_WR_BUFF_Pos (3UL)     /*!< AHB_RFMON_CLR_WR_BUFF (Bit 3)                         */
#define MEMCTRL_CMAC_STATUS_REG_AHB_RFMON_CLR_WR_BUFF_Msk (0x8UL)   /*!< AHB_RFMON_CLR_WR_BUFF (Bitfield-Mask: 0x01)           */
#define MEMCTRL_CMAC_STATUS_REG_AHB_SYS2CMAC_CLR_WR_BUFF_Pos (2UL)  /*!< AHB_SYS2CMAC_CLR_WR_BUFF (Bit 2)                      */
#define MEMCTRL_CMAC_STATUS_REG_AHB_SYS2CMAC_CLR_WR_BUFF_Msk (0x4UL) /*!< AHB_SYS2CMAC_CLR_WR_BUFF (Bitfield-Mask: 0x01)       */
#define MEMCTRL_CMAC_STATUS_REG_AHB_RFMON_WRITE_BUFF_Pos (1UL)      /*!< AHB_RFMON_WRITE_BUFF (Bit 1)                          */
#define MEMCTRL_CMAC_STATUS_REG_AHB_RFMON_WRITE_BUFF_Msk (0x2UL)    /*!< AHB_RFMON_WRITE_BUFF (Bitfield-Mask: 0x01)            */
#define MEMCTRL_CMAC_STATUS_REG_AHB_SYS2CMAC_WRITE_BUFF_Pos (0UL)   /*!< AHB_SYS2CMAC_WRITE_BUFF (Bit 0)                       */
#define MEMCTRL_CMAC_STATUS_REG_AHB_SYS2CMAC_WRITE_BUFF_Msk (0x1UL) /*!< AHB_SYS2CMAC_WRITE_BUFF (Bitfield-Mask: 0x01)         */
/* ===================================================  CMI_CODE_BASE_REG  =================================================== */
#define MEMCTRL_CMI_CODE_BASE_REG_CMI_CODE_BASE_ADDR_Pos (0UL)      /*!< CMI_CODE_BASE_ADDR (Bit 0)                            */
#define MEMCTRL_CMI_CODE_BASE_REG_CMI_CODE_BASE_ADDR_Msk (0xfffffUL) /*!< CMI_CODE_BASE_ADDR (Bitfield-Mask: 0xfffff)          */
/* ===================================================  CMI_DATA_BASE_REG  =================================================== */
#define MEMCTRL_CMI_DATA_BASE_REG_CMI_DATA_BASE_ADDR_Pos (2UL)      /*!< CMI_DATA_BASE_ADDR (Bit 2)                            */
#define MEMCTRL_CMI_DATA_BASE_REG_CMI_DATA_BASE_ADDR_Msk (0xffffcUL) /*!< CMI_DATA_BASE_ADDR (Bitfield-Mask: 0x3ffff)          */
/* ======================================================  CMI_END_REG  ====================================================== */
#define MEMCTRL_CMI_END_REG_CMI_END_ADDR_Pos (10UL)                 /*!< CMI_END_ADDR (Bit 10)                                 */
#define MEMCTRL_CMI_END_REG_CMI_END_ADDR_Msk (0xffc00UL)            /*!< CMI_END_ADDR (Bitfield-Mask: 0x3ff)                   */
/* ==================================================  CMI_SHARED_BASE_REG  ================================================== */
#define MEMCTRL_CMI_SHARED_BASE_REG_CMI_SHARED_BASE_ADDR_Pos (10UL) /*!< CMI_SHARED_BASE_ADDR (Bit 10)                         */
#define MEMCTRL_CMI_SHARED_BASE_REG_CMI_SHARED_BASE_ADDR_Msk (0xffc00UL) /*!< CMI_SHARED_BASE_ADDR (Bitfield-Mask: 0x3ff)      */
/* ==================================================  MEM_PRIO_ARB1_4_REG  ================================================== */
#define MEMCTRL_MEM_PRIO_ARB1_4_REG_ARB4_AHB_DMA_PRIO_Pos (28UL)    /*!< ARB4_AHB_DMA_PRIO (Bit 28)                            */
#define MEMCTRL_MEM_PRIO_ARB1_4_REG_ARB4_AHB_DMA_PRIO_Msk (0x30000000UL) /*!< ARB4_AHB_DMA_PRIO (Bitfield-Mask: 0x03)          */
#define MEMCTRL_MEM_PRIO_ARB1_4_REG_ARB4_AHB_CPUS_PRIO_Pos (26UL)   /*!< ARB4_AHB_CPUS_PRIO (Bit 26)                           */
#define MEMCTRL_MEM_PRIO_ARB1_4_REG_ARB4_AHB_CPUS_PRIO_Msk (0xc000000UL) /*!< ARB4_AHB_CPUS_PRIO (Bitfield-Mask: 0x03)         */
#define MEMCTRL_MEM_PRIO_ARB1_4_REG_ARB3_AHB_DMA_PRIO_Pos (20UL)    /*!< ARB3_AHB_DMA_PRIO (Bit 20)                            */
#define MEMCTRL_MEM_PRIO_ARB1_4_REG_ARB3_AHB_DMA_PRIO_Msk (0x300000UL) /*!< ARB3_AHB_DMA_PRIO (Bitfield-Mask: 0x03)            */
#define MEMCTRL_MEM_PRIO_ARB1_4_REG_ARB3_AHB_CPUS_PRIO_Pos (18UL)   /*!< ARB3_AHB_CPUS_PRIO (Bit 18)                           */
#define MEMCTRL_MEM_PRIO_ARB1_4_REG_ARB3_AHB_CPUS_PRIO_Msk (0xc0000UL) /*!< ARB3_AHB_CPUS_PRIO (Bitfield-Mask: 0x03)           */
#define MEMCTRL_MEM_PRIO_ARB1_4_REG_ARB3_AHB_CPUC_PRIO_Pos (16UL)   /*!< ARB3_AHB_CPUC_PRIO (Bit 16)                           */
#define MEMCTRL_MEM_PRIO_ARB1_4_REG_ARB3_AHB_CPUC_PRIO_Msk (0x30000UL) /*!< ARB3_AHB_CPUC_PRIO (Bitfield-Mask: 0x03)           */
#define MEMCTRL_MEM_PRIO_ARB1_4_REG_ARB2_SNC_PRIO_Pos (14UL)        /*!< ARB2_SNC_PRIO (Bit 14)                                */
#define MEMCTRL_MEM_PRIO_ARB1_4_REG_ARB2_SNC_PRIO_Msk (0xc000UL)    /*!< ARB2_SNC_PRIO (Bitfield-Mask: 0x03)                   */
#define MEMCTRL_MEM_PRIO_ARB1_4_REG_ARB2_AHB_DMA_PRIO_Pos (12UL)    /*!< ARB2_AHB_DMA_PRIO (Bit 12)                            */
#define MEMCTRL_MEM_PRIO_ARB1_4_REG_ARB2_AHB_DMA_PRIO_Msk (0x3000UL) /*!< ARB2_AHB_DMA_PRIO (Bitfield-Mask: 0x03)              */
#define MEMCTRL_MEM_PRIO_ARB1_4_REG_ARB2_AHB_CPUS_PRIO_Pos (10UL)   /*!< ARB2_AHB_CPUS_PRIO (Bit 10)                           */
#define MEMCTRL_MEM_PRIO_ARB1_4_REG_ARB2_AHB_CPUS_PRIO_Msk (0xc00UL) /*!< ARB2_AHB_CPUS_PRIO (Bitfield-Mask: 0x03)             */
#define MEMCTRL_MEM_PRIO_ARB1_4_REG_ARB2_AHB_CPUC_PRIO_Pos (8UL)    /*!< ARB2_AHB_CPUC_PRIO (Bit 8)                            */
#define MEMCTRL_MEM_PRIO_ARB1_4_REG_ARB2_AHB_CPUC_PRIO_Msk (0x300UL) /*!< ARB2_AHB_CPUC_PRIO (Bitfield-Mask: 0x03)             */
#define MEMCTRL_MEM_PRIO_ARB1_4_REG_ARB1_SNC_PRIO_Pos (6UL)         /*!< ARB1_SNC_PRIO (Bit 6)                                 */
#define MEMCTRL_MEM_PRIO_ARB1_4_REG_ARB1_SNC_PRIO_Msk (0xc0UL)      /*!< ARB1_SNC_PRIO (Bitfield-Mask: 0x03)                   */
#define MEMCTRL_MEM_PRIO_ARB1_4_REG_ARB1_AHB_DMA_PRIO_Pos (4UL)     /*!< ARB1_AHB_DMA_PRIO (Bit 4)                             */
#define MEMCTRL_MEM_PRIO_ARB1_4_REG_ARB1_AHB_DMA_PRIO_Msk (0x30UL)  /*!< ARB1_AHB_DMA_PRIO (Bitfield-Mask: 0x03)               */
#define MEMCTRL_MEM_PRIO_ARB1_4_REG_ARB1_AHB_CPUS_PRIO_Pos (2UL)    /*!< ARB1_AHB_CPUS_PRIO (Bit 2)                            */
#define MEMCTRL_MEM_PRIO_ARB1_4_REG_ARB1_AHB_CPUS_PRIO_Msk (0xcUL)  /*!< ARB1_AHB_CPUS_PRIO (Bitfield-Mask: 0x03)              */
#define MEMCTRL_MEM_PRIO_ARB1_4_REG_ARB1_AHB_CPUC_PRIO_Pos (0UL)    /*!< ARB1_AHB_CPUC_PRIO (Bit 0)                            */
#define MEMCTRL_MEM_PRIO_ARB1_4_REG_ARB1_AHB_CPUC_PRIO_Msk (0x3UL)  /*!< ARB1_AHB_CPUC_PRIO (Bitfield-Mask: 0x03)              */
/* ==================================================  MEM_PRIO_ARB5_8_REG  ================================================== */
#define MEMCTRL_MEM_PRIO_ARB5_8_REG_ARB8_SNC_PRIO_Pos (30UL)        /*!< ARB8_SNC_PRIO (Bit 30)                                */
#define MEMCTRL_MEM_PRIO_ARB5_8_REG_ARB8_SNC_PRIO_Msk (0xc0000000UL) /*!< ARB8_SNC_PRIO (Bitfield-Mask: 0x03)                  */
#define MEMCTRL_MEM_PRIO_ARB5_8_REG_ARB8_AHB_DMA_PRIO_Pos (28UL)    /*!< ARB8_AHB_DMA_PRIO (Bit 28)                            */
#define MEMCTRL_MEM_PRIO_ARB5_8_REG_ARB8_AHB_DMA_PRIO_Msk (0x30000000UL) /*!< ARB8_AHB_DMA_PRIO (Bitfield-Mask: 0x03)          */
#define MEMCTRL_MEM_PRIO_ARB5_8_REG_ARB8_AHB_CPUS_PRIO_Pos (26UL)   /*!< ARB8_AHB_CPUS_PRIO (Bit 26)                           */
#define MEMCTRL_MEM_PRIO_ARB5_8_REG_ARB8_AHB_CPUS_PRIO_Msk (0xc000000UL) /*!< ARB8_AHB_CPUS_PRIO (Bitfield-Mask: 0x03)         */
#define MEMCTRL_MEM_PRIO_ARB5_8_REG_ARB7_AHB_DMA_PRIO_Pos (20UL)    /*!< ARB7_AHB_DMA_PRIO (Bit 20)                            */
#define MEMCTRL_MEM_PRIO_ARB5_8_REG_ARB7_AHB_DMA_PRIO_Msk (0x300000UL) /*!< ARB7_AHB_DMA_PRIO (Bitfield-Mask: 0x03)            */
#define MEMCTRL_MEM_PRIO_ARB5_8_REG_ARB7_AHB_CPUS_PRIO_Pos (18UL)   /*!< ARB7_AHB_CPUS_PRIO (Bit 18)                           */
#define MEMCTRL_MEM_PRIO_ARB5_8_REG_ARB7_AHB_CPUS_PRIO_Msk (0xc0000UL) /*!< ARB7_AHB_CPUS_PRIO (Bitfield-Mask: 0x03)           */
#define MEMCTRL_MEM_PRIO_ARB5_8_REG_ARB6_AHB_DMA_PRIO_Pos (12UL)    /*!< ARB6_AHB_DMA_PRIO (Bit 12)                            */
#define MEMCTRL_MEM_PRIO_ARB5_8_REG_ARB6_AHB_DMA_PRIO_Msk (0x3000UL) /*!< ARB6_AHB_DMA_PRIO (Bitfield-Mask: 0x03)              */
#define MEMCTRL_MEM_PRIO_ARB5_8_REG_ARB6_AHB_CPUS_PRIO_Pos (10UL)   /*!< ARB6_AHB_CPUS_PRIO (Bit 10)                           */
#define MEMCTRL_MEM_PRIO_ARB5_8_REG_ARB6_AHB_CPUS_PRIO_Msk (0xc00UL) /*!< ARB6_AHB_CPUS_PRIO (Bitfield-Mask: 0x03)             */
#define MEMCTRL_MEM_PRIO_ARB5_8_REG_ARB5_AHB_DMA_PRIO_Pos (4UL)     /*!< ARB5_AHB_DMA_PRIO (Bit 4)                             */
#define MEMCTRL_MEM_PRIO_ARB5_8_REG_ARB5_AHB_DMA_PRIO_Msk (0x30UL)  /*!< ARB5_AHB_DMA_PRIO (Bitfield-Mask: 0x03)               */
#define MEMCTRL_MEM_PRIO_ARB5_8_REG_ARB5_AHB_CPUS_PRIO_Pos (2UL)    /*!< ARB5_AHB_CPUS_PRIO (Bit 2)                            */
#define MEMCTRL_MEM_PRIO_ARB5_8_REG_ARB5_AHB_CPUS_PRIO_Msk (0xcUL)  /*!< ARB5_AHB_CPUS_PRIO (Bitfield-Mask: 0x03)              */
/* =====================================================  MEM_STALL_REG  ===================================================== */
#define MEMCTRL_MEM_STALL_REG_SNC_MAX_STALL_Pos (12UL)              /*!< SNC_MAX_STALL (Bit 12)                                */
#define MEMCTRL_MEM_STALL_REG_SNC_MAX_STALL_Msk (0xf000UL)          /*!< SNC_MAX_STALL (Bitfield-Mask: 0x0f)                   */
#define MEMCTRL_MEM_STALL_REG_AHB_DMA_MAX_STALL_Pos (8UL)           /*!< AHB_DMA_MAX_STALL (Bit 8)                             */
#define MEMCTRL_MEM_STALL_REG_AHB_DMA_MAX_STALL_Msk (0xf00UL)       /*!< AHB_DMA_MAX_STALL (Bitfield-Mask: 0x0f)               */
#define MEMCTRL_MEM_STALL_REG_AHB_CPUS_MAX_STALL_Pos (4UL)          /*!< AHB_CPUS_MAX_STALL (Bit 4)                            */
#define MEMCTRL_MEM_STALL_REG_AHB_CPUS_MAX_STALL_Msk (0xf0UL)       /*!< AHB_CPUS_MAX_STALL (Bitfield-Mask: 0x0f)              */
#define MEMCTRL_MEM_STALL_REG_AHB_CPUC_MAX_STALL_Pos (0UL)          /*!< AHB_CPUC_MAX_STALL (Bit 0)                            */
#define MEMCTRL_MEM_STALL_REG_AHB_CPUC_MAX_STALL_Msk (0xfUL)        /*!< AHB_CPUC_MAX_STALL (Bitfield-Mask: 0x0f)              */
/* ====================================================  MEM_STATUS2_REG  ==================================================== */
#define MEMCTRL_MEM_STATUS2_REG_RAM13_OFF_BUT_ACCESS_Pos (13UL)     /*!< RAM13_OFF_BUT_ACCESS (Bit 13)                         */
#define MEMCTRL_MEM_STATUS2_REG_RAM13_OFF_BUT_ACCESS_Msk (0x2000UL) /*!< RAM13_OFF_BUT_ACCESS (Bitfield-Mask: 0x01)            */
#define MEMCTRL_MEM_STATUS2_REG_RAM12_OFF_BUT_ACCESS_Pos (12UL)     /*!< RAM12_OFF_BUT_ACCESS (Bit 12)                         */
#define MEMCTRL_MEM_STATUS2_REG_RAM12_OFF_BUT_ACCESS_Msk (0x1000UL) /*!< RAM12_OFF_BUT_ACCESS (Bitfield-Mask: 0x01)            */
#define MEMCTRL_MEM_STATUS2_REG_RAM11_OFF_BUT_ACCESS_Pos (11UL)     /*!< RAM11_OFF_BUT_ACCESS (Bit 11)                         */
#define MEMCTRL_MEM_STATUS2_REG_RAM11_OFF_BUT_ACCESS_Msk (0x800UL)  /*!< RAM11_OFF_BUT_ACCESS (Bitfield-Mask: 0x01)            */
#define MEMCTRL_MEM_STATUS2_REG_RAM10_OFF_BUT_ACCESS_Pos (10UL)     /*!< RAM10_OFF_BUT_ACCESS (Bit 10)                         */
#define MEMCTRL_MEM_STATUS2_REG_RAM10_OFF_BUT_ACCESS_Msk (0x400UL)  /*!< RAM10_OFF_BUT_ACCESS (Bitfield-Mask: 0x01)            */
#define MEMCTRL_MEM_STATUS2_REG_RAM9_OFF_BUT_ACCESS_Pos (9UL)       /*!< RAM9_OFF_BUT_ACCESS (Bit 9)                           */
#define MEMCTRL_MEM_STATUS2_REG_RAM9_OFF_BUT_ACCESS_Msk (0x200UL)   /*!< RAM9_OFF_BUT_ACCESS (Bitfield-Mask: 0x01)             */
#define MEMCTRL_MEM_STATUS2_REG_RAM8_OFF_BUT_ACCESS_Pos (8UL)       /*!< RAM8_OFF_BUT_ACCESS (Bit 8)                           */
#define MEMCTRL_MEM_STATUS2_REG_RAM8_OFF_BUT_ACCESS_Msk (0x100UL)   /*!< RAM8_OFF_BUT_ACCESS (Bitfield-Mask: 0x01)             */
#define MEMCTRL_MEM_STATUS2_REG_RAM7_OFF_BUT_ACCESS_Pos (7UL)       /*!< RAM7_OFF_BUT_ACCESS (Bit 7)                           */
#define MEMCTRL_MEM_STATUS2_REG_RAM7_OFF_BUT_ACCESS_Msk (0x80UL)    /*!< RAM7_OFF_BUT_ACCESS (Bitfield-Mask: 0x01)             */
#define MEMCTRL_MEM_STATUS2_REG_RAM6_OFF_BUT_ACCESS_Pos (6UL)       /*!< RAM6_OFF_BUT_ACCESS (Bit 6)                           */
#define MEMCTRL_MEM_STATUS2_REG_RAM6_OFF_BUT_ACCESS_Msk (0x40UL)    /*!< RAM6_OFF_BUT_ACCESS (Bitfield-Mask: 0x01)             */
#define MEMCTRL_MEM_STATUS2_REG_RAM5_OFF_BUT_ACCESS_Pos (5UL)       /*!< RAM5_OFF_BUT_ACCESS (Bit 5)                           */
#define MEMCTRL_MEM_STATUS2_REG_RAM5_OFF_BUT_ACCESS_Msk (0x20UL)    /*!< RAM5_OFF_BUT_ACCESS (Bitfield-Mask: 0x01)             */
#define MEMCTRL_MEM_STATUS2_REG_RAM4_OFF_BUT_ACCESS_Pos (4UL)       /*!< RAM4_OFF_BUT_ACCESS (Bit 4)                           */
#define MEMCTRL_MEM_STATUS2_REG_RAM4_OFF_BUT_ACCESS_Msk (0x10UL)    /*!< RAM4_OFF_BUT_ACCESS (Bitfield-Mask: 0x01)             */
#define MEMCTRL_MEM_STATUS2_REG_RAM3_OFF_BUT_ACCESS_Pos (3UL)       /*!< RAM3_OFF_BUT_ACCESS (Bit 3)                           */
#define MEMCTRL_MEM_STATUS2_REG_RAM3_OFF_BUT_ACCESS_Msk (0x8UL)     /*!< RAM3_OFF_BUT_ACCESS (Bitfield-Mask: 0x01)             */
#define MEMCTRL_MEM_STATUS2_REG_RAM2_OFF_BUT_ACCESS_Pos (2UL)       /*!< RAM2_OFF_BUT_ACCESS (Bit 2)                           */
#define MEMCTRL_MEM_STATUS2_REG_RAM2_OFF_BUT_ACCESS_Msk (0x4UL)     /*!< RAM2_OFF_BUT_ACCESS (Bitfield-Mask: 0x01)             */
#define MEMCTRL_MEM_STATUS2_REG_RAM1_OFF_BUT_ACCESS_Pos (1UL)       /*!< RAM1_OFF_BUT_ACCESS (Bit 1)                           */
#define MEMCTRL_MEM_STATUS2_REG_RAM1_OFF_BUT_ACCESS_Msk (0x2UL)     /*!< RAM1_OFF_BUT_ACCESS (Bitfield-Mask: 0x01)             */
#define MEMCTRL_MEM_STATUS2_REG_RAM0_OFF_BUT_ACCESS_Pos (0UL)       /*!< RAM0_OFF_BUT_ACCESS (Bit 0)                           */
#define MEMCTRL_MEM_STATUS2_REG_RAM0_OFF_BUT_ACCESS_Msk (0x1UL)     /*!< RAM0_OFF_BUT_ACCESS (Bitfield-Mask: 0x01)             */
/* ====================================================  MEM_STATUS_REG  ===================================================== */
#define MEMCTRL_MEM_STATUS_REG_AHB_SNC_WR_BUFF_CNT_Pos (20UL)       /*!< AHB_SNC_WR_BUFF_CNT (Bit 20)                          */
#define MEMCTRL_MEM_STATUS_REG_AHB_SNC_WR_BUFF_CNT_Msk (0xf00000UL) /*!< AHB_SNC_WR_BUFF_CNT (Bitfield-Mask: 0x0f)             */
#define MEMCTRL_MEM_STATUS_REG_AHB_DMA_WR_BUFF_CNT_Pos (16UL)       /*!< AHB_DMA_WR_BUFF_CNT (Bit 16)                          */
#define MEMCTRL_MEM_STATUS_REG_AHB_DMA_WR_BUFF_CNT_Msk (0xf0000UL)  /*!< AHB_DMA_WR_BUFF_CNT (Bitfield-Mask: 0x0f)             */
#define MEMCTRL_MEM_STATUS_REG_AHB_CPUC_WR_BUFF_CNT_Pos (12UL)      /*!< AHB_CPUC_WR_BUFF_CNT (Bit 12)                         */
#define MEMCTRL_MEM_STATUS_REG_AHB_CPUC_WR_BUFF_CNT_Msk (0xf000UL)  /*!< AHB_CPUC_WR_BUFF_CNT (Bitfield-Mask: 0x0f)            */
#define MEMCTRL_MEM_STATUS_REG_AHB_CPUS_WR_BUFF_CNT_Pos (8UL)       /*!< AHB_CPUS_WR_BUFF_CNT (Bit 8)                          */
#define MEMCTRL_MEM_STATUS_REG_AHB_CPUS_WR_BUFF_CNT_Msk (0xf00UL)   /*!< AHB_CPUS_WR_BUFF_CNT (Bitfield-Mask: 0x0f)            */
#define MEMCTRL_MEM_STATUS_REG_AHB_SNC_CLR_WR_BUFF_Pos (7UL)        /*!< AHB_SNC_CLR_WR_BUFF (Bit 7)                           */
#define MEMCTRL_MEM_STATUS_REG_AHB_SNC_CLR_WR_BUFF_Msk (0x80UL)     /*!< AHB_SNC_CLR_WR_BUFF (Bitfield-Mask: 0x01)             */
#define MEMCTRL_MEM_STATUS_REG_AHB_DMA_CLR_WR_BUFF_Pos (6UL)        /*!< AHB_DMA_CLR_WR_BUFF (Bit 6)                           */
#define MEMCTRL_MEM_STATUS_REG_AHB_DMA_CLR_WR_BUFF_Msk (0x40UL)     /*!< AHB_DMA_CLR_WR_BUFF (Bitfield-Mask: 0x01)             */
#define MEMCTRL_MEM_STATUS_REG_AHB_CPUC_CLR_WR_BUFF_Pos (5UL)       /*!< AHB_CPUC_CLR_WR_BUFF (Bit 5)                          */
#define MEMCTRL_MEM_STATUS_REG_AHB_CPUC_CLR_WR_BUFF_Msk (0x20UL)    /*!< AHB_CPUC_CLR_WR_BUFF (Bitfield-Mask: 0x01)            */
#define MEMCTRL_MEM_STATUS_REG_AHB_CPUS_CLR_WR_BUFF_Pos (4UL)       /*!< AHB_CPUS_CLR_WR_BUFF (Bit 4)                          */
#define MEMCTRL_MEM_STATUS_REG_AHB_CPUS_CLR_WR_BUFF_Msk (0x10UL)    /*!< AHB_CPUS_CLR_WR_BUFF (Bitfield-Mask: 0x01)            */
#define MEMCTRL_MEM_STATUS_REG_AHB_SNC_WRITE_BUFF_Pos (3UL)         /*!< AHB_SNC_WRITE_BUFF (Bit 3)                            */
#define MEMCTRL_MEM_STATUS_REG_AHB_SNC_WRITE_BUFF_Msk (0x8UL)       /*!< AHB_SNC_WRITE_BUFF (Bitfield-Mask: 0x01)              */
#define MEMCTRL_MEM_STATUS_REG_AHB_DMA_WRITE_BUFF_Pos (2UL)         /*!< AHB_DMA_WRITE_BUFF (Bit 2)                            */
#define MEMCTRL_MEM_STATUS_REG_AHB_DMA_WRITE_BUFF_Msk (0x4UL)       /*!< AHB_DMA_WRITE_BUFF (Bitfield-Mask: 0x01)              */
#define MEMCTRL_MEM_STATUS_REG_AHB_CPUC_WRITE_BUFF_Pos (1UL)        /*!< AHB_CPUC_WRITE_BUFF (Bit 1)                           */
#define MEMCTRL_MEM_STATUS_REG_AHB_CPUC_WRITE_BUFF_Msk (0x2UL)      /*!< AHB_CPUC_WRITE_BUFF (Bitfield-Mask: 0x01)             */
#define MEMCTRL_MEM_STATUS_REG_AHB_CPUS_WRITE_BUFF_Pos (0UL)        /*!< AHB_CPUS_WRITE_BUFF (Bit 0)                           */
#define MEMCTRL_MEM_STATUS_REG_AHB_CPUS_WRITE_BUFF_Msk (0x1UL)      /*!< AHB_CPUS_WRITE_BUFF (Bitfield-Mask: 0x01)             */


/* =========================================================================================================================== */
/* ================                                          OQSPIF                                           ================ */
/* =========================================================================================================================== */

/* ==================================================  OQSPIF_BURSTBRK_REG  ================================================== */
#define OQSPIF_OQSPIF_BURSTBRK_REG_OSPIC_BRK_EN_Pos (23UL)          /*!< OSPIC_BRK_EN (Bit 23)                                 */
#define OQSPIF_OQSPIF_BURSTBRK_REG_OSPIC_BRK_EN_Msk (0x800000UL)    /*!< OSPIC_BRK_EN (Bitfield-Mask: 0x01)                    */
#define OQSPIF_OQSPIF_BURSTBRK_REG_OSPIC_SEC_HF_DS_Pos (22UL)       /*!< OSPIC_SEC_HF_DS (Bit 22)                              */
#define OQSPIF_OQSPIF_BURSTBRK_REG_OSPIC_SEC_HF_DS_Msk (0x400000UL) /*!< OSPIC_SEC_HF_DS (Bitfield-Mask: 0x01)                 */
#define OQSPIF_OQSPIF_BURSTBRK_REG_OSPIC_BRK_TX_MD_Pos (20UL)       /*!< OSPIC_BRK_TX_MD (Bit 20)                              */
#define OQSPIF_OQSPIF_BURSTBRK_REG_OSPIC_BRK_TX_MD_Msk (0x300000UL) /*!< OSPIC_BRK_TX_MD (Bitfield-Mask: 0x03)                 */
#define OQSPIF_OQSPIF_BURSTBRK_REG_OSPIC_BRK_SZ_Pos (16UL)          /*!< OSPIC_BRK_SZ (Bit 16)                                 */
#define OQSPIF_OQSPIF_BURSTBRK_REG_OSPIC_BRK_SZ_Msk (0xf0000UL)     /*!< OSPIC_BRK_SZ (Bitfield-Mask: 0x0f)                    */
#define OQSPIF_OQSPIF_BURSTBRK_REG_OSPIC_BRK_WRD_Pos (0UL)          /*!< OSPIC_BRK_WRD (Bit 0)                                 */
#define OQSPIF_OQSPIF_BURSTBRK_REG_OSPIC_BRK_WRD_Msk (0xffffUL)     /*!< OSPIC_BRK_WRD (Bitfield-Mask: 0xffff)                 */
/* =================================================  OQSPIF_BURSTCMDA_REG  ================================================== */
#define OQSPIF_OQSPIF_BURSTCMDA_REG_OSPIC_DMY_TX_MD_Pos (30UL)      /*!< OSPIC_DMY_TX_MD (Bit 30)                              */
#define OQSPIF_OQSPIF_BURSTCMDA_REG_OSPIC_DMY_TX_MD_Msk (0xc0000000UL) /*!< OSPIC_DMY_TX_MD (Bitfield-Mask: 0x03)              */
#define OQSPIF_OQSPIF_BURSTCMDA_REG_OSPIC_EXT_TX_MD_Pos (28UL)      /*!< OSPIC_EXT_TX_MD (Bit 28)                              */
#define OQSPIF_OQSPIF_BURSTCMDA_REG_OSPIC_EXT_TX_MD_Msk (0x30000000UL) /*!< OSPIC_EXT_TX_MD (Bitfield-Mask: 0x03)              */
#define OQSPIF_OQSPIF_BURSTCMDA_REG_OSPIC_ADR_TX_MD_Pos (26UL)      /*!< OSPIC_ADR_TX_MD (Bit 26)                              */
#define OQSPIF_OQSPIF_BURSTCMDA_REG_OSPIC_ADR_TX_MD_Msk (0xc000000UL) /*!< OSPIC_ADR_TX_MD (Bitfield-Mask: 0x03)               */
#define OQSPIF_OQSPIF_BURSTCMDA_REG_OSPIC_INST_TX_MD_Pos (24UL)     /*!< OSPIC_INST_TX_MD (Bit 24)                             */
#define OQSPIF_OQSPIF_BURSTCMDA_REG_OSPIC_INST_TX_MD_Msk (0x3000000UL) /*!< OSPIC_INST_TX_MD (Bitfield-Mask: 0x03)             */
#define OQSPIF_OQSPIF_BURSTCMDA_REG_OSPIC_EXT_BYTE_Pos (16UL)       /*!< OSPIC_EXT_BYTE (Bit 16)                               */
#define OQSPIF_OQSPIF_BURSTCMDA_REG_OSPIC_EXT_BYTE_Msk (0xff0000UL) /*!< OSPIC_EXT_BYTE (Bitfield-Mask: 0xff)                  */
#define OQSPIF_OQSPIF_BURSTCMDA_REG_OSPIC_INST_WB_Pos (8UL)         /*!< OSPIC_INST_WB (Bit 8)                                 */
#define OQSPIF_OQSPIF_BURSTCMDA_REG_OSPIC_INST_WB_Msk (0xff00UL)    /*!< OSPIC_INST_WB (Bitfield-Mask: 0xff)                   */
#define OQSPIF_OQSPIF_BURSTCMDA_REG_OSPIC_INST_Pos (0UL)            /*!< OSPIC_INST (Bit 0)                                    */
#define OQSPIF_OQSPIF_BURSTCMDA_REG_OSPIC_INST_Msk (0xffUL)         /*!< OSPIC_INST (Bitfield-Mask: 0xff)                      */
/* =================================================  OQSPIF_BURSTCMDB_REG  ================================================== */
#define OQSPIF_OQSPIF_BURSTCMDB_REG_OSPIC_CS_HIGH_MIN_Pos (16UL)    /*!< OSPIC_CS_HIGH_MIN (Bit 16)                            */
#define OQSPIF_OQSPIF_BURSTCMDB_REG_OSPIC_CS_HIGH_MIN_Msk (0x70000UL) /*!< OSPIC_CS_HIGH_MIN (Bitfield-Mask: 0x07)             */
#define OQSPIF_OQSPIF_BURSTCMDB_REG_OSPIC_WRAP_SIZE_Pos (14UL)      /*!< OSPIC_WRAP_SIZE (Bit 14)                              */
#define OQSPIF_OQSPIF_BURSTCMDB_REG_OSPIC_WRAP_SIZE_Msk (0xc000UL)  /*!< OSPIC_WRAP_SIZE (Bitfield-Mask: 0x03)                 */
#define OQSPIF_OQSPIF_BURSTCMDB_REG_OSPIC_WRAP_LEN_Pos (12UL)       /*!< OSPIC_WRAP_LEN (Bit 12)                               */
#define OQSPIF_OQSPIF_BURSTCMDB_REG_OSPIC_WRAP_LEN_Msk (0x3000UL)   /*!< OSPIC_WRAP_LEN (Bitfield-Mask: 0x03)                  */
#define OQSPIF_OQSPIF_BURSTCMDB_REG_OSPIC_WRAP_MD_Pos (11UL)        /*!< OSPIC_WRAP_MD (Bit 11)                                */
#define OQSPIF_OQSPIF_BURSTCMDB_REG_OSPIC_WRAP_MD_Msk (0x800UL)     /*!< OSPIC_WRAP_MD (Bitfield-Mask: 0x01)                   */
#define OQSPIF_OQSPIF_BURSTCMDB_REG_OSPIC_INST_MD_Pos (10UL)        /*!< OSPIC_INST_MD (Bit 10)                                */
#define OQSPIF_OQSPIF_BURSTCMDB_REG_OSPIC_INST_MD_Msk (0x400UL)     /*!< OSPIC_INST_MD (Bitfield-Mask: 0x01)                   */
#define OQSPIF_OQSPIF_BURSTCMDB_REG_OSPIC_DMY_EN_Pos (9UL)          /*!< OSPIC_DMY_EN (Bit 9)                                  */
#define OQSPIF_OQSPIF_BURSTCMDB_REG_OSPIC_DMY_EN_Msk (0x200UL)      /*!< OSPIC_DMY_EN (Bitfield-Mask: 0x01)                    */
#define OQSPIF_OQSPIF_BURSTCMDB_REG_OSPIC_DMY_NUM_Pos (4UL)         /*!< OSPIC_DMY_NUM (Bit 4)                                 */
#define OQSPIF_OQSPIF_BURSTCMDB_REG_OSPIC_DMY_NUM_Msk (0x1f0UL)     /*!< OSPIC_DMY_NUM (Bitfield-Mask: 0x1f)                   */
#define OQSPIF_OQSPIF_BURSTCMDB_REG_OSPIC_EXT_HF_DS_Pos (3UL)       /*!< OSPIC_EXT_HF_DS (Bit 3)                               */
#define OQSPIF_OQSPIF_BURSTCMDB_REG_OSPIC_EXT_HF_DS_Msk (0x8UL)     /*!< OSPIC_EXT_HF_DS (Bitfield-Mask: 0x01)                 */
#define OQSPIF_OQSPIF_BURSTCMDB_REG_OSPIC_EXT_BYTE_EN_Pos (2UL)     /*!< OSPIC_EXT_BYTE_EN (Bit 2)                             */
#define OQSPIF_OQSPIF_BURSTCMDB_REG_OSPIC_EXT_BYTE_EN_Msk (0x4UL)   /*!< OSPIC_EXT_BYTE_EN (Bitfield-Mask: 0x01)               */
#define OQSPIF_OQSPIF_BURSTCMDB_REG_OSPIC_DAT_RX_MD_Pos (0UL)       /*!< OSPIC_DAT_RX_MD (Bit 0)                               */
#define OQSPIF_OQSPIF_BURSTCMDB_REG_OSPIC_DAT_RX_MD_Msk (0x3UL)     /*!< OSPIC_DAT_RX_MD (Bitfield-Mask: 0x03)                 */
/* =================================================  OQSPIF_CHCKERASE_REG  ================================================== */
#define OQSPIF_OQSPIF_CHCKERASE_REG_OSPIC_CHCKERASE_Pos (0UL)       /*!< OSPIC_CHCKERASE (Bit 0)                               */
#define OQSPIF_OQSPIF_CHCKERASE_REG_OSPIC_CHCKERASE_Msk (0xffffffffUL) /*!< OSPIC_CHCKERASE (Bitfield-Mask: 0xffffffff)        */
/* ==================================================  OQSPIF_CTRLBUS_REG  =================================================== */
#define OQSPIF_OQSPIF_CTRLBUS_REG_OSPIC_DIS_CS_Pos (5UL)            /*!< OSPIC_DIS_CS (Bit 5)                                  */
#define OQSPIF_OQSPIF_CTRLBUS_REG_OSPIC_DIS_CS_Msk (0x20UL)         /*!< OSPIC_DIS_CS (Bitfield-Mask: 0x01)                    */
#define OQSPIF_OQSPIF_CTRLBUS_REG_OSPIC_EN_CS_Pos (4UL)             /*!< OSPIC_EN_CS (Bit 4)                                   */
#define OQSPIF_OQSPIF_CTRLBUS_REG_OSPIC_EN_CS_Msk (0x10UL)          /*!< OSPIC_EN_CS (Bitfield-Mask: 0x01)                     */
#define OQSPIF_OQSPIF_CTRLBUS_REG_OSPIC_SET_OCTAL_Pos (3UL)         /*!< OSPIC_SET_OCTAL (Bit 3)                               */
#define OQSPIF_OQSPIF_CTRLBUS_REG_OSPIC_SET_OCTAL_Msk (0x8UL)       /*!< OSPIC_SET_OCTAL (Bitfield-Mask: 0x01)                 */
#define OQSPIF_OQSPIF_CTRLBUS_REG_OSPIC_SET_QUAD_Pos (2UL)          /*!< OSPIC_SET_QUAD (Bit 2)                                */
#define OQSPIF_OQSPIF_CTRLBUS_REG_OSPIC_SET_QUAD_Msk (0x4UL)        /*!< OSPIC_SET_QUAD (Bitfield-Mask: 0x01)                  */
#define OQSPIF_OQSPIF_CTRLBUS_REG_OSPIC_SET_DUAL_Pos (1UL)          /*!< OSPIC_SET_DUAL (Bit 1)                                */
#define OQSPIF_OQSPIF_CTRLBUS_REG_OSPIC_SET_DUAL_Msk (0x2UL)        /*!< OSPIC_SET_DUAL (Bitfield-Mask: 0x01)                  */
#define OQSPIF_OQSPIF_CTRLBUS_REG_OSPIC_SET_SINGLE_Pos (0UL)        /*!< OSPIC_SET_SINGLE (Bit 0)                              */
#define OQSPIF_OQSPIF_CTRLBUS_REG_OSPIC_SET_SINGLE_Msk (0x1UL)      /*!< OSPIC_SET_SINGLE (Bitfield-Mask: 0x01)                */
/* ==================================================  OQSPIF_CTRLMODE_REG  ================================================== */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_IO_UH_DAT_Pos (28UL)       /*!< OSPIC_IO_UH_DAT (Bit 28)                              */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_IO_UH_DAT_Msk (0xf0000000UL) /*!< OSPIC_IO_UH_DAT (Bitfield-Mask: 0x0f)               */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_IO_UH_OEN_Pos (27UL)       /*!< OSPIC_IO_UH_OEN (Bit 27)                              */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_IO_UH_OEN_Msk (0x8000000UL) /*!< OSPIC_IO_UH_OEN (Bitfield-Mask: 0x01)                */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_INC_LIM_EN_Pos (18UL)      /*!< OSPIC_INC_LIM_EN (Bit 18)                             */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_INC_LIM_EN_Msk (0x40000UL) /*!< OSPIC_INC_LIM_EN (Bitfield-Mask: 0x01)                */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_RD_ERR_EN_Pos (17UL)       /*!< OSPIC_RD_ERR_EN (Bit 17)                              */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_RD_ERR_EN_Msk (0x20000UL)  /*!< OSPIC_RD_ERR_EN (Bitfield-Mask: 0x01)                 */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_MAN_DIRCHG_MD_Pos (16UL)   /*!< OSPIC_MAN_DIRCHG_MD (Bit 16)                          */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_MAN_DIRCHG_MD_Msk (0x10000UL) /*!< OSPIC_MAN_DIRCHG_MD (Bitfield-Mask: 0x01)          */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_DMY_MD_Pos (15UL)          /*!< OSPIC_DMY_MD (Bit 15)                                 */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_DMY_MD_Msk (0x8000UL)      /*!< OSPIC_DMY_MD (Bitfield-Mask: 0x01)                    */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_CMD_X2_EN_Pos (14UL)       /*!< OSPIC_CMD_X2_EN (Bit 14)                              */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_CMD_X2_EN_Msk (0x4000UL)   /*!< OSPIC_CMD_X2_EN (Bitfield-Mask: 0x01)                 */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_USE_32BA_Pos (13UL)        /*!< OSPIC_USE_32BA (Bit 13)                               */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_USE_32BA_Msk (0x2000UL)    /*!< OSPIC_USE_32BA (Bitfield-Mask: 0x01)                  */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_BUF_LIM_EN_Pos (12UL)      /*!< OSPIC_BUF_LIM_EN (Bit 12)                             */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_BUF_LIM_EN_Msk (0x1000UL)  /*!< OSPIC_BUF_LIM_EN (Bitfield-Mask: 0x01)                */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_PCLK_MD_Pos (9UL)          /*!< OSPIC_PCLK_MD (Bit 9)                                 */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_PCLK_MD_Msk (0xe00UL)      /*!< OSPIC_PCLK_MD (Bitfield-Mask: 0x07)                   */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_RPIPE_EN_Pos (8UL)         /*!< OSPIC_RPIPE_EN (Bit 8)                                */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_RPIPE_EN_Msk (0x100UL)     /*!< OSPIC_RPIPE_EN (Bitfield-Mask: 0x01)                  */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_RXD_NEG_Pos (7UL)          /*!< OSPIC_RXD_NEG (Bit 7)                                 */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_RXD_NEG_Msk (0x80UL)       /*!< OSPIC_RXD_NEG (Bitfield-Mask: 0x01)                   */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_HRDY_MD_Pos (6UL)          /*!< OSPIC_HRDY_MD (Bit 6)                                 */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_HRDY_MD_Msk (0x40UL)       /*!< OSPIC_HRDY_MD (Bitfield-Mask: 0x01)                   */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_IO3_DAT_Pos (5UL)          /*!< OSPIC_IO3_DAT (Bit 5)                                 */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_IO3_DAT_Msk (0x20UL)       /*!< OSPIC_IO3_DAT (Bitfield-Mask: 0x01)                   */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_IO2_DAT_Pos (4UL)          /*!< OSPIC_IO2_DAT (Bit 4)                                 */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_IO2_DAT_Msk (0x10UL)       /*!< OSPIC_IO2_DAT (Bitfield-Mask: 0x01)                   */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_IO3_OEN_Pos (3UL)          /*!< OSPIC_IO3_OEN (Bit 3)                                 */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_IO3_OEN_Msk (0x8UL)        /*!< OSPIC_IO3_OEN (Bitfield-Mask: 0x01)                   */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_IO2_OEN_Pos (2UL)          /*!< OSPIC_IO2_OEN (Bit 2)                                 */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_IO2_OEN_Msk (0x4UL)        /*!< OSPIC_IO2_OEN (Bitfield-Mask: 0x01)                   */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_CLK_MD_Pos (1UL)           /*!< OSPIC_CLK_MD (Bit 1)                                  */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_CLK_MD_Msk (0x2UL)         /*!< OSPIC_CLK_MD (Bitfield-Mask: 0x01)                    */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_AUTO_MD_Pos (0UL)          /*!< OSPIC_AUTO_MD (Bit 0)                                 */
#define OQSPIF_OQSPIF_CTRLMODE_REG_OSPIC_AUTO_MD_Msk (0x1UL)        /*!< OSPIC_AUTO_MD (Bitfield-Mask: 0x01)                   */
/* ==================================================  OQSPIF_CTR_CTRL_REG  ================================================== */
#define OQSPIF_OQSPIF_CTR_CTRL_REG_OSPIC_CTR_EN_Pos (0UL)           /*!< OSPIC_CTR_EN (Bit 0)                                  */
#define OQSPIF_OQSPIF_CTR_CTRL_REG_OSPIC_CTR_EN_Msk (0x1UL)         /*!< OSPIC_CTR_EN (Bitfield-Mask: 0x01)                    */
/* =================================================  OQSPIF_CTR_EADDR_REG  ================================================== */
#define OQSPIF_OQSPIF_CTR_EADDR_REG_OSPIC_CTR_EADDR_Pos (10UL)      /*!< OSPIC_CTR_EADDR (Bit 10)                              */
#define OQSPIF_OQSPIF_CTR_EADDR_REG_OSPIC_CTR_EADDR_Msk (0xfffffc00UL) /*!< OSPIC_CTR_EADDR (Bitfield-Mask: 0x3fffff)          */
/* ================================================  OQSPIF_CTR_KEY_0_3_REG  ================================================= */
#define OQSPIF_OQSPIF_CTR_KEY_0_3_REG_OSPIC_CTR_KEY_0_3_Pos (0UL)   /*!< OSPIC_CTR_KEY_0_3 (Bit 0)                             */
#define OQSPIF_OQSPIF_CTR_KEY_0_3_REG_OSPIC_CTR_KEY_0_3_Msk (0xffffffffUL) /*!< OSPIC_CTR_KEY_0_3 (Bitfield-Mask: 0xffffffff)  */
/* ===============================================  OQSPIF_CTR_KEY_12_15_REG  ================================================ */
#define OQSPIF_OQSPIF_CTR_KEY_12_15_REG_OSPIC_CTR_KEY_12_15_Pos (0UL) /*!< OSPIC_CTR_KEY_12_15 (Bit 0)                         */
#define OQSPIF_OQSPIF_CTR_KEY_12_15_REG_OSPIC_CTR_KEY_12_15_Msk (0xffffffffUL) /*!< OSPIC_CTR_KEY_12_15 (Bitfield-Mask: 0xffffffff) */
/* ===============================================  OQSPIF_CTR_KEY_16_19_REG  ================================================ */
#define OQSPIF_OQSPIF_CTR_KEY_16_19_REG_OSPIC_CTR_KEY_16_19_Pos (0UL) /*!< OSPIC_CTR_KEY_16_19 (Bit 0)                         */
#define OQSPIF_OQSPIF_CTR_KEY_16_19_REG_OSPIC_CTR_KEY_16_19_Msk (0xffffffffUL) /*!< OSPIC_CTR_KEY_16_19 (Bitfield-Mask: 0xffffffff) */
/* ===============================================  OQSPIF_CTR_KEY_20_23_REG  ================================================ */
#define OQSPIF_OQSPIF_CTR_KEY_20_23_REG_OSPIC_CTR_KEY_20_23_Pos (0UL) /*!< OSPIC_CTR_KEY_20_23 (Bit 0)                         */
#define OQSPIF_OQSPIF_CTR_KEY_20_23_REG_OSPIC_CTR_KEY_20_23_Msk (0xffffffffUL) /*!< OSPIC_CTR_KEY_20_23 (Bitfield-Mask: 0xffffffff) */
/* ===============================================  OQSPIF_CTR_KEY_24_27_REG  ================================================ */
#define OQSPIF_OQSPIF_CTR_KEY_24_27_REG_OSPIC_CTR_KEY_24_27_Pos (0UL) /*!< OSPIC_CTR_KEY_24_27 (Bit 0)                         */
#define OQSPIF_OQSPIF_CTR_KEY_24_27_REG_OSPIC_CTR_KEY_24_27_Msk (0xffffffffUL) /*!< OSPIC_CTR_KEY_24_27 (Bitfield-Mask: 0xffffffff) */
/* ===============================================  OQSPIF_CTR_KEY_28_31_REG  ================================================ */
#define OQSPIF_OQSPIF_CTR_KEY_28_31_REG_OSPIC_CTR_KEY_28_31_Pos (0UL) /*!< OSPIC_CTR_KEY_28_31 (Bit 0)                         */
#define OQSPIF_OQSPIF_CTR_KEY_28_31_REG_OSPIC_CTR_KEY_28_31_Msk (0xffffffffUL) /*!< OSPIC_CTR_KEY_28_31 (Bitfield-Mask: 0xffffffff) */
/* ================================================  OQSPIF_CTR_KEY_4_7_REG  ================================================= */
#define OQSPIF_OQSPIF_CTR_KEY_4_7_REG_OSPIC_CTR_KEY_4_7_Pos (0UL)   /*!< OSPIC_CTR_KEY_4_7 (Bit 0)                             */
#define OQSPIF_OQSPIF_CTR_KEY_4_7_REG_OSPIC_CTR_KEY_4_7_Msk (0xffffffffUL) /*!< OSPIC_CTR_KEY_4_7 (Bitfield-Mask: 0xffffffff)  */
/* ================================================  OQSPIF_CTR_KEY_8_11_REG  ================================================ */
#define OQSPIF_OQSPIF_CTR_KEY_8_11_REG_OSPIC_CTR_KEY_8_11_Pos (0UL) /*!< OSPIC_CTR_KEY_8_11 (Bit 0)                            */
#define OQSPIF_OQSPIF_CTR_KEY_8_11_REG_OSPIC_CTR_KEY_8_11_Msk (0xffffffffUL) /*!< OSPIC_CTR_KEY_8_11 (Bitfield-Mask: 0xffffffff) */
/* ===============================================  OQSPIF_CTR_NONCE_0_3_REG  ================================================ */
#define OQSPIF_OQSPIF_CTR_NONCE_0_3_REG_OSPIC_CTR_NONCE_0_3_Pos (0UL) /*!< OSPIC_CTR_NONCE_0_3 (Bit 0)                         */
#define OQSPIF_OQSPIF_CTR_NONCE_0_3_REG_OSPIC_CTR_NONCE_0_3_Msk (0xffffffffUL) /*!< OSPIC_CTR_NONCE_0_3 (Bitfield-Mask: 0xffffffff) */
/* ===============================================  OQSPIF_CTR_NONCE_4_7_REG  ================================================ */
#define OQSPIF_OQSPIF_CTR_NONCE_4_7_REG_OSPIC_CTR_NONCE_4_7_Pos (0UL) /*!< OSPIC_CTR_NONCE_4_7 (Bit 0)                         */
#define OQSPIF_OQSPIF_CTR_NONCE_4_7_REG_OSPIC_CTR_NONCE_4_7_Msk (0xffffffffUL) /*!< OSPIC_CTR_NONCE_4_7 (Bitfield-Mask: 0xffffffff) */
/* =================================================  OQSPIF_CTR_SADDR_REG  ================================================== */
#define OQSPIF_OQSPIF_CTR_SADDR_REG_OSPIC_CTR_SADDR_Pos (10UL)      /*!< OSPIC_CTR_SADDR (Bit 10)                              */
#define OQSPIF_OQSPIF_CTR_SADDR_REG_OSPIC_CTR_SADDR_Msk (0xfffffc00UL) /*!< OSPIC_CTR_SADDR (Bitfield-Mask: 0x3fffff)          */
/* =================================================  OQSPIF_DUMMYDATA_REG  ================================================== */
#define OQSPIF_OQSPIF_DUMMYDATA_REG_OSPIC_DUMMYDATA_Pos (0UL)       /*!< OSPIC_DUMMYDATA (Bit 0)                               */
#define OQSPIF_OQSPIF_DUMMYDATA_REG_OSPIC_DUMMYDATA_Msk (0xffffffffUL) /*!< OSPIC_DUMMYDATA (Bitfield-Mask: 0xffffffff)        */
/* =================================================  OQSPIF_ERASECMDA_REG  ================================================== */
#define OQSPIF_OQSPIF_ERASECMDA_REG_OSPIC_RES_INST_Pos (24UL)       /*!< OSPIC_RES_INST (Bit 24)                               */
#define OQSPIF_OQSPIF_ERASECMDA_REG_OSPIC_RES_INST_Msk (0xff000000UL) /*!< OSPIC_RES_INST (Bitfield-Mask: 0xff)                */
#define OQSPIF_OQSPIF_ERASECMDA_REG_OSPIC_SUS_INST_Pos (16UL)       /*!< OSPIC_SUS_INST (Bit 16)                               */
#define OQSPIF_OQSPIF_ERASECMDA_REG_OSPIC_SUS_INST_Msk (0xff0000UL) /*!< OSPIC_SUS_INST (Bitfield-Mask: 0xff)                  */
#define OQSPIF_OQSPIF_ERASECMDA_REG_OSPIC_WEN_INST_Pos (8UL)        /*!< OSPIC_WEN_INST (Bit 8)                                */
#define OQSPIF_OQSPIF_ERASECMDA_REG_OSPIC_WEN_INST_Msk (0xff00UL)   /*!< OSPIC_WEN_INST (Bitfield-Mask: 0xff)                  */
#define OQSPIF_OQSPIF_ERASECMDA_REG_OSPIC_ERS_INST_Pos (0UL)        /*!< OSPIC_ERS_INST (Bit 0)                                */
#define OQSPIF_OQSPIF_ERASECMDA_REG_OSPIC_ERS_INST_Msk (0xffUL)     /*!< OSPIC_ERS_INST (Bitfield-Mask: 0xff)                  */
/* =================================================  OQSPIF_ERASECMDB_REG  ================================================== */
#define OQSPIF_OQSPIF_ERASECMDB_REG_OSPIC_RESSUS_DLY_Pos (24UL)     /*!< OSPIC_RESSUS_DLY (Bit 24)                             */
#define OQSPIF_OQSPIF_ERASECMDB_REG_OSPIC_RESSUS_DLY_Msk (0xff000000UL) /*!< OSPIC_RESSUS_DLY (Bitfield-Mask: 0xff)            */
#define OQSPIF_OQSPIF_ERASECMDB_REG_OSPIC_ERSRES_HLD_Pos (16UL)     /*!< OSPIC_ERSRES_HLD (Bit 16)                             */
#define OQSPIF_OQSPIF_ERASECMDB_REG_OSPIC_ERSRES_HLD_Msk (0xf0000UL) /*!< OSPIC_ERSRES_HLD (Bitfield-Mask: 0x0f)               */
#define OQSPIF_OQSPIF_ERASECMDB_REG_OSPIC_ERS_CS_HI_Pos (10UL)      /*!< OSPIC_ERS_CS_HI (Bit 10)                              */
#define OQSPIF_OQSPIF_ERASECMDB_REG_OSPIC_ERS_CS_HI_Msk (0x7c00UL)  /*!< OSPIC_ERS_CS_HI (Bitfield-Mask: 0x1f)                 */
#define OQSPIF_OQSPIF_ERASECMDB_REG_OSPIC_EAD_TX_MD_Pos (8UL)       /*!< OSPIC_EAD_TX_MD (Bit 8)                               */
#define OQSPIF_OQSPIF_ERASECMDB_REG_OSPIC_EAD_TX_MD_Msk (0x300UL)   /*!< OSPIC_EAD_TX_MD (Bitfield-Mask: 0x03)                 */
#define OQSPIF_OQSPIF_ERASECMDB_REG_OSPIC_RES_TX_MD_Pos (6UL)       /*!< OSPIC_RES_TX_MD (Bit 6)                               */
#define OQSPIF_OQSPIF_ERASECMDB_REG_OSPIC_RES_TX_MD_Msk (0xc0UL)    /*!< OSPIC_RES_TX_MD (Bitfield-Mask: 0x03)                 */
#define OQSPIF_OQSPIF_ERASECMDB_REG_OSPIC_SUS_TX_MD_Pos (4UL)       /*!< OSPIC_SUS_TX_MD (Bit 4)                               */
#define OQSPIF_OQSPIF_ERASECMDB_REG_OSPIC_SUS_TX_MD_Msk (0x30UL)    /*!< OSPIC_SUS_TX_MD (Bitfield-Mask: 0x03)                 */
#define OQSPIF_OQSPIF_ERASECMDB_REG_OSPIC_WEN_TX_MD_Pos (2UL)       /*!< OSPIC_WEN_TX_MD (Bit 2)                               */
#define OQSPIF_OQSPIF_ERASECMDB_REG_OSPIC_WEN_TX_MD_Msk (0xcUL)     /*!< OSPIC_WEN_TX_MD (Bitfield-Mask: 0x03)                 */
#define OQSPIF_OQSPIF_ERASECMDB_REG_OSPIC_ERS_TX_MD_Pos (0UL)       /*!< OSPIC_ERS_TX_MD (Bit 0)                               */
#define OQSPIF_OQSPIF_ERASECMDB_REG_OSPIC_ERS_TX_MD_Msk (0x3UL)     /*!< OSPIC_ERS_TX_MD (Bitfield-Mask: 0x03)                 */
/* =================================================  OQSPIF_ERASECMDC_REG  ================================================== */
#define OQSPIF_OQSPIF_ERASECMDC_REG_OSPIC_SUSSTS_DLY_Pos (0UL)      /*!< OSPIC_SUSSTS_DLY (Bit 0)                              */
#define OQSPIF_OQSPIF_ERASECMDC_REG_OSPIC_SUSSTS_DLY_Msk (0x3fUL)   /*!< OSPIC_SUSSTS_DLY (Bitfield-Mask: 0x3f)                */
/* =================================================  OQSPIF_ERASECTRL_REG  ================================================== */
#define OQSPIF_OQSPIF_ERASECTRL_REG_OSPIC_ERS_RES_DIS_Pos (28UL)    /*!< OSPIC_ERS_RES_DIS (Bit 28)                            */
#define OQSPIF_OQSPIF_ERASECTRL_REG_OSPIC_ERS_RES_DIS_Msk (0x10000000UL) /*!< OSPIC_ERS_RES_DIS (Bitfield-Mask: 0x01)          */
#define OQSPIF_OQSPIF_ERASECTRL_REG_OSPIC_ERS_STATE_Pos (25UL)      /*!< OSPIC_ERS_STATE (Bit 25)                              */
#define OQSPIF_OQSPIF_ERASECTRL_REG_OSPIC_ERS_STATE_Msk (0xe000000UL) /*!< OSPIC_ERS_STATE (Bitfield-Mask: 0x07)               */
#define OQSPIF_OQSPIF_ERASECTRL_REG_OSPIC_ERASE_EN_Pos (24UL)       /*!< OSPIC_ERASE_EN (Bit 24)                               */
#define OQSPIF_OQSPIF_ERASECTRL_REG_OSPIC_ERASE_EN_Msk (0x1000000UL) /*!< OSPIC_ERASE_EN (Bitfield-Mask: 0x01)                 */
#define OQSPIF_OQSPIF_ERASECTRL_REG_OSPIC_ERS_ADDR_Pos (4UL)        /*!< OSPIC_ERS_ADDR (Bit 4)                                */
#define OQSPIF_OQSPIF_ERASECTRL_REG_OSPIC_ERS_ADDR_Msk (0xfffff0UL) /*!< OSPIC_ERS_ADDR (Bitfield-Mask: 0xfffff)               */
/* =====================================================  OQSPIF_GP_REG  ===================================================== */
#define OQSPIF_OQSPIF_GP_REG_OSPIC_PADS_SLEW_Pos (3UL)              /*!< OSPIC_PADS_SLEW (Bit 3)                               */
#define OQSPIF_OQSPIF_GP_REG_OSPIC_PADS_SLEW_Msk (0x18UL)           /*!< OSPIC_PADS_SLEW (Bitfield-Mask: 0x03)                 */
#define OQSPIF_OQSPIF_GP_REG_OSPIC_PADS_DRV_Pos (1UL)               /*!< OSPIC_PADS_DRV (Bit 1)                                */
#define OQSPIF_OQSPIF_GP_REG_OSPIC_PADS_DRV_Msk (0x6UL)             /*!< OSPIC_PADS_DRV (Bitfield-Mask: 0x03)                  */
/* ==================================================  OQSPIF_READDATA_REG  ================================================== */
#define OQSPIF_OQSPIF_READDATA_REG_OSPIC_READDATA_Pos (0UL)         /*!< OSPIC_READDATA (Bit 0)                                */
#define OQSPIF_OQSPIF_READDATA_REG_OSPIC_READDATA_Msk (0xffffffffUL) /*!< OSPIC_READDATA (Bitfield-Mask: 0xffffffff)           */
/* ==================================================  OQSPIF_RECVDATA_REG  ================================================== */
#define OQSPIF_OQSPIF_RECVDATA_REG_OSPIC_RECVDATA_Pos (0UL)         /*!< OSPIC_RECVDATA (Bit 0)                                */
#define OQSPIF_OQSPIF_RECVDATA_REG_OSPIC_RECVDATA_Msk (0xffffffffUL) /*!< OSPIC_RECVDATA (Bitfield-Mask: 0xffffffff)           */
/* =================================================  OQSPIF_STATUSCMD_REG  ================================================== */
#define OQSPIF_OQSPIF_STATUSCMD_REG_OSPIC_RSTAT_DMY_ZERO_Pos (30UL) /*!< OSPIC_RSTAT_DMY_ZERO (Bit 30)                         */
#define OQSPIF_OQSPIF_STATUSCMD_REG_OSPIC_RSTAT_DMY_ZERO_Msk (0x40000000UL) /*!< OSPIC_RSTAT_DMY_ZERO (Bitfield-Mask: 0x01)    */
#define OQSPIF_OQSPIF_STATUSCMD_REG_OSPIC_RSTAT_DMY_TX_MD_Pos (28UL) /*!< OSPIC_RSTAT_DMY_TX_MD (Bit 28)                       */
#define OQSPIF_OQSPIF_STATUSCMD_REG_OSPIC_RSTAT_DMY_TX_MD_Msk (0x30000000UL) /*!< OSPIC_RSTAT_DMY_TX_MD (Bitfield-Mask: 0x03)  */
#define OQSPIF_OQSPIF_STATUSCMD_REG_OSPIC_RSTAT_DMY_NUM_Pos (24UL)  /*!< OSPIC_RSTAT_DMY_NUM (Bit 24)                          */
#define OQSPIF_OQSPIF_STATUSCMD_REG_OSPIC_RSTAT_DMY_NUM_Msk (0xf000000UL) /*!< OSPIC_RSTAT_DMY_NUM (Bitfield-Mask: 0x0f)       */
#define OQSPIF_OQSPIF_STATUSCMD_REG_OSPIC_RSTAT_DMY_EN_Pos (23UL)   /*!< OSPIC_RSTAT_DMY_EN (Bit 23)                           */
#define OQSPIF_OQSPIF_STATUSCMD_REG_OSPIC_RSTAT_DMY_EN_Msk (0x800000UL) /*!< OSPIC_RSTAT_DMY_EN (Bitfield-Mask: 0x01)          */
#define OQSPIF_OQSPIF_STATUSCMD_REG_OSPIC_STSDLY_SEL_Pos (22UL)     /*!< OSPIC_STSDLY_SEL (Bit 22)                             */
#define OQSPIF_OQSPIF_STATUSCMD_REG_OSPIC_STSDLY_SEL_Msk (0x400000UL) /*!< OSPIC_STSDLY_SEL (Bitfield-Mask: 0x01)              */
#define OQSPIF_OQSPIF_STATUSCMD_REG_OSPIC_RESSTS_DLY_Pos (16UL)     /*!< OSPIC_RESSTS_DLY (Bit 16)                             */
#define OQSPIF_OQSPIF_STATUSCMD_REG_OSPIC_RESSTS_DLY_Msk (0x3f0000UL) /*!< OSPIC_RESSTS_DLY (Bitfield-Mask: 0x3f)              */
#define OQSPIF_OQSPIF_STATUSCMD_REG_OSPIC_BUSY_VAL_Pos (15UL)       /*!< OSPIC_BUSY_VAL (Bit 15)                               */
#define OQSPIF_OQSPIF_STATUSCMD_REG_OSPIC_BUSY_VAL_Msk (0x8000UL)   /*!< OSPIC_BUSY_VAL (Bitfield-Mask: 0x01)                  */
#define OQSPIF_OQSPIF_STATUSCMD_REG_OSPIC_BUSY_POS_Pos (12UL)       /*!< OSPIC_BUSY_POS (Bit 12)                               */
#define OQSPIF_OQSPIF_STATUSCMD_REG_OSPIC_BUSY_POS_Msk (0x7000UL)   /*!< OSPIC_BUSY_POS (Bitfield-Mask: 0x07)                  */
#define OQSPIF_OQSPIF_STATUSCMD_REG_OSPIC_RSTAT_RX_MD_Pos (10UL)    /*!< OSPIC_RSTAT_RX_MD (Bit 10)                            */
#define OQSPIF_OQSPIF_STATUSCMD_REG_OSPIC_RSTAT_RX_MD_Msk (0xc00UL) /*!< OSPIC_RSTAT_RX_MD (Bitfield-Mask: 0x03)               */
#define OQSPIF_OQSPIF_STATUSCMD_REG_OSPIC_RSTAT_TX_MD_Pos (8UL)     /*!< OSPIC_RSTAT_TX_MD (Bit 8)                             */
#define OQSPIF_OQSPIF_STATUSCMD_REG_OSPIC_RSTAT_TX_MD_Msk (0x300UL) /*!< OSPIC_RSTAT_TX_MD (Bitfield-Mask: 0x03)               */
#define OQSPIF_OQSPIF_STATUSCMD_REG_OSPIC_RSTAT_INST_Pos (0UL)      /*!< OSPIC_RSTAT_INST (Bit 0)                              */
#define OQSPIF_OQSPIF_STATUSCMD_REG_OSPIC_RSTAT_INST_Msk (0xffUL)   /*!< OSPIC_RSTAT_INST (Bitfield-Mask: 0xff)                */
/* ===================================================  OQSPIF_STATUS_REG  =================================================== */
#define OQSPIF_OQSPIF_STATUS_REG_OSPIC_BUSY_Pos (0UL)               /*!< OSPIC_BUSY (Bit 0)                                    */
#define OQSPIF_OQSPIF_STATUS_REG_OSPIC_BUSY_Msk (0x1UL)             /*!< OSPIC_BUSY (Bitfield-Mask: 0x01)                      */
/* =================================================  OQSPIF_WRITEDATA_REG  ================================================== */
#define OQSPIF_OQSPIF_WRITEDATA_REG_OSPIC_WRITEDATA_Pos (0UL)       /*!< OSPIC_WRITEDATA (Bit 0)                               */
#define OQSPIF_OQSPIF_WRITEDATA_REG_OSPIC_WRITEDATA_Msk (0xffffffffUL) /*!< OSPIC_WRITEDATA (Bitfield-Mask: 0xffffffff)        */


/* =========================================================================================================================== */
/* ================                                           OTPC                                            ================ */
/* =========================================================================================================================== */

/* =====================================================  OTPC_MODE_REG  ===================================================== */
#define OTPC_OTPC_MODE_REG_OTPC_MODE_PRG_SEL_Pos (6UL)              /*!< OTPC_MODE_PRG_SEL (Bit 6)                             */
#define OTPC_OTPC_MODE_REG_OTPC_MODE_PRG_SEL_Msk (0xc0UL)           /*!< OTPC_MODE_PRG_SEL (Bitfield-Mask: 0x03)               */
#define OTPC_OTPC_MODE_REG_OTPC_MODE_HT_MARG_EN_Pos (5UL)           /*!< OTPC_MODE_HT_MARG_EN (Bit 5)                          */
#define OTPC_OTPC_MODE_REG_OTPC_MODE_HT_MARG_EN_Msk (0x20UL)        /*!< OTPC_MODE_HT_MARG_EN (Bitfield-Mask: 0x01)            */
#define OTPC_OTPC_MODE_REG_OTPC_MODE_USE_TST_ROW_Pos (4UL)          /*!< OTPC_MODE_USE_TST_ROW (Bit 4)                         */
#define OTPC_OTPC_MODE_REG_OTPC_MODE_USE_TST_ROW_Msk (0x10UL)       /*!< OTPC_MODE_USE_TST_ROW (Bitfield-Mask: 0x01)           */
#define OTPC_OTPC_MODE_REG_OTPC_MODE_MODE_Pos (0UL)                 /*!< OTPC_MODE_MODE (Bit 0)                                */
#define OTPC_OTPC_MODE_REG_OTPC_MODE_MODE_Msk (0x7UL)               /*!< OTPC_MODE_MODE (Bitfield-Mask: 0x07)                  */
/* ====================================================  OTPC_PADDR_REG  ===================================================== */
#define OTPC_OTPC_PADDR_REG_OTPC_PADDR_Pos (0UL)                    /*!< OTPC_PADDR (Bit 0)                                    */
#define OTPC_OTPC_PADDR_REG_OTPC_PADDR_Msk (0x3ffUL)                /*!< OTPC_PADDR (Bitfield-Mask: 0x3ff)                     */
/* ====================================================  OTPC_PWORD_REG  ===================================================== */
#define OTPC_OTPC_PWORD_REG_OTPC_PWORD_Pos (0UL)                    /*!< OTPC_PWORD (Bit 0)                                    */
#define OTPC_OTPC_PWORD_REG_OTPC_PWORD_Msk (0xffffffffUL)           /*!< OTPC_PWORD (Bitfield-Mask: 0xffffffff)                */
/* =====================================================  OTPC_STAT_REG  ===================================================== */
#define OTPC_OTPC_STAT_REG_OTPC_STAT_MRDY_Pos (2UL)                 /*!< OTPC_STAT_MRDY (Bit 2)                                */
#define OTPC_OTPC_STAT_REG_OTPC_STAT_MRDY_Msk (0x4UL)               /*!< OTPC_STAT_MRDY (Bitfield-Mask: 0x01)                  */
#define OTPC_OTPC_STAT_REG_OTPC_STAT_PBUF_EMPTY_Pos (1UL)           /*!< OTPC_STAT_PBUF_EMPTY (Bit 1)                          */
#define OTPC_OTPC_STAT_REG_OTPC_STAT_PBUF_EMPTY_Msk (0x2UL)         /*!< OTPC_STAT_PBUF_EMPTY (Bitfield-Mask: 0x01)            */
#define OTPC_OTPC_STAT_REG_OTPC_STAT_PRDY_Pos (0UL)                 /*!< OTPC_STAT_PRDY (Bit 0)                                */
#define OTPC_OTPC_STAT_REG_OTPC_STAT_PRDY_Msk (0x1UL)               /*!< OTPC_STAT_PRDY (Bitfield-Mask: 0x01)                  */
/* =====================================================  OTPC_TIM1_REG  ===================================================== */
#define OTPC_OTPC_TIM1_REG_OTPC_TIM1_US_T_CSP_Pos (24UL)            /*!< OTPC_TIM1_US_T_CSP (Bit 24)                           */
#define OTPC_OTPC_TIM1_REG_OTPC_TIM1_US_T_CSP_Msk (0x7f000000UL)    /*!< OTPC_TIM1_US_T_CSP (Bitfield-Mask: 0x7f)              */
#define OTPC_OTPC_TIM1_REG_OTPC_TIM1_US_T_CS_Pos (20UL)             /*!< OTPC_TIM1_US_T_CS (Bit 20)                            */
#define OTPC_OTPC_TIM1_REG_OTPC_TIM1_US_T_CS_Msk (0xf00000UL)       /*!< OTPC_TIM1_US_T_CS (Bitfield-Mask: 0x0f)               */
#define OTPC_OTPC_TIM1_REG_OTPC_TIM1_US_T_PL_Pos (16UL)             /*!< OTPC_TIM1_US_T_PL (Bit 16)                            */
#define OTPC_OTPC_TIM1_REG_OTPC_TIM1_US_T_PL_Msk (0xf0000UL)        /*!< OTPC_TIM1_US_T_PL (Bitfield-Mask: 0x0f)               */
#define OTPC_OTPC_TIM1_REG_OTPC_TIM1_CC_T_RD_Pos (12UL)             /*!< OTPC_TIM1_CC_T_RD (Bit 12)                            */
#define OTPC_OTPC_TIM1_REG_OTPC_TIM1_CC_T_RD_Msk (0xf000UL)         /*!< OTPC_TIM1_CC_T_RD (Bitfield-Mask: 0x0f)               */
#define OTPC_OTPC_TIM1_REG_OTPC_TIM1_CC_T_20NS_Pos (8UL)            /*!< OTPC_TIM1_CC_T_20NS (Bit 8)                           */
#define OTPC_OTPC_TIM1_REG_OTPC_TIM1_CC_T_20NS_Msk (0x700UL)        /*!< OTPC_TIM1_CC_T_20NS (Bitfield-Mask: 0x07)             */
#define OTPC_OTPC_TIM1_REG_OTPC_TIM1_CC_T_1US_Pos (0UL)             /*!< OTPC_TIM1_CC_T_1US (Bit 0)                            */
#define OTPC_OTPC_TIM1_REG_OTPC_TIM1_CC_T_1US_Msk (0xffUL)          /*!< OTPC_TIM1_CC_T_1US (Bitfield-Mask: 0xff)              */
/* =====================================================  OTPC_TIM2_REG  ===================================================== */
#define OTPC_OTPC_TIM2_REG_OTPC_TIM2_US_ADD_CC_EN_Pos (31UL)        /*!< OTPC_TIM2_US_ADD_CC_EN (Bit 31)                       */
#define OTPC_OTPC_TIM2_REG_OTPC_TIM2_US_ADD_CC_EN_Msk (0x80000000UL) /*!< OTPC_TIM2_US_ADD_CC_EN (Bitfield-Mask: 0x01)         */
#define OTPC_OTPC_TIM2_REG_OTPC_TIM2_US_T_SAS_Pos (29UL)            /*!< OTPC_TIM2_US_T_SAS (Bit 29)                           */
#define OTPC_OTPC_TIM2_REG_OTPC_TIM2_US_T_SAS_Msk (0x60000000UL)    /*!< OTPC_TIM2_US_T_SAS (Bitfield-Mask: 0x03)              */
#define OTPC_OTPC_TIM2_REG_OTPC_TIM2_US_T_PPH_Pos (24UL)            /*!< OTPC_TIM2_US_T_PPH (Bit 24)                           */
#define OTPC_OTPC_TIM2_REG_OTPC_TIM2_US_T_PPH_Msk (0x1f000000UL)    /*!< OTPC_TIM2_US_T_PPH (Bitfield-Mask: 0x1f)              */
#define OTPC_OTPC_TIM2_REG_OTPC_TIM2_US_T_VDS_Pos (21UL)            /*!< OTPC_TIM2_US_T_VDS (Bit 21)                           */
#define OTPC_OTPC_TIM2_REG_OTPC_TIM2_US_T_VDS_Msk (0xe00000UL)      /*!< OTPC_TIM2_US_T_VDS (Bitfield-Mask: 0x07)              */
#define OTPC_OTPC_TIM2_REG_OTPC_TIM2_US_T_PPS_Pos (16UL)            /*!< OTPC_TIM2_US_T_PPS (Bit 16)                           */
#define OTPC_OTPC_TIM2_REG_OTPC_TIM2_US_T_PPS_Msk (0x1f0000UL)      /*!< OTPC_TIM2_US_T_PPS (Bitfield-Mask: 0x1f)              */
#define OTPC_OTPC_TIM2_REG_OTPC_TIM2_US_T_PPR_Pos (8UL)             /*!< OTPC_TIM2_US_T_PPR (Bit 8)                            */
#define OTPC_OTPC_TIM2_REG_OTPC_TIM2_US_T_PPR_Msk (0x7f00UL)        /*!< OTPC_TIM2_US_T_PPR (Bitfield-Mask: 0x7f)              */
#define OTPC_OTPC_TIM2_REG_OTPC_TIM2_US_T_PWI_Pos (5UL)             /*!< OTPC_TIM2_US_T_PWI (Bit 5)                            */
#define OTPC_OTPC_TIM2_REG_OTPC_TIM2_US_T_PWI_Msk (0xe0UL)          /*!< OTPC_TIM2_US_T_PWI (Bitfield-Mask: 0x07)              */
#define OTPC_OTPC_TIM2_REG_OTPC_TIM2_US_T_PW_Pos (0UL)              /*!< OTPC_TIM2_US_T_PW (Bit 0)                             */
#define OTPC_OTPC_TIM2_REG_OTPC_TIM2_US_T_PW_Msk (0x1fUL)           /*!< OTPC_TIM2_US_T_PW (Bitfield-Mask: 0x1f)               */


/* =========================================================================================================================== */
/* ================                                           PCM1                                            ================ */
/* =========================================================================================================================== */

/* =====================================================  PCM1_CTRL_REG  ===================================================== */
#define PCM1_PCM1_CTRL_REG_PCM_FSC_DIV_Pos (20UL)                   /*!< PCM_FSC_DIV (Bit 20)                                  */
#define PCM1_PCM1_CTRL_REG_PCM_FSC_DIV_Msk (0xfff00000UL)           /*!< PCM_FSC_DIV (Bitfield-Mask: 0xfff)                    */
#define PCM1_PCM1_CTRL_REG_PCM_FSC_EDGE_Pos (16UL)                  /*!< PCM_FSC_EDGE (Bit 16)                                 */
#define PCM1_PCM1_CTRL_REG_PCM_FSC_EDGE_Msk (0x10000UL)             /*!< PCM_FSC_EDGE (Bitfield-Mask: 0x01)                    */
#define PCM1_PCM1_CTRL_REG_PCM_CH_DEL_Pos (11UL)                    /*!< PCM_CH_DEL (Bit 11)                                   */
#define PCM1_PCM1_CTRL_REG_PCM_CH_DEL_Msk (0xf800UL)                /*!< PCM_CH_DEL (Bitfield-Mask: 0x1f)                      */
#define PCM1_PCM1_CTRL_REG_PCM_CLK_BIT_Pos (10UL)                   /*!< PCM_CLK_BIT (Bit 10)                                  */
#define PCM1_PCM1_CTRL_REG_PCM_CLK_BIT_Msk (0x400UL)                /*!< PCM_CLK_BIT (Bitfield-Mask: 0x01)                     */
#define PCM1_PCM1_CTRL_REG_PCM_FSCINV_Pos (9UL)                     /*!< PCM_FSCINV (Bit 9)                                    */
#define PCM1_PCM1_CTRL_REG_PCM_FSCINV_Msk (0x200UL)                 /*!< PCM_FSCINV (Bitfield-Mask: 0x01)                      */
#define PCM1_PCM1_CTRL_REG_PCM_CLKINV_Pos (8UL)                     /*!< PCM_CLKINV (Bit 8)                                    */
#define PCM1_PCM1_CTRL_REG_PCM_CLKINV_Msk (0x100UL)                 /*!< PCM_CLKINV (Bitfield-Mask: 0x01)                      */
#define PCM1_PCM1_CTRL_REG_PCM_PPOD_Pos   (7UL)                     /*!< PCM_PPOD (Bit 7)                                      */
#define PCM1_PCM1_CTRL_REG_PCM_PPOD_Msk   (0x80UL)                  /*!< PCM_PPOD (Bitfield-Mask: 0x01)                        */
#define PCM1_PCM1_CTRL_REG_PCM_FSCDEL_Pos (6UL)                     /*!< PCM_FSCDEL (Bit 6)                                    */
#define PCM1_PCM1_CTRL_REG_PCM_FSCDEL_Msk (0x40UL)                  /*!< PCM_FSCDEL (Bitfield-Mask: 0x01)                      */
#define PCM1_PCM1_CTRL_REG_PCM_FSCLEN_Pos (2UL)                     /*!< PCM_FSCLEN (Bit 2)                                    */
#define PCM1_PCM1_CTRL_REG_PCM_FSCLEN_Msk (0x3cUL)                  /*!< PCM_FSCLEN (Bitfield-Mask: 0x0f)                      */
#define PCM1_PCM1_CTRL_REG_PCM_MASTER_Pos (1UL)                     /*!< PCM_MASTER (Bit 1)                                    */
#define PCM1_PCM1_CTRL_REG_PCM_MASTER_Msk (0x2UL)                   /*!< PCM_MASTER (Bitfield-Mask: 0x01)                      */
#define PCM1_PCM1_CTRL_REG_PCM_EN_Pos     (0UL)                     /*!< PCM_EN (Bit 0)                                        */
#define PCM1_PCM1_CTRL_REG_PCM_EN_Msk     (0x1UL)                   /*!< PCM_EN (Bitfield-Mask: 0x01)                          */
/* =====================================================  PCM1_IN1_REG  ====================================================== */
#define PCM1_PCM1_IN1_REG_PCM_IN_Pos      (0UL)                     /*!< PCM_IN (Bit 0)                                        */
#define PCM1_PCM1_IN1_REG_PCM_IN_Msk      (0xffffffffUL)            /*!< PCM_IN (Bitfield-Mask: 0xffffffff)                    */
/* =====================================================  PCM1_IN2_REG  ====================================================== */
#define PCM1_PCM1_IN2_REG_PCM_IN_Pos      (0UL)                     /*!< PCM_IN (Bit 0)                                        */
#define PCM1_PCM1_IN2_REG_PCM_IN_Msk      (0xffffffffUL)            /*!< PCM_IN (Bitfield-Mask: 0xffffffff)                    */
/* =====================================================  PCM1_OUT1_REG  ===================================================== */
#define PCM1_PCM1_OUT1_REG_PCM_OUT_Pos    (0UL)                     /*!< PCM_OUT (Bit 0)                                       */
#define PCM1_PCM1_OUT1_REG_PCM_OUT_Msk    (0xffffffffUL)            /*!< PCM_OUT (Bitfield-Mask: 0xffffffff)                   */
/* =====================================================  PCM1_OUT2_REG  ===================================================== */
#define PCM1_PCM1_OUT2_REG_PCM_OUT_Pos    (0UL)                     /*!< PCM_OUT (Bit 0)                                       */
#define PCM1_PCM1_OUT2_REG_PCM_OUT_Msk    (0xffffffffUL)            /*!< PCM_OUT (Bitfield-Mask: 0xffffffff)                   */


/* =========================================================================================================================== */
/* ================                                            PDC                                            ================ */
/* =========================================================================================================================== */

/* ==================================================  PDC_ACKNOWLEDGE_REG  ================================================== */
#define PDC_PDC_ACKNOWLEDGE_REG_PDC_ACKNOWLEDGE_Pos (0UL)           /*!< PDC_ACKNOWLEDGE (Bit 0)                               */
#define PDC_PDC_ACKNOWLEDGE_REG_PDC_ACKNOWLEDGE_Msk (0x1fUL)        /*!< PDC_ACKNOWLEDGE (Bitfield-Mask: 0x1f)                 */
/* =====================================================  PDC_CTRL0_REG  ===================================================== */
#define PDC_PDC_CTRL0_REG_PDC_MASTER_Pos  (11UL)                    /*!< PDC_MASTER (Bit 11)                                   */
#define PDC_PDC_CTRL0_REG_PDC_MASTER_Msk  (0x1800UL)                /*!< PDC_MASTER (Bitfield-Mask: 0x03)                      */
#define PDC_PDC_CTRL0_REG_EN_SNC_Pos      (10UL)                    /*!< EN_SNC (Bit 10)                                       */
#define PDC_PDC_CTRL0_REG_EN_SNC_Msk      (0x400UL)                 /*!< EN_SNC (Bitfield-Mask: 0x01)                          */
#define PDC_PDC_CTRL0_REG_EN_TMR_Pos      (8UL)                     /*!< EN_TMR (Bit 8)                                        */
#define PDC_PDC_CTRL0_REG_EN_TMR_Msk      (0x100UL)                 /*!< EN_TMR (Bitfield-Mask: 0x01)                          */
#define PDC_PDC_CTRL0_REG_EN_XTAL_Pos     (7UL)                     /*!< EN_XTAL (Bit 7)                                       */
#define PDC_PDC_CTRL0_REG_EN_XTAL_Msk     (0x80UL)                  /*!< EN_XTAL (Bitfield-Mask: 0x01)                         */
#define PDC_PDC_CTRL0_REG_TRIG_ID_Pos     (2UL)                     /*!< TRIG_ID (Bit 2)                                       */
#define PDC_PDC_CTRL0_REG_TRIG_ID_Msk     (0x7cUL)                  /*!< TRIG_ID (Bitfield-Mask: 0x1f)                         */
#define PDC_PDC_CTRL0_REG_TRIG_SELECT_Pos (0UL)                     /*!< TRIG_SELECT (Bit 0)                                   */
#define PDC_PDC_CTRL0_REG_TRIG_SELECT_Msk (0x3UL)                   /*!< TRIG_SELECT (Bitfield-Mask: 0x03)                     */
/* ====================================================  PDC_CTRL10_REG  ===================================================== */
#define PDC_PDC_CTRL10_REG_PDC_MASTER_Pos (11UL)                    /*!< PDC_MASTER (Bit 11)                                   */
#define PDC_PDC_CTRL10_REG_PDC_MASTER_Msk (0x1800UL)                /*!< PDC_MASTER (Bitfield-Mask: 0x03)                      */
#define PDC_PDC_CTRL10_REG_EN_SNC_Pos     (10UL)                    /*!< EN_SNC (Bit 10)                                       */
#define PDC_PDC_CTRL10_REG_EN_SNC_Msk     (0x400UL)                 /*!< EN_SNC (Bitfield-Mask: 0x01)                          */
#define PDC_PDC_CTRL10_REG_EN_TMR_Pos     (8UL)                     /*!< EN_TMR (Bit 8)                                        */
#define PDC_PDC_CTRL10_REG_EN_TMR_Msk     (0x100UL)                 /*!< EN_TMR (Bitfield-Mask: 0x01)                          */
#define PDC_PDC_CTRL10_REG_EN_XTAL_Pos    (7UL)                     /*!< EN_XTAL (Bit 7)                                       */
#define PDC_PDC_CTRL10_REG_EN_XTAL_Msk    (0x80UL)                  /*!< EN_XTAL (Bitfield-Mask: 0x01)                         */
#define PDC_PDC_CTRL10_REG_TRIG_ID_Pos    (2UL)                     /*!< TRIG_ID (Bit 2)                                       */
#define PDC_PDC_CTRL10_REG_TRIG_ID_Msk    (0x7cUL)                  /*!< TRIG_ID (Bitfield-Mask: 0x1f)                         */
#define PDC_PDC_CTRL10_REG_TRIG_SELECT_Pos (0UL)                    /*!< TRIG_SELECT (Bit 0)                                   */
#define PDC_PDC_CTRL10_REG_TRIG_SELECT_Msk (0x3UL)                  /*!< TRIG_SELECT (Bitfield-Mask: 0x03)                     */
/* ====================================================  PDC_CTRL11_REG  ===================================================== */
#define PDC_PDC_CTRL11_REG_PDC_MASTER_Pos (11UL)                    /*!< PDC_MASTER (Bit 11)                                   */
#define PDC_PDC_CTRL11_REG_PDC_MASTER_Msk (0x1800UL)                /*!< PDC_MASTER (Bitfield-Mask: 0x03)                      */
#define PDC_PDC_CTRL11_REG_EN_SNC_Pos     (10UL)                    /*!< EN_SNC (Bit 10)                                       */
#define PDC_PDC_CTRL11_REG_EN_SNC_Msk     (0x400UL)                 /*!< EN_SNC (Bitfield-Mask: 0x01)                          */
#define PDC_PDC_CTRL11_REG_EN_TMR_Pos     (8UL)                     /*!< EN_TMR (Bit 8)                                        */
#define PDC_PDC_CTRL11_REG_EN_TMR_Msk     (0x100UL)                 /*!< EN_TMR (Bitfield-Mask: 0x01)                          */
#define PDC_PDC_CTRL11_REG_EN_XTAL_Pos    (7UL)                     /*!< EN_XTAL (Bit 7)                                       */
#define PDC_PDC_CTRL11_REG_EN_XTAL_Msk    (0x80UL)                  /*!< EN_XTAL (Bitfield-Mask: 0x01)                         */
#define PDC_PDC_CTRL11_REG_TRIG_ID_Pos    (2UL)                     /*!< TRIG_ID (Bit 2)                                       */
#define PDC_PDC_CTRL11_REG_TRIG_ID_Msk    (0x7cUL)                  /*!< TRIG_ID (Bitfield-Mask: 0x1f)                         */
#define PDC_PDC_CTRL11_REG_TRIG_SELECT_Pos (0UL)                    /*!< TRIG_SELECT (Bit 0)                                   */
#define PDC_PDC_CTRL11_REG_TRIG_SELECT_Msk (0x3UL)                  /*!< TRIG_SELECT (Bitfield-Mask: 0x03)                     */
/* ====================================================  PDC_CTRL12_REG  ===================================================== */
#define PDC_PDC_CTRL12_REG_PDC_MASTER_Pos (11UL)                    /*!< PDC_MASTER (Bit 11)                                   */
#define PDC_PDC_CTRL12_REG_PDC_MASTER_Msk (0x1800UL)                /*!< PDC_MASTER (Bitfield-Mask: 0x03)                      */
#define PDC_PDC_CTRL12_REG_EN_SNC_Pos     (10UL)                    /*!< EN_SNC (Bit 10)                                       */
#define PDC_PDC_CTRL12_REG_EN_SNC_Msk     (0x400UL)                 /*!< EN_SNC (Bitfield-Mask: 0x01)                          */
#define PDC_PDC_CTRL12_REG_EN_TMR_Pos     (8UL)                     /*!< EN_TMR (Bit 8)                                        */
#define PDC_PDC_CTRL12_REG_EN_TMR_Msk     (0x100UL)                 /*!< EN_TMR (Bitfield-Mask: 0x01)                          */
#define PDC_PDC_CTRL12_REG_EN_XTAL_Pos    (7UL)                     /*!< EN_XTAL (Bit 7)                                       */
#define PDC_PDC_CTRL12_REG_EN_XTAL_Msk    (0x80UL)                  /*!< EN_XTAL (Bitfield-Mask: 0x01)                         */
#define PDC_PDC_CTRL12_REG_TRIG_ID_Pos    (2UL)                     /*!< TRIG_ID (Bit 2)                                       */
#define PDC_PDC_CTRL12_REG_TRIG_ID_Msk    (0x7cUL)                  /*!< TRIG_ID (Bitfield-Mask: 0x1f)                         */
#define PDC_PDC_CTRL12_REG_TRIG_SELECT_Pos (0UL)                    /*!< TRIG_SELECT (Bit 0)                                   */
#define PDC_PDC_CTRL12_REG_TRIG_SELECT_Msk (0x3UL)                  /*!< TRIG_SELECT (Bitfield-Mask: 0x03)                     */
/* ====================================================  PDC_CTRL13_REG  ===================================================== */
#define PDC_PDC_CTRL13_REG_PDC_MASTER_Pos (11UL)                    /*!< PDC_MASTER (Bit 11)                                   */
#define PDC_PDC_CTRL13_REG_PDC_MASTER_Msk (0x1800UL)                /*!< PDC_MASTER (Bitfield-Mask: 0x03)                      */
#define PDC_PDC_CTRL13_REG_EN_SNC_Pos     (10UL)                    /*!< EN_SNC (Bit 10)                                       */
#define PDC_PDC_CTRL13_REG_EN_SNC_Msk     (0x400UL)                 /*!< EN_SNC (Bitfield-Mask: 0x01)                          */
#define PDC_PDC_CTRL13_REG_EN_TMR_Pos     (8UL)                     /*!< EN_TMR (Bit 8)                                        */
#define PDC_PDC_CTRL13_REG_EN_TMR_Msk     (0x100UL)                 /*!< EN_TMR (Bitfield-Mask: 0x01)                          */
#define PDC_PDC_CTRL13_REG_EN_XTAL_Pos    (7UL)                     /*!< EN_XTAL (Bit 7)                                       */
#define PDC_PDC_CTRL13_REG_EN_XTAL_Msk    (0x80UL)                  /*!< EN_XTAL (Bitfield-Mask: 0x01)                         */
#define PDC_PDC_CTRL13_REG_TRIG_ID_Pos    (2UL)                     /*!< TRIG_ID (Bit 2)                                       */
#define PDC_PDC_CTRL13_REG_TRIG_ID_Msk    (0x7cUL)                  /*!< TRIG_ID (Bitfield-Mask: 0x1f)                         */
#define PDC_PDC_CTRL13_REG_TRIG_SELECT_Pos (0UL)                    /*!< TRIG_SELECT (Bit 0)                                   */
#define PDC_PDC_CTRL13_REG_TRIG_SELECT_Msk (0x3UL)                  /*!< TRIG_SELECT (Bitfield-Mask: 0x03)                     */
/* ====================================================  PDC_CTRL14_REG  ===================================================== */
#define PDC_PDC_CTRL14_REG_PDC_MASTER_Pos (11UL)                    /*!< PDC_MASTER (Bit 11)                                   */
#define PDC_PDC_CTRL14_REG_PDC_MASTER_Msk (0x1800UL)                /*!< PDC_MASTER (Bitfield-Mask: 0x03)                      */
#define PDC_PDC_CTRL14_REG_EN_SNC_Pos     (10UL)                    /*!< EN_SNC (Bit 10)                                       */
#define PDC_PDC_CTRL14_REG_EN_SNC_Msk     (0x400UL)                 /*!< EN_SNC (Bitfield-Mask: 0x01)                          */
#define PDC_PDC_CTRL14_REG_EN_TMR_Pos     (8UL)                     /*!< EN_TMR (Bit 8)                                        */
#define PDC_PDC_CTRL14_REG_EN_TMR_Msk     (0x100UL)                 /*!< EN_TMR (Bitfield-Mask: 0x01)                          */
#define PDC_PDC_CTRL14_REG_EN_XTAL_Pos    (7UL)                     /*!< EN_XTAL (Bit 7)                                       */
#define PDC_PDC_CTRL14_REG_EN_XTAL_Msk    (0x80UL)                  /*!< EN_XTAL (Bitfield-Mask: 0x01)                         */
#define PDC_PDC_CTRL14_REG_TRIG_ID_Pos    (2UL)                     /*!< TRIG_ID (Bit 2)                                       */
#define PDC_PDC_CTRL14_REG_TRIG_ID_Msk    (0x7cUL)                  /*!< TRIG_ID (Bitfield-Mask: 0x1f)                         */
#define PDC_PDC_CTRL14_REG_TRIG_SELECT_Pos (0UL)                    /*!< TRIG_SELECT (Bit 0)                                   */
#define PDC_PDC_CTRL14_REG_TRIG_SELECT_Msk (0x3UL)                  /*!< TRIG_SELECT (Bitfield-Mask: 0x03)                     */
/* ====================================================  PDC_CTRL15_REG  ===================================================== */
#define PDC_PDC_CTRL15_REG_PDC_MASTER_Pos (11UL)                    /*!< PDC_MASTER (Bit 11)                                   */
#define PDC_PDC_CTRL15_REG_PDC_MASTER_Msk (0x1800UL)                /*!< PDC_MASTER (Bitfield-Mask: 0x03)                      */
#define PDC_PDC_CTRL15_REG_EN_SNC_Pos     (10UL)                    /*!< EN_SNC (Bit 10)                                       */
#define PDC_PDC_CTRL15_REG_EN_SNC_Msk     (0x400UL)                 /*!< EN_SNC (Bitfield-Mask: 0x01)                          */
#define PDC_PDC_CTRL15_REG_EN_TMR_Pos     (8UL)                     /*!< EN_TMR (Bit 8)                                        */
#define PDC_PDC_CTRL15_REG_EN_TMR_Msk     (0x100UL)                 /*!< EN_TMR (Bitfield-Mask: 0x01)                          */
#define PDC_PDC_CTRL15_REG_EN_XTAL_Pos    (7UL)                     /*!< EN_XTAL (Bit 7)                                       */
#define PDC_PDC_CTRL15_REG_EN_XTAL_Msk    (0x80UL)                  /*!< EN_XTAL (Bitfield-Mask: 0x01)                         */
#define PDC_PDC_CTRL15_REG_TRIG_ID_Pos    (2UL)                     /*!< TRIG_ID (Bit 2)                                       */
#define PDC_PDC_CTRL15_REG_TRIG_ID_Msk    (0x7cUL)                  /*!< TRIG_ID (Bitfield-Mask: 0x1f)                         */
#define PDC_PDC_CTRL15_REG_TRIG_SELECT_Pos (0UL)                    /*!< TRIG_SELECT (Bit 0)                                   */
#define PDC_PDC_CTRL15_REG_TRIG_SELECT_Msk (0x3UL)                  /*!< TRIG_SELECT (Bitfield-Mask: 0x03)                     */
/* =====================================================  PDC_CTRL1_REG  ===================================================== */
#define PDC_PDC_CTRL1_REG_PDC_MASTER_Pos  (11UL)                    /*!< PDC_MASTER (Bit 11)                                   */
#define PDC_PDC_CTRL1_REG_PDC_MASTER_Msk  (0x1800UL)                /*!< PDC_MASTER (Bitfield-Mask: 0x03)                      */
#define PDC_PDC_CTRL1_REG_EN_SNC_Pos      (10UL)                    /*!< EN_SNC (Bit 10)                                       */
#define PDC_PDC_CTRL1_REG_EN_SNC_Msk      (0x400UL)                 /*!< EN_SNC (Bitfield-Mask: 0x01)                          */
#define PDC_PDC_CTRL1_REG_EN_TMR_Pos      (8UL)                     /*!< EN_TMR (Bit 8)                                        */
#define PDC_PDC_CTRL1_REG_EN_TMR_Msk      (0x100UL)                 /*!< EN_TMR (Bitfield-Mask: 0x01)                          */
#define PDC_PDC_CTRL1_REG_EN_XTAL_Pos     (7UL)                     /*!< EN_XTAL (Bit 7)                                       */
#define PDC_PDC_CTRL1_REG_EN_XTAL_Msk     (0x80UL)                  /*!< EN_XTAL (Bitfield-Mask: 0x01)                         */
#define PDC_PDC_CTRL1_REG_TRIG_ID_Pos     (2UL)                     /*!< TRIG_ID (Bit 2)                                       */
#define PDC_PDC_CTRL1_REG_TRIG_ID_Msk     (0x7cUL)                  /*!< TRIG_ID (Bitfield-Mask: 0x1f)                         */
#define PDC_PDC_CTRL1_REG_TRIG_SELECT_Pos (0UL)                     /*!< TRIG_SELECT (Bit 0)                                   */
#define PDC_PDC_CTRL1_REG_TRIG_SELECT_Msk (0x3UL)                   /*!< TRIG_SELECT (Bitfield-Mask: 0x03)                     */
/* =====================================================  PDC_CTRL2_REG  ===================================================== */
#define PDC_PDC_CTRL2_REG_PDC_MASTER_Pos  (11UL)                    /*!< PDC_MASTER (Bit 11)                                   */
#define PDC_PDC_CTRL2_REG_PDC_MASTER_Msk  (0x1800UL)                /*!< PDC_MASTER (Bitfield-Mask: 0x03)                      */
#define PDC_PDC_CTRL2_REG_EN_SNC_Pos      (10UL)                    /*!< EN_SNC (Bit 10)                                       */
#define PDC_PDC_CTRL2_REG_EN_SNC_Msk      (0x400UL)                 /*!< EN_SNC (Bitfield-Mask: 0x01)                          */
#define PDC_PDC_CTRL2_REG_EN_TMR_Pos      (8UL)                     /*!< EN_TMR (Bit 8)                                        */
#define PDC_PDC_CTRL2_REG_EN_TMR_Msk      (0x100UL)                 /*!< EN_TMR (Bitfield-Mask: 0x01)                          */
#define PDC_PDC_CTRL2_REG_EN_XTAL_Pos     (7UL)                     /*!< EN_XTAL (Bit 7)                                       */
#define PDC_PDC_CTRL2_REG_EN_XTAL_Msk     (0x80UL)                  /*!< EN_XTAL (Bitfield-Mask: 0x01)                         */
#define PDC_PDC_CTRL2_REG_TRIG_ID_Pos     (2UL)                     /*!< TRIG_ID (Bit 2)                                       */
#define PDC_PDC_CTRL2_REG_TRIG_ID_Msk     (0x7cUL)                  /*!< TRIG_ID (Bitfield-Mask: 0x1f)                         */
#define PDC_PDC_CTRL2_REG_TRIG_SELECT_Pos (0UL)                     /*!< TRIG_SELECT (Bit 0)                                   */
#define PDC_PDC_CTRL2_REG_TRIG_SELECT_Msk (0x3UL)                   /*!< TRIG_SELECT (Bitfield-Mask: 0x03)                     */
/* =====================================================  PDC_CTRL3_REG  ===================================================== */
#define PDC_PDC_CTRL3_REG_PDC_MASTER_Pos  (11UL)                    /*!< PDC_MASTER (Bit 11)                                   */
#define PDC_PDC_CTRL3_REG_PDC_MASTER_Msk  (0x1800UL)                /*!< PDC_MASTER (Bitfield-Mask: 0x03)                      */
#define PDC_PDC_CTRL3_REG_EN_SNC_Pos      (10UL)                    /*!< EN_SNC (Bit 10)                                       */
#define PDC_PDC_CTRL3_REG_EN_SNC_Msk      (0x400UL)                 /*!< EN_SNC (Bitfield-Mask: 0x01)                          */
#define PDC_PDC_CTRL3_REG_EN_TMR_Pos      (8UL)                     /*!< EN_TMR (Bit 8)                                        */
#define PDC_PDC_CTRL3_REG_EN_TMR_Msk      (0x100UL)                 /*!< EN_TMR (Bitfield-Mask: 0x01)                          */
#define PDC_PDC_CTRL3_REG_EN_XTAL_Pos     (7UL)                     /*!< EN_XTAL (Bit 7)                                       */
#define PDC_PDC_CTRL3_REG_EN_XTAL_Msk     (0x80UL)                  /*!< EN_XTAL (Bitfield-Mask: 0x01)                         */
#define PDC_PDC_CTRL3_REG_TRIG_ID_Pos     (2UL)                     /*!< TRIG_ID (Bit 2)                                       */
#define PDC_PDC_CTRL3_REG_TRIG_ID_Msk     (0x7cUL)                  /*!< TRIG_ID (Bitfield-Mask: 0x1f)                         */
#define PDC_PDC_CTRL3_REG_TRIG_SELECT_Pos (0UL)                     /*!< TRIG_SELECT (Bit 0)                                   */
#define PDC_PDC_CTRL3_REG_TRIG_SELECT_Msk (0x3UL)                   /*!< TRIG_SELECT (Bitfield-Mask: 0x03)                     */
/* =====================================================  PDC_CTRL4_REG  ===================================================== */
#define PDC_PDC_CTRL4_REG_PDC_MASTER_Pos  (11UL)                    /*!< PDC_MASTER (Bit 11)                                   */
#define PDC_PDC_CTRL4_REG_PDC_MASTER_Msk  (0x1800UL)                /*!< PDC_MASTER (Bitfield-Mask: 0x03)                      */
#define PDC_PDC_CTRL4_REG_EN_SNC_Pos      (10UL)                    /*!< EN_SNC (Bit 10)                                       */
#define PDC_PDC_CTRL4_REG_EN_SNC_Msk      (0x400UL)                 /*!< EN_SNC (Bitfield-Mask: 0x01)                          */
#define PDC_PDC_CTRL4_REG_EN_TMR_Pos      (8UL)                     /*!< EN_TMR (Bit 8)                                        */
#define PDC_PDC_CTRL4_REG_EN_TMR_Msk      (0x100UL)                 /*!< EN_TMR (Bitfield-Mask: 0x01)                          */
#define PDC_PDC_CTRL4_REG_EN_XTAL_Pos     (7UL)                     /*!< EN_XTAL (Bit 7)                                       */
#define PDC_PDC_CTRL4_REG_EN_XTAL_Msk     (0x80UL)                  /*!< EN_XTAL (Bitfield-Mask: 0x01)                         */
#define PDC_PDC_CTRL4_REG_TRIG_ID_Pos     (2UL)                     /*!< TRIG_ID (Bit 2)                                       */
#define PDC_PDC_CTRL4_REG_TRIG_ID_Msk     (0x7cUL)                  /*!< TRIG_ID (Bitfield-Mask: 0x1f)                         */
#define PDC_PDC_CTRL4_REG_TRIG_SELECT_Pos (0UL)                     /*!< TRIG_SELECT (Bit 0)                                   */
#define PDC_PDC_CTRL4_REG_TRIG_SELECT_Msk (0x3UL)                   /*!< TRIG_SELECT (Bitfield-Mask: 0x03)                     */
/* =====================================================  PDC_CTRL5_REG  ===================================================== */
#define PDC_PDC_CTRL5_REG_PDC_MASTER_Pos  (11UL)                    /*!< PDC_MASTER (Bit 11)                                   */
#define PDC_PDC_CTRL5_REG_PDC_MASTER_Msk  (0x1800UL)                /*!< PDC_MASTER (Bitfield-Mask: 0x03)                      */
#define PDC_PDC_CTRL5_REG_EN_SNC_Pos      (10UL)                    /*!< EN_SNC (Bit 10)                                       */
#define PDC_PDC_CTRL5_REG_EN_SNC_Msk      (0x400UL)                 /*!< EN_SNC (Bitfield-Mask: 0x01)                          */
#define PDC_PDC_CTRL5_REG_EN_TMR_Pos      (8UL)                     /*!< EN_TMR (Bit 8)                                        */
#define PDC_PDC_CTRL5_REG_EN_TMR_Msk      (0x100UL)                 /*!< EN_TMR (Bitfield-Mask: 0x01)                          */
#define PDC_PDC_CTRL5_REG_EN_XTAL_Pos     (7UL)                     /*!< EN_XTAL (Bit 7)                                       */
#define PDC_PDC_CTRL5_REG_EN_XTAL_Msk     (0x80UL)                  /*!< EN_XTAL (Bitfield-Mask: 0x01)                         */
#define PDC_PDC_CTRL5_REG_TRIG_ID_Pos     (2UL)                     /*!< TRIG_ID (Bit 2)                                       */
#define PDC_PDC_CTRL5_REG_TRIG_ID_Msk     (0x7cUL)                  /*!< TRIG_ID (Bitfield-Mask: 0x1f)                         */
#define PDC_PDC_CTRL5_REG_TRIG_SELECT_Pos (0UL)                     /*!< TRIG_SELECT (Bit 0)                                   */
#define PDC_PDC_CTRL5_REG_TRIG_SELECT_Msk (0x3UL)                   /*!< TRIG_SELECT (Bitfield-Mask: 0x03)                     */
/* =====================================================  PDC_CTRL6_REG  ===================================================== */
#define PDC_PDC_CTRL6_REG_PDC_MASTER_Pos  (11UL)                    /*!< PDC_MASTER (Bit 11)                                   */
#define PDC_PDC_CTRL6_REG_PDC_MASTER_Msk  (0x1800UL)                /*!< PDC_MASTER (Bitfield-Mask: 0x03)                      */
#define PDC_PDC_CTRL6_REG_EN_SNC_Pos      (10UL)                    /*!< EN_SNC (Bit 10)                                       */
#define PDC_PDC_CTRL6_REG_EN_SNC_Msk      (0x400UL)                 /*!< EN_SNC (Bitfield-Mask: 0x01)                          */
#define PDC_PDC_CTRL6_REG_EN_TMR_Pos      (8UL)                     /*!< EN_TMR (Bit 8)                                        */
#define PDC_PDC_CTRL6_REG_EN_TMR_Msk      (0x100UL)                 /*!< EN_TMR (Bitfield-Mask: 0x01)                          */
#define PDC_PDC_CTRL6_REG_EN_XTAL_Pos     (7UL)                     /*!< EN_XTAL (Bit 7)                                       */
#define PDC_PDC_CTRL6_REG_EN_XTAL_Msk     (0x80UL)                  /*!< EN_XTAL (Bitfield-Mask: 0x01)                         */
#define PDC_PDC_CTRL6_REG_TRIG_ID_Pos     (2UL)                     /*!< TRIG_ID (Bit 2)                                       */
#define PDC_PDC_CTRL6_REG_TRIG_ID_Msk     (0x7cUL)                  /*!< TRIG_ID (Bitfield-Mask: 0x1f)                         */
#define PDC_PDC_CTRL6_REG_TRIG_SELECT_Pos (0UL)                     /*!< TRIG_SELECT (Bit 0)                                   */
#define PDC_PDC_CTRL6_REG_TRIG_SELECT_Msk (0x3UL)                   /*!< TRIG_SELECT (Bitfield-Mask: 0x03)                     */
/* =====================================================  PDC_CTRL7_REG  ===================================================== */
#define PDC_PDC_CTRL7_REG_PDC_MASTER_Pos  (11UL)                    /*!< PDC_MASTER (Bit 11)                                   */
#define PDC_PDC_CTRL7_REG_PDC_MASTER_Msk  (0x1800UL)                /*!< PDC_MASTER (Bitfield-Mask: 0x03)                      */
#define PDC_PDC_CTRL7_REG_EN_SNC_Pos      (10UL)                    /*!< EN_SNC (Bit 10)                                       */
#define PDC_PDC_CTRL7_REG_EN_SNC_Msk      (0x400UL)                 /*!< EN_SNC (Bitfield-Mask: 0x01)                          */
#define PDC_PDC_CTRL7_REG_EN_TMR_Pos      (8UL)                     /*!< EN_TMR (Bit 8)                                        */
#define PDC_PDC_CTRL7_REG_EN_TMR_Msk      (0x100UL)                 /*!< EN_TMR (Bitfield-Mask: 0x01)                          */
#define PDC_PDC_CTRL7_REG_EN_XTAL_Pos     (7UL)                     /*!< EN_XTAL (Bit 7)                                       */
#define PDC_PDC_CTRL7_REG_EN_XTAL_Msk     (0x80UL)                  /*!< EN_XTAL (Bitfield-Mask: 0x01)                         */
#define PDC_PDC_CTRL7_REG_TRIG_ID_Pos     (2UL)                     /*!< TRIG_ID (Bit 2)                                       */
#define PDC_PDC_CTRL7_REG_TRIG_ID_Msk     (0x7cUL)                  /*!< TRIG_ID (Bitfield-Mask: 0x1f)                         */
#define PDC_PDC_CTRL7_REG_TRIG_SELECT_Pos (0UL)                     /*!< TRIG_SELECT (Bit 0)                                   */
#define PDC_PDC_CTRL7_REG_TRIG_SELECT_Msk (0x3UL)                   /*!< TRIG_SELECT (Bitfield-Mask: 0x03)                     */
/* =====================================================  PDC_CTRL8_REG  ===================================================== */
#define PDC_PDC_CTRL8_REG_PDC_MASTER_Pos  (11UL)                    /*!< PDC_MASTER (Bit 11)                                   */
#define PDC_PDC_CTRL8_REG_PDC_MASTER_Msk  (0x1800UL)                /*!< PDC_MASTER (Bitfield-Mask: 0x03)                      */
#define PDC_PDC_CTRL8_REG_EN_SNC_Pos      (10UL)                    /*!< EN_SNC (Bit 10)                                       */
#define PDC_PDC_CTRL8_REG_EN_SNC_Msk      (0x400UL)                 /*!< EN_SNC (Bitfield-Mask: 0x01)                          */
#define PDC_PDC_CTRL8_REG_EN_TMR_Pos      (8UL)                     /*!< EN_TMR (Bit 8)                                        */
#define PDC_PDC_CTRL8_REG_EN_TMR_Msk      (0x100UL)                 /*!< EN_TMR (Bitfield-Mask: 0x01)                          */
#define PDC_PDC_CTRL8_REG_EN_XTAL_Pos     (7UL)                     /*!< EN_XTAL (Bit 7)                                       */
#define PDC_PDC_CTRL8_REG_EN_XTAL_Msk     (0x80UL)                  /*!< EN_XTAL (Bitfield-Mask: 0x01)                         */
#define PDC_PDC_CTRL8_REG_TRIG_ID_Pos     (2UL)                     /*!< TRIG_ID (Bit 2)                                       */
#define PDC_PDC_CTRL8_REG_TRIG_ID_Msk     (0x7cUL)                  /*!< TRIG_ID (Bitfield-Mask: 0x1f)                         */
#define PDC_PDC_CTRL8_REG_TRIG_SELECT_Pos (0UL)                     /*!< TRIG_SELECT (Bit 0)                                   */
#define PDC_PDC_CTRL8_REG_TRIG_SELECT_Msk (0x3UL)                   /*!< TRIG_SELECT (Bitfield-Mask: 0x03)                     */
/* =====================================================  PDC_CTRL9_REG  ===================================================== */
#define PDC_PDC_CTRL9_REG_PDC_MASTER_Pos  (11UL)                    /*!< PDC_MASTER (Bit 11)                                   */
#define PDC_PDC_CTRL9_REG_PDC_MASTER_Msk  (0x1800UL)                /*!< PDC_MASTER (Bitfield-Mask: 0x03)                      */
#define PDC_PDC_CTRL9_REG_EN_SNC_Pos      (10UL)                    /*!< EN_SNC (Bit 10)                                       */
#define PDC_PDC_CTRL9_REG_EN_SNC_Msk      (0x400UL)                 /*!< EN_SNC (Bitfield-Mask: 0x01)                          */
#define PDC_PDC_CTRL9_REG_EN_TMR_Pos      (8UL)                     /*!< EN_TMR (Bit 8)                                        */
#define PDC_PDC_CTRL9_REG_EN_TMR_Msk      (0x100UL)                 /*!< EN_TMR (Bitfield-Mask: 0x01)                          */
#define PDC_PDC_CTRL9_REG_EN_XTAL_Pos     (7UL)                     /*!< EN_XTAL (Bit 7)                                       */
#define PDC_PDC_CTRL9_REG_EN_XTAL_Msk     (0x80UL)                  /*!< EN_XTAL (Bitfield-Mask: 0x01)                         */
#define PDC_PDC_CTRL9_REG_TRIG_ID_Pos     (2UL)                     /*!< TRIG_ID (Bit 2)                                       */
#define PDC_PDC_CTRL9_REG_TRIG_ID_Msk     (0x7cUL)                  /*!< TRIG_ID (Bitfield-Mask: 0x1f)                         */
#define PDC_PDC_CTRL9_REG_TRIG_SELECT_Pos (0UL)                     /*!< TRIG_SELECT (Bit 0)                                   */
#define PDC_PDC_CTRL9_REG_TRIG_SELECT_Msk (0x3UL)                   /*!< TRIG_SELECT (Bitfield-Mask: 0x03)                     */
/* =================================================  PDC_PENDING_CM33_REG  ================================================== */
#define PDC_PDC_PENDING_CM33_REG_PDC_PENDING_Pos (0UL)              /*!< PDC_PENDING (Bit 0)                                   */
#define PDC_PDC_PENDING_CM33_REG_PDC_PENDING_Msk (0xffffUL)         /*!< PDC_PENDING (Bitfield-Mask: 0xffff)                   */
/* =================================================  PDC_PENDING_CMAC_REG  ================================================== */
#define PDC_PDC_PENDING_CMAC_REG_PDC_PENDING_Pos (0UL)              /*!< PDC_PENDING (Bit 0)                                   */
#define PDC_PDC_PENDING_CMAC_REG_PDC_PENDING_Msk (0xffffUL)         /*!< PDC_PENDING (Bitfield-Mask: 0xffff)                   */
/* ====================================================  PDC_PENDING_REG  ==================================================== */
#define PDC_PDC_PENDING_REG_PDC_PENDING_Pos (0UL)                   /*!< PDC_PENDING (Bit 0)                                   */
#define PDC_PDC_PENDING_REG_PDC_PENDING_Msk (0xffffUL)              /*!< PDC_PENDING (Bitfield-Mask: 0xffff)                   */
/* ==================================================  PDC_PENDING_SNC_REG  ================================================== */
#define PDC_PDC_PENDING_SNC_REG_PDC_PENDING_Pos (0UL)               /*!< PDC_PENDING (Bit 0)                                   */
#define PDC_PDC_PENDING_SNC_REG_PDC_PENDING_Msk (0xffffUL)          /*!< PDC_PENDING (Bitfield-Mask: 0xffff)                   */
/* ==================================================  PDC_SET_PENDING_REG  ================================================== */
#define PDC_PDC_SET_PENDING_REG_PDC_SET_PENDING_Pos (0UL)           /*!< PDC_SET_PENDING (Bit 0)                               */
#define PDC_PDC_SET_PENDING_REG_PDC_SET_PENDING_Msk (0x1fUL)        /*!< PDC_SET_PENDING (Bitfield-Mask: 0x1f)                 */


/* =========================================================================================================================== */
/* ================                                          PWMLED                                           ================ */
/* =========================================================================================================================== */

/* ===================================================  LED1_PWM_CONF_REG  =================================================== */
#define PWMLED_LED1_PWM_CONF_REG_PWMLED_START_CYCLE_Pos (12UL)      /*!< PWMLED_START_CYCLE (Bit 12)                           */
#define PWMLED_LED1_PWM_CONF_REG_PWMLED_START_CYCLE_Msk (0xfff000UL) /*!< PWMLED_START_CYCLE (Bitfield-Mask: 0xfff)            */
#define PWMLED_LED1_PWM_CONF_REG_PWMLED_STOP_CYCLE_Pos (0UL)        /*!< PWMLED_STOP_CYCLE (Bit 0)                             */
#define PWMLED_LED1_PWM_CONF_REG_PWMLED_STOP_CYCLE_Msk (0xfffUL)    /*!< PWMLED_STOP_CYCLE (Bitfield-Mask: 0xfff)              */
/* ===================================================  LED2_PWM_CONF_REG  =================================================== */
#define PWMLED_LED2_PWM_CONF_REG_PWMLED_START_CYCLE_Pos (12UL)      /*!< PWMLED_START_CYCLE (Bit 12)                           */
#define PWMLED_LED2_PWM_CONF_REG_PWMLED_START_CYCLE_Msk (0xfff000UL) /*!< PWMLED_START_CYCLE (Bitfield-Mask: 0xfff)            */
#define PWMLED_LED2_PWM_CONF_REG_PWMLED_STOP_CYCLE_Pos (0UL)        /*!< PWMLED_STOP_CYCLE (Bit 0)                             */
#define PWMLED_LED2_PWM_CONF_REG_PWMLED_STOP_CYCLE_Msk (0xfffUL)    /*!< PWMLED_STOP_CYCLE (Bitfield-Mask: 0xfff)              */
/* ===================================================  LED3_PWM_CONF_REG  =================================================== */
#define PWMLED_LED3_PWM_CONF_REG_PWMLED_START_CYCLE_Pos (12UL)      /*!< PWMLED_START_CYCLE (Bit 12)                           */
#define PWMLED_LED3_PWM_CONF_REG_PWMLED_START_CYCLE_Msk (0xfff000UL) /*!< PWMLED_START_CYCLE (Bitfield-Mask: 0xfff)            */
#define PWMLED_LED3_PWM_CONF_REG_PWMLED_STOP_CYCLE_Pos (0UL)        /*!< PWMLED_STOP_CYCLE (Bit 0)                             */
#define PWMLED_LED3_PWM_CONF_REG_PWMLED_STOP_CYCLE_Msk (0xfffUL)    /*!< PWMLED_STOP_CYCLE (Bitfield-Mask: 0xfff)              */
/* ===================================================  LEDS_DRV_CTRL_REG  =================================================== */
#define PWMLED_LEDS_DRV_CTRL_REG_LED3_EN_Pos (2UL)                  /*!< LED3_EN (Bit 2)                                       */
#define PWMLED_LEDS_DRV_CTRL_REG_LED3_EN_Msk (0x4UL)                /*!< LED3_EN (Bitfield-Mask: 0x01)                         */
#define PWMLED_LEDS_DRV_CTRL_REG_LED2_EN_Pos (1UL)                  /*!< LED2_EN (Bit 1)                                       */
#define PWMLED_LEDS_DRV_CTRL_REG_LED2_EN_Msk (0x2UL)                /*!< LED2_EN (Bitfield-Mask: 0x01)                         */
#define PWMLED_LEDS_DRV_CTRL_REG_LED1_EN_Pos (0UL)                  /*!< LED1_EN (Bit 0)                                       */
#define PWMLED_LEDS_DRV_CTRL_REG_LED1_EN_Msk (0x1UL)                /*!< LED1_EN (Bitfield-Mask: 0x01)                         */
/* ==================================================  LEDS_FREQUENCY_REG  =================================================== */
#define PWMLED_LEDS_FREQUENCY_REG_PWM_LEDS_PRESCALE_Pos (12UL)      /*!< PWM_LEDS_PRESCALE (Bit 12)                            */
#define PWMLED_LEDS_FREQUENCY_REG_PWM_LEDS_PRESCALE_Msk (0xff000UL) /*!< PWM_LEDS_PRESCALE (Bitfield-Mask: 0xff)               */
#define PWMLED_LEDS_FREQUENCY_REG_PWM_LEDS_PERIOD_Pos (0UL)         /*!< PWM_LEDS_PERIOD (Bit 0)                               */
#define PWMLED_LEDS_FREQUENCY_REG_PWM_LEDS_PERIOD_Msk (0xfffUL)     /*!< PWM_LEDS_PERIOD (Bitfield-Mask: 0xfff)                */
/* ===================================================  LEDS_PWM_CTRL_REG  =================================================== */
#define PWMLED_LEDS_PWM_CTRL_REG_PWM_LEDS_HW_PAUSE_ENABLE_Pos (4UL) /*!< PWM_LEDS_HW_PAUSE_ENABLE (Bit 4)                      */
#define PWMLED_LEDS_PWM_CTRL_REG_PWM_LEDS_HW_PAUSE_ENABLE_Msk (0x10UL) /*!< PWM_LEDS_HW_PAUSE_ENABLE (Bitfield-Mask: 0x01)     */
#define PWMLED_LEDS_PWM_CTRL_REG_PWM_LEDS_SW_PAUSE_Pos (3UL)        /*!< PWM_LEDS_SW_PAUSE (Bit 3)                             */
#define PWMLED_LEDS_PWM_CTRL_REG_PWM_LEDS_SW_PAUSE_Msk (0x8UL)      /*!< PWM_LEDS_SW_PAUSE (Bitfield-Mask: 0x01)               */
#define PWMLED_LEDS_PWM_CTRL_REG_LED3_PWM_ENABLE_Pos (2UL)          /*!< LED3_PWM_ENABLE (Bit 2)                               */
#define PWMLED_LEDS_PWM_CTRL_REG_LED3_PWM_ENABLE_Msk (0x4UL)        /*!< LED3_PWM_ENABLE (Bitfield-Mask: 0x01)                 */
#define PWMLED_LEDS_PWM_CTRL_REG_LED2_PWM_ENABLE_Pos (1UL)          /*!< LED2_PWM_ENABLE (Bit 1)                               */
#define PWMLED_LEDS_PWM_CTRL_REG_LED2_PWM_ENABLE_Msk (0x2UL)        /*!< LED2_PWM_ENABLE (Bitfield-Mask: 0x01)                 */
#define PWMLED_LEDS_PWM_CTRL_REG_LED1_PWM_ENABLE_Pos (0UL)          /*!< LED1_PWM_ENABLE (Bit 0)                               */
#define PWMLED_LEDS_PWM_CTRL_REG_LED1_PWM_ENABLE_Msk (0x1UL)        /*!< LED1_PWM_ENABLE (Bitfield-Mask: 0x01)                 */
/* ====================================================  LEDS_STATUS_REG  ==================================================== */
#define PWMLED_LEDS_STATUS_REG_LED_FREQUENCY_BUSY_Pos (3UL)         /*!< LED_FREQUENCY_BUSY (Bit 3)                            */
#define PWMLED_LEDS_STATUS_REG_LED_FREQUENCY_BUSY_Msk (0x8UL)       /*!< LED_FREQUENCY_BUSY (Bitfield-Mask: 0x01)              */
#define PWMLED_LEDS_STATUS_REG_LED3_CONF_BUSY_Pos (2UL)             /*!< LED3_CONF_BUSY (Bit 2)                                */
#define PWMLED_LEDS_STATUS_REG_LED3_CONF_BUSY_Msk (0x4UL)           /*!< LED3_CONF_BUSY (Bitfield-Mask: 0x01)                  */
#define PWMLED_LEDS_STATUS_REG_LED2_CONF_BUSY_Pos (1UL)             /*!< LED2_CONF_BUSY (Bit 1)                                */
#define PWMLED_LEDS_STATUS_REG_LED2_CONF_BUSY_Msk (0x2UL)           /*!< LED2_CONF_BUSY (Bitfield-Mask: 0x01)                  */
#define PWMLED_LEDS_STATUS_REG_LED1_CONF_BUSY_Pos (0UL)             /*!< LED1_CONF_BUSY (Bit 0)                                */
#define PWMLED_LEDS_STATUS_REG_LED1_CONF_BUSY_Msk (0x1UL)           /*!< LED1_CONF_BUSY (Bitfield-Mask: 0x01)                  */
/* ===================================================  LED_CURR_TRIM_REG  =================================================== */
#define PWMLED_LED_CURR_TRIM_REG_LED3_CURR_TRIM_Pos (8UL)           /*!< LED3_CURR_TRIM (Bit 8)                                */
#define PWMLED_LED_CURR_TRIM_REG_LED3_CURR_TRIM_Msk (0xf00UL)       /*!< LED3_CURR_TRIM (Bitfield-Mask: 0x0f)                  */
#define PWMLED_LED_CURR_TRIM_REG_LED2_CURR_TRIM_Pos (4UL)           /*!< LED2_CURR_TRIM (Bit 4)                                */
#define PWMLED_LED_CURR_TRIM_REG_LED2_CURR_TRIM_Msk (0xf0UL)        /*!< LED2_CURR_TRIM (Bitfield-Mask: 0x0f)                  */
#define PWMLED_LED_CURR_TRIM_REG_LED1_CURR_TRIM_Pos (0UL)           /*!< LED1_CURR_TRIM (Bit 0)                                */
#define PWMLED_LED_CURR_TRIM_REG_LED1_CURR_TRIM_Msk (0xfUL)         /*!< LED1_CURR_TRIM (Bitfield-Mask: 0x0f)                  */
/* ===================================================  LED_LOAD_SEL_REG  ==================================================== */
#define PWMLED_LED_LOAD_SEL_REG_LED3_LOAD_SEL_Pos (6UL)             /*!< LED3_LOAD_SEL (Bit 6)                                 */
#define PWMLED_LED_LOAD_SEL_REG_LED3_LOAD_SEL_Msk (0x1c0UL)         /*!< LED3_LOAD_SEL (Bitfield-Mask: 0x07)                   */
#define PWMLED_LED_LOAD_SEL_REG_LED2_LOAD_SEL_Pos (3UL)             /*!< LED2_LOAD_SEL (Bit 3)                                 */
#define PWMLED_LED_LOAD_SEL_REG_LED2_LOAD_SEL_Msk (0x38UL)          /*!< LED2_LOAD_SEL (Bitfield-Mask: 0x07)                   */
#define PWMLED_LED_LOAD_SEL_REG_LED1_LOAD_SEL_Pos (0UL)             /*!< LED1_LOAD_SEL (Bit 0)                                 */
#define PWMLED_LED_LOAD_SEL_REG_LED1_LOAD_SEL_Msk (0x7UL)           /*!< LED1_LOAD_SEL (Bitfield-Mask: 0x07)                   */


/* =========================================================================================================================== */
/* ================                                           QSPIC                                           ================ */
/* =========================================================================================================================== */

/* ==================================================  QSPIC_AWRITECMD_REG  ================================================== */
#define QSPIC_QSPIC_AWRITECMD_REG_QSPIC_WR_CS_HIGH_MIN_Pos (14UL)   /*!< QSPIC_WR_CS_HIGH_MIN (Bit 14)                         */
#define QSPIC_QSPIC_AWRITECMD_REG_QSPIC_WR_CS_HIGH_MIN_Msk (0x7c000UL) /*!< QSPIC_WR_CS_HIGH_MIN (Bitfield-Mask: 0x1f)         */
#define QSPIC_QSPIC_AWRITECMD_REG_QSPIC_WR_DAT_TX_MD_Pos (12UL)     /*!< QSPIC_WR_DAT_TX_MD (Bit 12)                           */
#define QSPIC_QSPIC_AWRITECMD_REG_QSPIC_WR_DAT_TX_MD_Msk (0x3000UL) /*!< QSPIC_WR_DAT_TX_MD (Bitfield-Mask: 0x03)              */
#define QSPIC_QSPIC_AWRITECMD_REG_QSPIC_WR_ADR_TX_MD_Pos (10UL)     /*!< QSPIC_WR_ADR_TX_MD (Bit 10)                           */
#define QSPIC_QSPIC_AWRITECMD_REG_QSPIC_WR_ADR_TX_MD_Msk (0xc00UL)  /*!< QSPIC_WR_ADR_TX_MD (Bitfield-Mask: 0x03)              */
#define QSPIC_QSPIC_AWRITECMD_REG_QSPIC_WR_INST_TX_MD_Pos (8UL)     /*!< QSPIC_WR_INST_TX_MD (Bit 8)                           */
#define QSPIC_QSPIC_AWRITECMD_REG_QSPIC_WR_INST_TX_MD_Msk (0x300UL) /*!< QSPIC_WR_INST_TX_MD (Bitfield-Mask: 0x03)             */
#define QSPIC_QSPIC_AWRITECMD_REG_QSPIC_WR_INST_Pos (0UL)           /*!< QSPIC_WR_INST (Bit 0)                                 */
#define QSPIC_QSPIC_AWRITECMD_REG_QSPIC_WR_INST_Msk (0xffUL)        /*!< QSPIC_WR_INST (Bitfield-Mask: 0xff)                   */
/* ==================================================  QSPIC_BURSTBRK_REG  =================================================== */
#define QSPIC_QSPIC_BURSTBRK_REG_QSPIC_SEC_HF_DS_Pos (20UL)         /*!< QSPIC_SEC_HF_DS (Bit 20)                              */
#define QSPIC_QSPIC_BURSTBRK_REG_QSPIC_SEC_HF_DS_Msk (0x100000UL)   /*!< QSPIC_SEC_HF_DS (Bitfield-Mask: 0x01)                 */
#define QSPIC_QSPIC_BURSTBRK_REG_QSPIC_BRK_TX_MD_Pos (18UL)         /*!< QSPIC_BRK_TX_MD (Bit 18)                              */
#define QSPIC_QSPIC_BURSTBRK_REG_QSPIC_BRK_TX_MD_Msk (0xc0000UL)    /*!< QSPIC_BRK_TX_MD (Bitfield-Mask: 0x03)                 */
#define QSPIC_QSPIC_BURSTBRK_REG_QSPIC_BRK_SZ_Pos (17UL)            /*!< QSPIC_BRK_SZ (Bit 17)                                 */
#define QSPIC_QSPIC_BURSTBRK_REG_QSPIC_BRK_SZ_Msk (0x20000UL)       /*!< QSPIC_BRK_SZ (Bitfield-Mask: 0x01)                    */
#define QSPIC_QSPIC_BURSTBRK_REG_QSPIC_BRK_EN_Pos (16UL)            /*!< QSPIC_BRK_EN (Bit 16)                                 */
#define QSPIC_QSPIC_BURSTBRK_REG_QSPIC_BRK_EN_Msk (0x10000UL)       /*!< QSPIC_BRK_EN (Bitfield-Mask: 0x01)                    */
#define QSPIC_QSPIC_BURSTBRK_REG_QSPIC_BRK_WRD_Pos (0UL)            /*!< QSPIC_BRK_WRD (Bit 0)                                 */
#define QSPIC_QSPIC_BURSTBRK_REG_QSPIC_BRK_WRD_Msk (0xffffUL)       /*!< QSPIC_BRK_WRD (Bitfield-Mask: 0xffff)                 */
/* ==================================================  QSPIC_BURSTCMDA_REG  ================================================== */
#define QSPIC_QSPIC_BURSTCMDA_REG_QSPIC_DMY_TX_MD_Pos (30UL)        /*!< QSPIC_DMY_TX_MD (Bit 30)                              */
#define QSPIC_QSPIC_BURSTCMDA_REG_QSPIC_DMY_TX_MD_Msk (0xc0000000UL) /*!< QSPIC_DMY_TX_MD (Bitfield-Mask: 0x03)                */
#define QSPIC_QSPIC_BURSTCMDA_REG_QSPIC_EXT_TX_MD_Pos (28UL)        /*!< QSPIC_EXT_TX_MD (Bit 28)                              */
#define QSPIC_QSPIC_BURSTCMDA_REG_QSPIC_EXT_TX_MD_Msk (0x30000000UL) /*!< QSPIC_EXT_TX_MD (Bitfield-Mask: 0x03)                */
#define QSPIC_QSPIC_BURSTCMDA_REG_QSPIC_ADR_TX_MD_Pos (26UL)        /*!< QSPIC_ADR_TX_MD (Bit 26)                              */
#define QSPIC_QSPIC_BURSTCMDA_REG_QSPIC_ADR_TX_MD_Msk (0xc000000UL) /*!< QSPIC_ADR_TX_MD (Bitfield-Mask: 0x03)                 */
#define QSPIC_QSPIC_BURSTCMDA_REG_QSPIC_INST_TX_MD_Pos (24UL)       /*!< QSPIC_INST_TX_MD (Bit 24)                             */
#define QSPIC_QSPIC_BURSTCMDA_REG_QSPIC_INST_TX_MD_Msk (0x3000000UL) /*!< QSPIC_INST_TX_MD (Bitfield-Mask: 0x03)               */
#define QSPIC_QSPIC_BURSTCMDA_REG_QSPIC_EXT_BYTE_Pos (16UL)         /*!< QSPIC_EXT_BYTE (Bit 16)                               */
#define QSPIC_QSPIC_BURSTCMDA_REG_QSPIC_EXT_BYTE_Msk (0xff0000UL)   /*!< QSPIC_EXT_BYTE (Bitfield-Mask: 0xff)                  */
#define QSPIC_QSPIC_BURSTCMDA_REG_QSPIC_INST_WB_Pos (8UL)           /*!< QSPIC_INST_WB (Bit 8)                                 */
#define QSPIC_QSPIC_BURSTCMDA_REG_QSPIC_INST_WB_Msk (0xff00UL)      /*!< QSPIC_INST_WB (Bitfield-Mask: 0xff)                   */
#define QSPIC_QSPIC_BURSTCMDA_REG_QSPIC_INST_Pos (0UL)              /*!< QSPIC_INST (Bit 0)                                    */
#define QSPIC_QSPIC_BURSTCMDA_REG_QSPIC_INST_Msk (0xffUL)           /*!< QSPIC_INST (Bitfield-Mask: 0xff)                      */
/* ==================================================  QSPIC_BURSTCMDB_REG  ================================================== */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_DMY_FORCE_Pos (15UL)        /*!< QSPIC_DMY_FORCE (Bit 15)                              */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_DMY_FORCE_Msk (0x8000UL)    /*!< QSPIC_DMY_FORCE (Bitfield-Mask: 0x01)                 */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_CS_HIGH_MIN_Pos (12UL)      /*!< QSPIC_CS_HIGH_MIN (Bit 12)                            */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_CS_HIGH_MIN_Msk (0x7000UL)  /*!< QSPIC_CS_HIGH_MIN (Bitfield-Mask: 0x07)               */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_WRAP_SIZE_Pos (10UL)        /*!< QSPIC_WRAP_SIZE (Bit 10)                              */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_WRAP_SIZE_Msk (0xc00UL)     /*!< QSPIC_WRAP_SIZE (Bitfield-Mask: 0x03)                 */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_WRAP_LEN_Pos (8UL)          /*!< QSPIC_WRAP_LEN (Bit 8)                                */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_WRAP_LEN_Msk (0x300UL)      /*!< QSPIC_WRAP_LEN (Bitfield-Mask: 0x03)                  */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_WRAP_MD_Pos (7UL)           /*!< QSPIC_WRAP_MD (Bit 7)                                 */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_WRAP_MD_Msk (0x80UL)        /*!< QSPIC_WRAP_MD (Bitfield-Mask: 0x01)                   */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_INST_MD_Pos (6UL)           /*!< QSPIC_INST_MD (Bit 6)                                 */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_INST_MD_Msk (0x40UL)        /*!< QSPIC_INST_MD (Bitfield-Mask: 0x01)                   */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_DMY_NUM_Pos (4UL)           /*!< QSPIC_DMY_NUM (Bit 4)                                 */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_DMY_NUM_Msk (0x30UL)        /*!< QSPIC_DMY_NUM (Bitfield-Mask: 0x03)                   */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_EXT_HF_DS_Pos (3UL)         /*!< QSPIC_EXT_HF_DS (Bit 3)                               */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_EXT_HF_DS_Msk (0x8UL)       /*!< QSPIC_EXT_HF_DS (Bitfield-Mask: 0x01)                 */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_EXT_BYTE_EN_Pos (2UL)       /*!< QSPIC_EXT_BYTE_EN (Bit 2)                             */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_EXT_BYTE_EN_Msk (0x4UL)     /*!< QSPIC_EXT_BYTE_EN (Bitfield-Mask: 0x01)               */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_DAT_RX_MD_Pos (0UL)         /*!< QSPIC_DAT_RX_MD (Bit 0)                               */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_DAT_RX_MD_Msk (0x3UL)       /*!< QSPIC_DAT_RX_MD (Bitfield-Mask: 0x03)                 */
/* ==================================================  QSPIC_CHCKERASE_REG  ================================================== */
#define QSPIC_QSPIC_CHCKERASE_REG_QSPIC_CHCKERASE_Pos (0UL)         /*!< QSPIC_CHCKERASE (Bit 0)                               */
#define QSPIC_QSPIC_CHCKERASE_REG_QSPIC_CHCKERASE_Msk (0xffffffffUL) /*!< QSPIC_CHCKERASE (Bitfield-Mask: 0xffffffff)          */
/* ===================================================  QSPIC_CTRLBUS_REG  =================================================== */
#define QSPIC_QSPIC_CTRLBUS_REG_QSPIC_DIS_CS_Pos (4UL)              /*!< QSPIC_DIS_CS (Bit 4)                                  */
#define QSPIC_QSPIC_CTRLBUS_REG_QSPIC_DIS_CS_Msk (0x10UL)           /*!< QSPIC_DIS_CS (Bitfield-Mask: 0x01)                    */
#define QSPIC_QSPIC_CTRLBUS_REG_QSPIC_EN_CS_Pos (3UL)               /*!< QSPIC_EN_CS (Bit 3)                                   */
#define QSPIC_QSPIC_CTRLBUS_REG_QSPIC_EN_CS_Msk (0x8UL)             /*!< QSPIC_EN_CS (Bitfield-Mask: 0x01)                     */
#define QSPIC_QSPIC_CTRLBUS_REG_QSPIC_SET_QUAD_Pos (2UL)            /*!< QSPIC_SET_QUAD (Bit 2)                                */
#define QSPIC_QSPIC_CTRLBUS_REG_QSPIC_SET_QUAD_Msk (0x4UL)          /*!< QSPIC_SET_QUAD (Bitfield-Mask: 0x01)                  */
#define QSPIC_QSPIC_CTRLBUS_REG_QSPIC_SET_DUAL_Pos (1UL)            /*!< QSPIC_SET_DUAL (Bit 1)                                */
#define QSPIC_QSPIC_CTRLBUS_REG_QSPIC_SET_DUAL_Msk (0x2UL)          /*!< QSPIC_SET_DUAL (Bitfield-Mask: 0x01)                  */
#define QSPIC_QSPIC_CTRLBUS_REG_QSPIC_SET_SINGLE_Pos (0UL)          /*!< QSPIC_SET_SINGLE (Bit 0)                              */
#define QSPIC_QSPIC_CTRLBUS_REG_QSPIC_SET_SINGLE_Msk (0x1UL)        /*!< QSPIC_SET_SINGLE (Bitfield-Mask: 0x01)                */
/* ==================================================  QSPIC_CTRLMODE_REG  =================================================== */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_CLK_FREE_EN_Pos (16UL)       /*!< QSPIC_CLK_FREE_EN (Bit 16)                            */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_CLK_FREE_EN_Msk (0x10000UL)  /*!< QSPIC_CLK_FREE_EN (Bitfield-Mask: 0x01)               */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_CS_MD_Pos (15UL)             /*!< QSPIC_CS_MD (Bit 15)                                  */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_CS_MD_Msk (0x8000UL)         /*!< QSPIC_CS_MD (Bitfield-Mask: 0x01)                     */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_SRAM_EN_Pos (14UL)           /*!< QSPIC_SRAM_EN (Bit 14)                                */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_SRAM_EN_Msk (0x4000UL)       /*!< QSPIC_SRAM_EN (Bitfield-Mask: 0x01)                   */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_USE_32BA_Pos (13UL)          /*!< QSPIC_USE_32BA (Bit 13)                               */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_USE_32BA_Msk (0x2000UL)      /*!< QSPIC_USE_32BA (Bitfield-Mask: 0x01)                  */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_FORCENSEQ_EN_Pos (12UL)      /*!< QSPIC_FORCENSEQ_EN (Bit 12)                           */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_FORCENSEQ_EN_Msk (0x1000UL)  /*!< QSPIC_FORCENSEQ_EN (Bitfield-Mask: 0x01)              */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_PCLK_MD_Pos (9UL)            /*!< QSPIC_PCLK_MD (Bit 9)                                 */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_PCLK_MD_Msk (0xe00UL)        /*!< QSPIC_PCLK_MD (Bitfield-Mask: 0x07)                   */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_RPIPE_EN_Pos (8UL)           /*!< QSPIC_RPIPE_EN (Bit 8)                                */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_RPIPE_EN_Msk (0x100UL)       /*!< QSPIC_RPIPE_EN (Bitfield-Mask: 0x01)                  */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_RXD_NEG_Pos (7UL)            /*!< QSPIC_RXD_NEG (Bit 7)                                 */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_RXD_NEG_Msk (0x80UL)         /*!< QSPIC_RXD_NEG (Bitfield-Mask: 0x01)                   */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_HRDY_MD_Pos (6UL)            /*!< QSPIC_HRDY_MD (Bit 6)                                 */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_HRDY_MD_Msk (0x40UL)         /*!< QSPIC_HRDY_MD (Bitfield-Mask: 0x01)                   */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_IO3_DAT_Pos (5UL)            /*!< QSPIC_IO3_DAT (Bit 5)                                 */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_IO3_DAT_Msk (0x20UL)         /*!< QSPIC_IO3_DAT (Bitfield-Mask: 0x01)                   */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_IO2_DAT_Pos (4UL)            /*!< QSPIC_IO2_DAT (Bit 4)                                 */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_IO2_DAT_Msk (0x10UL)         /*!< QSPIC_IO2_DAT (Bitfield-Mask: 0x01)                   */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_IO3_OEN_Pos (3UL)            /*!< QSPIC_IO3_OEN (Bit 3)                                 */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_IO3_OEN_Msk (0x8UL)          /*!< QSPIC_IO3_OEN (Bitfield-Mask: 0x01)                   */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_IO2_OEN_Pos (2UL)            /*!< QSPIC_IO2_OEN (Bit 2)                                 */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_IO2_OEN_Msk (0x4UL)          /*!< QSPIC_IO2_OEN (Bitfield-Mask: 0x01)                   */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_CLK_MD_Pos (1UL)             /*!< QSPIC_CLK_MD (Bit 1)                                  */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_CLK_MD_Msk (0x2UL)           /*!< QSPIC_CLK_MD (Bitfield-Mask: 0x01)                    */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_AUTO_MD_Pos (0UL)            /*!< QSPIC_AUTO_MD (Bit 0)                                 */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_AUTO_MD_Msk (0x1UL)          /*!< QSPIC_AUTO_MD (Bitfield-Mask: 0x01)                   */
/* ==================================================  QSPIC_DUMMYDATA_REG  ================================================== */
#define QSPIC_QSPIC_DUMMYDATA_REG_QSPIC_DUMMYDATA_Pos (0UL)         /*!< QSPIC_DUMMYDATA (Bit 0)                               */
#define QSPIC_QSPIC_DUMMYDATA_REG_QSPIC_DUMMYDATA_Msk (0xffffffffUL) /*!< QSPIC_DUMMYDATA (Bitfield-Mask: 0xffffffff)          */
/* ==================================================  QSPIC_ERASECMDA_REG  ================================================== */
#define QSPIC_QSPIC_ERASECMDA_REG_QSPIC_RES_INST_Pos (24UL)         /*!< QSPIC_RES_INST (Bit 24)                               */
#define QSPIC_QSPIC_ERASECMDA_REG_QSPIC_RES_INST_Msk (0xff000000UL) /*!< QSPIC_RES_INST (Bitfield-Mask: 0xff)                  */
#define QSPIC_QSPIC_ERASECMDA_REG_QSPIC_SUS_INST_Pos (16UL)         /*!< QSPIC_SUS_INST (Bit 16)                               */
#define QSPIC_QSPIC_ERASECMDA_REG_QSPIC_SUS_INST_Msk (0xff0000UL)   /*!< QSPIC_SUS_INST (Bitfield-Mask: 0xff)                  */
#define QSPIC_QSPIC_ERASECMDA_REG_QSPIC_WEN_INST_Pos (8UL)          /*!< QSPIC_WEN_INST (Bit 8)                                */
#define QSPIC_QSPIC_ERASECMDA_REG_QSPIC_WEN_INST_Msk (0xff00UL)     /*!< QSPIC_WEN_INST (Bitfield-Mask: 0xff)                  */
#define QSPIC_QSPIC_ERASECMDA_REG_QSPIC_ERS_INST_Pos (0UL)          /*!< QSPIC_ERS_INST (Bit 0)                                */
#define QSPIC_QSPIC_ERASECMDA_REG_QSPIC_ERS_INST_Msk (0xffUL)       /*!< QSPIC_ERS_INST (Bitfield-Mask: 0xff)                  */
/* ==================================================  QSPIC_ERASECMDB_REG  ================================================== */
#define QSPIC_QSPIC_ERASECMDB_REG_QSPIC_RESSUS_DLY_Pos (24UL)       /*!< QSPIC_RESSUS_DLY (Bit 24)                             */
#define QSPIC_QSPIC_ERASECMDB_REG_QSPIC_RESSUS_DLY_Msk (0x3f000000UL) /*!< QSPIC_RESSUS_DLY (Bitfield-Mask: 0x3f)              */
#define QSPIC_QSPIC_ERASECMDB_REG_QSPIC_ERSRES_HLD_Pos (16UL)       /*!< QSPIC_ERSRES_HLD (Bit 16)                             */
#define QSPIC_QSPIC_ERASECMDB_REG_QSPIC_ERSRES_HLD_Msk (0xf0000UL)  /*!< QSPIC_ERSRES_HLD (Bitfield-Mask: 0x0f)                */
#define QSPIC_QSPIC_ERASECMDB_REG_QSPIC_ERS_CS_HI_Pos (10UL)        /*!< QSPIC_ERS_CS_HI (Bit 10)                              */
#define QSPIC_QSPIC_ERASECMDB_REG_QSPIC_ERS_CS_HI_Msk (0x7c00UL)    /*!< QSPIC_ERS_CS_HI (Bitfield-Mask: 0x1f)                 */
#define QSPIC_QSPIC_ERASECMDB_REG_QSPIC_EAD_TX_MD_Pos (8UL)         /*!< QSPIC_EAD_TX_MD (Bit 8)                               */
#define QSPIC_QSPIC_ERASECMDB_REG_QSPIC_EAD_TX_MD_Msk (0x300UL)     /*!< QSPIC_EAD_TX_MD (Bitfield-Mask: 0x03)                 */
#define QSPIC_QSPIC_ERASECMDB_REG_QSPIC_RES_TX_MD_Pos (6UL)         /*!< QSPIC_RES_TX_MD (Bit 6)                               */
#define QSPIC_QSPIC_ERASECMDB_REG_QSPIC_RES_TX_MD_Msk (0xc0UL)      /*!< QSPIC_RES_TX_MD (Bitfield-Mask: 0x03)                 */
#define QSPIC_QSPIC_ERASECMDB_REG_QSPIC_SUS_TX_MD_Pos (4UL)         /*!< QSPIC_SUS_TX_MD (Bit 4)                               */
#define QSPIC_QSPIC_ERASECMDB_REG_QSPIC_SUS_TX_MD_Msk (0x30UL)      /*!< QSPIC_SUS_TX_MD (Bitfield-Mask: 0x03)                 */
#define QSPIC_QSPIC_ERASECMDB_REG_QSPIC_WEN_TX_MD_Pos (2UL)         /*!< QSPIC_WEN_TX_MD (Bit 2)                               */
#define QSPIC_QSPIC_ERASECMDB_REG_QSPIC_WEN_TX_MD_Msk (0xcUL)       /*!< QSPIC_WEN_TX_MD (Bitfield-Mask: 0x03)                 */
#define QSPIC_QSPIC_ERASECMDB_REG_QSPIC_ERS_TX_MD_Pos (0UL)         /*!< QSPIC_ERS_TX_MD (Bit 0)                               */
#define QSPIC_QSPIC_ERASECMDB_REG_QSPIC_ERS_TX_MD_Msk (0x3UL)       /*!< QSPIC_ERS_TX_MD (Bitfield-Mask: 0x03)                 */
/* ==================================================  QSPIC_ERASECTRL_REG  ================================================== */
#define QSPIC_QSPIC_ERASECTRL_REG_QSPIC_ERS_STATE_Pos (25UL)        /*!< QSPIC_ERS_STATE (Bit 25)                              */
#define QSPIC_QSPIC_ERASECTRL_REG_QSPIC_ERS_STATE_Msk (0xe000000UL) /*!< QSPIC_ERS_STATE (Bitfield-Mask: 0x07)                 */
#define QSPIC_QSPIC_ERASECTRL_REG_QSPIC_ERASE_EN_Pos (24UL)         /*!< QSPIC_ERASE_EN (Bit 24)                               */
#define QSPIC_QSPIC_ERASECTRL_REG_QSPIC_ERASE_EN_Msk (0x1000000UL)  /*!< QSPIC_ERASE_EN (Bitfield-Mask: 0x01)                  */
#define QSPIC_QSPIC_ERASECTRL_REG_QSPIC_ERS_ADDR_Pos (4UL)          /*!< QSPIC_ERS_ADDR (Bit 4)                                */
#define QSPIC_QSPIC_ERASECTRL_REG_QSPIC_ERS_ADDR_Msk (0xfffff0UL)   /*!< QSPIC_ERS_ADDR (Bitfield-Mask: 0xfffff)               */
/* =====================================================  QSPIC_GP_REG  ====================================================== */
#define QSPIC_QSPIC_GP_REG_QSPIC_PADS_SLEW_Pos (3UL)                /*!< QSPIC_PADS_SLEW (Bit 3)                               */
#define QSPIC_QSPIC_GP_REG_QSPIC_PADS_SLEW_Msk (0x18UL)             /*!< QSPIC_PADS_SLEW (Bitfield-Mask: 0x03)                 */
#define QSPIC_QSPIC_GP_REG_QSPIC_PADS_DRV_Pos (1UL)                 /*!< QSPIC_PADS_DRV (Bit 1)                                */
#define QSPIC_QSPIC_GP_REG_QSPIC_PADS_DRV_Msk (0x6UL)               /*!< QSPIC_PADS_DRV (Bitfield-Mask: 0x03)                  */
/* ===================================================  QSPIC_MEMBLEN_REG  =================================================== */
#define QSPIC_QSPIC_MEMBLEN_REG_QSPIC_T_CEM_CC_Pos (4UL)            /*!< QSPIC_T_CEM_CC (Bit 4)                                */
#define QSPIC_QSPIC_MEMBLEN_REG_QSPIC_T_CEM_CC_Msk (0x3ff0UL)       /*!< QSPIC_T_CEM_CC (Bitfield-Mask: 0x3ff)                 */
#define QSPIC_QSPIC_MEMBLEN_REG_QSPIC_T_CEM_EN_Pos (3UL)            /*!< QSPIC_T_CEM_EN (Bit 3)                                */
#define QSPIC_QSPIC_MEMBLEN_REG_QSPIC_T_CEM_EN_Msk (0x8UL)          /*!< QSPIC_T_CEM_EN (Bitfield-Mask: 0x01)                  */
#define QSPIC_QSPIC_MEMBLEN_REG_QSPIC_MEMBLEN_Pos (0UL)             /*!< QSPIC_MEMBLEN (Bit 0)                                 */
#define QSPIC_QSPIC_MEMBLEN_REG_QSPIC_MEMBLEN_Msk (0x7UL)           /*!< QSPIC_MEMBLEN (Bitfield-Mask: 0x07)                   */
/* ==================================================  QSPIC_READDATA_REG  =================================================== */
#define QSPIC_QSPIC_READDATA_REG_QSPIC_READDATA_Pos (0UL)           /*!< QSPIC_READDATA (Bit 0)                                */
#define QSPIC_QSPIC_READDATA_REG_QSPIC_READDATA_Msk (0xffffffffUL)  /*!< QSPIC_READDATA (Bitfield-Mask: 0xffffffff)            */
/* ==================================================  QSPIC_RECVDATA_REG  =================================================== */
#define QSPIC_QSPIC_RECVDATA_REG_QSPIC_RECVDATA_Pos (0UL)           /*!< QSPIC_RECVDATA (Bit 0)                                */
#define QSPIC_QSPIC_RECVDATA_REG_QSPIC_RECVDATA_Msk (0xffffffffUL)  /*!< QSPIC_RECVDATA (Bitfield-Mask: 0xffffffff)            */
/* ==================================================  QSPIC_STATUSCMD_REG  ================================================== */
#define QSPIC_QSPIC_STATUSCMD_REG_QSPIC_STSDLY_SEL_Pos (22UL)       /*!< QSPIC_STSDLY_SEL (Bit 22)                             */
#define QSPIC_QSPIC_STATUSCMD_REG_QSPIC_STSDLY_SEL_Msk (0x400000UL) /*!< QSPIC_STSDLY_SEL (Bitfield-Mask: 0x01)                */
#define QSPIC_QSPIC_STATUSCMD_REG_QSPIC_RESSTS_DLY_Pos (16UL)       /*!< QSPIC_RESSTS_DLY (Bit 16)                             */
#define QSPIC_QSPIC_STATUSCMD_REG_QSPIC_RESSTS_DLY_Msk (0x3f0000UL) /*!< QSPIC_RESSTS_DLY (Bitfield-Mask: 0x3f)                */
#define QSPIC_QSPIC_STATUSCMD_REG_QSPIC_BUSY_VAL_Pos (15UL)         /*!< QSPIC_BUSY_VAL (Bit 15)                               */
#define QSPIC_QSPIC_STATUSCMD_REG_QSPIC_BUSY_VAL_Msk (0x8000UL)     /*!< QSPIC_BUSY_VAL (Bitfield-Mask: 0x01)                  */
#define QSPIC_QSPIC_STATUSCMD_REG_QSPIC_BUSY_POS_Pos (12UL)         /*!< QSPIC_BUSY_POS (Bit 12)                               */
#define QSPIC_QSPIC_STATUSCMD_REG_QSPIC_BUSY_POS_Msk (0x7000UL)     /*!< QSPIC_BUSY_POS (Bitfield-Mask: 0x07)                  */
#define QSPIC_QSPIC_STATUSCMD_REG_QSPIC_RSTAT_RX_MD_Pos (10UL)      /*!< QSPIC_RSTAT_RX_MD (Bit 10)                            */
#define QSPIC_QSPIC_STATUSCMD_REG_QSPIC_RSTAT_RX_MD_Msk (0xc00UL)   /*!< QSPIC_RSTAT_RX_MD (Bitfield-Mask: 0x03)               */
#define QSPIC_QSPIC_STATUSCMD_REG_QSPIC_RSTAT_TX_MD_Pos (8UL)       /*!< QSPIC_RSTAT_TX_MD (Bit 8)                             */
#define QSPIC_QSPIC_STATUSCMD_REG_QSPIC_RSTAT_TX_MD_Msk (0x300UL)   /*!< QSPIC_RSTAT_TX_MD (Bitfield-Mask: 0x03)               */
#define QSPIC_QSPIC_STATUSCMD_REG_QSPIC_RSTAT_INST_Pos (0UL)        /*!< QSPIC_RSTAT_INST (Bit 0)                              */
#define QSPIC_QSPIC_STATUSCMD_REG_QSPIC_RSTAT_INST_Msk (0xffUL)     /*!< QSPIC_RSTAT_INST (Bitfield-Mask: 0xff)                */
/* ===================================================  QSPIC_STATUS_REG  ==================================================== */
#define QSPIC_QSPIC_STATUS_REG_QSPIC_BUSY_Pos (0UL)                 /*!< QSPIC_BUSY (Bit 0)                                    */
#define QSPIC_QSPIC_STATUS_REG_QSPIC_BUSY_Msk (0x1UL)               /*!< QSPIC_BUSY (Bitfield-Mask: 0x01)                      */
/* ==================================================  QSPIC_WRITEDATA_REG  ================================================== */
#define QSPIC_QSPIC_WRITEDATA_REG_QSPIC_WRITEDATA_Pos (0UL)         /*!< QSPIC_WRITEDATA (Bit 0)                               */
#define QSPIC_QSPIC_WRITEDATA_REG_QSPIC_WRITEDATA_Msk (0xffffffffUL) /*!< QSPIC_WRITEDATA (Bitfield-Mask: 0xffffffff)          */


/* =========================================================================================================================== */
/* ================                                          QSPIC2                                           ================ */
/* =========================================================================================================================== */

/* =================================================  QSPIC2_AWRITECMD_REG  ================================================== */
#define QSPIC2_QSPIC2_AWRITECMD_REG_QSPIC_WR_CS_HIGH_MIN_Pos (14UL) /*!< QSPIC_WR_CS_HIGH_MIN (Bit 14)                         */
#define QSPIC2_QSPIC2_AWRITECMD_REG_QSPIC_WR_CS_HIGH_MIN_Msk (0x7c000UL) /*!< QSPIC_WR_CS_HIGH_MIN (Bitfield-Mask: 0x1f)       */
#define QSPIC2_QSPIC2_AWRITECMD_REG_QSPIC_WR_DAT_TX_MD_Pos (12UL)   /*!< QSPIC_WR_DAT_TX_MD (Bit 12)                           */
#define QSPIC2_QSPIC2_AWRITECMD_REG_QSPIC_WR_DAT_TX_MD_Msk (0x3000UL) /*!< QSPIC_WR_DAT_TX_MD (Bitfield-Mask: 0x03)            */
#define QSPIC2_QSPIC2_AWRITECMD_REG_QSPIC_WR_ADR_TX_MD_Pos (10UL)   /*!< QSPIC_WR_ADR_TX_MD (Bit 10)                           */
#define QSPIC2_QSPIC2_AWRITECMD_REG_QSPIC_WR_ADR_TX_MD_Msk (0xc00UL) /*!< QSPIC_WR_ADR_TX_MD (Bitfield-Mask: 0x03)             */
#define QSPIC2_QSPIC2_AWRITECMD_REG_QSPIC_WR_INST_TX_MD_Pos (8UL)   /*!< QSPIC_WR_INST_TX_MD (Bit 8)                           */
#define QSPIC2_QSPIC2_AWRITECMD_REG_QSPIC_WR_INST_TX_MD_Msk (0x300UL) /*!< QSPIC_WR_INST_TX_MD (Bitfield-Mask: 0x03)           */
#define QSPIC2_QSPIC2_AWRITECMD_REG_QSPIC_WR_INST_Pos (0UL)         /*!< QSPIC_WR_INST (Bit 0)                                 */
#define QSPIC2_QSPIC2_AWRITECMD_REG_QSPIC_WR_INST_Msk (0xffUL)      /*!< QSPIC_WR_INST (Bitfield-Mask: 0xff)                   */
/* ==================================================  QSPIC2_BURSTBRK_REG  ================================================== */
#define QSPIC2_QSPIC2_BURSTBRK_REG_QSPIC_SEC_HF_DS_Pos (20UL)       /*!< QSPIC_SEC_HF_DS (Bit 20)                              */
#define QSPIC2_QSPIC2_BURSTBRK_REG_QSPIC_SEC_HF_DS_Msk (0x100000UL) /*!< QSPIC_SEC_HF_DS (Bitfield-Mask: 0x01)                 */
#define QSPIC2_QSPIC2_BURSTBRK_REG_QSPIC_BRK_TX_MD_Pos (18UL)       /*!< QSPIC_BRK_TX_MD (Bit 18)                              */
#define QSPIC2_QSPIC2_BURSTBRK_REG_QSPIC_BRK_TX_MD_Msk (0xc0000UL)  /*!< QSPIC_BRK_TX_MD (Bitfield-Mask: 0x03)                 */
#define QSPIC2_QSPIC2_BURSTBRK_REG_QSPIC_BRK_SZ_Pos (17UL)          /*!< QSPIC_BRK_SZ (Bit 17)                                 */
#define QSPIC2_QSPIC2_BURSTBRK_REG_QSPIC_BRK_SZ_Msk (0x20000UL)     /*!< QSPIC_BRK_SZ (Bitfield-Mask: 0x01)                    */
#define QSPIC2_QSPIC2_BURSTBRK_REG_QSPIC_BRK_EN_Pos (16UL)          /*!< QSPIC_BRK_EN (Bit 16)                                 */
#define QSPIC2_QSPIC2_BURSTBRK_REG_QSPIC_BRK_EN_Msk (0x10000UL)     /*!< QSPIC_BRK_EN (Bitfield-Mask: 0x01)                    */
#define QSPIC2_QSPIC2_BURSTBRK_REG_QSPIC_BRK_WRD_Pos (0UL)          /*!< QSPIC_BRK_WRD (Bit 0)                                 */
#define QSPIC2_QSPIC2_BURSTBRK_REG_QSPIC_BRK_WRD_Msk (0xffffUL)     /*!< QSPIC_BRK_WRD (Bitfield-Mask: 0xffff)                 */
/* =================================================  QSPIC2_BURSTCMDA_REG  ================================================== */
#define QSPIC2_QSPIC2_BURSTCMDA_REG_QSPIC_DMY_TX_MD_Pos (30UL)      /*!< QSPIC_DMY_TX_MD (Bit 30)                              */
#define QSPIC2_QSPIC2_BURSTCMDA_REG_QSPIC_DMY_TX_MD_Msk (0xc0000000UL) /*!< QSPIC_DMY_TX_MD (Bitfield-Mask: 0x03)              */
#define QSPIC2_QSPIC2_BURSTCMDA_REG_QSPIC_EXT_TX_MD_Pos (28UL)      /*!< QSPIC_EXT_TX_MD (Bit 28)                              */
#define QSPIC2_QSPIC2_BURSTCMDA_REG_QSPIC_EXT_TX_MD_Msk (0x30000000UL) /*!< QSPIC_EXT_TX_MD (Bitfield-Mask: 0x03)              */
#define QSPIC2_QSPIC2_BURSTCMDA_REG_QSPIC_ADR_TX_MD_Pos (26UL)      /*!< QSPIC_ADR_TX_MD (Bit 26)                              */
#define QSPIC2_QSPIC2_BURSTCMDA_REG_QSPIC_ADR_TX_MD_Msk (0xc000000UL) /*!< QSPIC_ADR_TX_MD (Bitfield-Mask: 0x03)               */
#define QSPIC2_QSPIC2_BURSTCMDA_REG_QSPIC_INST_TX_MD_Pos (24UL)     /*!< QSPIC_INST_TX_MD (Bit 24)                             */
#define QSPIC2_QSPIC2_BURSTCMDA_REG_QSPIC_INST_TX_MD_Msk (0x3000000UL) /*!< QSPIC_INST_TX_MD (Bitfield-Mask: 0x03)             */
#define QSPIC2_QSPIC2_BURSTCMDA_REG_QSPIC_EXT_BYTE_Pos (16UL)       /*!< QSPIC_EXT_BYTE (Bit 16)                               */
#define QSPIC2_QSPIC2_BURSTCMDA_REG_QSPIC_EXT_BYTE_Msk (0xff0000UL) /*!< QSPIC_EXT_BYTE (Bitfield-Mask: 0xff)                  */
#define QSPIC2_QSPIC2_BURSTCMDA_REG_QSPIC_INST_WB_Pos (8UL)         /*!< QSPIC_INST_WB (Bit 8)                                 */
#define QSPIC2_QSPIC2_BURSTCMDA_REG_QSPIC_INST_WB_Msk (0xff00UL)    /*!< QSPIC_INST_WB (Bitfield-Mask: 0xff)                   */
#define QSPIC2_QSPIC2_BURSTCMDA_REG_QSPIC_INST_Pos (0UL)            /*!< QSPIC_INST (Bit 0)                                    */
#define QSPIC2_QSPIC2_BURSTCMDA_REG_QSPIC_INST_Msk (0xffUL)         /*!< QSPIC_INST (Bitfield-Mask: 0xff)                      */
/* =================================================  QSPIC2_BURSTCMDB_REG  ================================================== */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_DMY_FORCE_Pos (15UL)      /*!< QSPIC_DMY_FORCE (Bit 15)                              */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_DMY_FORCE_Msk (0x8000UL)  /*!< QSPIC_DMY_FORCE (Bitfield-Mask: 0x01)                 */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_CS_HIGH_MIN_Pos (12UL)    /*!< QSPIC_CS_HIGH_MIN (Bit 12)                            */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_CS_HIGH_MIN_Msk (0x7000UL) /*!< QSPIC_CS_HIGH_MIN (Bitfield-Mask: 0x07)              */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_WRAP_SIZE_Pos (10UL)      /*!< QSPIC_WRAP_SIZE (Bit 10)                              */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_WRAP_SIZE_Msk (0xc00UL)   /*!< QSPIC_WRAP_SIZE (Bitfield-Mask: 0x03)                 */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_WRAP_LEN_Pos (8UL)        /*!< QSPIC_WRAP_LEN (Bit 8)                                */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_WRAP_LEN_Msk (0x300UL)    /*!< QSPIC_WRAP_LEN (Bitfield-Mask: 0x03)                  */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_WRAP_MD_Pos (7UL)         /*!< QSPIC_WRAP_MD (Bit 7)                                 */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_WRAP_MD_Msk (0x80UL)      /*!< QSPIC_WRAP_MD (Bitfield-Mask: 0x01)                   */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_INST_MD_Pos (6UL)         /*!< QSPIC_INST_MD (Bit 6)                                 */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_INST_MD_Msk (0x40UL)      /*!< QSPIC_INST_MD (Bitfield-Mask: 0x01)                   */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_DMY_NUM_Pos (4UL)         /*!< QSPIC_DMY_NUM (Bit 4)                                 */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_DMY_NUM_Msk (0x30UL)      /*!< QSPIC_DMY_NUM (Bitfield-Mask: 0x03)                   */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_EXT_HF_DS_Pos (3UL)       /*!< QSPIC_EXT_HF_DS (Bit 3)                               */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_EXT_HF_DS_Msk (0x8UL)     /*!< QSPIC_EXT_HF_DS (Bitfield-Mask: 0x01)                 */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_EXT_BYTE_EN_Pos (2UL)     /*!< QSPIC_EXT_BYTE_EN (Bit 2)                             */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_EXT_BYTE_EN_Msk (0x4UL)   /*!< QSPIC_EXT_BYTE_EN (Bitfield-Mask: 0x01)               */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_DAT_RX_MD_Pos (0UL)       /*!< QSPIC_DAT_RX_MD (Bit 0)                               */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_DAT_RX_MD_Msk (0x3UL)     /*!< QSPIC_DAT_RX_MD (Bitfield-Mask: 0x03)                 */
/* =================================================  QSPIC2_CHCKERASE_REG  ================================================== */
#define QSPIC2_QSPIC2_CHCKERASE_REG_QSPIC_CHCKERASE_Pos (0UL)       /*!< QSPIC_CHCKERASE (Bit 0)                               */
#define QSPIC2_QSPIC2_CHCKERASE_REG_QSPIC_CHCKERASE_Msk (0xffffffffUL) /*!< QSPIC_CHCKERASE (Bitfield-Mask: 0xffffffff)        */
/* ==================================================  QSPIC2_CTRLBUS_REG  =================================================== */
#define QSPIC2_QSPIC2_CTRLBUS_REG_QSPIC_DIS_CS_Pos (4UL)            /*!< QSPIC_DIS_CS (Bit 4)                                  */
#define QSPIC2_QSPIC2_CTRLBUS_REG_QSPIC_DIS_CS_Msk (0x10UL)         /*!< QSPIC_DIS_CS (Bitfield-Mask: 0x01)                    */
#define QSPIC2_QSPIC2_CTRLBUS_REG_QSPIC_EN_CS_Pos (3UL)             /*!< QSPIC_EN_CS (Bit 3)                                   */
#define QSPIC2_QSPIC2_CTRLBUS_REG_QSPIC_EN_CS_Msk (0x8UL)           /*!< QSPIC_EN_CS (Bitfield-Mask: 0x01)                     */
#define QSPIC2_QSPIC2_CTRLBUS_REG_QSPIC_SET_QUAD_Pos (2UL)          /*!< QSPIC_SET_QUAD (Bit 2)                                */
#define QSPIC2_QSPIC2_CTRLBUS_REG_QSPIC_SET_QUAD_Msk (0x4UL)        /*!< QSPIC_SET_QUAD (Bitfield-Mask: 0x01)                  */
#define QSPIC2_QSPIC2_CTRLBUS_REG_QSPIC_SET_DUAL_Pos (1UL)          /*!< QSPIC_SET_DUAL (Bit 1)                                */
#define QSPIC2_QSPIC2_CTRLBUS_REG_QSPIC_SET_DUAL_Msk (0x2UL)        /*!< QSPIC_SET_DUAL (Bitfield-Mask: 0x01)                  */
#define QSPIC2_QSPIC2_CTRLBUS_REG_QSPIC_SET_SINGLE_Pos (0UL)        /*!< QSPIC_SET_SINGLE (Bit 0)                              */
#define QSPIC2_QSPIC2_CTRLBUS_REG_QSPIC_SET_SINGLE_Msk (0x1UL)      /*!< QSPIC_SET_SINGLE (Bitfield-Mask: 0x01)                */
/* ==================================================  QSPIC2_CTRLMODE_REG  ================================================== */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_CLK_FREE_EN_Pos (16UL)     /*!< QSPIC_CLK_FREE_EN (Bit 16)                            */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_CLK_FREE_EN_Msk (0x10000UL) /*!< QSPIC_CLK_FREE_EN (Bitfield-Mask: 0x01)              */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_CS_MD_Pos (15UL)           /*!< QSPIC_CS_MD (Bit 15)                                  */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_CS_MD_Msk (0x8000UL)       /*!< QSPIC_CS_MD (Bitfield-Mask: 0x01)                     */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_SRAM_EN_Pos (14UL)         /*!< QSPIC_SRAM_EN (Bit 14)                                */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_SRAM_EN_Msk (0x4000UL)     /*!< QSPIC_SRAM_EN (Bitfield-Mask: 0x01)                   */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_USE_32BA_Pos (13UL)        /*!< QSPIC_USE_32BA (Bit 13)                               */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_USE_32BA_Msk (0x2000UL)    /*!< QSPIC_USE_32BA (Bitfield-Mask: 0x01)                  */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_FORCENSEQ_EN_Pos (12UL)    /*!< QSPIC_FORCENSEQ_EN (Bit 12)                           */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_FORCENSEQ_EN_Msk (0x1000UL) /*!< QSPIC_FORCENSEQ_EN (Bitfield-Mask: 0x01)             */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_PCLK_MD_Pos (9UL)          /*!< QSPIC_PCLK_MD (Bit 9)                                 */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_PCLK_MD_Msk (0xe00UL)      /*!< QSPIC_PCLK_MD (Bitfield-Mask: 0x07)                   */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_RPIPE_EN_Pos (8UL)         /*!< QSPIC_RPIPE_EN (Bit 8)                                */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_RPIPE_EN_Msk (0x100UL)     /*!< QSPIC_RPIPE_EN (Bitfield-Mask: 0x01)                  */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_RXD_NEG_Pos (7UL)          /*!< QSPIC_RXD_NEG (Bit 7)                                 */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_RXD_NEG_Msk (0x80UL)       /*!< QSPIC_RXD_NEG (Bitfield-Mask: 0x01)                   */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_HRDY_MD_Pos (6UL)          /*!< QSPIC_HRDY_MD (Bit 6)                                 */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_HRDY_MD_Msk (0x40UL)       /*!< QSPIC_HRDY_MD (Bitfield-Mask: 0x01)                   */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_IO3_DAT_Pos (5UL)          /*!< QSPIC_IO3_DAT (Bit 5)                                 */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_IO3_DAT_Msk (0x20UL)       /*!< QSPIC_IO3_DAT (Bitfield-Mask: 0x01)                   */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_IO2_DAT_Pos (4UL)          /*!< QSPIC_IO2_DAT (Bit 4)                                 */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_IO2_DAT_Msk (0x10UL)       /*!< QSPIC_IO2_DAT (Bitfield-Mask: 0x01)                   */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_IO3_OEN_Pos (3UL)          /*!< QSPIC_IO3_OEN (Bit 3)                                 */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_IO3_OEN_Msk (0x8UL)        /*!< QSPIC_IO3_OEN (Bitfield-Mask: 0x01)                   */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_IO2_OEN_Pos (2UL)          /*!< QSPIC_IO2_OEN (Bit 2)                                 */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_IO2_OEN_Msk (0x4UL)        /*!< QSPIC_IO2_OEN (Bitfield-Mask: 0x01)                   */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_CLK_MD_Pos (1UL)           /*!< QSPIC_CLK_MD (Bit 1)                                  */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_CLK_MD_Msk (0x2UL)         /*!< QSPIC_CLK_MD (Bitfield-Mask: 0x01)                    */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_AUTO_MD_Pos (0UL)          /*!< QSPIC_AUTO_MD (Bit 0)                                 */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_AUTO_MD_Msk (0x1UL)        /*!< QSPIC_AUTO_MD (Bitfield-Mask: 0x01)                   */
/* =================================================  QSPIC2_DUMMYDATA_REG  ================================================== */
#define QSPIC2_QSPIC2_DUMMYDATA_REG_QSPIC_DUMMYDATA_Pos (0UL)       /*!< QSPIC_DUMMYDATA (Bit 0)                               */
#define QSPIC2_QSPIC2_DUMMYDATA_REG_QSPIC_DUMMYDATA_Msk (0xffffffffUL) /*!< QSPIC_DUMMYDATA (Bitfield-Mask: 0xffffffff)        */
/* =================================================  QSPIC2_ERASECMDA_REG  ================================================== */
#define QSPIC2_QSPIC2_ERASECMDA_REG_QSPIC_RES_INST_Pos (24UL)       /*!< QSPIC_RES_INST (Bit 24)                               */
#define QSPIC2_QSPIC2_ERASECMDA_REG_QSPIC_RES_INST_Msk (0xff000000UL) /*!< QSPIC_RES_INST (Bitfield-Mask: 0xff)                */
#define QSPIC2_QSPIC2_ERASECMDA_REG_QSPIC_SUS_INST_Pos (16UL)       /*!< QSPIC_SUS_INST (Bit 16)                               */
#define QSPIC2_QSPIC2_ERASECMDA_REG_QSPIC_SUS_INST_Msk (0xff0000UL) /*!< QSPIC_SUS_INST (Bitfield-Mask: 0xff)                  */
#define QSPIC2_QSPIC2_ERASECMDA_REG_QSPIC_WEN_INST_Pos (8UL)        /*!< QSPIC_WEN_INST (Bit 8)                                */
#define QSPIC2_QSPIC2_ERASECMDA_REG_QSPIC_WEN_INST_Msk (0xff00UL)   /*!< QSPIC_WEN_INST (Bitfield-Mask: 0xff)                  */
#define QSPIC2_QSPIC2_ERASECMDA_REG_QSPIC_ERS_INST_Pos (0UL)        /*!< QSPIC_ERS_INST (Bit 0)                                */
#define QSPIC2_QSPIC2_ERASECMDA_REG_QSPIC_ERS_INST_Msk (0xffUL)     /*!< QSPIC_ERS_INST (Bitfield-Mask: 0xff)                  */
/* =================================================  QSPIC2_ERASECMDB_REG  ================================================== */
#define QSPIC2_QSPIC2_ERASECMDB_REG_QSPIC_RESSUS_DLY_Pos (24UL)     /*!< QSPIC_RESSUS_DLY (Bit 24)                             */
#define QSPIC2_QSPIC2_ERASECMDB_REG_QSPIC_RESSUS_DLY_Msk (0x3f000000UL) /*!< QSPIC_RESSUS_DLY (Bitfield-Mask: 0x3f)            */
#define QSPIC2_QSPIC2_ERASECMDB_REG_QSPIC_ERSRES_HLD_Pos (16UL)     /*!< QSPIC_ERSRES_HLD (Bit 16)                             */
#define QSPIC2_QSPIC2_ERASECMDB_REG_QSPIC_ERSRES_HLD_Msk (0xf0000UL) /*!< QSPIC_ERSRES_HLD (Bitfield-Mask: 0x0f)               */
#define QSPIC2_QSPIC2_ERASECMDB_REG_QSPIC_ERS_CS_HI_Pos (10UL)      /*!< QSPIC_ERS_CS_HI (Bit 10)                              */
#define QSPIC2_QSPIC2_ERASECMDB_REG_QSPIC_ERS_CS_HI_Msk (0x7c00UL)  /*!< QSPIC_ERS_CS_HI (Bitfield-Mask: 0x1f)                 */
#define QSPIC2_QSPIC2_ERASECMDB_REG_QSPIC_EAD_TX_MD_Pos (8UL)       /*!< QSPIC_EAD_TX_MD (Bit 8)                               */
#define QSPIC2_QSPIC2_ERASECMDB_REG_QSPIC_EAD_TX_MD_Msk (0x300UL)   /*!< QSPIC_EAD_TX_MD (Bitfield-Mask: 0x03)                 */
#define QSPIC2_QSPIC2_ERASECMDB_REG_QSPIC_RES_TX_MD_Pos (6UL)       /*!< QSPIC_RES_TX_MD (Bit 6)                               */
#define QSPIC2_QSPIC2_ERASECMDB_REG_QSPIC_RES_TX_MD_Msk (0xc0UL)    /*!< QSPIC_RES_TX_MD (Bitfield-Mask: 0x03)                 */
#define QSPIC2_QSPIC2_ERASECMDB_REG_QSPIC_SUS_TX_MD_Pos (4UL)       /*!< QSPIC_SUS_TX_MD (Bit 4)                               */
#define QSPIC2_QSPIC2_ERASECMDB_REG_QSPIC_SUS_TX_MD_Msk (0x30UL)    /*!< QSPIC_SUS_TX_MD (Bitfield-Mask: 0x03)                 */
#define QSPIC2_QSPIC2_ERASECMDB_REG_QSPIC_WEN_TX_MD_Pos (2UL)       /*!< QSPIC_WEN_TX_MD (Bit 2)                               */
#define QSPIC2_QSPIC2_ERASECMDB_REG_QSPIC_WEN_TX_MD_Msk (0xcUL)     /*!< QSPIC_WEN_TX_MD (Bitfield-Mask: 0x03)                 */
#define QSPIC2_QSPIC2_ERASECMDB_REG_QSPIC_ERS_TX_MD_Pos (0UL)       /*!< QSPIC_ERS_TX_MD (Bit 0)                               */
#define QSPIC2_QSPIC2_ERASECMDB_REG_QSPIC_ERS_TX_MD_Msk (0x3UL)     /*!< QSPIC_ERS_TX_MD (Bitfield-Mask: 0x03)                 */
/* =================================================  QSPIC2_ERASECTRL_REG  ================================================== */
#define QSPIC2_QSPIC2_ERASECTRL_REG_QSPIC_ERS_STATE_Pos (25UL)      /*!< QSPIC_ERS_STATE (Bit 25)                              */
#define QSPIC2_QSPIC2_ERASECTRL_REG_QSPIC_ERS_STATE_Msk (0xe000000UL) /*!< QSPIC_ERS_STATE (Bitfield-Mask: 0x07)               */
#define QSPIC2_QSPIC2_ERASECTRL_REG_QSPIC_ERASE_EN_Pos (24UL)       /*!< QSPIC_ERASE_EN (Bit 24)                               */
#define QSPIC2_QSPIC2_ERASECTRL_REG_QSPIC_ERASE_EN_Msk (0x1000000UL) /*!< QSPIC_ERASE_EN (Bitfield-Mask: 0x01)                 */
#define QSPIC2_QSPIC2_ERASECTRL_REG_QSPIC_ERS_ADDR_Pos (4UL)        /*!< QSPIC_ERS_ADDR (Bit 4)                                */
#define QSPIC2_QSPIC2_ERASECTRL_REG_QSPIC_ERS_ADDR_Msk (0xfffff0UL) /*!< QSPIC_ERS_ADDR (Bitfield-Mask: 0xfffff)               */
/* =====================================================  QSPIC2_GP_REG  ===================================================== */
#define QSPIC2_QSPIC2_GP_REG_QSPIC_PADS_SLEW_Pos (3UL)              /*!< QSPIC_PADS_SLEW (Bit 3)                               */
#define QSPIC2_QSPIC2_GP_REG_QSPIC_PADS_SLEW_Msk (0x18UL)           /*!< QSPIC_PADS_SLEW (Bitfield-Mask: 0x03)                 */
#define QSPIC2_QSPIC2_GP_REG_QSPIC_PADS_DRV_Pos (1UL)               /*!< QSPIC_PADS_DRV (Bit 1)                                */
#define QSPIC2_QSPIC2_GP_REG_QSPIC_PADS_DRV_Msk (0x6UL)             /*!< QSPIC_PADS_DRV (Bitfield-Mask: 0x03)                  */
/* ==================================================  QSPIC2_MEMBLEN_REG  =================================================== */
#define QSPIC2_QSPIC2_MEMBLEN_REG_QSPIC_T_CEM_CC_Pos (4UL)          /*!< QSPIC_T_CEM_CC (Bit 4)                                */
#define QSPIC2_QSPIC2_MEMBLEN_REG_QSPIC_T_CEM_CC_Msk (0x3ff0UL)     /*!< QSPIC_T_CEM_CC (Bitfield-Mask: 0x3ff)                 */
#define QSPIC2_QSPIC2_MEMBLEN_REG_QSPIC_T_CEM_EN_Pos (3UL)          /*!< QSPIC_T_CEM_EN (Bit 3)                                */
#define QSPIC2_QSPIC2_MEMBLEN_REG_QSPIC_T_CEM_EN_Msk (0x8UL)        /*!< QSPIC_T_CEM_EN (Bitfield-Mask: 0x01)                  */
#define QSPIC2_QSPIC2_MEMBLEN_REG_QSPIC_MEMBLEN_Pos (0UL)           /*!< QSPIC_MEMBLEN (Bit 0)                                 */
#define QSPIC2_QSPIC2_MEMBLEN_REG_QSPIC_MEMBLEN_Msk (0x7UL)         /*!< QSPIC_MEMBLEN (Bitfield-Mask: 0x07)                   */
/* ==================================================  QSPIC2_READDATA_REG  ================================================== */
#define QSPIC2_QSPIC2_READDATA_REG_QSPIC_READDATA_Pos (0UL)         /*!< QSPIC_READDATA (Bit 0)                                */
#define QSPIC2_QSPIC2_READDATA_REG_QSPIC_READDATA_Msk (0xffffffffUL) /*!< QSPIC_READDATA (Bitfield-Mask: 0xffffffff)           */
/* ==================================================  QSPIC2_RECVDATA_REG  ================================================== */
#define QSPIC2_QSPIC2_RECVDATA_REG_QSPIC_RECVDATA_Pos (0UL)         /*!< QSPIC_RECVDATA (Bit 0)                                */
#define QSPIC2_QSPIC2_RECVDATA_REG_QSPIC_RECVDATA_Msk (0xffffffffUL) /*!< QSPIC_RECVDATA (Bitfield-Mask: 0xffffffff)           */
/* =================================================  QSPIC2_STATUSCMD_REG  ================================================== */
#define QSPIC2_QSPIC2_STATUSCMD_REG_QSPIC_STSDLY_SEL_Pos (22UL)     /*!< QSPIC_STSDLY_SEL (Bit 22)                             */
#define QSPIC2_QSPIC2_STATUSCMD_REG_QSPIC_STSDLY_SEL_Msk (0x400000UL) /*!< QSPIC_STSDLY_SEL (Bitfield-Mask: 0x01)              */
#define QSPIC2_QSPIC2_STATUSCMD_REG_QSPIC_RESSTS_DLY_Pos (16UL)     /*!< QSPIC_RESSTS_DLY (Bit 16)                             */
#define QSPIC2_QSPIC2_STATUSCMD_REG_QSPIC_RESSTS_DLY_Msk (0x3f0000UL) /*!< QSPIC_RESSTS_DLY (Bitfield-Mask: 0x3f)              */
#define QSPIC2_QSPIC2_STATUSCMD_REG_QSPIC_BUSY_VAL_Pos (15UL)       /*!< QSPIC_BUSY_VAL (Bit 15)                               */
#define QSPIC2_QSPIC2_STATUSCMD_REG_QSPIC_BUSY_VAL_Msk (0x8000UL)   /*!< QSPIC_BUSY_VAL (Bitfield-Mask: 0x01)                  */
#define QSPIC2_QSPIC2_STATUSCMD_REG_QSPIC_BUSY_POS_Pos (12UL)       /*!< QSPIC_BUSY_POS (Bit 12)                               */
#define QSPIC2_QSPIC2_STATUSCMD_REG_QSPIC_BUSY_POS_Msk (0x7000UL)   /*!< QSPIC_BUSY_POS (Bitfield-Mask: 0x07)                  */
#define QSPIC2_QSPIC2_STATUSCMD_REG_QSPIC_RSTAT_RX_MD_Pos (10UL)    /*!< QSPIC_RSTAT_RX_MD (Bit 10)                            */
#define QSPIC2_QSPIC2_STATUSCMD_REG_QSPIC_RSTAT_RX_MD_Msk (0xc00UL) /*!< QSPIC_RSTAT_RX_MD (Bitfield-Mask: 0x03)               */
#define QSPIC2_QSPIC2_STATUSCMD_REG_QSPIC_RSTAT_TX_MD_Pos (8UL)     /*!< QSPIC_RSTAT_TX_MD (Bit 8)                             */
#define QSPIC2_QSPIC2_STATUSCMD_REG_QSPIC_RSTAT_TX_MD_Msk (0x300UL) /*!< QSPIC_RSTAT_TX_MD (Bitfield-Mask: 0x03)               */
#define QSPIC2_QSPIC2_STATUSCMD_REG_QSPIC_RSTAT_INST_Pos (0UL)      /*!< QSPIC_RSTAT_INST (Bit 0)                              */
#define QSPIC2_QSPIC2_STATUSCMD_REG_QSPIC_RSTAT_INST_Msk (0xffUL)   /*!< QSPIC_RSTAT_INST (Bitfield-Mask: 0xff)                */
/* ===================================================  QSPIC2_STATUS_REG  =================================================== */
#define QSPIC2_QSPIC2_STATUS_REG_QSPIC_BUSY_Pos (0UL)               /*!< QSPIC_BUSY (Bit 0)                                    */
#define QSPIC2_QSPIC2_STATUS_REG_QSPIC_BUSY_Msk (0x1UL)             /*!< QSPIC_BUSY (Bitfield-Mask: 0x01)                      */
/* =================================================  QSPIC2_WRITEDATA_REG  ================================================== */
#define QSPIC2_QSPIC2_WRITEDATA_REG_QSPIC_WRITEDATA_Pos (0UL)       /*!< QSPIC_WRITEDATA (Bit 0)                               */
#define QSPIC2_QSPIC2_WRITEDATA_REG_QSPIC_WRITEDATA_Msk (0xffffffffUL) /*!< QSPIC_WRITEDATA (Bitfield-Mask: 0xffffffff)        */


/* =========================================================================================================================== */
/* ================                                            RTC                                            ================ */
/* =========================================================================================================================== */

/* =================================================  RTC_ALARM_ENABLE_REG  ================================================== */
#define RTC_RTC_ALARM_ENABLE_REG_RTC_ALARM_MNTH_EN_Pos (5UL)        /*!< RTC_ALARM_MNTH_EN (Bit 5)                             */
#define RTC_RTC_ALARM_ENABLE_REG_RTC_ALARM_MNTH_EN_Msk (0x20UL)     /*!< RTC_ALARM_MNTH_EN (Bitfield-Mask: 0x01)               */
#define RTC_RTC_ALARM_ENABLE_REG_RTC_ALARM_DATE_EN_Pos (4UL)        /*!< RTC_ALARM_DATE_EN (Bit 4)                             */
#define RTC_RTC_ALARM_ENABLE_REG_RTC_ALARM_DATE_EN_Msk (0x10UL)     /*!< RTC_ALARM_DATE_EN (Bitfield-Mask: 0x01)               */
#define RTC_RTC_ALARM_ENABLE_REG_RTC_ALARM_HOUR_EN_Pos (3UL)        /*!< RTC_ALARM_HOUR_EN (Bit 3)                             */
#define RTC_RTC_ALARM_ENABLE_REG_RTC_ALARM_HOUR_EN_Msk (0x8UL)      /*!< RTC_ALARM_HOUR_EN (Bitfield-Mask: 0x01)               */
#define RTC_RTC_ALARM_ENABLE_REG_RTC_ALARM_MIN_EN_Pos (2UL)         /*!< RTC_ALARM_MIN_EN (Bit 2)                              */
#define RTC_RTC_ALARM_ENABLE_REG_RTC_ALARM_MIN_EN_Msk (0x4UL)       /*!< RTC_ALARM_MIN_EN (Bitfield-Mask: 0x01)                */
#define RTC_RTC_ALARM_ENABLE_REG_RTC_ALARM_SEC_EN_Pos (1UL)         /*!< RTC_ALARM_SEC_EN (Bit 1)                              */
#define RTC_RTC_ALARM_ENABLE_REG_RTC_ALARM_SEC_EN_Msk (0x2UL)       /*!< RTC_ALARM_SEC_EN (Bitfield-Mask: 0x01)                */
#define RTC_RTC_ALARM_ENABLE_REG_RTC_ALARM_HOS_EN_Pos (0UL)         /*!< RTC_ALARM_HOS_EN (Bit 0)                              */
#define RTC_RTC_ALARM_ENABLE_REG_RTC_ALARM_HOS_EN_Msk (0x1UL)       /*!< RTC_ALARM_HOS_EN (Bitfield-Mask: 0x01)                */
/* ================================================  RTC_CALENDAR_ALARM_REG  ================================================= */
#define RTC_RTC_CALENDAR_ALARM_REG_RTC_CAL_D_T_Pos (12UL)           /*!< RTC_CAL_D_T (Bit 12)                                  */
#define RTC_RTC_CALENDAR_ALARM_REG_RTC_CAL_D_T_Msk (0x3000UL)       /*!< RTC_CAL_D_T (Bitfield-Mask: 0x03)                     */
#define RTC_RTC_CALENDAR_ALARM_REG_RTC_CAL_D_U_Pos (8UL)            /*!< RTC_CAL_D_U (Bit 8)                                   */
#define RTC_RTC_CALENDAR_ALARM_REG_RTC_CAL_D_U_Msk (0xf00UL)        /*!< RTC_CAL_D_U (Bitfield-Mask: 0x0f)                     */
#define RTC_RTC_CALENDAR_ALARM_REG_RTC_CAL_M_T_Pos (7UL)            /*!< RTC_CAL_M_T (Bit 7)                                   */
#define RTC_RTC_CALENDAR_ALARM_REG_RTC_CAL_M_T_Msk (0x80UL)         /*!< RTC_CAL_M_T (Bitfield-Mask: 0x01)                     */
#define RTC_RTC_CALENDAR_ALARM_REG_RTC_CAL_M_U_Pos (3UL)            /*!< RTC_CAL_M_U (Bit 3)                                   */
#define RTC_RTC_CALENDAR_ALARM_REG_RTC_CAL_M_U_Msk (0x78UL)         /*!< RTC_CAL_M_U (Bitfield-Mask: 0x0f)                     */
/* ===================================================  RTC_CALENDAR_REG  ==================================================== */
#define RTC_RTC_CALENDAR_REG_RTC_CAL_CH_Pos (31UL)                  /*!< RTC_CAL_CH (Bit 31)                                   */
#define RTC_RTC_CALENDAR_REG_RTC_CAL_CH_Msk (0x80000000UL)          /*!< RTC_CAL_CH (Bitfield-Mask: 0x01)                      */
#define RTC_RTC_CALENDAR_REG_RTC_CAL_C_T_Pos (28UL)                 /*!< RTC_CAL_C_T (Bit 28)                                  */
#define RTC_RTC_CALENDAR_REG_RTC_CAL_C_T_Msk (0x30000000UL)         /*!< RTC_CAL_C_T (Bitfield-Mask: 0x03)                     */
#define RTC_RTC_CALENDAR_REG_RTC_CAL_C_U_Pos (24UL)                 /*!< RTC_CAL_C_U (Bit 24)                                  */
#define RTC_RTC_CALENDAR_REG_RTC_CAL_C_U_Msk (0xf000000UL)          /*!< RTC_CAL_C_U (Bitfield-Mask: 0x0f)                     */
#define RTC_RTC_CALENDAR_REG_RTC_CAL_Y_T_Pos (20UL)                 /*!< RTC_CAL_Y_T (Bit 20)                                  */
#define RTC_RTC_CALENDAR_REG_RTC_CAL_Y_T_Msk (0xf00000UL)           /*!< RTC_CAL_Y_T (Bitfield-Mask: 0x0f)                     */
#define RTC_RTC_CALENDAR_REG_RTC_CAL_Y_U_Pos (16UL)                 /*!< RTC_CAL_Y_U (Bit 16)                                  */
#define RTC_RTC_CALENDAR_REG_RTC_CAL_Y_U_Msk (0xf0000UL)            /*!< RTC_CAL_Y_U (Bitfield-Mask: 0x0f)                     */
#define RTC_RTC_CALENDAR_REG_RTC_CAL_D_T_Pos (12UL)                 /*!< RTC_CAL_D_T (Bit 12)                                  */
#define RTC_RTC_CALENDAR_REG_RTC_CAL_D_T_Msk (0x3000UL)             /*!< RTC_CAL_D_T (Bitfield-Mask: 0x03)                     */
#define RTC_RTC_CALENDAR_REG_RTC_CAL_D_U_Pos (8UL)                  /*!< RTC_CAL_D_U (Bit 8)                                   */
#define RTC_RTC_CALENDAR_REG_RTC_CAL_D_U_Msk (0xf00UL)              /*!< RTC_CAL_D_U (Bitfield-Mask: 0x0f)                     */
#define RTC_RTC_CALENDAR_REG_RTC_CAL_M_T_Pos (7UL)                  /*!< RTC_CAL_M_T (Bit 7)                                   */
#define RTC_RTC_CALENDAR_REG_RTC_CAL_M_T_Msk (0x80UL)               /*!< RTC_CAL_M_T (Bitfield-Mask: 0x01)                     */
#define RTC_RTC_CALENDAR_REG_RTC_CAL_M_U_Pos (3UL)                  /*!< RTC_CAL_M_U (Bit 3)                                   */
#define RTC_RTC_CALENDAR_REG_RTC_CAL_M_U_Msk (0x78UL)               /*!< RTC_CAL_M_U (Bitfield-Mask: 0x0f)                     */
#define RTC_RTC_CALENDAR_REG_RTC_DAY_Pos  (0UL)                     /*!< RTC_DAY (Bit 0)                                       */
#define RTC_RTC_CALENDAR_REG_RTC_DAY_Msk  (0x7UL)                   /*!< RTC_DAY (Bitfield-Mask: 0x07)                         */
/* ====================================================  RTC_CONTROL_REG  ==================================================== */
#define RTC_RTC_CONTROL_REG_RTC_CAL_DISABLE_Pos (1UL)               /*!< RTC_CAL_DISABLE (Bit 1)                               */
#define RTC_RTC_CONTROL_REG_RTC_CAL_DISABLE_Msk (0x2UL)             /*!< RTC_CAL_DISABLE (Bitfield-Mask: 0x01)                 */
#define RTC_RTC_CONTROL_REG_RTC_TIME_DISABLE_Pos (0UL)              /*!< RTC_TIME_DISABLE (Bit 0)                              */
#define RTC_RTC_CONTROL_REG_RTC_TIME_DISABLE_Msk (0x1UL)            /*!< RTC_TIME_DISABLE (Bitfield-Mask: 0x01)                */
/* ==================================================  RTC_EVENT_CTRL_REG  =================================================== */
#define RTC_RTC_EVENT_CTRL_REG_RTC_PDC_EVENT_EN_Pos (1UL)           /*!< RTC_PDC_EVENT_EN (Bit 1)                              */
#define RTC_RTC_EVENT_CTRL_REG_RTC_PDC_EVENT_EN_Msk (0x2UL)         /*!< RTC_PDC_EVENT_EN (Bitfield-Mask: 0x01)                */
/* ==================================================  RTC_EVENT_FLAGS_REG  ================================================== */
#define RTC_RTC_EVENT_FLAGS_REG_RTC_EVENT_ALRM_Pos (6UL)            /*!< RTC_EVENT_ALRM (Bit 6)                                */
#define RTC_RTC_EVENT_FLAGS_REG_RTC_EVENT_ALRM_Msk (0x40UL)         /*!< RTC_EVENT_ALRM (Bitfield-Mask: 0x01)                  */
#define RTC_RTC_EVENT_FLAGS_REG_RTC_EVENT_MNTH_Pos (5UL)            /*!< RTC_EVENT_MNTH (Bit 5)                                */
#define RTC_RTC_EVENT_FLAGS_REG_RTC_EVENT_MNTH_Msk (0x20UL)         /*!< RTC_EVENT_MNTH (Bitfield-Mask: 0x01)                  */
#define RTC_RTC_EVENT_FLAGS_REG_RTC_EVENT_DATE_Pos (4UL)            /*!< RTC_EVENT_DATE (Bit 4)                                */
#define RTC_RTC_EVENT_FLAGS_REG_RTC_EVENT_DATE_Msk (0x10UL)         /*!< RTC_EVENT_DATE (Bitfield-Mask: 0x01)                  */
#define RTC_RTC_EVENT_FLAGS_REG_RTC_EVENT_HOUR_Pos (3UL)            /*!< RTC_EVENT_HOUR (Bit 3)                                */
#define RTC_RTC_EVENT_FLAGS_REG_RTC_EVENT_HOUR_Msk (0x8UL)          /*!< RTC_EVENT_HOUR (Bitfield-Mask: 0x01)                  */
#define RTC_RTC_EVENT_FLAGS_REG_RTC_EVENT_MIN_Pos (2UL)             /*!< RTC_EVENT_MIN (Bit 2)                                 */
#define RTC_RTC_EVENT_FLAGS_REG_RTC_EVENT_MIN_Msk (0x4UL)           /*!< RTC_EVENT_MIN (Bitfield-Mask: 0x01)                   */
#define RTC_RTC_EVENT_FLAGS_REG_RTC_EVENT_SEC_Pos (1UL)             /*!< RTC_EVENT_SEC (Bit 1)                                 */
#define RTC_RTC_EVENT_FLAGS_REG_RTC_EVENT_SEC_Msk (0x2UL)           /*!< RTC_EVENT_SEC (Bitfield-Mask: 0x01)                   */
#define RTC_RTC_EVENT_FLAGS_REG_RTC_EVENT_HOS_Pos (0UL)             /*!< RTC_EVENT_HOS (Bit 0)                                 */
#define RTC_RTC_EVENT_FLAGS_REG_RTC_EVENT_HOS_Msk (0x1UL)           /*!< RTC_EVENT_HOS (Bitfield-Mask: 0x01)                   */
/* ===================================================  RTC_HOUR_MODE_REG  =================================================== */
#define RTC_RTC_HOUR_MODE_REG_RTC_HMS_Pos (0UL)                     /*!< RTC_HMS (Bit 0)                                       */
#define RTC_RTC_HOUR_MODE_REG_RTC_HMS_Msk (0x1UL)                   /*!< RTC_HMS (Bitfield-Mask: 0x01)                         */
/* ===============================================  RTC_INTERRUPT_DISABLE_REG  =============================================== */
#define RTC_RTC_INTERRUPT_DISABLE_REG_RTC_ALRM_INT_DIS_Pos (6UL)    /*!< RTC_ALRM_INT_DIS (Bit 6)                              */
#define RTC_RTC_INTERRUPT_DISABLE_REG_RTC_ALRM_INT_DIS_Msk (0x40UL) /*!< RTC_ALRM_INT_DIS (Bitfield-Mask: 0x01)                */
#define RTC_RTC_INTERRUPT_DISABLE_REG_RTC_MNTH_INT_DIS_Pos (5UL)    /*!< RTC_MNTH_INT_DIS (Bit 5)                              */
#define RTC_RTC_INTERRUPT_DISABLE_REG_RTC_MNTH_INT_DIS_Msk (0x20UL) /*!< RTC_MNTH_INT_DIS (Bitfield-Mask: 0x01)                */
#define RTC_RTC_INTERRUPT_DISABLE_REG_RTC_DATE_INT_DIS_Pos (4UL)    /*!< RTC_DATE_INT_DIS (Bit 4)                              */
#define RTC_RTC_INTERRUPT_DISABLE_REG_RTC_DATE_INT_DIS_Msk (0x10UL) /*!< RTC_DATE_INT_DIS (Bitfield-Mask: 0x01)                */
#define RTC_RTC_INTERRUPT_DISABLE_REG_RTC_HOUR_INT_DIS_Pos (3UL)    /*!< RTC_HOUR_INT_DIS (Bit 3)                              */
#define RTC_RTC_INTERRUPT_DISABLE_REG_RTC_HOUR_INT_DIS_Msk (0x8UL)  /*!< RTC_HOUR_INT_DIS (Bitfield-Mask: 0x01)                */
#define RTC_RTC_INTERRUPT_DISABLE_REG_RTC_MIN_INT_DIS_Pos (2UL)     /*!< RTC_MIN_INT_DIS (Bit 2)                               */
#define RTC_RTC_INTERRUPT_DISABLE_REG_RTC_MIN_INT_DIS_Msk (0x4UL)   /*!< RTC_MIN_INT_DIS (Bitfield-Mask: 0x01)                 */
#define RTC_RTC_INTERRUPT_DISABLE_REG_RTC_SEC_INT_DIS_Pos (1UL)     /*!< RTC_SEC_INT_DIS (Bit 1)                               */
#define RTC_RTC_INTERRUPT_DISABLE_REG_RTC_SEC_INT_DIS_Msk (0x2UL)   /*!< RTC_SEC_INT_DIS (Bitfield-Mask: 0x01)                 */
#define RTC_RTC_INTERRUPT_DISABLE_REG_RTC_HOS_INT_DIS_Pos (0UL)     /*!< RTC_HOS_INT_DIS (Bit 0)                               */
#define RTC_RTC_INTERRUPT_DISABLE_REG_RTC_HOS_INT_DIS_Msk (0x1UL)   /*!< RTC_HOS_INT_DIS (Bitfield-Mask: 0x01)                 */
/* ===============================================  RTC_INTERRUPT_ENABLE_REG  ================================================ */
#define RTC_RTC_INTERRUPT_ENABLE_REG_RTC_ALRM_INT_EN_Pos (6UL)      /*!< RTC_ALRM_INT_EN (Bit 6)                               */
#define RTC_RTC_INTERRUPT_ENABLE_REG_RTC_ALRM_INT_EN_Msk (0x40UL)   /*!< RTC_ALRM_INT_EN (Bitfield-Mask: 0x01)                 */
#define RTC_RTC_INTERRUPT_ENABLE_REG_RTC_MNTH_INT_EN_Pos (5UL)      /*!< RTC_MNTH_INT_EN (Bit 5)                               */
#define RTC_RTC_INTERRUPT_ENABLE_REG_RTC_MNTH_INT_EN_Msk (0x20UL)   /*!< RTC_MNTH_INT_EN (Bitfield-Mask: 0x01)                 */
#define RTC_RTC_INTERRUPT_ENABLE_REG_RTC_DATE_INT_EN_Pos (4UL)      /*!< RTC_DATE_INT_EN (Bit 4)                               */
#define RTC_RTC_INTERRUPT_ENABLE_REG_RTC_DATE_INT_EN_Msk (0x10UL)   /*!< RTC_DATE_INT_EN (Bitfield-Mask: 0x01)                 */
#define RTC_RTC_INTERRUPT_ENABLE_REG_RTC_HOUR_INT_EN_Pos (3UL)      /*!< RTC_HOUR_INT_EN (Bit 3)                               */
#define RTC_RTC_INTERRUPT_ENABLE_REG_RTC_HOUR_INT_EN_Msk (0x8UL)    /*!< RTC_HOUR_INT_EN (Bitfield-Mask: 0x01)                 */
#define RTC_RTC_INTERRUPT_ENABLE_REG_RTC_MIN_INT_EN_Pos (2UL)       /*!< RTC_MIN_INT_EN (Bit 2)                                */
#define RTC_RTC_INTERRUPT_ENABLE_REG_RTC_MIN_INT_EN_Msk (0x4UL)     /*!< RTC_MIN_INT_EN (Bitfield-Mask: 0x01)                  */
#define RTC_RTC_INTERRUPT_ENABLE_REG_RTC_SEC_INT_EN_Pos (1UL)       /*!< RTC_SEC_INT_EN (Bit 1)                                */
#define RTC_RTC_INTERRUPT_ENABLE_REG_RTC_SEC_INT_EN_Msk (0x2UL)     /*!< RTC_SEC_INT_EN (Bitfield-Mask: 0x01)                  */
#define RTC_RTC_INTERRUPT_ENABLE_REG_RTC_HOS_INT_EN_Pos (0UL)       /*!< RTC_HOS_INT_EN (Bit 0)                                */
#define RTC_RTC_INTERRUPT_ENABLE_REG_RTC_HOS_INT_EN_Msk (0x1UL)     /*!< RTC_HOS_INT_EN (Bitfield-Mask: 0x01)                  */
/* ================================================  RTC_INTERRUPT_MASK_REG  ================================================= */
#define RTC_RTC_INTERRUPT_MASK_REG_RTC_ALRM_INT_MSK_Pos (6UL)       /*!< RTC_ALRM_INT_MSK (Bit 6)                              */
#define RTC_RTC_INTERRUPT_MASK_REG_RTC_ALRM_INT_MSK_Msk (0x40UL)    /*!< RTC_ALRM_INT_MSK (Bitfield-Mask: 0x01)                */
#define RTC_RTC_INTERRUPT_MASK_REG_RTC_MNTH_INT_MSK_Pos (5UL)       /*!< RTC_MNTH_INT_MSK (Bit 5)                              */
#define RTC_RTC_INTERRUPT_MASK_REG_RTC_MNTH_INT_MSK_Msk (0x20UL)    /*!< RTC_MNTH_INT_MSK (Bitfield-Mask: 0x01)                */
#define RTC_RTC_INTERRUPT_MASK_REG_RTC_DATE_INT_MSK_Pos (4UL)       /*!< RTC_DATE_INT_MSK (Bit 4)                              */
#define RTC_RTC_INTERRUPT_MASK_REG_RTC_DATE_INT_MSK_Msk (0x10UL)    /*!< RTC_DATE_INT_MSK (Bitfield-Mask: 0x01)                */
#define RTC_RTC_INTERRUPT_MASK_REG_RTC_HOUR_INT_MSK_Pos (3UL)       /*!< RTC_HOUR_INT_MSK (Bit 3)                              */
#define RTC_RTC_INTERRUPT_MASK_REG_RTC_HOUR_INT_MSK_Msk (0x8UL)     /*!< RTC_HOUR_INT_MSK (Bitfield-Mask: 0x01)                */
#define RTC_RTC_INTERRUPT_MASK_REG_RTC_MIN_INT_MSK_Pos (2UL)        /*!< RTC_MIN_INT_MSK (Bit 2)                               */
#define RTC_RTC_INTERRUPT_MASK_REG_RTC_MIN_INT_MSK_Msk (0x4UL)      /*!< RTC_MIN_INT_MSK (Bitfield-Mask: 0x01)                 */
#define RTC_RTC_INTERRUPT_MASK_REG_RTC_SEC_INT_MSK_Pos (1UL)        /*!< RTC_SEC_INT_MSK (Bit 1)                               */
#define RTC_RTC_INTERRUPT_MASK_REG_RTC_SEC_INT_MSK_Msk (0x2UL)      /*!< RTC_SEC_INT_MSK (Bitfield-Mask: 0x01)                 */
#define RTC_RTC_INTERRUPT_MASK_REG_RTC_HOS_INT_MSK_Pos (0UL)        /*!< RTC_HOS_INT_MSK (Bit 0)                               */
#define RTC_RTC_INTERRUPT_MASK_REG_RTC_HOS_INT_MSK_Msk (0x1UL)      /*!< RTC_HOS_INT_MSK (Bitfield-Mask: 0x01)                 */
/* ===================================================  RTC_KEEP_RTC_REG  ==================================================== */
#define RTC_RTC_KEEP_RTC_REG_RTC_KEEP_Pos (0UL)                     /*!< RTC_KEEP (Bit 0)                                      */
#define RTC_RTC_KEEP_RTC_REG_RTC_KEEP_Msk (0x1UL)                   /*!< RTC_KEEP (Bitfield-Mask: 0x01)                        */
/* ================================================  RTC_PDC_EVENT_CLEAR_REG  ================================================ */
#define RTC_RTC_PDC_EVENT_CLEAR_REG_PDC_EVENT_CLEAR_Pos (0UL)       /*!< PDC_EVENT_CLEAR (Bit 0)                               */
#define RTC_RTC_PDC_EVENT_CLEAR_REG_PDC_EVENT_CLEAR_Msk (0x1UL)     /*!< PDC_EVENT_CLEAR (Bitfield-Mask: 0x01)                 */
/* =================================================  RTC_PDC_EVENT_CNT_REG  ================================================= */
#define RTC_RTC_PDC_EVENT_CNT_REG_RTC_PDC_EVENT_CNT_Pos (0UL)       /*!< RTC_PDC_EVENT_CNT (Bit 0)                             */
#define RTC_RTC_PDC_EVENT_CNT_REG_RTC_PDC_EVENT_CNT_Msk (0x1fffUL)  /*!< RTC_PDC_EVENT_CNT (Bitfield-Mask: 0x1fff)             */
/* ===============================================  RTC_PDC_EVENT_PERIOD_REG  ================================================ */
#define RTC_RTC_PDC_EVENT_PERIOD_REG_RTC_PDC_EVENT_PERIOD_Pos (0UL) /*!< RTC_PDC_EVENT_PERIOD (Bit 0)                          */
#define RTC_RTC_PDC_EVENT_PERIOD_REG_RTC_PDC_EVENT_PERIOD_Msk (0x1fffUL) /*!< RTC_PDC_EVENT_PERIOD (Bitfield-Mask: 0x1fff)     */
/* ====================================================  RTC_STATUS_REG  ===================================================== */
#define RTC_RTC_STATUS_REG_RTC_VALID_CAL_ALM_Pos (3UL)              /*!< RTC_VALID_CAL_ALM (Bit 3)                             */
#define RTC_RTC_STATUS_REG_RTC_VALID_CAL_ALM_Msk (0x8UL)            /*!< RTC_VALID_CAL_ALM (Bitfield-Mask: 0x01)               */
#define RTC_RTC_STATUS_REG_RTC_VALID_TIME_ALM_Pos (2UL)             /*!< RTC_VALID_TIME_ALM (Bit 2)                            */
#define RTC_RTC_STATUS_REG_RTC_VALID_TIME_ALM_Msk (0x4UL)           /*!< RTC_VALID_TIME_ALM (Bitfield-Mask: 0x01)              */
#define RTC_RTC_STATUS_REG_RTC_VALID_CAL_Pos (1UL)                  /*!< RTC_VALID_CAL (Bit 1)                                 */
#define RTC_RTC_STATUS_REG_RTC_VALID_CAL_Msk (0x2UL)                /*!< RTC_VALID_CAL (Bitfield-Mask: 0x01)                   */
#define RTC_RTC_STATUS_REG_RTC_VALID_TIME_Pos (0UL)                 /*!< RTC_VALID_TIME (Bit 0)                                */
#define RTC_RTC_STATUS_REG_RTC_VALID_TIME_Msk (0x1UL)               /*!< RTC_VALID_TIME (Bitfield-Mask: 0x01)                  */
/* ==================================================  RTC_TIME_ALARM_REG  =================================================== */
#define RTC_RTC_TIME_ALARM_REG_RTC_TIME_PM_Pos (30UL)               /*!< RTC_TIME_PM (Bit 30)                                  */
#define RTC_RTC_TIME_ALARM_REG_RTC_TIME_PM_Msk (0x40000000UL)       /*!< RTC_TIME_PM (Bitfield-Mask: 0x01)                     */
#define RTC_RTC_TIME_ALARM_REG_RTC_TIME_HR_T_Pos (28UL)             /*!< RTC_TIME_HR_T (Bit 28)                                */
#define RTC_RTC_TIME_ALARM_REG_RTC_TIME_HR_T_Msk (0x30000000UL)     /*!< RTC_TIME_HR_T (Bitfield-Mask: 0x03)                   */
#define RTC_RTC_TIME_ALARM_REG_RTC_TIME_HR_U_Pos (24UL)             /*!< RTC_TIME_HR_U (Bit 24)                                */
#define RTC_RTC_TIME_ALARM_REG_RTC_TIME_HR_U_Msk (0xf000000UL)      /*!< RTC_TIME_HR_U (Bitfield-Mask: 0x0f)                   */
#define RTC_RTC_TIME_ALARM_REG_RTC_TIME_M_T_Pos (20UL)              /*!< RTC_TIME_M_T (Bit 20)                                 */
#define RTC_RTC_TIME_ALARM_REG_RTC_TIME_M_T_Msk (0x700000UL)        /*!< RTC_TIME_M_T (Bitfield-Mask: 0x07)                    */
#define RTC_RTC_TIME_ALARM_REG_RTC_TIME_M_U_Pos (16UL)              /*!< RTC_TIME_M_U (Bit 16)                                 */
#define RTC_RTC_TIME_ALARM_REG_RTC_TIME_M_U_Msk (0xf0000UL)         /*!< RTC_TIME_M_U (Bitfield-Mask: 0x0f)                    */
#define RTC_RTC_TIME_ALARM_REG_RTC_TIME_S_T_Pos (12UL)              /*!< RTC_TIME_S_T (Bit 12)                                 */
#define RTC_RTC_TIME_ALARM_REG_RTC_TIME_S_T_Msk (0x7000UL)          /*!< RTC_TIME_S_T (Bitfield-Mask: 0x07)                    */
#define RTC_RTC_TIME_ALARM_REG_RTC_TIME_S_U_Pos (8UL)               /*!< RTC_TIME_S_U (Bit 8)                                  */
#define RTC_RTC_TIME_ALARM_REG_RTC_TIME_S_U_Msk (0xf00UL)           /*!< RTC_TIME_S_U (Bitfield-Mask: 0x0f)                    */
#define RTC_RTC_TIME_ALARM_REG_RTC_TIME_H_T_Pos (4UL)               /*!< RTC_TIME_H_T (Bit 4)                                  */
#define RTC_RTC_TIME_ALARM_REG_RTC_TIME_H_T_Msk (0xf0UL)            /*!< RTC_TIME_H_T (Bitfield-Mask: 0x0f)                    */
#define RTC_RTC_TIME_ALARM_REG_RTC_TIME_H_U_Pos (0UL)               /*!< RTC_TIME_H_U (Bit 0)                                  */
#define RTC_RTC_TIME_ALARM_REG_RTC_TIME_H_U_Msk (0xfUL)             /*!< RTC_TIME_H_U (Bitfield-Mask: 0x0f)                    */
/* =====================================================  RTC_TIME_REG  ====================================================== */
#define RTC_RTC_TIME_REG_RTC_TIME_CH_Pos  (31UL)                    /*!< RTC_TIME_CH (Bit 31)                                  */
#define RTC_RTC_TIME_REG_RTC_TIME_CH_Msk  (0x80000000UL)            /*!< RTC_TIME_CH (Bitfield-Mask: 0x01)                     */
#define RTC_RTC_TIME_REG_RTC_TIME_PM_Pos  (30UL)                    /*!< RTC_TIME_PM (Bit 30)                                  */
#define RTC_RTC_TIME_REG_RTC_TIME_PM_Msk  (0x40000000UL)            /*!< RTC_TIME_PM (Bitfield-Mask: 0x01)                     */
#define RTC_RTC_TIME_REG_RTC_TIME_HR_T_Pos (28UL)                   /*!< RTC_TIME_HR_T (Bit 28)                                */
#define RTC_RTC_TIME_REG_RTC_TIME_HR_T_Msk (0x30000000UL)           /*!< RTC_TIME_HR_T (Bitfield-Mask: 0x03)                   */
#define RTC_RTC_TIME_REG_RTC_TIME_HR_U_Pos (24UL)                   /*!< RTC_TIME_HR_U (Bit 24)                                */
#define RTC_RTC_TIME_REG_RTC_TIME_HR_U_Msk (0xf000000UL)            /*!< RTC_TIME_HR_U (Bitfield-Mask: 0x0f)                   */
#define RTC_RTC_TIME_REG_RTC_TIME_M_T_Pos (20UL)                    /*!< RTC_TIME_M_T (Bit 20)                                 */
#define RTC_RTC_TIME_REG_RTC_TIME_M_T_Msk (0x700000UL)              /*!< RTC_TIME_M_T (Bitfield-Mask: 0x07)                    */
#define RTC_RTC_TIME_REG_RTC_TIME_M_U_Pos (16UL)                    /*!< RTC_TIME_M_U (Bit 16)                                 */
#define RTC_RTC_TIME_REG_RTC_TIME_M_U_Msk (0xf0000UL)               /*!< RTC_TIME_M_U (Bitfield-Mask: 0x0f)                    */
#define RTC_RTC_TIME_REG_RTC_TIME_S_T_Pos (12UL)                    /*!< RTC_TIME_S_T (Bit 12)                                 */
#define RTC_RTC_TIME_REG_RTC_TIME_S_T_Msk (0x7000UL)                /*!< RTC_TIME_S_T (Bitfield-Mask: 0x07)                    */
#define RTC_RTC_TIME_REG_RTC_TIME_S_U_Pos (8UL)                     /*!< RTC_TIME_S_U (Bit 8)                                  */
#define RTC_RTC_TIME_REG_RTC_TIME_S_U_Msk (0xf00UL)                 /*!< RTC_TIME_S_U (Bitfield-Mask: 0x0f)                    */
#define RTC_RTC_TIME_REG_RTC_TIME_H_T_Pos (4UL)                     /*!< RTC_TIME_H_T (Bit 4)                                  */
#define RTC_RTC_TIME_REG_RTC_TIME_H_T_Msk (0xf0UL)                  /*!< RTC_TIME_H_T (Bitfield-Mask: 0x0f)                    */
#define RTC_RTC_TIME_REG_RTC_TIME_H_U_Pos (0UL)                     /*!< RTC_TIME_H_U (Bit 0)                                  */
#define RTC_RTC_TIME_REG_RTC_TIME_H_U_Msk (0xfUL)                   /*!< RTC_TIME_H_U (Bitfield-Mask: 0x0f)                    */


/* =========================================================================================================================== */
/* ================                                           SDADC                                           ================ */
/* =========================================================================================================================== */

/* =================================================  SDADC_AUDIO_FILT_REG  ================================================== */
#define SDADC_SDADC_AUDIO_FILT_REG_SDADC_CIC_OFFSET_Pos (0UL)       /*!< SDADC_CIC_OFFSET (Bit 0)                              */
#define SDADC_SDADC_AUDIO_FILT_REG_SDADC_CIC_OFFSET_Msk (0x1fffffUL) /*!< SDADC_CIC_OFFSET (Bitfield-Mask: 0x1fffff)           */
/* ==================================================  SDADC_CLEAR_INT_REG  ================================================== */
#define SDADC_SDADC_CLEAR_INT_REG_SDADC_CLR_INT_Pos (0UL)           /*!< SDADC_CLR_INT (Bit 0)                                 */
#define SDADC_SDADC_CLEAR_INT_REG_SDADC_CLR_INT_Msk (0xffffffffUL)  /*!< SDADC_CLR_INT (Bitfield-Mask: 0xffffffff)             */
/* ====================================================  SDADC_CTRL_REG  ===================================================== */
#define SDADC_SDADC_CTRL_REG_SDADC_DMA_EN_Pos (18UL)                /*!< SDADC_DMA_EN (Bit 18)                                 */
#define SDADC_SDADC_CTRL_REG_SDADC_DMA_EN_Msk (0x40000UL)           /*!< SDADC_DMA_EN (Bitfield-Mask: 0x01)                    */
#define SDADC_SDADC_CTRL_REG_SDADC_MINT_Pos (17UL)                  /*!< SDADC_MINT (Bit 17)                                   */
#define SDADC_SDADC_CTRL_REG_SDADC_MINT_Msk (0x20000UL)             /*!< SDADC_MINT (Bitfield-Mask: 0x01)                      */
#define SDADC_SDADC_CTRL_REG_SDADC_INT_Pos (16UL)                   /*!< SDADC_INT (Bit 16)                                    */
#define SDADC_SDADC_CTRL_REG_SDADC_INT_Msk (0x10000UL)              /*!< SDADC_INT (Bitfield-Mask: 0x01)                       */
#define SDADC_SDADC_CTRL_REG_SDADC_LDO_OK_Pos (15UL)                /*!< SDADC_LDO_OK (Bit 15)                                 */
#define SDADC_SDADC_CTRL_REG_SDADC_LDO_OK_Msk (0x8000UL)            /*!< SDADC_LDO_OK (Bitfield-Mask: 0x01)                    */
#define SDADC_SDADC_CTRL_REG_SDADC_AUDIO_FILTER_EN_Pos (12UL)       /*!< SDADC_AUDIO_FILTER_EN (Bit 12)                        */
#define SDADC_SDADC_CTRL_REG_SDADC_AUDIO_FILTER_EN_Msk (0x1000UL)   /*!< SDADC_AUDIO_FILTER_EN (Bitfield-Mask: 0x01)           */
#define SDADC_SDADC_CTRL_REG_SDADC_RESULT_MODE_Pos (10UL)           /*!< SDADC_RESULT_MODE (Bit 10)                            */
#define SDADC_SDADC_CTRL_REG_SDADC_RESULT_MODE_Msk (0xc00UL)        /*!< SDADC_RESULT_MODE (Bitfield-Mask: 0x03)               */
#define SDADC_SDADC_CTRL_REG_SDADC_START_Pos (1UL)                  /*!< SDADC_START (Bit 1)                                   */
#define SDADC_SDADC_CTRL_REG_SDADC_START_Msk (0x2UL)                /*!< SDADC_START (Bitfield-Mask: 0x01)                     */
#define SDADC_SDADC_CTRL_REG_SDADC_EN_Pos (0UL)                     /*!< SDADC_EN (Bit 0)                                      */
#define SDADC_SDADC_CTRL_REG_SDADC_EN_Msk (0x1UL)                   /*!< SDADC_EN (Bitfield-Mask: 0x01)                        */
/* ==================================================  SDADC_PGA_CTRL_REG  =================================================== */
#define SDADC_SDADC_PGA_CTRL_REG_PGA_GAIN_Pos (9UL)                 /*!< PGA_GAIN (Bit 9)                                      */
#define SDADC_SDADC_PGA_CTRL_REG_PGA_GAIN_Msk (0xe00UL)             /*!< PGA_GAIN (Bitfield-Mask: 0x07)                        */
#define SDADC_SDADC_PGA_CTRL_REG_PGA_MODE_Pos (7UL)                 /*!< PGA_MODE (Bit 7)                                      */
#define SDADC_SDADC_PGA_CTRL_REG_PGA_MODE_Msk (0x180UL)             /*!< PGA_MODE (Bitfield-Mask: 0x03)                        */
#define SDADC_SDADC_PGA_CTRL_REG_PGA_MUTE_Pos (6UL)                 /*!< PGA_MUTE (Bit 6)                                      */
#define SDADC_SDADC_PGA_CTRL_REG_PGA_MUTE_Msk (0x40UL)              /*!< PGA_MUTE (Bitfield-Mask: 0x01)                        */
#define SDADC_SDADC_PGA_CTRL_REG_PGA_BIAS_Pos (3UL)                 /*!< PGA_BIAS (Bit 3)                                      */
#define SDADC_SDADC_PGA_CTRL_REG_PGA_BIAS_Msk (0x38UL)              /*!< PGA_BIAS (Bitfield-Mask: 0x07)                        */
#define SDADC_SDADC_PGA_CTRL_REG_PGA_SHORTIN_Pos (2UL)              /*!< PGA_SHORTIN (Bit 2)                                   */
#define SDADC_SDADC_PGA_CTRL_REG_PGA_SHORTIN_Msk (0x4UL)            /*!< PGA_SHORTIN (Bitfield-Mask: 0x01)                     */
#define SDADC_SDADC_PGA_CTRL_REG_PGA_EN_Pos (0UL)                   /*!< PGA_EN (Bit 0)                                        */
#define SDADC_SDADC_PGA_CTRL_REG_PGA_EN_Msk (0x3UL)                 /*!< PGA_EN (Bitfield-Mask: 0x03)                          */
/* ===================================================  SDADC_RESULT_REG  ==================================================== */
#define SDADC_SDADC_RESULT_REG_SDADC_VAL_Pos (0UL)                  /*!< SDADC_VAL (Bit 0)                                     */
#define SDADC_SDADC_RESULT_REG_SDADC_VAL_Msk (0xffffUL)             /*!< SDADC_VAL (Bitfield-Mask: 0xffff)                     */


/* =========================================================================================================================== */
/* ================                                            SNC                                            ================ */
/* =========================================================================================================================== */

/* ====================================================  SNC_STATUS_REG  ===================================================== */
#define SNC_SNC_STATUS_REG_WDOG_EARLY_NOTICE_Pos (4UL)              /*!< WDOG_EARLY_NOTICE (Bit 4)                             */
#define SNC_SNC_STATUS_REG_WDOG_EARLY_NOTICE_Msk (0x10UL)           /*!< WDOG_EARLY_NOTICE (Bitfield-Mask: 0x01)               */
#define SNC_SNC_STATUS_REG_WDOG_HAS_EXPIRED_Pos (3UL)               /*!< WDOG_HAS_EXPIRED (Bit 3)                              */
#define SNC_SNC_STATUS_REG_WDOG_HAS_EXPIRED_Msk (0x8UL)             /*!< WDOG_HAS_EXPIRED (Bitfield-Mask: 0x01)                */
#define SNC_SNC_STATUS_REG_CPU_LOCKED_Pos (2UL)                     /*!< CPU_LOCKED (Bit 2)                                    */
#define SNC_SNC_STATUS_REG_CPU_LOCKED_Msk (0x4UL)                   /*!< CPU_LOCKED (Bitfield-Mask: 0x01)                      */
#define SNC_SNC_STATUS_REG_CPU_IDLE_Pos   (1UL)                     /*!< CPU_IDLE (Bit 1)                                      */
#define SNC_SNC_STATUS_REG_CPU_IDLE_Msk   (0x2UL)                   /*!< CPU_IDLE (Bitfield-Mask: 0x01)                        */
#define SNC_SNC_STATUS_REG_CPU_HALTED_Pos (0UL)                     /*!< CPU_HALTED (Bit 0)                                    */
#define SNC_SNC_STATUS_REG_CPU_HALTED_Msk (0x1UL)                   /*!< CPU_HALTED (Bitfield-Mask: 0x01)                      */
/* =====================================================  SNC_WDOG_REG  ====================================================== */
#define SNC_SNC_WDOG_REG_SYS2SNC_WDOG_FREEZE_Pos (31UL)             /*!< SYS2SNC_WDOG_FREEZE (Bit 31)                          */
#define SNC_SNC_WDOG_REG_SYS2SNC_WDOG_FREEZE_Msk (0x80000000UL)     /*!< SYS2SNC_WDOG_FREEZE (Bitfield-Mask: 0x01)             */
#define SNC_SNC_WDOG_REG_SYS2SNC_WDOG_FREEZE_DIS_Pos (30UL)         /*!< SYS2SNC_WDOG_FREEZE_DIS (Bit 30)                      */
#define SNC_SNC_WDOG_REG_SYS2SNC_WDOG_FREEZE_DIS_Msk (0x40000000UL) /*!< SYS2SNC_WDOG_FREEZE_DIS (Bitfield-Mask: 0x01)         */
#define SNC_SNC_WDOG_REG_SNC_WDOG_EXPIRE_Pos (29UL)                 /*!< SNC_WDOG_EXPIRE (Bit 29)                              */
#define SNC_SNC_WDOG_REG_SNC_WDOG_EXPIRE_Msk (0x20000000UL)         /*!< SNC_WDOG_EXPIRE (Bitfield-Mask: 0x01)                 */
#define SNC_SNC_WDOG_REG_SNC_WDOG_SYS_RST_REQ_Pos (28UL)            /*!< SNC_WDOG_SYS_RST_REQ (Bit 28)                         */
#define SNC_SNC_WDOG_REG_SNC_WDOG_SYS_RST_REQ_Msk (0x10000000UL)    /*!< SNC_WDOG_SYS_RST_REQ (Bitfield-Mask: 0x01)            */
#define SNC_SNC_WDOG_REG_SNC_WDOG_WRITE_VALID_Pos (17UL)            /*!< SNC_WDOG_WRITE_VALID (Bit 17)                         */
#define SNC_SNC_WDOG_REG_SNC_WDOG_WRITE_VALID_Msk (0x60000UL)       /*!< SNC_WDOG_WRITE_VALID (Bitfield-Mask: 0x03)            */
#define SNC_SNC_WDOG_REG_SNC_WDOG_CNT_Pos (0UL)                     /*!< SNC_WDOG_CNT (Bit 0)                                  */
#define SNC_SNC_WDOG_REG_SNC_WDOG_CNT_Msk (0x1fffUL)                /*!< SNC_WDOG_CNT (Bitfield-Mask: 0x1fff)                  */


/* =========================================================================================================================== */
/* ================                                            SPI                                            ================ */
/* =========================================================================================================================== */

/* =====================================================  SPI_CLOCK_REG  ===================================================== */
#define SPI_SPI_CLOCK_REG_SPI_CLK_DIV_Pos (0UL)                     /*!< SPI_CLK_DIV (Bit 0)                                   */
#define SPI_SPI_CLOCK_REG_SPI_CLK_DIV_Msk (0x7fUL)                  /*!< SPI_CLK_DIV (Bitfield-Mask: 0x7f)                     */
/* ====================================================  SPI_CONFIG_REG  ===================================================== */
#define SPI_SPI_CONFIG_REG_SPI_SLAVE_EN_Pos (7UL)                   /*!< SPI_SLAVE_EN (Bit 7)                                  */
#define SPI_SPI_CONFIG_REG_SPI_SLAVE_EN_Msk (0x80UL)                /*!< SPI_SLAVE_EN (Bitfield-Mask: 0x01)                    */
#define SPI_SPI_CONFIG_REG_SPI_WORD_LENGTH_Pos (2UL)                /*!< SPI_WORD_LENGTH (Bit 2)                               */
#define SPI_SPI_CONFIG_REG_SPI_WORD_LENGTH_Msk (0x7cUL)             /*!< SPI_WORD_LENGTH (Bitfield-Mask: 0x1f)                 */
#define SPI_SPI_CONFIG_REG_SPI_MODE_Pos   (0UL)                     /*!< SPI_MODE (Bit 0)                                      */
#define SPI_SPI_CONFIG_REG_SPI_MODE_Msk   (0x3UL)                   /*!< SPI_MODE (Bitfield-Mask: 0x03)                        */
/* ===================================================  SPI_CS_CONFIG_REG  =================================================== */
#define SPI_SPI_CS_CONFIG_REG_SPI_CS_SELECT_Pos (0UL)               /*!< SPI_CS_SELECT (Bit 0)                                 */
#define SPI_SPI_CS_CONFIG_REG_SPI_CS_SELECT_Msk (0x7UL)             /*!< SPI_CS_SELECT (Bitfield-Mask: 0x07)                   */
/* =====================================================  SPI_CTRL_REG  ====================================================== */
#define SPI_SPI_CTRL_REG_SPI_SWAP_BYTES_Pos (7UL)                   /*!< SPI_SWAP_BYTES (Bit 7)                                */
#define SPI_SPI_CTRL_REG_SPI_SWAP_BYTES_Msk (0x80UL)                /*!< SPI_SWAP_BYTES (Bitfield-Mask: 0x01)                  */
#define SPI_SPI_CTRL_REG_SPI_CAPTURE_AT_NEXT_EDGE_Pos (6UL)         /*!< SPI_CAPTURE_AT_NEXT_EDGE (Bit 6)                      */
#define SPI_SPI_CTRL_REG_SPI_CAPTURE_AT_NEXT_EDGE_Msk (0x40UL)      /*!< SPI_CAPTURE_AT_NEXT_EDGE (Bitfield-Mask: 0x01)        */
#define SPI_SPI_CTRL_REG_SPI_FIFO_RESET_Pos (5UL)                   /*!< SPI_FIFO_RESET (Bit 5)                                */
#define SPI_SPI_CTRL_REG_SPI_FIFO_RESET_Msk (0x20UL)                /*!< SPI_FIFO_RESET (Bitfield-Mask: 0x01)                  */
#define SPI_SPI_CTRL_REG_SPI_DMA_RX_EN_Pos (4UL)                    /*!< SPI_DMA_RX_EN (Bit 4)                                 */
#define SPI_SPI_CTRL_REG_SPI_DMA_RX_EN_Msk (0x10UL)                 /*!< SPI_DMA_RX_EN (Bitfield-Mask: 0x01)                   */
#define SPI_SPI_CTRL_REG_SPI_DMA_TX_EN_Pos (3UL)                    /*!< SPI_DMA_TX_EN (Bit 3)                                 */
#define SPI_SPI_CTRL_REG_SPI_DMA_TX_EN_Msk (0x8UL)                  /*!< SPI_DMA_TX_EN (Bitfield-Mask: 0x01)                   */
#define SPI_SPI_CTRL_REG_SPI_RX_EN_Pos    (2UL)                     /*!< SPI_RX_EN (Bit 2)                                     */
#define SPI_SPI_CTRL_REG_SPI_RX_EN_Msk    (0x4UL)                   /*!< SPI_RX_EN (Bitfield-Mask: 0x01)                       */
#define SPI_SPI_CTRL_REG_SPI_TX_EN_Pos    (1UL)                     /*!< SPI_TX_EN (Bit 1)                                     */
#define SPI_SPI_CTRL_REG_SPI_TX_EN_Msk    (0x2UL)                   /*!< SPI_TX_EN (Bitfield-Mask: 0x01)                       */
#define SPI_SPI_CTRL_REG_SPI_EN_Pos       (0UL)                     /*!< SPI_EN (Bit 0)                                        */
#define SPI_SPI_CTRL_REG_SPI_EN_Msk       (0x1UL)                   /*!< SPI_EN (Bitfield-Mask: 0x01)                          */
/* ==================================================  SPI_FIFO_CONFIG_REG  ================================================== */
#define SPI_SPI_FIFO_CONFIG_REG_SPI_RX_TL_Pos (8UL)                 /*!< SPI_RX_TL (Bit 8)                                     */
#define SPI_SPI_FIFO_CONFIG_REG_SPI_RX_TL_Msk (0xff00UL)            /*!< SPI_RX_TL (Bitfield-Mask: 0xff)                       */
#define SPI_SPI_FIFO_CONFIG_REG_SPI_TX_TL_Pos (0UL)                 /*!< SPI_TX_TL (Bit 0)                                     */
#define SPI_SPI_FIFO_CONFIG_REG_SPI_TX_TL_Msk (0xffUL)              /*!< SPI_TX_TL (Bitfield-Mask: 0xff)                       */
/* ===================================================  SPI_FIFO_READ_REG  =================================================== */
#define SPI_SPI_FIFO_READ_REG_SPI_FIFO_READ_Pos (0UL)               /*!< SPI_FIFO_READ (Bit 0)                                 */
#define SPI_SPI_FIFO_READ_REG_SPI_FIFO_READ_Msk (0xffffffffUL)      /*!< SPI_FIFO_READ (Bitfield-Mask: 0xffffffff)             */
/* ==================================================  SPI_FIFO_STATUS_REG  ================================================== */
#define SPI_SPI_FIFO_STATUS_REG_SPI_TRANSACTION_ACTIVE_Pos (15UL)   /*!< SPI_TRANSACTION_ACTIVE (Bit 15)                       */
#define SPI_SPI_FIFO_STATUS_REG_SPI_TRANSACTION_ACTIVE_Msk (0x8000UL) /*!< SPI_TRANSACTION_ACTIVE (Bitfield-Mask: 0x01)        */
#define SPI_SPI_FIFO_STATUS_REG_SPI_RX_FIFO_OVFL_Pos (14UL)         /*!< SPI_RX_FIFO_OVFL (Bit 14)                             */
#define SPI_SPI_FIFO_STATUS_REG_SPI_RX_FIFO_OVFL_Msk (0x4000UL)     /*!< SPI_RX_FIFO_OVFL (Bitfield-Mask: 0x01)                */
#define SPI_SPI_FIFO_STATUS_REG_SPI_STATUS_TX_FULL_Pos (13UL)       /*!< SPI_STATUS_TX_FULL (Bit 13)                           */
#define SPI_SPI_FIFO_STATUS_REG_SPI_STATUS_TX_FULL_Msk (0x2000UL)   /*!< SPI_STATUS_TX_FULL (Bitfield-Mask: 0x01)              */
#define SPI_SPI_FIFO_STATUS_REG_SPI_STATUS_RX_EMPTY_Pos (12UL)      /*!< SPI_STATUS_RX_EMPTY (Bit 12)                          */
#define SPI_SPI_FIFO_STATUS_REG_SPI_STATUS_RX_EMPTY_Msk (0x1000UL)  /*!< SPI_STATUS_RX_EMPTY (Bitfield-Mask: 0x01)             */
#define SPI_SPI_FIFO_STATUS_REG_SPI_TX_FIFO_LEVEL_Pos (6UL)         /*!< SPI_TX_FIFO_LEVEL (Bit 6)                             */
#define SPI_SPI_FIFO_STATUS_REG_SPI_TX_FIFO_LEVEL_Msk (0xfc0UL)     /*!< SPI_TX_FIFO_LEVEL (Bitfield-Mask: 0x3f)               */
#define SPI_SPI_FIFO_STATUS_REG_SPI_RX_FIFO_LEVEL_Pos (0UL)         /*!< SPI_RX_FIFO_LEVEL (Bit 0)                             */
#define SPI_SPI_FIFO_STATUS_REG_SPI_RX_FIFO_LEVEL_Msk (0x3fUL)      /*!< SPI_RX_FIFO_LEVEL (Bitfield-Mask: 0x3f)               */
/* ==================================================  SPI_FIFO_WRITE_REG  =================================================== */
#define SPI_SPI_FIFO_WRITE_REG_SPI_FIFO_WRITE_Pos (0UL)             /*!< SPI_FIFO_WRITE (Bit 0)                                */
#define SPI_SPI_FIFO_WRITE_REG_SPI_FIFO_WRITE_Msk (0xffffffffUL)    /*!< SPI_FIFO_WRITE (Bitfield-Mask: 0xffffffff)            */
/* ===================================================  SPI_IRQ_MASK_REG  ==================================================== */
#define SPI_SPI_IRQ_MASK_REG_SPI_IRQ_MASK_RX_FULL_Pos (1UL)         /*!< SPI_IRQ_MASK_RX_FULL (Bit 1)                          */
#define SPI_SPI_IRQ_MASK_REG_SPI_IRQ_MASK_RX_FULL_Msk (0x2UL)       /*!< SPI_IRQ_MASK_RX_FULL (Bitfield-Mask: 0x01)            */
#define SPI_SPI_IRQ_MASK_REG_SPI_IRQ_MASK_TX_EMPTY_Pos (0UL)        /*!< SPI_IRQ_MASK_TX_EMPTY (Bit 0)                         */
#define SPI_SPI_IRQ_MASK_REG_SPI_IRQ_MASK_TX_EMPTY_Msk (0x1UL)      /*!< SPI_IRQ_MASK_TX_EMPTY (Bitfield-Mask: 0x01)           */
/* ====================================================  SPI_STATUS_REG  ===================================================== */
#define SPI_SPI_STATUS_REG_SPI_STATUS_RX_FULL_Pos (1UL)             /*!< SPI_STATUS_RX_FULL (Bit 1)                            */
#define SPI_SPI_STATUS_REG_SPI_STATUS_RX_FULL_Msk (0x2UL)           /*!< SPI_STATUS_RX_FULL (Bitfield-Mask: 0x01)              */
#define SPI_SPI_STATUS_REG_SPI_STATUS_TX_EMPTY_Pos (0UL)            /*!< SPI_STATUS_TX_EMPTY (Bit 0)                           */
#define SPI_SPI_STATUS_REG_SPI_STATUS_TX_EMPTY_Msk (0x1UL)          /*!< SPI_STATUS_TX_EMPTY (Bitfield-Mask: 0x01)             */
/* ================================================  SPI_TXBUFFER_FORCE_REG  ================================================= */
#define SPI_SPI_TXBUFFER_FORCE_REG_SPI_TXBUFFER_FORCE_Pos (0UL)     /*!< SPI_TXBUFFER_FORCE (Bit 0)                            */
#define SPI_SPI_TXBUFFER_FORCE_REG_SPI_TXBUFFER_FORCE_Msk (0xffffffffUL) /*!< SPI_TXBUFFER_FORCE (Bitfield-Mask: 0xffffffff)   */


/* =========================================================================================================================== */
/* ================                                           SPI2                                            ================ */
/* =========================================================================================================================== */

/* ====================================================  SPI2_CLOCK_REG  ===================================================== */
#define SPI2_SPI2_CLOCK_REG_SPI_CLK_DIV_Pos (0UL)                   /*!< SPI_CLK_DIV (Bit 0)                                   */
#define SPI2_SPI2_CLOCK_REG_SPI_CLK_DIV_Msk (0x7fUL)                /*!< SPI_CLK_DIV (Bitfield-Mask: 0x7f)                     */
/* ====================================================  SPI2_CONFIG_REG  ==================================================== */
#define SPI2_SPI2_CONFIG_REG_SPI_SLAVE_EN_Pos (7UL)                 /*!< SPI_SLAVE_EN (Bit 7)                                  */
#define SPI2_SPI2_CONFIG_REG_SPI_SLAVE_EN_Msk (0x80UL)              /*!< SPI_SLAVE_EN (Bitfield-Mask: 0x01)                    */
#define SPI2_SPI2_CONFIG_REG_SPI_WORD_LENGTH_Pos (2UL)              /*!< SPI_WORD_LENGTH (Bit 2)                               */
#define SPI2_SPI2_CONFIG_REG_SPI_WORD_LENGTH_Msk (0x7cUL)           /*!< SPI_WORD_LENGTH (Bitfield-Mask: 0x1f)                 */
#define SPI2_SPI2_CONFIG_REG_SPI_MODE_Pos (0UL)                     /*!< SPI_MODE (Bit 0)                                      */
#define SPI2_SPI2_CONFIG_REG_SPI_MODE_Msk (0x3UL)                   /*!< SPI_MODE (Bitfield-Mask: 0x03)                        */
/* ==================================================  SPI2_CS_CONFIG_REG  =================================================== */
#define SPI2_SPI2_CS_CONFIG_REG_SPI_CS_SELECT_Pos (0UL)             /*!< SPI_CS_SELECT (Bit 0)                                 */
#define SPI2_SPI2_CS_CONFIG_REG_SPI_CS_SELECT_Msk (0x7UL)           /*!< SPI_CS_SELECT (Bitfield-Mask: 0x07)                   */
/* =====================================================  SPI2_CTRL_REG  ===================================================== */
#define SPI2_SPI2_CTRL_REG_SPI_SWAP_BYTES_Pos (7UL)                 /*!< SPI_SWAP_BYTES (Bit 7)                                */
#define SPI2_SPI2_CTRL_REG_SPI_SWAP_BYTES_Msk (0x80UL)              /*!< SPI_SWAP_BYTES (Bitfield-Mask: 0x01)                  */
#define SPI2_SPI2_CTRL_REG_SPI_CAPTURE_AT_NEXT_EDGE_Pos (6UL)       /*!< SPI_CAPTURE_AT_NEXT_EDGE (Bit 6)                      */
#define SPI2_SPI2_CTRL_REG_SPI_CAPTURE_AT_NEXT_EDGE_Msk (0x40UL)    /*!< SPI_CAPTURE_AT_NEXT_EDGE (Bitfield-Mask: 0x01)        */
#define SPI2_SPI2_CTRL_REG_SPI_FIFO_RESET_Pos (5UL)                 /*!< SPI_FIFO_RESET (Bit 5)                                */
#define SPI2_SPI2_CTRL_REG_SPI_FIFO_RESET_Msk (0x20UL)              /*!< SPI_FIFO_RESET (Bitfield-Mask: 0x01)                  */
#define SPI2_SPI2_CTRL_REG_SPI_DMA_RX_EN_Pos (4UL)                  /*!< SPI_DMA_RX_EN (Bit 4)                                 */
#define SPI2_SPI2_CTRL_REG_SPI_DMA_RX_EN_Msk (0x10UL)               /*!< SPI_DMA_RX_EN (Bitfield-Mask: 0x01)                   */
#define SPI2_SPI2_CTRL_REG_SPI_DMA_TX_EN_Pos (3UL)                  /*!< SPI_DMA_TX_EN (Bit 3)                                 */
#define SPI2_SPI2_CTRL_REG_SPI_DMA_TX_EN_Msk (0x8UL)                /*!< SPI_DMA_TX_EN (Bitfield-Mask: 0x01)                   */
#define SPI2_SPI2_CTRL_REG_SPI_RX_EN_Pos  (2UL)                     /*!< SPI_RX_EN (Bit 2)                                     */
#define SPI2_SPI2_CTRL_REG_SPI_RX_EN_Msk  (0x4UL)                   /*!< SPI_RX_EN (Bitfield-Mask: 0x01)                       */
#define SPI2_SPI2_CTRL_REG_SPI_TX_EN_Pos  (1UL)                     /*!< SPI_TX_EN (Bit 1)                                     */
#define SPI2_SPI2_CTRL_REG_SPI_TX_EN_Msk  (0x2UL)                   /*!< SPI_TX_EN (Bitfield-Mask: 0x01)                       */
#define SPI2_SPI2_CTRL_REG_SPI_EN_Pos     (0UL)                     /*!< SPI_EN (Bit 0)                                        */
#define SPI2_SPI2_CTRL_REG_SPI_EN_Msk     (0x1UL)                   /*!< SPI_EN (Bitfield-Mask: 0x01)                          */
/* =================================================  SPI2_FIFO_CONFIG_REG  ================================================== */
#define SPI2_SPI2_FIFO_CONFIG_REG_SPI_RX_TL_Pos (8UL)               /*!< SPI_RX_TL (Bit 8)                                     */
#define SPI2_SPI2_FIFO_CONFIG_REG_SPI_RX_TL_Msk (0xff00UL)          /*!< SPI_RX_TL (Bitfield-Mask: 0xff)                       */
#define SPI2_SPI2_FIFO_CONFIG_REG_SPI_TX_TL_Pos (0UL)               /*!< SPI_TX_TL (Bit 0)                                     */
#define SPI2_SPI2_FIFO_CONFIG_REG_SPI_TX_TL_Msk (0xffUL)            /*!< SPI_TX_TL (Bitfield-Mask: 0xff)                       */
/* ==================================================  SPI2_FIFO_READ_REG  =================================================== */
#define SPI2_SPI2_FIFO_READ_REG_SPI_FIFO_READ_Pos (0UL)             /*!< SPI_FIFO_READ (Bit 0)                                 */
#define SPI2_SPI2_FIFO_READ_REG_SPI_FIFO_READ_Msk (0xffffffffUL)    /*!< SPI_FIFO_READ (Bitfield-Mask: 0xffffffff)             */
/* =================================================  SPI2_FIFO_STATUS_REG  ================================================== */
#define SPI2_SPI2_FIFO_STATUS_REG_SPI_TRANSACTION_ACTIVE_Pos (15UL) /*!< SPI_TRANSACTION_ACTIVE (Bit 15)                       */
#define SPI2_SPI2_FIFO_STATUS_REG_SPI_TRANSACTION_ACTIVE_Msk (0x8000UL) /*!< SPI_TRANSACTION_ACTIVE (Bitfield-Mask: 0x01)      */
#define SPI2_SPI2_FIFO_STATUS_REG_SPI_RX_FIFO_OVFL_Pos (14UL)       /*!< SPI_RX_FIFO_OVFL (Bit 14)                             */
#define SPI2_SPI2_FIFO_STATUS_REG_SPI_RX_FIFO_OVFL_Msk (0x4000UL)   /*!< SPI_RX_FIFO_OVFL (Bitfield-Mask: 0x01)                */
#define SPI2_SPI2_FIFO_STATUS_REG_SPI_STATUS_TX_FULL_Pos (13UL)     /*!< SPI_STATUS_TX_FULL (Bit 13)                           */
#define SPI2_SPI2_FIFO_STATUS_REG_SPI_STATUS_TX_FULL_Msk (0x2000UL) /*!< SPI_STATUS_TX_FULL (Bitfield-Mask: 0x01)              */
#define SPI2_SPI2_FIFO_STATUS_REG_SPI_STATUS_RX_EMPTY_Pos (12UL)    /*!< SPI_STATUS_RX_EMPTY (Bit 12)                          */
#define SPI2_SPI2_FIFO_STATUS_REG_SPI_STATUS_RX_EMPTY_Msk (0x1000UL) /*!< SPI_STATUS_RX_EMPTY (Bitfield-Mask: 0x01)            */
#define SPI2_SPI2_FIFO_STATUS_REG_SPI_TX_FIFO_LEVEL_Pos (6UL)       /*!< SPI_TX_FIFO_LEVEL (Bit 6)                             */
#define SPI2_SPI2_FIFO_STATUS_REG_SPI_TX_FIFO_LEVEL_Msk (0xfc0UL)   /*!< SPI_TX_FIFO_LEVEL (Bitfield-Mask: 0x3f)               */
#define SPI2_SPI2_FIFO_STATUS_REG_SPI_RX_FIFO_LEVEL_Pos (0UL)       /*!< SPI_RX_FIFO_LEVEL (Bit 0)                             */
#define SPI2_SPI2_FIFO_STATUS_REG_SPI_RX_FIFO_LEVEL_Msk (0x3fUL)    /*!< SPI_RX_FIFO_LEVEL (Bitfield-Mask: 0x3f)               */
/* ==================================================  SPI2_FIFO_WRITE_REG  ================================================== */
#define SPI2_SPI2_FIFO_WRITE_REG_SPI_FIFO_WRITE_Pos (0UL)           /*!< SPI_FIFO_WRITE (Bit 0)                                */
#define SPI2_SPI2_FIFO_WRITE_REG_SPI_FIFO_WRITE_Msk (0xffffffffUL)  /*!< SPI_FIFO_WRITE (Bitfield-Mask: 0xffffffff)            */
/* ===================================================  SPI2_IRQ_MASK_REG  =================================================== */
#define SPI2_SPI2_IRQ_MASK_REG_SPI_IRQ_MASK_RX_FULL_Pos (1UL)       /*!< SPI_IRQ_MASK_RX_FULL (Bit 1)                          */
#define SPI2_SPI2_IRQ_MASK_REG_SPI_IRQ_MASK_RX_FULL_Msk (0x2UL)     /*!< SPI_IRQ_MASK_RX_FULL (Bitfield-Mask: 0x01)            */
#define SPI2_SPI2_IRQ_MASK_REG_SPI_IRQ_MASK_TX_EMPTY_Pos (0UL)      /*!< SPI_IRQ_MASK_TX_EMPTY (Bit 0)                         */
#define SPI2_SPI2_IRQ_MASK_REG_SPI_IRQ_MASK_TX_EMPTY_Msk (0x1UL)    /*!< SPI_IRQ_MASK_TX_EMPTY (Bitfield-Mask: 0x01)           */
/* ====================================================  SPI2_STATUS_REG  ==================================================== */
#define SPI2_SPI2_STATUS_REG_SPI_STATUS_RX_FULL_Pos (1UL)           /*!< SPI_STATUS_RX_FULL (Bit 1)                            */
#define SPI2_SPI2_STATUS_REG_SPI_STATUS_RX_FULL_Msk (0x2UL)         /*!< SPI_STATUS_RX_FULL (Bitfield-Mask: 0x01)              */
#define SPI2_SPI2_STATUS_REG_SPI_STATUS_TX_EMPTY_Pos (0UL)          /*!< SPI_STATUS_TX_EMPTY (Bit 0)                           */
#define SPI2_SPI2_STATUS_REG_SPI_STATUS_TX_EMPTY_Msk (0x1UL)        /*!< SPI_STATUS_TX_EMPTY (Bitfield-Mask: 0x01)             */
/* ================================================  SPI2_TXBUFFER_FORCE_REG  ================================================ */
#define SPI2_SPI2_TXBUFFER_FORCE_REG_SPI_TXBUFFER_FORCE_Pos (0UL)   /*!< SPI_TXBUFFER_FORCE (Bit 0)                            */
#define SPI2_SPI2_TXBUFFER_FORCE_REG_SPI_TXBUFFER_FORCE_Msk (0xffffffffUL) /*!< SPI_TXBUFFER_FORCE (Bitfield-Mask: 0xffffffff) */


/* =========================================================================================================================== */
/* ================                                           SPI3                                            ================ */
/* =========================================================================================================================== */

/* ====================================================  SPI3_CLOCK_REG  ===================================================== */
#define SPI3_SPI3_CLOCK_REG_SPI_CLK_DIV_Pos (0UL)                   /*!< SPI_CLK_DIV (Bit 0)                                   */
#define SPI3_SPI3_CLOCK_REG_SPI_CLK_DIV_Msk (0x7fUL)                /*!< SPI_CLK_DIV (Bitfield-Mask: 0x7f)                     */
/* ====================================================  SPI3_CONFIG_REG  ==================================================== */
#define SPI3_SPI3_CONFIG_REG_SPI_SLAVE_EN_Pos (7UL)                 /*!< SPI_SLAVE_EN (Bit 7)                                  */
#define SPI3_SPI3_CONFIG_REG_SPI_SLAVE_EN_Msk (0x80UL)              /*!< SPI_SLAVE_EN (Bitfield-Mask: 0x01)                    */
#define SPI3_SPI3_CONFIG_REG_SPI_WORD_LENGTH_Pos (2UL)              /*!< SPI_WORD_LENGTH (Bit 2)                               */
#define SPI3_SPI3_CONFIG_REG_SPI_WORD_LENGTH_Msk (0x7cUL)           /*!< SPI_WORD_LENGTH (Bitfield-Mask: 0x1f)                 */
#define SPI3_SPI3_CONFIG_REG_SPI_MODE_Pos (0UL)                     /*!< SPI_MODE (Bit 0)                                      */
#define SPI3_SPI3_CONFIG_REG_SPI_MODE_Msk (0x3UL)                   /*!< SPI_MODE (Bitfield-Mask: 0x03)                        */
/* ==================================================  SPI3_CS_CONFIG_REG  =================================================== */
#define SPI3_SPI3_CS_CONFIG_REG_SPI_CS_SELECT_Pos (0UL)             /*!< SPI_CS_SELECT (Bit 0)                                 */
#define SPI3_SPI3_CS_CONFIG_REG_SPI_CS_SELECT_Msk (0x7UL)           /*!< SPI_CS_SELECT (Bitfield-Mask: 0x07)                   */
/* =====================================================  SPI3_CTRL_REG  ===================================================== */
#define SPI3_SPI3_CTRL_REG_SPI_SWAP_BYTES_Pos (7UL)                 /*!< SPI_SWAP_BYTES (Bit 7)                                */
#define SPI3_SPI3_CTRL_REG_SPI_SWAP_BYTES_Msk (0x80UL)              /*!< SPI_SWAP_BYTES (Bitfield-Mask: 0x01)                  */
#define SPI3_SPI3_CTRL_REG_SPI_CAPTURE_AT_NEXT_EDGE_Pos (6UL)       /*!< SPI_CAPTURE_AT_NEXT_EDGE (Bit 6)                      */
#define SPI3_SPI3_CTRL_REG_SPI_CAPTURE_AT_NEXT_EDGE_Msk (0x40UL)    /*!< SPI_CAPTURE_AT_NEXT_EDGE (Bitfield-Mask: 0x01)        */
#define SPI3_SPI3_CTRL_REG_SPI_FIFO_RESET_Pos (5UL)                 /*!< SPI_FIFO_RESET (Bit 5)                                */
#define SPI3_SPI3_CTRL_REG_SPI_FIFO_RESET_Msk (0x20UL)              /*!< SPI_FIFO_RESET (Bitfield-Mask: 0x01)                  */
#define SPI3_SPI3_CTRL_REG_SPI_DMA_RX_EN_Pos (4UL)                  /*!< SPI_DMA_RX_EN (Bit 4)                                 */
#define SPI3_SPI3_CTRL_REG_SPI_DMA_RX_EN_Msk (0x10UL)               /*!< SPI_DMA_RX_EN (Bitfield-Mask: 0x01)                   */
#define SPI3_SPI3_CTRL_REG_SPI_DMA_TX_EN_Pos (3UL)                  /*!< SPI_DMA_TX_EN (Bit 3)                                 */
#define SPI3_SPI3_CTRL_REG_SPI_DMA_TX_EN_Msk (0x8UL)                /*!< SPI_DMA_TX_EN (Bitfield-Mask: 0x01)                   */
#define SPI3_SPI3_CTRL_REG_SPI_RX_EN_Pos  (2UL)                     /*!< SPI_RX_EN (Bit 2)                                     */
#define SPI3_SPI3_CTRL_REG_SPI_RX_EN_Msk  (0x4UL)                   /*!< SPI_RX_EN (Bitfield-Mask: 0x01)                       */
#define SPI3_SPI3_CTRL_REG_SPI_TX_EN_Pos  (1UL)                     /*!< SPI_TX_EN (Bit 1)                                     */
#define SPI3_SPI3_CTRL_REG_SPI_TX_EN_Msk  (0x2UL)                   /*!< SPI_TX_EN (Bitfield-Mask: 0x01)                       */
#define SPI3_SPI3_CTRL_REG_SPI_EN_Pos     (0UL)                     /*!< SPI_EN (Bit 0)                                        */
#define SPI3_SPI3_CTRL_REG_SPI_EN_Msk     (0x1UL)                   /*!< SPI_EN (Bitfield-Mask: 0x01)                          */
/* =================================================  SPI3_FIFO_CONFIG_REG  ================================================== */
#define SPI3_SPI3_FIFO_CONFIG_REG_SPI_RX_TL_Pos (8UL)               /*!< SPI_RX_TL (Bit 8)                                     */
#define SPI3_SPI3_FIFO_CONFIG_REG_SPI_RX_TL_Msk (0xff00UL)          /*!< SPI_RX_TL (Bitfield-Mask: 0xff)                       */
#define SPI3_SPI3_FIFO_CONFIG_REG_SPI_TX_TL_Pos (0UL)               /*!< SPI_TX_TL (Bit 0)                                     */
#define SPI3_SPI3_FIFO_CONFIG_REG_SPI_TX_TL_Msk (0xffUL)            /*!< SPI_TX_TL (Bitfield-Mask: 0xff)                       */
/* ==================================================  SPI3_FIFO_READ_REG  =================================================== */
#define SPI3_SPI3_FIFO_READ_REG_SPI_FIFO_READ_Pos (0UL)             /*!< SPI_FIFO_READ (Bit 0)                                 */
#define SPI3_SPI3_FIFO_READ_REG_SPI_FIFO_READ_Msk (0xffffffffUL)    /*!< SPI_FIFO_READ (Bitfield-Mask: 0xffffffff)             */
/* =================================================  SPI3_FIFO_STATUS_REG  ================================================== */
#define SPI3_SPI3_FIFO_STATUS_REG_SPI_TRANSACTION_ACTIVE_Pos (15UL) /*!< SPI_TRANSACTION_ACTIVE (Bit 15)                       */
#define SPI3_SPI3_FIFO_STATUS_REG_SPI_TRANSACTION_ACTIVE_Msk (0x8000UL) /*!< SPI_TRANSACTION_ACTIVE (Bitfield-Mask: 0x01)      */
#define SPI3_SPI3_FIFO_STATUS_REG_SPI_RX_FIFO_OVFL_Pos (14UL)       /*!< SPI_RX_FIFO_OVFL (Bit 14)                             */
#define SPI3_SPI3_FIFO_STATUS_REG_SPI_RX_FIFO_OVFL_Msk (0x4000UL)   /*!< SPI_RX_FIFO_OVFL (Bitfield-Mask: 0x01)                */
#define SPI3_SPI3_FIFO_STATUS_REG_SPI_STATUS_TX_FULL_Pos (13UL)     /*!< SPI_STATUS_TX_FULL (Bit 13)                           */
#define SPI3_SPI3_FIFO_STATUS_REG_SPI_STATUS_TX_FULL_Msk (0x2000UL) /*!< SPI_STATUS_TX_FULL (Bitfield-Mask: 0x01)              */
#define SPI3_SPI3_FIFO_STATUS_REG_SPI_STATUS_RX_EMPTY_Pos (12UL)    /*!< SPI_STATUS_RX_EMPTY (Bit 12)                          */
#define SPI3_SPI3_FIFO_STATUS_REG_SPI_STATUS_RX_EMPTY_Msk (0x1000UL) /*!< SPI_STATUS_RX_EMPTY (Bitfield-Mask: 0x01)            */
#define SPI3_SPI3_FIFO_STATUS_REG_SPI_TX_FIFO_LEVEL_Pos (6UL)       /*!< SPI_TX_FIFO_LEVEL (Bit 6)                             */
#define SPI3_SPI3_FIFO_STATUS_REG_SPI_TX_FIFO_LEVEL_Msk (0xfc0UL)   /*!< SPI_TX_FIFO_LEVEL (Bitfield-Mask: 0x3f)               */
#define SPI3_SPI3_FIFO_STATUS_REG_SPI_RX_FIFO_LEVEL_Pos (0UL)       /*!< SPI_RX_FIFO_LEVEL (Bit 0)                             */
#define SPI3_SPI3_FIFO_STATUS_REG_SPI_RX_FIFO_LEVEL_Msk (0x3fUL)    /*!< SPI_RX_FIFO_LEVEL (Bitfield-Mask: 0x3f)               */
/* ==================================================  SPI3_FIFO_WRITE_REG  ================================================== */
#define SPI3_SPI3_FIFO_WRITE_REG_SPI_FIFO_WRITE_Pos (0UL)           /*!< SPI_FIFO_WRITE (Bit 0)                                */
#define SPI3_SPI3_FIFO_WRITE_REG_SPI_FIFO_WRITE_Msk (0xffffffffUL)  /*!< SPI_FIFO_WRITE (Bitfield-Mask: 0xffffffff)            */
/* ===================================================  SPI3_IRQ_MASK_REG  =================================================== */
#define SPI3_SPI3_IRQ_MASK_REG_SPI_IRQ_MASK_RX_FULL_Pos (1UL)       /*!< SPI_IRQ_MASK_RX_FULL (Bit 1)                          */
#define SPI3_SPI3_IRQ_MASK_REG_SPI_IRQ_MASK_RX_FULL_Msk (0x2UL)     /*!< SPI_IRQ_MASK_RX_FULL (Bitfield-Mask: 0x01)            */
#define SPI3_SPI3_IRQ_MASK_REG_SPI_IRQ_MASK_TX_EMPTY_Pos (0UL)      /*!< SPI_IRQ_MASK_TX_EMPTY (Bit 0)                         */
#define SPI3_SPI3_IRQ_MASK_REG_SPI_IRQ_MASK_TX_EMPTY_Msk (0x1UL)    /*!< SPI_IRQ_MASK_TX_EMPTY (Bitfield-Mask: 0x01)           */
/* ====================================================  SPI3_STATUS_REG  ==================================================== */
#define SPI3_SPI3_STATUS_REG_SPI_STATUS_RX_FULL_Pos (1UL)           /*!< SPI_STATUS_RX_FULL (Bit 1)                            */
#define SPI3_SPI3_STATUS_REG_SPI_STATUS_RX_FULL_Msk (0x2UL)         /*!< SPI_STATUS_RX_FULL (Bitfield-Mask: 0x01)              */
#define SPI3_SPI3_STATUS_REG_SPI_STATUS_TX_EMPTY_Pos (0UL)          /*!< SPI_STATUS_TX_EMPTY (Bit 0)                           */
#define SPI3_SPI3_STATUS_REG_SPI_STATUS_TX_EMPTY_Msk (0x1UL)        /*!< SPI_STATUS_TX_EMPTY (Bitfield-Mask: 0x01)             */
/* ================================================  SPI3_TXBUFFER_FORCE_REG  ================================================ */
#define SPI3_SPI3_TXBUFFER_FORCE_REG_SPI_TXBUFFER_FORCE_Pos (0UL)   /*!< SPI_TXBUFFER_FORCE (Bit 0)                            */
#define SPI3_SPI3_TXBUFFER_FORCE_REG_SPI_TXBUFFER_FORCE_Msk (0xffffffffUL) /*!< SPI_TXBUFFER_FORCE (Bitfield-Mask: 0xffffffff) */


/* =========================================================================================================================== */
/* ================                                           SRC1                                            ================ */
/* =========================================================================================================================== */

/* =================================================  SRC1_COEF0A_SET1_REG  ================================================== */
#define SRC1_SRC1_COEF0A_SET1_REG_SRC_COEF10_Pos (0UL)              /*!< SRC_COEF10 (Bit 0)                                    */
#define SRC1_SRC1_COEF0A_SET1_REG_SRC_COEF10_Msk (0xffffUL)         /*!< SRC_COEF10 (Bitfield-Mask: 0xffff)                    */
/* =================================================  SRC1_COEF10_SET1_REG  ================================================== */
#define SRC1_SRC1_COEF10_SET1_REG_SRC_COEF1_Pos (16UL)              /*!< SRC_COEF1 (Bit 16)                                    */
#define SRC1_SRC1_COEF10_SET1_REG_SRC_COEF1_Msk (0xffff0000UL)      /*!< SRC_COEF1 (Bitfield-Mask: 0xffff)                     */
#define SRC1_SRC1_COEF10_SET1_REG_SRC_COEF0_Pos (0UL)               /*!< SRC_COEF0 (Bit 0)                                     */
#define SRC1_SRC1_COEF10_SET1_REG_SRC_COEF0_Msk (0xffffUL)          /*!< SRC_COEF0 (Bitfield-Mask: 0xffff)                     */
/* =================================================  SRC1_COEF32_SET1_REG  ================================================== */
#define SRC1_SRC1_COEF32_SET1_REG_SRC_COEF3_Pos (16UL)              /*!< SRC_COEF3 (Bit 16)                                    */
#define SRC1_SRC1_COEF32_SET1_REG_SRC_COEF3_Msk (0xffff0000UL)      /*!< SRC_COEF3 (Bitfield-Mask: 0xffff)                     */
#define SRC1_SRC1_COEF32_SET1_REG_SRC_COEF2_Pos (0UL)               /*!< SRC_COEF2 (Bit 0)                                     */
#define SRC1_SRC1_COEF32_SET1_REG_SRC_COEF2_Msk (0xffffUL)          /*!< SRC_COEF2 (Bitfield-Mask: 0xffff)                     */
/* =================================================  SRC1_COEF54_SET1_REG  ================================================== */
#define SRC1_SRC1_COEF54_SET1_REG_SRC_COEF5_Pos (16UL)              /*!< SRC_COEF5 (Bit 16)                                    */
#define SRC1_SRC1_COEF54_SET1_REG_SRC_COEF5_Msk (0xffff0000UL)      /*!< SRC_COEF5 (Bitfield-Mask: 0xffff)                     */
#define SRC1_SRC1_COEF54_SET1_REG_SRC_COEF4_Pos (0UL)               /*!< SRC_COEF4 (Bit 0)                                     */
#define SRC1_SRC1_COEF54_SET1_REG_SRC_COEF4_Msk (0xffffUL)          /*!< SRC_COEF4 (Bitfield-Mask: 0xffff)                     */
/* =================================================  SRC1_COEF76_SET1_REG  ================================================== */
#define SRC1_SRC1_COEF76_SET1_REG_SRC_COEF7_Pos (16UL)              /*!< SRC_COEF7 (Bit 16)                                    */
#define SRC1_SRC1_COEF76_SET1_REG_SRC_COEF7_Msk (0xffff0000UL)      /*!< SRC_COEF7 (Bitfield-Mask: 0xffff)                     */
#define SRC1_SRC1_COEF76_SET1_REG_SRC_COEF6_Pos (0UL)               /*!< SRC_COEF6 (Bit 0)                                     */
#define SRC1_SRC1_COEF76_SET1_REG_SRC_COEF6_Msk (0xffffUL)          /*!< SRC_COEF6 (Bitfield-Mask: 0xffff)                     */
/* =================================================  SRC1_COEF98_SET1_REG  ================================================== */
#define SRC1_SRC1_COEF98_SET1_REG_SRC_COEF9_Pos (16UL)              /*!< SRC_COEF9 (Bit 16)                                    */
#define SRC1_SRC1_COEF98_SET1_REG_SRC_COEF9_Msk (0xffff0000UL)      /*!< SRC_COEF9 (Bitfield-Mask: 0xffff)                     */
#define SRC1_SRC1_COEF98_SET1_REG_SRC_COEF8_Pos (0UL)               /*!< SRC_COEF8 (Bit 0)                                     */
#define SRC1_SRC1_COEF98_SET1_REG_SRC_COEF8_Msk (0xffffUL)          /*!< SRC_COEF8 (Bitfield-Mask: 0xffff)                     */
/* =====================================================  SRC1_CTRL_REG  ===================================================== */
#define SRC1_SRC1_CTRL_REG_SRC_PDM_DO_DEL_Pos (30UL)                /*!< SRC_PDM_DO_DEL (Bit 30)                               */
#define SRC1_SRC1_CTRL_REG_SRC_PDM_DO_DEL_Msk (0xc0000000UL)        /*!< SRC_PDM_DO_DEL (Bitfield-Mask: 0x03)                  */
#define SRC1_SRC1_CTRL_REG_SRC_PDM_MODE_Pos (28UL)                  /*!< SRC_PDM_MODE (Bit 28)                                 */
#define SRC1_SRC1_CTRL_REG_SRC_PDM_MODE_Msk (0x30000000UL)          /*!< SRC_PDM_MODE (Bitfield-Mask: 0x03)                    */
#define SRC1_SRC1_CTRL_REG_SRC_PDM_DI_DEL_Pos (26UL)                /*!< SRC_PDM_DI_DEL (Bit 26)                               */
#define SRC1_SRC1_CTRL_REG_SRC_PDM_DI_DEL_Msk (0xc000000UL)         /*!< SRC_PDM_DI_DEL (Bitfield-Mask: 0x03)                  */
#define SRC1_SRC1_CTRL_REG_SRC_OUT_FLOWCLR_Pos (25UL)               /*!< SRC_OUT_FLOWCLR (Bit 25)                              */
#define SRC1_SRC1_CTRL_REG_SRC_OUT_FLOWCLR_Msk (0x2000000UL)        /*!< SRC_OUT_FLOWCLR (Bitfield-Mask: 0x01)                 */
#define SRC1_SRC1_CTRL_REG_SRC_IN_FLOWCLR_Pos (24UL)                /*!< SRC_IN_FLOWCLR (Bit 24)                               */
#define SRC1_SRC1_CTRL_REG_SRC_IN_FLOWCLR_Msk (0x1000000UL)         /*!< SRC_IN_FLOWCLR (Bitfield-Mask: 0x01)                  */
#define SRC1_SRC1_CTRL_REG_SRC_OUT_UNFLOW_Pos (23UL)                /*!< SRC_OUT_UNFLOW (Bit 23)                               */
#define SRC1_SRC1_CTRL_REG_SRC_OUT_UNFLOW_Msk (0x800000UL)          /*!< SRC_OUT_UNFLOW (Bitfield-Mask: 0x01)                  */
#define SRC1_SRC1_CTRL_REG_SRC_OUT_OVFLOW_Pos (22UL)                /*!< SRC_OUT_OVFLOW (Bit 22)                               */
#define SRC1_SRC1_CTRL_REG_SRC_OUT_OVFLOW_Msk (0x400000UL)          /*!< SRC_OUT_OVFLOW (Bitfield-Mask: 0x01)                  */
#define SRC1_SRC1_CTRL_REG_SRC_IN_UNFLOW_Pos (21UL)                 /*!< SRC_IN_UNFLOW (Bit 21)                                */
#define SRC1_SRC1_CTRL_REG_SRC_IN_UNFLOW_Msk (0x200000UL)           /*!< SRC_IN_UNFLOW (Bitfield-Mask: 0x01)                   */
#define SRC1_SRC1_CTRL_REG_SRC_IN_OVFLOW_Pos (20UL)                 /*!< SRC_IN_OVFLOW (Bit 20)                                */
#define SRC1_SRC1_CTRL_REG_SRC_IN_OVFLOW_Msk (0x100000UL)           /*!< SRC_IN_OVFLOW (Bitfield-Mask: 0x01)                   */
#define SRC1_SRC1_CTRL_REG_SRC_RESYNC_Pos (19UL)                    /*!< SRC_RESYNC (Bit 19)                                   */
#define SRC1_SRC1_CTRL_REG_SRC_RESYNC_Msk (0x80000UL)               /*!< SRC_RESYNC (Bitfield-Mask: 0x01)                      */
#define SRC1_SRC1_CTRL_REG_SRC_OUT_OK_Pos (18UL)                    /*!< SRC_OUT_OK (Bit 18)                                   */
#define SRC1_SRC1_CTRL_REG_SRC_OUT_OK_Msk (0x40000UL)               /*!< SRC_OUT_OK (Bitfield-Mask: 0x01)                      */
#define SRC1_SRC1_CTRL_REG_SRC_OUT_US_Pos (16UL)                    /*!< SRC_OUT_US (Bit 16)                                   */
#define SRC1_SRC1_CTRL_REG_SRC_OUT_US_Msk (0x30000UL)               /*!< SRC_OUT_US (Bitfield-Mask: 0x03)                      */
#define SRC1_SRC1_CTRL_REG_SRC_OUT_CAL_BYPASS_Pos (14UL)            /*!< SRC_OUT_CAL_BYPASS (Bit 14)                           */
#define SRC1_SRC1_CTRL_REG_SRC_OUT_CAL_BYPASS_Msk (0x4000UL)        /*!< SRC_OUT_CAL_BYPASS (Bitfield-Mask: 0x01)              */
#define SRC1_SRC1_CTRL_REG_SRC_OUT_AMODE_Pos (13UL)                 /*!< SRC_OUT_AMODE (Bit 13)                                */
#define SRC1_SRC1_CTRL_REG_SRC_OUT_AMODE_Msk (0x2000UL)             /*!< SRC_OUT_AMODE (Bitfield-Mask: 0x01)                   */
#define SRC1_SRC1_CTRL_REG_SRC_PDM_OUT_INV_Pos (12UL)               /*!< SRC_PDM_OUT_INV (Bit 12)                              */
#define SRC1_SRC1_CTRL_REG_SRC_PDM_OUT_INV_Msk (0x1000UL)           /*!< SRC_PDM_OUT_INV (Bitfield-Mask: 0x01)                 */
#define SRC1_SRC1_CTRL_REG_SRC_FIFO_DIRECTION_Pos (11UL)            /*!< SRC_FIFO_DIRECTION (Bit 11)                           */
#define SRC1_SRC1_CTRL_REG_SRC_FIFO_DIRECTION_Msk (0x800UL)         /*!< SRC_FIFO_DIRECTION (Bitfield-Mask: 0x01)              */
#define SRC1_SRC1_CTRL_REG_SRC_FIFO_ENABLE_Pos (10UL)               /*!< SRC_FIFO_ENABLE (Bit 10)                              */
#define SRC1_SRC1_CTRL_REG_SRC_FIFO_ENABLE_Msk (0x400UL)            /*!< SRC_FIFO_ENABLE (Bitfield-Mask: 0x01)                 */
#define SRC1_SRC1_CTRL_REG_SRC_OUT_DSD_MODE_Pos (9UL)               /*!< SRC_OUT_DSD_MODE (Bit 9)                              */
#define SRC1_SRC1_CTRL_REG_SRC_OUT_DSD_MODE_Msk (0x200UL)           /*!< SRC_OUT_DSD_MODE (Bitfield-Mask: 0x01)                */
#define SRC1_SRC1_CTRL_REG_SRC_IN_DSD_MODE_Pos (8UL)                /*!< SRC_IN_DSD_MODE (Bit 8)                               */
#define SRC1_SRC1_CTRL_REG_SRC_IN_DSD_MODE_Msk (0x100UL)            /*!< SRC_IN_DSD_MODE (Bitfield-Mask: 0x01)                 */
#define SRC1_SRC1_CTRL_REG_SRC_DITHER_DISABLE_Pos (7UL)             /*!< SRC_DITHER_DISABLE (Bit 7)                            */
#define SRC1_SRC1_CTRL_REG_SRC_DITHER_DISABLE_Msk (0x80UL)          /*!< SRC_DITHER_DISABLE (Bitfield-Mask: 0x01)              */
#define SRC1_SRC1_CTRL_REG_SRC_IN_OK_Pos  (6UL)                     /*!< SRC_IN_OK (Bit 6)                                     */
#define SRC1_SRC1_CTRL_REG_SRC_IN_OK_Msk  (0x40UL)                  /*!< SRC_IN_OK (Bitfield-Mask: 0x01)                       */
#define SRC1_SRC1_CTRL_REG_SRC_IN_DS_Pos  (4UL)                     /*!< SRC_IN_DS (Bit 4)                                     */
#define SRC1_SRC1_CTRL_REG_SRC_IN_DS_Msk  (0x30UL)                  /*!< SRC_IN_DS (Bitfield-Mask: 0x03)                       */
#define SRC1_SRC1_CTRL_REG_SRC_PDM_IN_INV_Pos (3UL)                 /*!< SRC_PDM_IN_INV (Bit 3)                                */
#define SRC1_SRC1_CTRL_REG_SRC_PDM_IN_INV_Msk (0x8UL)               /*!< SRC_PDM_IN_INV (Bitfield-Mask: 0x01)                  */
#define SRC1_SRC1_CTRL_REG_SRC_IN_CAL_BYPASS_Pos (2UL)              /*!< SRC_IN_CAL_BYPASS (Bit 2)                             */
#define SRC1_SRC1_CTRL_REG_SRC_IN_CAL_BYPASS_Msk (0x4UL)            /*!< SRC_IN_CAL_BYPASS (Bitfield-Mask: 0x01)               */
#define SRC1_SRC1_CTRL_REG_SRC_IN_AMODE_Pos (1UL)                   /*!< SRC_IN_AMODE (Bit 1)                                  */
#define SRC1_SRC1_CTRL_REG_SRC_IN_AMODE_Msk (0x2UL)                 /*!< SRC_IN_AMODE (Bitfield-Mask: 0x01)                    */
#define SRC1_SRC1_CTRL_REG_SRC_EN_Pos     (0UL)                     /*!< SRC_EN (Bit 0)                                        */
#define SRC1_SRC1_CTRL_REG_SRC_EN_Msk     (0x1UL)                   /*!< SRC_EN (Bitfield-Mask: 0x01)                          */
/* =====================================================  SRC1_IN1_REG  ====================================================== */
#define SRC1_SRC1_IN1_REG_SRC_IN_Pos      (0UL)                     /*!< SRC_IN (Bit 0)                                        */
#define SRC1_SRC1_IN1_REG_SRC_IN_Msk      (0xffffffffUL)            /*!< SRC_IN (Bitfield-Mask: 0xffffffff)                    */
/* =====================================================  SRC1_IN2_REG  ====================================================== */
#define SRC1_SRC1_IN2_REG_SRC_IN_Pos      (0UL)                     /*!< SRC_IN (Bit 0)                                        */
#define SRC1_SRC1_IN2_REG_SRC_IN_Msk      (0xffffffffUL)            /*!< SRC_IN (Bitfield-Mask: 0xffffffff)                    */
/* ====================================================  SRC1_IN_FS_REG  ===================================================== */
#define SRC1_SRC1_IN_FS_REG_SRC_IN_FS_Pos (0UL)                     /*!< SRC_IN_FS (Bit 0)                                     */
#define SRC1_SRC1_IN_FS_REG_SRC_IN_FS_Msk (0xffffffUL)              /*!< SRC_IN_FS (Bitfield-Mask: 0xffffff)                   */
/* =====================================================  SRC1_MUX_REG  ====================================================== */
#define SRC1_SRC1_MUX_REG_PDM1_MUX_IN_Pos (6UL)                     /*!< PDM1_MUX_IN (Bit 6)                                   */
#define SRC1_SRC1_MUX_REG_PDM1_MUX_IN_Msk (0x40UL)                  /*!< PDM1_MUX_IN (Bitfield-Mask: 0x01)                     */
#define SRC1_SRC1_MUX_REG_PCM1_MUX_IN_Pos (3UL)                     /*!< PCM1_MUX_IN (Bit 3)                                   */
#define SRC1_SRC1_MUX_REG_PCM1_MUX_IN_Msk (0x38UL)                  /*!< PCM1_MUX_IN (Bitfield-Mask: 0x07)                     */
#define SRC1_SRC1_MUX_REG_SRC1_MUX_IN_Pos (0UL)                     /*!< SRC1_MUX_IN (Bit 0)                                   */
#define SRC1_SRC1_MUX_REG_SRC1_MUX_IN_Msk (0x7UL)                   /*!< SRC1_MUX_IN (Bitfield-Mask: 0x07)                     */
/* =====================================================  SRC1_OUT1_REG  ===================================================== */
#define SRC1_SRC1_OUT1_REG_SRC_OUT_Pos    (0UL)                     /*!< SRC_OUT (Bit 0)                                       */
#define SRC1_SRC1_OUT1_REG_SRC_OUT_Msk    (0xffffffffUL)            /*!< SRC_OUT (Bitfield-Mask: 0xffffffff)                   */
/* =====================================================  SRC1_OUT2_REG  ===================================================== */
#define SRC1_SRC1_OUT2_REG_SRC_OUT_Pos    (0UL)                     /*!< SRC_OUT (Bit 0)                                       */
#define SRC1_SRC1_OUT2_REG_SRC_OUT_Msk    (0xffffffffUL)            /*!< SRC_OUT (Bitfield-Mask: 0xffffffff)                   */
/* ====================================================  SRC1_OUT_FS_REG  ==================================================== */
#define SRC1_SRC1_OUT_FS_REG_SRC_OUT_FS_Pos (0UL)                   /*!< SRC_OUT_FS (Bit 0)                                    */
#define SRC1_SRC1_OUT_FS_REG_SRC_OUT_FS_Msk (0xffffffUL)            /*!< SRC_OUT_FS (Bitfield-Mask: 0xffffff)                  */


/* =========================================================================================================================== */
/* ================                                           SRC2                                            ================ */
/* =========================================================================================================================== */

/* =================================================  SRC2_COEF0A_SET1_REG  ================================================== */
#define SRC2_SRC2_COEF0A_SET1_REG_SRC_COEF10_Pos (0UL)              /*!< SRC_COEF10 (Bit 0)                                    */
#define SRC2_SRC2_COEF0A_SET1_REG_SRC_COEF10_Msk (0xffffUL)         /*!< SRC_COEF10 (Bitfield-Mask: 0xffff)                    */
/* =================================================  SRC2_COEF10_SET1_REG  ================================================== */
#define SRC2_SRC2_COEF10_SET1_REG_SRC_COEF1_Pos (16UL)              /*!< SRC_COEF1 (Bit 16)                                    */
#define SRC2_SRC2_COEF10_SET1_REG_SRC_COEF1_Msk (0xffff0000UL)      /*!< SRC_COEF1 (Bitfield-Mask: 0xffff)                     */
#define SRC2_SRC2_COEF10_SET1_REG_SRC_COEF0_Pos (0UL)               /*!< SRC_COEF0 (Bit 0)                                     */
#define SRC2_SRC2_COEF10_SET1_REG_SRC_COEF0_Msk (0xffffUL)          /*!< SRC_COEF0 (Bitfield-Mask: 0xffff)                     */
/* =================================================  SRC2_COEF32_SET1_REG  ================================================== */
#define SRC2_SRC2_COEF32_SET1_REG_SRC_COEF3_Pos (16UL)              /*!< SRC_COEF3 (Bit 16)                                    */
#define SRC2_SRC2_COEF32_SET1_REG_SRC_COEF3_Msk (0xffff0000UL)      /*!< SRC_COEF3 (Bitfield-Mask: 0xffff)                     */
#define SRC2_SRC2_COEF32_SET1_REG_SRC_COEF2_Pos (0UL)               /*!< SRC_COEF2 (Bit 0)                                     */
#define SRC2_SRC2_COEF32_SET1_REG_SRC_COEF2_Msk (0xffffUL)          /*!< SRC_COEF2 (Bitfield-Mask: 0xffff)                     */
/* =================================================  SRC2_COEF54_SET1_REG  ================================================== */
#define SRC2_SRC2_COEF54_SET1_REG_SRC_COEF5_Pos (16UL)              /*!< SRC_COEF5 (Bit 16)                                    */
#define SRC2_SRC2_COEF54_SET1_REG_SRC_COEF5_Msk (0xffff0000UL)      /*!< SRC_COEF5 (Bitfield-Mask: 0xffff)                     */
#define SRC2_SRC2_COEF54_SET1_REG_SRC_COEF4_Pos (0UL)               /*!< SRC_COEF4 (Bit 0)                                     */
#define SRC2_SRC2_COEF54_SET1_REG_SRC_COEF4_Msk (0xffffUL)          /*!< SRC_COEF4 (Bitfield-Mask: 0xffff)                     */
/* =================================================  SRC2_COEF76_SET1_REG  ================================================== */
#define SRC2_SRC2_COEF76_SET1_REG_SRC_COEF7_Pos (16UL)              /*!< SRC_COEF7 (Bit 16)                                    */
#define SRC2_SRC2_COEF76_SET1_REG_SRC_COEF7_Msk (0xffff0000UL)      /*!< SRC_COEF7 (Bitfield-Mask: 0xffff)                     */
#define SRC2_SRC2_COEF76_SET1_REG_SRC_COEF6_Pos (0UL)               /*!< SRC_COEF6 (Bit 0)                                     */
#define SRC2_SRC2_COEF76_SET1_REG_SRC_COEF6_Msk (0xffffUL)          /*!< SRC_COEF6 (Bitfield-Mask: 0xffff)                     */
/* =================================================  SRC2_COEF98_SET1_REG  ================================================== */
#define SRC2_SRC2_COEF98_SET1_REG_SRC_COEF9_Pos (16UL)              /*!< SRC_COEF9 (Bit 16)                                    */
#define SRC2_SRC2_COEF98_SET1_REG_SRC_COEF9_Msk (0xffff0000UL)      /*!< SRC_COEF9 (Bitfield-Mask: 0xffff)                     */
#define SRC2_SRC2_COEF98_SET1_REG_SRC_COEF8_Pos (0UL)               /*!< SRC_COEF8 (Bit 0)                                     */
#define SRC2_SRC2_COEF98_SET1_REG_SRC_COEF8_Msk (0xffffUL)          /*!< SRC_COEF8 (Bitfield-Mask: 0xffff)                     */
/* =====================================================  SRC2_CTRL_REG  ===================================================== */
#define SRC2_SRC2_CTRL_REG_SRC_PDM_MODE_Pos (28UL)                  /*!< SRC_PDM_MODE (Bit 28)                                 */
#define SRC2_SRC2_CTRL_REG_SRC_PDM_MODE_Msk (0x30000000UL)          /*!< SRC_PDM_MODE (Bitfield-Mask: 0x03)                    */
#define SRC2_SRC2_CTRL_REG_SRC_OUT_FLOWCLR_Pos (25UL)               /*!< SRC_OUT_FLOWCLR (Bit 25)                              */
#define SRC2_SRC2_CTRL_REG_SRC_OUT_FLOWCLR_Msk (0x2000000UL)        /*!< SRC_OUT_FLOWCLR (Bitfield-Mask: 0x01)                 */
#define SRC2_SRC2_CTRL_REG_SRC_IN_FLOWCLR_Pos (24UL)                /*!< SRC_IN_FLOWCLR (Bit 24)                               */
#define SRC2_SRC2_CTRL_REG_SRC_IN_FLOWCLR_Msk (0x1000000UL)         /*!< SRC_IN_FLOWCLR (Bitfield-Mask: 0x01)                  */
#define SRC2_SRC2_CTRL_REG_SRC_OUT_UNFLOW_Pos (23UL)                /*!< SRC_OUT_UNFLOW (Bit 23)                               */
#define SRC2_SRC2_CTRL_REG_SRC_OUT_UNFLOW_Msk (0x800000UL)          /*!< SRC_OUT_UNFLOW (Bitfield-Mask: 0x01)                  */
#define SRC2_SRC2_CTRL_REG_SRC_OUT_OVFLOW_Pos (22UL)                /*!< SRC_OUT_OVFLOW (Bit 22)                               */
#define SRC2_SRC2_CTRL_REG_SRC_OUT_OVFLOW_Msk (0x400000UL)          /*!< SRC_OUT_OVFLOW (Bitfield-Mask: 0x01)                  */
#define SRC2_SRC2_CTRL_REG_SRC_IN_UNFLOW_Pos (21UL)                 /*!< SRC_IN_UNFLOW (Bit 21)                                */
#define SRC2_SRC2_CTRL_REG_SRC_IN_UNFLOW_Msk (0x200000UL)           /*!< SRC_IN_UNFLOW (Bitfield-Mask: 0x01)                   */
#define SRC2_SRC2_CTRL_REG_SRC_IN_OVFLOW_Pos (20UL)                 /*!< SRC_IN_OVFLOW (Bit 20)                                */
#define SRC2_SRC2_CTRL_REG_SRC_IN_OVFLOW_Msk (0x100000UL)           /*!< SRC_IN_OVFLOW (Bitfield-Mask: 0x01)                   */
#define SRC2_SRC2_CTRL_REG_SRC_RESYNC_Pos (19UL)                    /*!< SRC_RESYNC (Bit 19)                                   */
#define SRC2_SRC2_CTRL_REG_SRC_RESYNC_Msk (0x80000UL)               /*!< SRC_RESYNC (Bitfield-Mask: 0x01)                      */
#define SRC2_SRC2_CTRL_REG_SRC_OUT_OK_Pos (18UL)                    /*!< SRC_OUT_OK (Bit 18)                                   */
#define SRC2_SRC2_CTRL_REG_SRC_OUT_OK_Msk (0x40000UL)               /*!< SRC_OUT_OK (Bitfield-Mask: 0x01)                      */
#define SRC2_SRC2_CTRL_REG_SRC_OUT_US_Pos (16UL)                    /*!< SRC_OUT_US (Bit 16)                                   */
#define SRC2_SRC2_CTRL_REG_SRC_OUT_US_Msk (0x30000UL)               /*!< SRC_OUT_US (Bitfield-Mask: 0x03)                      */
#define SRC2_SRC2_CTRL_REG_SRC_OUT_CAL_BYPASS_Pos (14UL)            /*!< SRC_OUT_CAL_BYPASS (Bit 14)                           */
#define SRC2_SRC2_CTRL_REG_SRC_OUT_CAL_BYPASS_Msk (0x4000UL)        /*!< SRC_OUT_CAL_BYPASS (Bitfield-Mask: 0x01)              */
#define SRC2_SRC2_CTRL_REG_SRC_OUT_AMODE_Pos (13UL)                 /*!< SRC_OUT_AMODE (Bit 13)                                */
#define SRC2_SRC2_CTRL_REG_SRC_OUT_AMODE_Msk (0x2000UL)             /*!< SRC_OUT_AMODE (Bitfield-Mask: 0x01)                   */
#define SRC2_SRC2_CTRL_REG_SRC_PDM_OUT_INV_Pos (12UL)               /*!< SRC_PDM_OUT_INV (Bit 12)                              */
#define SRC2_SRC2_CTRL_REG_SRC_PDM_OUT_INV_Msk (0x1000UL)           /*!< SRC_PDM_OUT_INV (Bitfield-Mask: 0x01)                 */
#define SRC2_SRC2_CTRL_REG_SRC_FIFO_DIRECTION_Pos (11UL)            /*!< SRC_FIFO_DIRECTION (Bit 11)                           */
#define SRC2_SRC2_CTRL_REG_SRC_FIFO_DIRECTION_Msk (0x800UL)         /*!< SRC_FIFO_DIRECTION (Bitfield-Mask: 0x01)              */
#define SRC2_SRC2_CTRL_REG_SRC_FIFO_ENABLE_Pos (10UL)               /*!< SRC_FIFO_ENABLE (Bit 10)                              */
#define SRC2_SRC2_CTRL_REG_SRC_FIFO_ENABLE_Msk (0x400UL)            /*!< SRC_FIFO_ENABLE (Bitfield-Mask: 0x01)                 */
#define SRC2_SRC2_CTRL_REG_SRC_OUT_DSD_MODE_Pos (9UL)               /*!< SRC_OUT_DSD_MODE (Bit 9)                              */
#define SRC2_SRC2_CTRL_REG_SRC_OUT_DSD_MODE_Msk (0x200UL)           /*!< SRC_OUT_DSD_MODE (Bitfield-Mask: 0x01)                */
#define SRC2_SRC2_CTRL_REG_SRC_IN_DSD_MODE_Pos (8UL)                /*!< SRC_IN_DSD_MODE (Bit 8)                               */
#define SRC2_SRC2_CTRL_REG_SRC_IN_DSD_MODE_Msk (0x100UL)            /*!< SRC_IN_DSD_MODE (Bitfield-Mask: 0x01)                 */
#define SRC2_SRC2_CTRL_REG_SRC_DITHER_DISABLE_Pos (7UL)             /*!< SRC_DITHER_DISABLE (Bit 7)                            */
#define SRC2_SRC2_CTRL_REG_SRC_DITHER_DISABLE_Msk (0x80UL)          /*!< SRC_DITHER_DISABLE (Bitfield-Mask: 0x01)              */
#define SRC2_SRC2_CTRL_REG_SRC_IN_OK_Pos  (6UL)                     /*!< SRC_IN_OK (Bit 6)                                     */
#define SRC2_SRC2_CTRL_REG_SRC_IN_OK_Msk  (0x40UL)                  /*!< SRC_IN_OK (Bitfield-Mask: 0x01)                       */
#define SRC2_SRC2_CTRL_REG_SRC_IN_DS_Pos  (4UL)                     /*!< SRC_IN_DS (Bit 4)                                     */
#define SRC2_SRC2_CTRL_REG_SRC_IN_DS_Msk  (0x30UL)                  /*!< SRC_IN_DS (Bitfield-Mask: 0x03)                       */
#define SRC2_SRC2_CTRL_REG_SRC_PDM_IN_INV_Pos (3UL)                 /*!< SRC_PDM_IN_INV (Bit 3)                                */
#define SRC2_SRC2_CTRL_REG_SRC_PDM_IN_INV_Msk (0x8UL)               /*!< SRC_PDM_IN_INV (Bitfield-Mask: 0x01)                  */
#define SRC2_SRC2_CTRL_REG_SRC_IN_CAL_BYPASS_Pos (2UL)              /*!< SRC_IN_CAL_BYPASS (Bit 2)                             */
#define SRC2_SRC2_CTRL_REG_SRC_IN_CAL_BYPASS_Msk (0x4UL)            /*!< SRC_IN_CAL_BYPASS (Bitfield-Mask: 0x01)               */
#define SRC2_SRC2_CTRL_REG_SRC_IN_AMODE_Pos (1UL)                   /*!< SRC_IN_AMODE (Bit 1)                                  */
#define SRC2_SRC2_CTRL_REG_SRC_IN_AMODE_Msk (0x2UL)                 /*!< SRC_IN_AMODE (Bitfield-Mask: 0x01)                    */
#define SRC2_SRC2_CTRL_REG_SRC_EN_Pos     (0UL)                     /*!< SRC_EN (Bit 0)                                        */
#define SRC2_SRC2_CTRL_REG_SRC_EN_Msk     (0x1UL)                   /*!< SRC_EN (Bitfield-Mask: 0x01)                          */
/* =====================================================  SRC2_IN1_REG  ====================================================== */
#define SRC2_SRC2_IN1_REG_SRC_IN_Pos      (0UL)                     /*!< SRC_IN (Bit 0)                                        */
#define SRC2_SRC2_IN1_REG_SRC_IN_Msk      (0xffffffffUL)            /*!< SRC_IN (Bitfield-Mask: 0xffffffff)                    */
/* =====================================================  SRC2_IN2_REG  ====================================================== */
#define SRC2_SRC2_IN2_REG_SRC_IN_Pos      (0UL)                     /*!< SRC_IN (Bit 0)                                        */
#define SRC2_SRC2_IN2_REG_SRC_IN_Msk      (0xffffffffUL)            /*!< SRC_IN (Bitfield-Mask: 0xffffffff)                    */
/* ====================================================  SRC2_IN_FS_REG  ===================================================== */
#define SRC2_SRC2_IN_FS_REG_SRC_IN_FS_Pos (0UL)                     /*!< SRC_IN_FS (Bit 0)                                     */
#define SRC2_SRC2_IN_FS_REG_SRC_IN_FS_Msk (0xffffffUL)              /*!< SRC_IN_FS (Bitfield-Mask: 0xffffff)                   */
/* =====================================================  SRC2_MUX_REG  ====================================================== */
#define SRC2_SRC2_MUX_REG_PDM1_MUX_IN_Pos (6UL)                     /*!< PDM1_MUX_IN (Bit 6)                                   */
#define SRC2_SRC2_MUX_REG_PDM1_MUX_IN_Msk (0x40UL)                  /*!< PDM1_MUX_IN (Bitfield-Mask: 0x01)                     */
#define SRC2_SRC2_MUX_REG_PDM_MUX_OUT_Pos (3UL)                     /*!< PDM_MUX_OUT (Bit 3)                                   */
#define SRC2_SRC2_MUX_REG_PDM_MUX_OUT_Msk (0x38UL)                  /*!< PDM_MUX_OUT (Bitfield-Mask: 0x07)                     */
#define SRC2_SRC2_MUX_REG_SRC2_MUX_IN_Pos (0UL)                     /*!< SRC2_MUX_IN (Bit 0)                                   */
#define SRC2_SRC2_MUX_REG_SRC2_MUX_IN_Msk (0x7UL)                   /*!< SRC2_MUX_IN (Bitfield-Mask: 0x07)                     */
/* =====================================================  SRC2_OUT1_REG  ===================================================== */
#define SRC2_SRC2_OUT1_REG_SRC_OUT_Pos    (0UL)                     /*!< SRC_OUT (Bit 0)                                       */
#define SRC2_SRC2_OUT1_REG_SRC_OUT_Msk    (0xffffffffUL)            /*!< SRC_OUT (Bitfield-Mask: 0xffffffff)                   */
/* =====================================================  SRC2_OUT2_REG  ===================================================== */
#define SRC2_SRC2_OUT2_REG_SRC_OUT_Pos    (0UL)                     /*!< SRC_OUT (Bit 0)                                       */
#define SRC2_SRC2_OUT2_REG_SRC_OUT_Msk    (0xffffffffUL)            /*!< SRC_OUT (Bitfield-Mask: 0xffffffff)                   */
/* ====================================================  SRC2_OUT_FS_REG  ==================================================== */
#define SRC2_SRC2_OUT_FS_REG_SRC_OUT_FS_Pos (0UL)                   /*!< SRC_OUT_FS (Bit 0)                                    */
#define SRC2_SRC2_OUT_FS_REG_SRC_OUT_FS_Msk (0xffffffUL)            /*!< SRC_OUT_FS (Bitfield-Mask: 0xffffff)                  */


/* =========================================================================================================================== */
/* ================                                         SYS_WDOG                                          ================ */
/* =========================================================================================================================== */

/* ===================================================  WATCHDOG_CTRL_REG  =================================================== */
#define SYS_WDOG_WATCHDOG_CTRL_REG_WRITE_BUSY_Pos (3UL)             /*!< WRITE_BUSY (Bit 3)                                    */
#define SYS_WDOG_WATCHDOG_CTRL_REG_WRITE_BUSY_Msk (0x8UL)           /*!< WRITE_BUSY (Bitfield-Mask: 0x01)                      */
#define SYS_WDOG_WATCHDOG_CTRL_REG_WDOG_FREEZE_EN_Pos (2UL)         /*!< WDOG_FREEZE_EN (Bit 2)                                */
#define SYS_WDOG_WATCHDOG_CTRL_REG_WDOG_FREEZE_EN_Msk (0x4UL)       /*!< WDOG_FREEZE_EN (Bitfield-Mask: 0x01)                  */
#define SYS_WDOG_WATCHDOG_CTRL_REG_NMI_RST_Pos (0UL)                /*!< NMI_RST (Bit 0)                                       */
#define SYS_WDOG_WATCHDOG_CTRL_REG_NMI_RST_Msk (0x1UL)              /*!< NMI_RST (Bitfield-Mask: 0x01)                         */
/* =====================================================  WATCHDOG_REG  ====================================================== */
#define SYS_WDOG_WATCHDOG_REG_WDOG_WEN_Pos (14UL)                   /*!< WDOG_WEN (Bit 14)                                     */
#define SYS_WDOG_WATCHDOG_REG_WDOG_WEN_Msk (0xffffc000UL)           /*!< WDOG_WEN (Bitfield-Mask: 0x3ffff)                     */
#define SYS_WDOG_WATCHDOG_REG_WDOG_VAL_NEG_Pos (13UL)               /*!< WDOG_VAL_NEG (Bit 13)                                 */
#define SYS_WDOG_WATCHDOG_REG_WDOG_VAL_NEG_Msk (0x2000UL)           /*!< WDOG_VAL_NEG (Bitfield-Mask: 0x01)                    */
#define SYS_WDOG_WATCHDOG_REG_WDOG_VAL_Pos (0UL)                    /*!< WDOG_VAL (Bit 0)                                      */
#define SYS_WDOG_WATCHDOG_REG_WDOG_VAL_Msk (0x1fffUL)               /*!< WDOG_VAL (Bitfield-Mask: 0x1fff)                      */


/* =========================================================================================================================== */
/* ================                                          SYSBUS                                           ================ */
/* =========================================================================================================================== */

/* ===================================================  AHB_DMA_CCLM1_REG  =================================================== */
#define SYSBUS_AHB_DMA_CCLM1_REG_AHB_DMA_CCLM_Pos (0UL)             /*!< AHB_DMA_CCLM (Bit 0)                                  */
#define SYSBUS_AHB_DMA_CCLM1_REG_AHB_DMA_CCLM_Msk (0xffffUL)        /*!< AHB_DMA_CCLM (Bitfield-Mask: 0xffff)                  */
/* ===================================================  AHB_DMA_CCLM2_REG  =================================================== */
#define SYSBUS_AHB_DMA_CCLM2_REG_AHB_DMA_CCLM_Pos (0UL)             /*!< AHB_DMA_CCLM (Bit 0)                                  */
#define SYSBUS_AHB_DMA_CCLM2_REG_AHB_DMA_CCLM_Msk (0xffffUL)        /*!< AHB_DMA_CCLM (Bitfield-Mask: 0xffff)                  */
/* ===================================================  AHB_DMA_CCLM3_REG  =================================================== */
#define SYSBUS_AHB_DMA_CCLM3_REG_AHB_DMA_CCLM_Pos (0UL)             /*!< AHB_DMA_CCLM (Bit 0)                                  */
#define SYSBUS_AHB_DMA_CCLM3_REG_AHB_DMA_CCLM_Msk (0xffffUL)        /*!< AHB_DMA_CCLM (Bitfield-Mask: 0xffff)                  */
/* ===================================================  AHB_DMA_CCLM4_REG  =================================================== */
#define SYSBUS_AHB_DMA_CCLM4_REG_AHB_DMA_CCLM_Pos (0UL)             /*!< AHB_DMA_CCLM (Bit 0)                                  */
#define SYSBUS_AHB_DMA_CCLM4_REG_AHB_DMA_CCLM_Msk (0xffffUL)        /*!< AHB_DMA_CCLM (Bitfield-Mask: 0xffff)                  */
/* ===================================================  AHB_DMA_CCLM5_REG  =================================================== */
#define SYSBUS_AHB_DMA_CCLM5_REG_AHB_DMA_CCLM_Pos (0UL)             /*!< AHB_DMA_CCLM (Bit 0)                                  */
#define SYSBUS_AHB_DMA_CCLM5_REG_AHB_DMA_CCLM_Msk (0xffffUL)        /*!< AHB_DMA_CCLM (Bitfield-Mask: 0xffff)                  */
/* ===================================================  AHB_DMA_CCLM7_REG  =================================================== */
#define SYSBUS_AHB_DMA_CCLM7_REG_AHB_DMA_CCLM_Pos (0UL)             /*!< AHB_DMA_CCLM (Bit 0)                                  */
#define SYSBUS_AHB_DMA_CCLM7_REG_AHB_DMA_CCLM_Msk (0xffffUL)        /*!< AHB_DMA_CCLM (Bitfield-Mask: 0xffff)                  */
/* ================================================  AHB_DMA_DFLT_MASTER_REG  ================================================ */
#define SYSBUS_AHB_DMA_DFLT_MASTER_REG_AHB_DMA_DFLT_MASTER_Pos (0UL) /*!< AHB_DMA_DFLT_MASTER (Bit 0)                          */
#define SYSBUS_AHB_DMA_DFLT_MASTER_REG_AHB_DMA_DFLT_MASTER_Msk (0xfUL) /*!< AHB_DMA_DFLT_MASTER (Bitfield-Mask: 0x0f)          */
/* ====================================================  AHB_DMA_PL1_REG  ==================================================== */
#define SYSBUS_AHB_DMA_PL1_REG_AHB_DMA_PL1_Pos (0UL)                /*!< AHB_DMA_PL1 (Bit 0)                                   */
#define SYSBUS_AHB_DMA_PL1_REG_AHB_DMA_PL1_Msk (0xfUL)              /*!< AHB_DMA_PL1 (Bitfield-Mask: 0x0f)                     */
/* ====================================================  AHB_DMA_PL2_REG  ==================================================== */
#define SYSBUS_AHB_DMA_PL2_REG_AHB_DMA_PL2_Pos (0UL)                /*!< AHB_DMA_PL2 (Bit 0)                                   */
#define SYSBUS_AHB_DMA_PL2_REG_AHB_DMA_PL2_Msk (0xfUL)              /*!< AHB_DMA_PL2 (Bitfield-Mask: 0x0f)                     */
/* ====================================================  AHB_DMA_PL3_REG  ==================================================== */
#define SYSBUS_AHB_DMA_PL3_REG_AHB_DMA_PL3_Pos (0UL)                /*!< AHB_DMA_PL3 (Bit 0)                                   */
#define SYSBUS_AHB_DMA_PL3_REG_AHB_DMA_PL3_Msk (0xfUL)              /*!< AHB_DMA_PL3 (Bitfield-Mask: 0x0f)                     */
/* ====================================================  AHB_DMA_PL4_REG  ==================================================== */
#define SYSBUS_AHB_DMA_PL4_REG_AHB_DMA_PL4_Pos (0UL)                /*!< AHB_DMA_PL4 (Bit 0)                                   */
#define SYSBUS_AHB_DMA_PL4_REG_AHB_DMA_PL4_Msk (0xfUL)              /*!< AHB_DMA_PL4 (Bitfield-Mask: 0x0f)                     */
/* ====================================================  AHB_DMA_PL5_REG  ==================================================== */
#define SYSBUS_AHB_DMA_PL5_REG_AHB_DMA_PL5_Pos (0UL)                /*!< AHB_DMA_PL5 (Bit 0)                                   */
#define SYSBUS_AHB_DMA_PL5_REG_AHB_DMA_PL5_Msk (0xfUL)              /*!< AHB_DMA_PL5 (Bitfield-Mask: 0x0f)                     */
/* ====================================================  AHB_DMA_PL7_REG  ==================================================== */
#define SYSBUS_AHB_DMA_PL7_REG_AHB_DMA_PL7_Pos (0UL)                /*!< AHB_DMA_PL7 (Bit 0)                                   */
#define SYSBUS_AHB_DMA_PL7_REG_AHB_DMA_PL7_Msk (0xfUL)              /*!< AHB_DMA_PL7 (Bitfield-Mask: 0x0f)                     */
/* ====================================================  AHB_DMA_TCL_REG  ==================================================== */
#define SYSBUS_AHB_DMA_TCL_REG_AHB_DMA_TCL_Pos (0UL)                /*!< AHB_DMA_TCL (Bit 0)                                   */
#define SYSBUS_AHB_DMA_TCL_REG_AHB_DMA_TCL_Msk (0xffffUL)           /*!< AHB_DMA_TCL (Bitfield-Mask: 0xffff)                   */
/* ==================================================  AHB_DMA_VERSION_REG  ================================================== */
#define SYSBUS_AHB_DMA_VERSION_REG_AHB_DMA_VERSION_Pos (0UL)        /*!< AHB_DMA_VERSION (Bit 0)                               */
#define SYSBUS_AHB_DMA_VERSION_REG_AHB_DMA_VERSION_Msk (0xffffffffUL) /*!< AHB_DMA_VERSION (Bitfield-Mask: 0xffffffff)         */
/* ===================================================  AHB_DMA_WTEN_REG  ==================================================== */
#define SYSBUS_AHB_DMA_WTEN_REG_AHB_DMA_WTEN_Pos (0UL)              /*!< AHB_DMA_WTEN (Bit 0)                                  */
#define SYSBUS_AHB_DMA_WTEN_REG_AHB_DMA_WTEN_Msk (0x1UL)            /*!< AHB_DMA_WTEN (Bitfield-Mask: 0x01)                    */


/* =========================================================================================================================== */
/* ================                                        SYSBUS_ICM                                         ================ */
/* =========================================================================================================================== */

/* ====================================================  AHBREG_ARB_REG  ===================================================== */
#define SYSBUS_ICM_AHBREG_ARB_REG_AHBREG_AHB_AHBS_PRIO_Pos (1UL)    /*!< AHBREG_AHB_AHBS_PRIO (Bit 1)                          */
#define SYSBUS_ICM_AHBREG_ARB_REG_AHBREG_AHB_AHBS_PRIO_Msk (0x2UL)  /*!< AHBREG_AHB_AHBS_PRIO (Bitfield-Mask: 0x01)            */
#define SYSBUS_ICM_AHBREG_ARB_REG_AHBREG_AHB_DMA_PRIO_Pos (0UL)     /*!< AHBREG_AHB_DMA_PRIO (Bit 0)                           */
#define SYSBUS_ICM_AHBREG_ARB_REG_AHBREG_AHB_DMA_PRIO_Msk (0x1UL)   /*!< AHBREG_AHB_DMA_PRIO (Bitfield-Mask: 0x01)             */
/* =====================================================  APBF_ARB_REG  ====================================================== */
#define SYSBUS_ICM_APBF_ARB_REG_APBF_AHB_DMA_PRIO_Pos (4UL)         /*!< APBF_AHB_DMA_PRIO (Bit 4)                             */
#define SYSBUS_ICM_APBF_ARB_REG_APBF_AHB_DMA_PRIO_Msk (0x30UL)      /*!< APBF_AHB_DMA_PRIO (Bitfield-Mask: 0x03)               */
#define SYSBUS_ICM_APBF_ARB_REG_APBF_SNC_PRIO_Pos (2UL)             /*!< APBF_SNC_PRIO (Bit 2)                                 */
#define SYSBUS_ICM_APBF_ARB_REG_APBF_SNC_PRIO_Msk (0xcUL)           /*!< APBF_SNC_PRIO (Bitfield-Mask: 0x03)                   */
#define SYSBUS_ICM_APBF_ARB_REG_APBF_AHB_AHBS_PRIO_Pos (0UL)        /*!< APBF_AHB_AHBS_PRIO (Bit 0)                            */
#define SYSBUS_ICM_APBF_ARB_REG_APBF_AHB_AHBS_PRIO_Msk (0x3UL)      /*!< APBF_AHB_AHBS_PRIO (Bitfield-Mask: 0x03)              */
/* ======================================================  APB_ARB_REG  ====================================================== */
#define SYSBUS_ICM_APB_ARB_REG_APB_AHB_CPUS_PRIO_Pos (6UL)          /*!< APB_AHB_CPUS_PRIO (Bit 6)                             */
#define SYSBUS_ICM_APB_ARB_REG_APB_AHB_CPUS_PRIO_Msk (0xc0UL)       /*!< APB_AHB_CPUS_PRIO (Bitfield-Mask: 0x03)               */
#define SYSBUS_ICM_APB_ARB_REG_APB_AHB_DMA_PRIO_Pos (4UL)           /*!< APB_AHB_DMA_PRIO (Bit 4)                              */
#define SYSBUS_ICM_APB_ARB_REG_APB_AHB_DMA_PRIO_Msk (0x30UL)        /*!< APB_AHB_DMA_PRIO (Bitfield-Mask: 0x03)                */
#define SYSBUS_ICM_APB_ARB_REG_APB_SNC_PRIO_Pos (2UL)               /*!< APB_SNC_PRIO (Bit 2)                                  */
#define SYSBUS_ICM_APB_ARB_REG_APB_SNC_PRIO_Msk (0xcUL)             /*!< APB_SNC_PRIO (Bitfield-Mask: 0x03)                    */
#define SYSBUS_ICM_APB_ARB_REG_APB_CMAC_PRIO_Pos (0UL)              /*!< APB_CMAC_PRIO (Bit 0)                                 */
#define SYSBUS_ICM_APB_ARB_REG_APB_CMAC_PRIO_Msk (0x3UL)            /*!< APB_CMAC_PRIO (Bitfield-Mask: 0x03)                   */
/* ====================================================  QSPIFL2_ARB_REG  ==================================================== */
#define SYSBUS_ICM_QSPIFL2_ARB_REG_QSPIFL2_AHB_CPUS_PRIO_Pos (1UL)  /*!< QSPIFL2_AHB_CPUS_PRIO (Bit 1)                         */
#define SYSBUS_ICM_QSPIFL2_ARB_REG_QSPIFL2_AHB_CPUS_PRIO_Msk (0x2UL) /*!< QSPIFL2_AHB_CPUS_PRIO (Bitfield-Mask: 0x01)          */
#define SYSBUS_ICM_QSPIFL2_ARB_REG_QSPIFL2_AHB_DMA_PRIO_Pos (0UL)   /*!< QSPIFL2_AHB_DMA_PRIO (Bit 0)                          */
#define SYSBUS_ICM_QSPIFL2_ARB_REG_QSPIFL2_AHB_DMA_PRIO_Msk (0x1UL) /*!< QSPIFL2_AHB_DMA_PRIO (Bitfield-Mask: 0x01)            */
/* ====================================================  QSPIRAM_ARB_REG  ==================================================== */
#define SYSBUS_ICM_QSPIRAM_ARB_REG_QSPIRAM_AHB_AHBS_PRIO_Pos (1UL)  /*!< QSPIRAM_AHB_AHBS_PRIO (Bit 1)                         */
#define SYSBUS_ICM_QSPIRAM_ARB_REG_QSPIRAM_AHB_AHBS_PRIO_Msk (0x2UL) /*!< QSPIRAM_AHB_AHBS_PRIO (Bitfield-Mask: 0x01)          */
#define SYSBUS_ICM_QSPIRAM_ARB_REG_QSPIRAM_AHB_DMA_PRIO_Pos (0UL)   /*!< QSPIRAM_AHB_DMA_PRIO (Bit 0)                          */
#define SYSBUS_ICM_QSPIRAM_ARB_REG_QSPIRAM_AHB_DMA_PRIO_Msk (0x1UL) /*!< QSPIRAM_AHB_DMA_PRIO (Bitfield-Mask: 0x01)            */


/* =========================================================================================================================== */
/* ================                                           TIMER                                           ================ */
/* =========================================================================================================================== */

/* ================================================  TIMER_CAPTURE_GPIO1_REG  ================================================ */
#define TIMER_TIMER_CAPTURE_GPIO1_REG_TIM_CAPTURE_GPIO1_Pos (0UL)   /*!< TIM_CAPTURE_GPIO1 (Bit 0)                             */
#define TIMER_TIMER_CAPTURE_GPIO1_REG_TIM_CAPTURE_GPIO1_Msk (0xffffffUL) /*!< TIM_CAPTURE_GPIO1 (Bitfield-Mask: 0xffffff)      */
/* ================================================  TIMER_CAPTURE_GPIO2_REG  ================================================ */
#define TIMER_TIMER_CAPTURE_GPIO2_REG_TIM_CAPTURE_GPIO2_Pos (0UL)   /*!< TIM_CAPTURE_GPIO2 (Bit 0)                             */
#define TIMER_TIMER_CAPTURE_GPIO2_REG_TIM_CAPTURE_GPIO2_Msk (0xffffffUL) /*!< TIM_CAPTURE_GPIO2 (Bitfield-Mask: 0xffffff)      */
/* ================================================  TIMER_CAPTURE_GPIO3_REG  ================================================ */
#define TIMER_TIMER_CAPTURE_GPIO3_REG_TIM_CAPTURE_GPIO3_Pos (0UL)   /*!< TIM_CAPTURE_GPIO3 (Bit 0)                             */
#define TIMER_TIMER_CAPTURE_GPIO3_REG_TIM_CAPTURE_GPIO3_Msk (0xffffffUL) /*!< TIM_CAPTURE_GPIO3 (Bitfield-Mask: 0xffffff)      */
/* ================================================  TIMER_CAPTURE_GPIO4_REG  ================================================ */
#define TIMER_TIMER_CAPTURE_GPIO4_REG_TIM_CAPTURE_GPIO4_Pos (0UL)   /*!< TIM_CAPTURE_GPIO4 (Bit 0)                             */
#define TIMER_TIMER_CAPTURE_GPIO4_REG_TIM_CAPTURE_GPIO4_Msk (0xffffffUL) /*!< TIM_CAPTURE_GPIO4 (Bitfield-Mask: 0xffffff)      */
/* ===============================================  TIMER_CLEAR_IRQ_PULSE_REG  =============================================== */
#define TIMER_TIMER_CLEAR_IRQ_PULSE_REG_TIM_CLEAR_PULSE_IRQ_Pos (0UL) /*!< TIM_CLEAR_PULSE_IRQ (Bit 0)                         */
#define TIMER_TIMER_CLEAR_IRQ_PULSE_REG_TIM_CLEAR_PULSE_IRQ_Msk (0x1UL) /*!< TIM_CLEAR_PULSE_IRQ (Bitfield-Mask: 0x01)         */
/* ==================================================  TIMER_CLEAR_IRQ_REG  ================================================== */
#define TIMER_TIMER_CLEAR_IRQ_REG_TIM_CLEAR_IRQ_Pos (0UL)           /*!< TIM_CLEAR_IRQ (Bit 0)                                 */
#define TIMER_TIMER_CLEAR_IRQ_REG_TIM_CLEAR_IRQ_Msk (0x1UL)         /*!< TIM_CLEAR_IRQ (Bitfield-Mask: 0x01)                   */
/* ====================================================  TIMER_CTRL_REG  ===================================================== */
#define TIMER_TIMER_CTRL_REG_TIM_SINGLE_EVENT_CAPTURE_Pos (20UL)    /*!< TIM_SINGLE_EVENT_CAPTURE (Bit 20)                     */
#define TIMER_TIMER_CTRL_REG_TIM_SINGLE_EVENT_CAPTURE_Msk (0x100000UL) /*!< TIM_SINGLE_EVENT_CAPTURE (Bitfield-Mask: 0x01)     */
#define TIMER_TIMER_CTRL_REG_TIM_EDGE_DET_CNT_FALL_EN_Pos (19UL)    /*!< TIM_EDGE_DET_CNT_FALL_EN (Bit 19)                     */
#define TIMER_TIMER_CTRL_REG_TIM_EDGE_DET_CNT_FALL_EN_Msk (0x80000UL) /*!< TIM_EDGE_DET_CNT_FALL_EN (Bitfield-Mask: 0x01)      */
#define TIMER_TIMER_CTRL_REG_TIM_EDGE_DET_CNT_EN_Pos (18UL)         /*!< TIM_EDGE_DET_CNT_EN (Bit 18)                          */
#define TIMER_TIMER_CTRL_REG_TIM_EDGE_DET_CNT_EN_Msk (0x40000UL)    /*!< TIM_EDGE_DET_CNT_EN (Bitfield-Mask: 0x01)             */
#define TIMER_TIMER_CTRL_REG_TIM_ONESHOT_SWITCH_Pos (17UL)          /*!< TIM_ONESHOT_SWITCH (Bit 17)                           */
#define TIMER_TIMER_CTRL_REG_TIM_ONESHOT_SWITCH_Msk (0x20000UL)     /*!< TIM_ONESHOT_SWITCH (Bitfield-Mask: 0x01)              */
#define TIMER_TIMER_CTRL_REG_TIM_ONESHOT_TRIGGER_Pos (15UL)         /*!< TIM_ONESHOT_TRIGGER (Bit 15)                          */
#define TIMER_TIMER_CTRL_REG_TIM_ONESHOT_TRIGGER_Msk (0x18000UL)    /*!< TIM_ONESHOT_TRIGGER (Bitfield-Mask: 0x03)             */
#define TIMER_TIMER_CTRL_REG_TIM_IN4_EVENT_FALL_EN_Pos (10UL)       /*!< TIM_IN4_EVENT_FALL_EN (Bit 10)                        */
#define TIMER_TIMER_CTRL_REG_TIM_IN4_EVENT_FALL_EN_Msk (0x400UL)    /*!< TIM_IN4_EVENT_FALL_EN (Bitfield-Mask: 0x01)           */
#define TIMER_TIMER_CTRL_REG_TIM_IN3_EVENT_FALL_EN_Pos (9UL)        /*!< TIM_IN3_EVENT_FALL_EN (Bit 9)                         */
#define TIMER_TIMER_CTRL_REG_TIM_IN3_EVENT_FALL_EN_Msk (0x200UL)    /*!< TIM_IN3_EVENT_FALL_EN (Bitfield-Mask: 0x01)           */
#define TIMER_TIMER_CTRL_REG_TIM_CLK_EN_Pos (8UL)                   /*!< TIM_CLK_EN (Bit 8)                                    */
#define TIMER_TIMER_CTRL_REG_TIM_CLK_EN_Msk (0x100UL)               /*!< TIM_CLK_EN (Bitfield-Mask: 0x01)                      */
#define TIMER_TIMER_CTRL_REG_TIM_SYS_CLK_EN_Pos (7UL)               /*!< TIM_SYS_CLK_EN (Bit 7)                                */
#define TIMER_TIMER_CTRL_REG_TIM_SYS_CLK_EN_Msk (0x80UL)            /*!< TIM_SYS_CLK_EN (Bitfield-Mask: 0x01)                  */
#define TIMER_TIMER_CTRL_REG_TIM_FREE_RUN_MODE_EN_Pos (6UL)         /*!< TIM_FREE_RUN_MODE_EN (Bit 6)                          */
#define TIMER_TIMER_CTRL_REG_TIM_FREE_RUN_MODE_EN_Msk (0x40UL)      /*!< TIM_FREE_RUN_MODE_EN (Bitfield-Mask: 0x01)            */
#define TIMER_TIMER_CTRL_REG_TIM_IRQ_EN_Pos (5UL)                   /*!< TIM_IRQ_EN (Bit 5)                                    */
#define TIMER_TIMER_CTRL_REG_TIM_IRQ_EN_Msk (0x20UL)                /*!< TIM_IRQ_EN (Bitfield-Mask: 0x01)                      */
#define TIMER_TIMER_CTRL_REG_TIM_IN2_EVENT_FALL_EN_Pos (4UL)        /*!< TIM_IN2_EVENT_FALL_EN (Bit 4)                         */
#define TIMER_TIMER_CTRL_REG_TIM_IN2_EVENT_FALL_EN_Msk (0x10UL)     /*!< TIM_IN2_EVENT_FALL_EN (Bitfield-Mask: 0x01)           */
#define TIMER_TIMER_CTRL_REG_TIM_IN1_EVENT_FALL_EN_Pos (3UL)        /*!< TIM_IN1_EVENT_FALL_EN (Bit 3)                         */
#define TIMER_TIMER_CTRL_REG_TIM_IN1_EVENT_FALL_EN_Msk (0x8UL)      /*!< TIM_IN1_EVENT_FALL_EN (Bitfield-Mask: 0x01)           */
#define TIMER_TIMER_CTRL_REG_TIM_COUNT_DOWN_EN_Pos (2UL)            /*!< TIM_COUNT_DOWN_EN (Bit 2)                             */
#define TIMER_TIMER_CTRL_REG_TIM_COUNT_DOWN_EN_Msk (0x4UL)          /*!< TIM_COUNT_DOWN_EN (Bitfield-Mask: 0x01)               */
#define TIMER_TIMER_CTRL_REG_TIM_ONESHOT_MODE_EN_Pos (1UL)          /*!< TIM_ONESHOT_MODE_EN (Bit 1)                           */
#define TIMER_TIMER_CTRL_REG_TIM_ONESHOT_MODE_EN_Msk (0x2UL)        /*!< TIM_ONESHOT_MODE_EN (Bitfield-Mask: 0x01)             */
#define TIMER_TIMER_CTRL_REG_TIM_EN_Pos   (0UL)                     /*!< TIM_EN (Bit 0)                                        */
#define TIMER_TIMER_CTRL_REG_TIM_EN_Msk   (0x1UL)                   /*!< TIM_EN (Bitfield-Mask: 0x01)                          */
/* =================================================  TIMER_GPIO1_CONF_REG  ================================================== */
#define TIMER_TIMER_GPIO1_CONF_REG_TIM_GPIO1_CONF_Pos (0UL)         /*!< TIM_GPIO1_CONF (Bit 0)                                */
#define TIMER_TIMER_GPIO1_CONF_REG_TIM_GPIO1_CONF_Msk (0x3fUL)      /*!< TIM_GPIO1_CONF (Bitfield-Mask: 0x3f)                  */
/* =================================================  TIMER_GPIO2_CONF_REG  ================================================== */
#define TIMER_TIMER_GPIO2_CONF_REG_TIM_GPIO2_CONF_Pos (0UL)         /*!< TIM_GPIO2_CONF (Bit 0)                                */
#define TIMER_TIMER_GPIO2_CONF_REG_TIM_GPIO2_CONF_Msk (0x3fUL)      /*!< TIM_GPIO2_CONF (Bitfield-Mask: 0x3f)                  */
/* =================================================  TIMER_GPIO3_CONF_REG  ================================================== */
#define TIMER_TIMER_GPIO3_CONF_REG_TIM_GPIO3_CONF_Pos (0UL)         /*!< TIM_GPIO3_CONF (Bit 0)                                */
#define TIMER_TIMER_GPIO3_CONF_REG_TIM_GPIO3_CONF_Msk (0x3fUL)      /*!< TIM_GPIO3_CONF (Bitfield-Mask: 0x3f)                  */
/* =================================================  TIMER_GPIO4_CONF_REG  ================================================== */
#define TIMER_TIMER_GPIO4_CONF_REG_TIM_GPIO4_CONF_Pos (0UL)         /*!< TIM_GPIO4_CONF (Bit 0)                                */
#define TIMER_TIMER_GPIO4_CONF_REG_TIM_GPIO4_CONF_Msk (0x3fUL)      /*!< TIM_GPIO4_CONF (Bitfield-Mask: 0x3f)                  */
/* ===============================================  TIMER_ONESHOT_TRIGGER_REG  =============================================== */
#define TIMER_TIMER_ONESHOT_TRIGGER_REG_TIM_ONESHOT_TRIGGER_SW_Pos (0UL) /*!< TIM_ONESHOT_TRIGGER_SW (Bit 0)                   */
#define TIMER_TIMER_ONESHOT_TRIGGER_REG_TIM_ONESHOT_TRIGGER_SW_Msk (0x1UL) /*!< TIM_ONESHOT_TRIGGER_SW (Bitfield-Mask: 0x01)   */
/* ================================================  TIMER_PRESCALER_VAL_REG  ================================================ */
#define TIMER_TIMER_PRESCALER_VAL_REG_TIM_PRESCALER_VAL_Pos (0UL)   /*!< TIM_PRESCALER_VAL (Bit 0)                             */
#define TIMER_TIMER_PRESCALER_VAL_REG_TIM_PRESCALER_VAL_Msk (0x1fUL) /*!< TIM_PRESCALER_VAL (Bitfield-Mask: 0x1f)              */
/* ===============================================  TIMER_PULSE_CNT_CTRL_REG  ================================================ */
#define TIMER_TIMER_PULSE_CNT_CTRL_REG_PULSE_CNT_GPIO_SEL_Pos (24UL) /*!< PULSE_CNT_GPIO_SEL (Bit 24)                          */
#define TIMER_TIMER_PULSE_CNT_CTRL_REG_PULSE_CNT_GPIO_SEL_Msk (0x3f000000UL) /*!< PULSE_CNT_GPIO_SEL (Bitfield-Mask: 0x3f)     */
#define TIMER_TIMER_PULSE_CNT_CTRL_REG_PULSE_CNT_THRESHOLD_Pos (0UL) /*!< PULSE_CNT_THRESHOLD (Bit 0)                          */
#define TIMER_TIMER_PULSE_CNT_CTRL_REG_PULSE_CNT_THRESHOLD_Msk (0xffffffUL) /*!< PULSE_CNT_THRESHOLD (Bitfield-Mask: 0xffffff) */
/* ==================================================  TIMER_PWM_CTRL_REG  =================================================== */
#define TIMER_TIMER_PWM_CTRL_REG_TIM_PWM_DC_Pos (16UL)              /*!< TIM_PWM_DC (Bit 16)                                   */
#define TIMER_TIMER_PWM_CTRL_REG_TIM_PWM_DC_Msk (0xffff0000UL)      /*!< TIM_PWM_DC (Bitfield-Mask: 0xffff)                    */
#define TIMER_TIMER_PWM_CTRL_REG_TIM_PWM_FREQ_Pos (0UL)             /*!< TIM_PWM_FREQ (Bit 0)                                  */
#define TIMER_TIMER_PWM_CTRL_REG_TIM_PWM_FREQ_Msk (0xffffUL)        /*!< TIM_PWM_FREQ (Bitfield-Mask: 0xffff)                  */
/* ==================================================  TIMER_PWM_SYNC_REG  =================================================== */
#define TIMER_TIMER_PWM_SYNC_REG_TIMER6_SYNC_Pos (6UL)              /*!< TIMER6_SYNC (Bit 6)                                   */
#define TIMER_TIMER_PWM_SYNC_REG_TIMER6_SYNC_Msk (0x40UL)           /*!< TIMER6_SYNC (Bitfield-Mask: 0x01)                     */
#define TIMER_TIMER_PWM_SYNC_REG_TIMER3_SYNC_Pos (4UL)              /*!< TIMER3_SYNC (Bit 4)                                   */
#define TIMER_TIMER_PWM_SYNC_REG_TIMER3_SYNC_Msk (0x10UL)           /*!< TIMER3_SYNC (Bitfield-Mask: 0x01)                     */
#define TIMER_TIMER_PWM_SYNC_REG_TIMER2_SYNC_Pos (3UL)              /*!< TIMER2_SYNC (Bit 3)                                   */
#define TIMER_TIMER_PWM_SYNC_REG_TIMER2_SYNC_Msk (0x8UL)            /*!< TIMER2_SYNC (Bitfield-Mask: 0x01)                     */
#define TIMER_TIMER_PWM_SYNC_REG_TIMER_SYNC_Pos (2UL)               /*!< TIMER_SYNC (Bit 2)                                    */
#define TIMER_TIMER_PWM_SYNC_REG_TIMER_SYNC_Msk (0x4UL)             /*!< TIMER_SYNC (Bitfield-Mask: 0x01)                      */
#define TIMER_TIMER_PWM_SYNC_REG_SYNC_ENABLE_Pos (1UL)              /*!< SYNC_ENABLE (Bit 1)                                   */
#define TIMER_TIMER_PWM_SYNC_REG_SYNC_ENABLE_Msk (0x2UL)            /*!< SYNC_ENABLE (Bitfield-Mask: 0x01)                     */
#define TIMER_TIMER_PWM_SYNC_REG_PWM_START_Pos (0UL)                /*!< PWM_START (Bit 0)                                     */
#define TIMER_TIMER_PWM_SYNC_REG_PWM_START_Msk (0x1UL)              /*!< PWM_START (Bitfield-Mask: 0x01)                       */
/* ==================================================  TIMER_SETTINGS_REG  =================================================== */
#define TIMER_TIMER_SETTINGS_REG_TIM_PRESCALER_Pos (24UL)           /*!< TIM_PRESCALER (Bit 24)                                */
#define TIMER_TIMER_SETTINGS_REG_TIM_PRESCALER_Msk (0x1f000000UL)   /*!< TIM_PRESCALER (Bitfield-Mask: 0x1f)                   */
#define TIMER_TIMER_SETTINGS_REG_TIM_RELOAD_Pos (0UL)               /*!< TIM_RELOAD (Bit 0)                                    */
#define TIMER_TIMER_SETTINGS_REG_TIM_RELOAD_Msk (0xffffffUL)        /*!< TIM_RELOAD (Bitfield-Mask: 0xffffff)                  */
/* ==================================================  TIMER_SHOTWIDTH_REG  ================================================== */
#define TIMER_TIMER_SHOTWIDTH_REG_TIM_SHOTWIDTH_Pos (0UL)           /*!< TIM_SHOTWIDTH (Bit 0)                                 */
#define TIMER_TIMER_SHOTWIDTH_REG_TIM_SHOTWIDTH_Msk (0xffffffUL)    /*!< TIM_SHOTWIDTH (Bitfield-Mask: 0xffffff)               */
/* ===================================================  TIMER_STATUS_REG  ==================================================== */
#define TIMER_TIMER_STATUS_REG_TIM_IRQ_PULSE_STATUS_Pos (14UL)      /*!< TIM_IRQ_PULSE_STATUS (Bit 14)                         */
#define TIMER_TIMER_STATUS_REG_TIM_IRQ_PULSE_STATUS_Msk (0x4000UL)  /*!< TIM_IRQ_PULSE_STATUS (Bitfield-Mask: 0x01)            */
#define TIMER_TIMER_STATUS_REG_TIM_IN4_STATE_Pos (13UL)             /*!< TIM_IN4_STATE (Bit 13)                                */
#define TIMER_TIMER_STATUS_REG_TIM_IN4_STATE_Msk (0x2000UL)         /*!< TIM_IN4_STATE (Bitfield-Mask: 0x01)                   */
#define TIMER_TIMER_STATUS_REG_TIM_IN3_STATE_Pos (12UL)             /*!< TIM_IN3_STATE (Bit 12)                                */
#define TIMER_TIMER_STATUS_REG_TIM_IN3_STATE_Msk (0x1000UL)         /*!< TIM_IN3_STATE (Bitfield-Mask: 0x01)                   */
#define TIMER_TIMER_STATUS_REG_TIM_SWITCHED_TO_DIVN_CLK_Pos (11UL)  /*!< TIM_SWITCHED_TO_DIVN_CLK (Bit 11)                     */
#define TIMER_TIMER_STATUS_REG_TIM_SWITCHED_TO_DIVN_CLK_Msk (0x800UL) /*!< TIM_SWITCHED_TO_DIVN_CLK (Bitfield-Mask: 0x01)      */
#define TIMER_TIMER_STATUS_REG_TIM_PWM_BUSY_Pos (10UL)              /*!< TIM_PWM_BUSY (Bit 10)                                 */
#define TIMER_TIMER_STATUS_REG_TIM_PWM_BUSY_Msk (0x400UL)           /*!< TIM_PWM_BUSY (Bitfield-Mask: 0x01)                    */
#define TIMER_TIMER_STATUS_REG_TIM_TIMER_BUSY_Pos (9UL)             /*!< TIM_TIMER_BUSY (Bit 9)                                */
#define TIMER_TIMER_STATUS_REG_TIM_TIMER_BUSY_Msk (0x200UL)         /*!< TIM_TIMER_BUSY (Bitfield-Mask: 0x01)                  */
#define TIMER_TIMER_STATUS_REG_TIM_IRQ_STATUS_Pos (8UL)             /*!< TIM_IRQ_STATUS (Bit 8)                                */
#define TIMER_TIMER_STATUS_REG_TIM_IRQ_STATUS_Msk (0x100UL)         /*!< TIM_IRQ_STATUS (Bitfield-Mask: 0x01)                  */
#define TIMER_TIMER_STATUS_REG_TIM_ONESHOT_PHASE_Pos (2UL)          /*!< TIM_ONESHOT_PHASE (Bit 2)                             */
#define TIMER_TIMER_STATUS_REG_TIM_ONESHOT_PHASE_Msk (0xcUL)        /*!< TIM_ONESHOT_PHASE (Bitfield-Mask: 0x03)               */
#define TIMER_TIMER_STATUS_REG_TIM_IN2_STATE_Pos (1UL)              /*!< TIM_IN2_STATE (Bit 1)                                 */
#define TIMER_TIMER_STATUS_REG_TIM_IN2_STATE_Msk (0x2UL)            /*!< TIM_IN2_STATE (Bitfield-Mask: 0x01)                   */
#define TIMER_TIMER_STATUS_REG_TIM_IN1_STATE_Pos (0UL)              /*!< TIM_IN1_STATE (Bit 0)                                 */
#define TIMER_TIMER_STATUS_REG_TIM_IN1_STATE_Msk (0x1UL)            /*!< TIM_IN1_STATE (Bitfield-Mask: 0x01)                   */
/* ==================================================  TIMER_TIMER_VAL_REG  ================================================== */
#define TIMER_TIMER_TIMER_VAL_REG_TIM_TIMER_VALUE_Pos (0UL)         /*!< TIM_TIMER_VALUE (Bit 0)                               */
#define TIMER_TIMER_TIMER_VAL_REG_TIM_TIMER_VALUE_Msk (0xffffffUL)  /*!< TIM_TIMER_VALUE (Bitfield-Mask: 0xffffff)             */


/* =========================================================================================================================== */
/* ================                                          TIMER2                                           ================ */
/* =========================================================================================================================== */

/* ===============================================  TIMER2_CAPTURE_GPIO1_REG  ================================================ */
#define TIMER2_TIMER2_CAPTURE_GPIO1_REG_TIM_CAPTURE_GPIO1_Pos (0UL) /*!< TIM_CAPTURE_GPIO1 (Bit 0)                             */
#define TIMER2_TIMER2_CAPTURE_GPIO1_REG_TIM_CAPTURE_GPIO1_Msk (0xffffffUL) /*!< TIM_CAPTURE_GPIO1 (Bitfield-Mask: 0xffffff)    */
/* ===============================================  TIMER2_CAPTURE_GPIO2_REG  ================================================ */
#define TIMER2_TIMER2_CAPTURE_GPIO2_REG_TIM_CAPTURE_GPIO2_Pos (0UL) /*!< TIM_CAPTURE_GPIO2 (Bit 0)                             */
#define TIMER2_TIMER2_CAPTURE_GPIO2_REG_TIM_CAPTURE_GPIO2_Msk (0xffffffUL) /*!< TIM_CAPTURE_GPIO2 (Bitfield-Mask: 0xffffff)    */
/* ==============================================  TIMER2_CLEAR_IRQ_PULSE_REG  =============================================== */
#define TIMER2_TIMER2_CLEAR_IRQ_PULSE_REG_TIM_CLEAR_PULSE_IRQ_Pos (0UL) /*!< TIM_CLEAR_PULSE_IRQ (Bit 0)                       */
#define TIMER2_TIMER2_CLEAR_IRQ_PULSE_REG_TIM_CLEAR_PULSE_IRQ_Msk (0x1UL) /*!< TIM_CLEAR_PULSE_IRQ (Bitfield-Mask: 0x01)       */
/* =================================================  TIMER2_CLEAR_IRQ_REG  ================================================== */
#define TIMER2_TIMER2_CLEAR_IRQ_REG_TIM_CLEAR_IRQ_Pos (0UL)         /*!< TIM_CLEAR_IRQ (Bit 0)                                 */
#define TIMER2_TIMER2_CLEAR_IRQ_REG_TIM_CLEAR_IRQ_Msk (0x1UL)       /*!< TIM_CLEAR_IRQ (Bitfield-Mask: 0x01)                   */
/* ====================================================  TIMER2_CTRL_REG  ==================================================== */
#define TIMER2_TIMER2_CTRL_REG_TIM_EDGE_DET_CNT_FALL_EN_Pos (19UL)  /*!< TIM_EDGE_DET_CNT_FALL_EN (Bit 19)                     */
#define TIMER2_TIMER2_CTRL_REG_TIM_EDGE_DET_CNT_FALL_EN_Msk (0x80000UL) /*!< TIM_EDGE_DET_CNT_FALL_EN (Bitfield-Mask: 0x01)    */
#define TIMER2_TIMER2_CTRL_REG_TIM_EDGE_DET_CNT_EN_Pos (18UL)       /*!< TIM_EDGE_DET_CNT_EN (Bit 18)                          */
#define TIMER2_TIMER2_CTRL_REG_TIM_EDGE_DET_CNT_EN_Msk (0x40000UL)  /*!< TIM_EDGE_DET_CNT_EN (Bitfield-Mask: 0x01)             */
#define TIMER2_TIMER2_CTRL_REG_TIM_CLK_EN_Pos (8UL)                 /*!< TIM_CLK_EN (Bit 8)                                    */
#define TIMER2_TIMER2_CTRL_REG_TIM_CLK_EN_Msk (0x100UL)             /*!< TIM_CLK_EN (Bitfield-Mask: 0x01)                      */
#define TIMER2_TIMER2_CTRL_REG_TIM_SYS_CLK_EN_Pos (7UL)             /*!< TIM_SYS_CLK_EN (Bit 7)                                */
#define TIMER2_TIMER2_CTRL_REG_TIM_SYS_CLK_EN_Msk (0x80UL)          /*!< TIM_SYS_CLK_EN (Bitfield-Mask: 0x01)                  */
#define TIMER2_TIMER2_CTRL_REG_TIM_FREE_RUN_MODE_EN_Pos (6UL)       /*!< TIM_FREE_RUN_MODE_EN (Bit 6)                          */
#define TIMER2_TIMER2_CTRL_REG_TIM_FREE_RUN_MODE_EN_Msk (0x40UL)    /*!< TIM_FREE_RUN_MODE_EN (Bitfield-Mask: 0x01)            */
#define TIMER2_TIMER2_CTRL_REG_TIM_IRQ_EN_Pos (5UL)                 /*!< TIM_IRQ_EN (Bit 5)                                    */
#define TIMER2_TIMER2_CTRL_REG_TIM_IRQ_EN_Msk (0x20UL)              /*!< TIM_IRQ_EN (Bitfield-Mask: 0x01)                      */
#define TIMER2_TIMER2_CTRL_REG_TIM_IN2_EVENT_FALL_EN_Pos (4UL)      /*!< TIM_IN2_EVENT_FALL_EN (Bit 4)                         */
#define TIMER2_TIMER2_CTRL_REG_TIM_IN2_EVENT_FALL_EN_Msk (0x10UL)   /*!< TIM_IN2_EVENT_FALL_EN (Bitfield-Mask: 0x01)           */
#define TIMER2_TIMER2_CTRL_REG_TIM_IN1_EVENT_FALL_EN_Pos (3UL)      /*!< TIM_IN1_EVENT_FALL_EN (Bit 3)                         */
#define TIMER2_TIMER2_CTRL_REG_TIM_IN1_EVENT_FALL_EN_Msk (0x8UL)    /*!< TIM_IN1_EVENT_FALL_EN (Bitfield-Mask: 0x01)           */
#define TIMER2_TIMER2_CTRL_REG_TIM_COUNT_DOWN_EN_Pos (2UL)          /*!< TIM_COUNT_DOWN_EN (Bit 2)                             */
#define TIMER2_TIMER2_CTRL_REG_TIM_COUNT_DOWN_EN_Msk (0x4UL)        /*!< TIM_COUNT_DOWN_EN (Bitfield-Mask: 0x01)               */
#define TIMER2_TIMER2_CTRL_REG_TIM_ONESHOT_MODE_EN_Pos (1UL)        /*!< TIM_ONESHOT_MODE_EN (Bit 1)                           */
#define TIMER2_TIMER2_CTRL_REG_TIM_ONESHOT_MODE_EN_Msk (0x2UL)      /*!< TIM_ONESHOT_MODE_EN (Bitfield-Mask: 0x01)             */
#define TIMER2_TIMER2_CTRL_REG_TIM_EN_Pos (0UL)                     /*!< TIM_EN (Bit 0)                                        */
#define TIMER2_TIMER2_CTRL_REG_TIM_EN_Msk (0x1UL)                   /*!< TIM_EN (Bitfield-Mask: 0x01)                          */
/* =================================================  TIMER2_GPIO1_CONF_REG  ================================================= */
#define TIMER2_TIMER2_GPIO1_CONF_REG_TIM_GPIO1_CONF_Pos (0UL)       /*!< TIM_GPIO1_CONF (Bit 0)                                */
#define TIMER2_TIMER2_GPIO1_CONF_REG_TIM_GPIO1_CONF_Msk (0x3fUL)    /*!< TIM_GPIO1_CONF (Bitfield-Mask: 0x3f)                  */
/* =================================================  TIMER2_GPIO2_CONF_REG  ================================================= */
#define TIMER2_TIMER2_GPIO2_CONF_REG_TIM_GPIO2_CONF_Pos (0UL)       /*!< TIM_GPIO2_CONF (Bit 0)                                */
#define TIMER2_TIMER2_GPIO2_CONF_REG_TIM_GPIO2_CONF_Msk (0x3fUL)    /*!< TIM_GPIO2_CONF (Bitfield-Mask: 0x3f)                  */
/* ===============================================  TIMER2_PRESCALER_VAL_REG  ================================================ */
#define TIMER2_TIMER2_PRESCALER_VAL_REG_TIM_PRESCALER_VAL_Pos (0UL) /*!< TIM_PRESCALER_VAL (Bit 0)                             */
#define TIMER2_TIMER2_PRESCALER_VAL_REG_TIM_PRESCALER_VAL_Msk (0x1fUL) /*!< TIM_PRESCALER_VAL (Bitfield-Mask: 0x1f)            */
/* ===============================================  TIMER2_PULSE_CNT_CTRL_REG  =============================================== */
#define TIMER2_TIMER2_PULSE_CNT_CTRL_REG_PULSE_CNT_GPIO_SEL_Pos (24UL) /*!< PULSE_CNT_GPIO_SEL (Bit 24)                        */
#define TIMER2_TIMER2_PULSE_CNT_CTRL_REG_PULSE_CNT_GPIO_SEL_Msk (0x3f000000UL) /*!< PULSE_CNT_GPIO_SEL (Bitfield-Mask: 0x3f)   */
#define TIMER2_TIMER2_PULSE_CNT_CTRL_REG_PULSE_CNT_THRESHOLD_Pos (0UL) /*!< PULSE_CNT_THRESHOLD (Bit 0)                        */
#define TIMER2_TIMER2_PULSE_CNT_CTRL_REG_PULSE_CNT_THRESHOLD_Msk (0xffffffUL) /*!< PULSE_CNT_THRESHOLD (Bitfield-Mask: 0xffffff) */
/* ==================================================  TIMER2_PWM_CTRL_REG  ================================================== */
#define TIMER2_TIMER2_PWM_CTRL_REG_TIM_PWM_DC_Pos (16UL)            /*!< TIM_PWM_DC (Bit 16)                                   */
#define TIMER2_TIMER2_PWM_CTRL_REG_TIM_PWM_DC_Msk (0xffff0000UL)    /*!< TIM_PWM_DC (Bitfield-Mask: 0xffff)                    */
#define TIMER2_TIMER2_PWM_CTRL_REG_TIM_PWM_FREQ_Pos (0UL)           /*!< TIM_PWM_FREQ (Bit 0)                                  */
#define TIMER2_TIMER2_PWM_CTRL_REG_TIM_PWM_FREQ_Msk (0xffffUL)      /*!< TIM_PWM_FREQ (Bitfield-Mask: 0xffff)                  */
/* ==================================================  TIMER2_SETTINGS_REG  ================================================== */
#define TIMER2_TIMER2_SETTINGS_REG_TIM_PRESCALER_Pos (24UL)         /*!< TIM_PRESCALER (Bit 24)                                */
#define TIMER2_TIMER2_SETTINGS_REG_TIM_PRESCALER_Msk (0x1f000000UL) /*!< TIM_PRESCALER (Bitfield-Mask: 0x1f)                   */
#define TIMER2_TIMER2_SETTINGS_REG_TIM_RELOAD_Pos (0UL)             /*!< TIM_RELOAD (Bit 0)                                    */
#define TIMER2_TIMER2_SETTINGS_REG_TIM_RELOAD_Msk (0xffffffUL)      /*!< TIM_RELOAD (Bitfield-Mask: 0xffffff)                  */
/* =================================================  TIMER2_SHOTWIDTH_REG  ================================================== */
#define TIMER2_TIMER2_SHOTWIDTH_REG_TIM_SHOTWIDTH_Pos (0UL)         /*!< TIM_SHOTWIDTH (Bit 0)                                 */
#define TIMER2_TIMER2_SHOTWIDTH_REG_TIM_SHOTWIDTH_Msk (0xffffffUL)  /*!< TIM_SHOTWIDTH (Bitfield-Mask: 0xffffff)               */
/* ===================================================  TIMER2_STATUS_REG  =================================================== */
#define TIMER2_TIMER2_STATUS_REG_TIM_IRQ_PULSE_STATUS_Pos (14UL)    /*!< TIM_IRQ_PULSE_STATUS (Bit 14)                         */
#define TIMER2_TIMER2_STATUS_REG_TIM_IRQ_PULSE_STATUS_Msk (0x4000UL) /*!< TIM_IRQ_PULSE_STATUS (Bitfield-Mask: 0x01)           */
#define TIMER2_TIMER2_STATUS_REG_TIM_SWITCHED_TO_DIVN_CLK_Pos (11UL) /*!< TIM_SWITCHED_TO_DIVN_CLK (Bit 11)                    */
#define TIMER2_TIMER2_STATUS_REG_TIM_SWITCHED_TO_DIVN_CLK_Msk (0x800UL) /*!< TIM_SWITCHED_TO_DIVN_CLK (Bitfield-Mask: 0x01)    */
#define TIMER2_TIMER2_STATUS_REG_TIM_PWM_BUSY_Pos (10UL)            /*!< TIM_PWM_BUSY (Bit 10)                                 */
#define TIMER2_TIMER2_STATUS_REG_TIM_PWM_BUSY_Msk (0x400UL)         /*!< TIM_PWM_BUSY (Bitfield-Mask: 0x01)                    */
#define TIMER2_TIMER2_STATUS_REG_TIM_TIMER_BUSY_Pos (9UL)           /*!< TIM_TIMER_BUSY (Bit 9)                                */
#define TIMER2_TIMER2_STATUS_REG_TIM_TIMER_BUSY_Msk (0x200UL)       /*!< TIM_TIMER_BUSY (Bitfield-Mask: 0x01)                  */
#define TIMER2_TIMER2_STATUS_REG_TIM_IRQ_STATUS_Pos (8UL)           /*!< TIM_IRQ_STATUS (Bit 8)                                */
#define TIMER2_TIMER2_STATUS_REG_TIM_IRQ_STATUS_Msk (0x100UL)       /*!< TIM_IRQ_STATUS (Bitfield-Mask: 0x01)                  */
#define TIMER2_TIMER2_STATUS_REG_TIM_ONESHOT_PHASE_Pos (2UL)        /*!< TIM_ONESHOT_PHASE (Bit 2)                             */
#define TIMER2_TIMER2_STATUS_REG_TIM_ONESHOT_PHASE_Msk (0xcUL)      /*!< TIM_ONESHOT_PHASE (Bitfield-Mask: 0x03)               */
#define TIMER2_TIMER2_STATUS_REG_TIM_IN2_STATE_Pos (1UL)            /*!< TIM_IN2_STATE (Bit 1)                                 */
#define TIMER2_TIMER2_STATUS_REG_TIM_IN2_STATE_Msk (0x2UL)          /*!< TIM_IN2_STATE (Bitfield-Mask: 0x01)                   */
#define TIMER2_TIMER2_STATUS_REG_TIM_IN1_STATE_Pos (0UL)            /*!< TIM_IN1_STATE (Bit 0)                                 */
#define TIMER2_TIMER2_STATUS_REG_TIM_IN1_STATE_Msk (0x1UL)          /*!< TIM_IN1_STATE (Bitfield-Mask: 0x01)                   */
/* =================================================  TIMER2_TIMER_VAL_REG  ================================================== */
#define TIMER2_TIMER2_TIMER_VAL_REG_TIM_TIMER_VALUE_Pos (0UL)       /*!< TIM_TIMER_VALUE (Bit 0)                               */
#define TIMER2_TIMER2_TIMER_VAL_REG_TIM_TIMER_VALUE_Msk (0xffffffUL) /*!< TIM_TIMER_VALUE (Bitfield-Mask: 0xffffff)            */


/* =========================================================================================================================== */
/* ================                                          TIMER3                                           ================ */
/* =========================================================================================================================== */

/* ===============================================  TIMER3_CAPTURE_GPIO1_REG  ================================================ */
#define TIMER3_TIMER3_CAPTURE_GPIO1_REG_TIM_CAPTURE_GPIO1_Pos (0UL) /*!< TIM_CAPTURE_GPIO1 (Bit 0)                             */
#define TIMER3_TIMER3_CAPTURE_GPIO1_REG_TIM_CAPTURE_GPIO1_Msk (0xffffffUL) /*!< TIM_CAPTURE_GPIO1 (Bitfield-Mask: 0xffffff)    */
/* ===============================================  TIMER3_CAPTURE_GPIO2_REG  ================================================ */
#define TIMER3_TIMER3_CAPTURE_GPIO2_REG_TIM_CAPTURE_GPIO2_Pos (0UL) /*!< TIM_CAPTURE_GPIO2 (Bit 0)                             */
#define TIMER3_TIMER3_CAPTURE_GPIO2_REG_TIM_CAPTURE_GPIO2_Msk (0xffffffUL) /*!< TIM_CAPTURE_GPIO2 (Bitfield-Mask: 0xffffff)    */
/* ==============================================  TIMER3_CLEAR_IRQ_PULSE_REG  =============================================== */
#define TIMER3_TIMER3_CLEAR_IRQ_PULSE_REG_TIM_CLEAR_PULSE_IRQ_Pos (0UL) /*!< TIM_CLEAR_PULSE_IRQ (Bit 0)                       */
#define TIMER3_TIMER3_CLEAR_IRQ_PULSE_REG_TIM_CLEAR_PULSE_IRQ_Msk (0x1UL) /*!< TIM_CLEAR_PULSE_IRQ (Bitfield-Mask: 0x01)       */
/* =================================================  TIMER3_CLEAR_IRQ_REG  ================================================== */
#define TIMER3_TIMER3_CLEAR_IRQ_REG_TIM_CLEAR_IRQ_Pos (0UL)         /*!< TIM_CLEAR_IRQ (Bit 0)                                 */
#define TIMER3_TIMER3_CLEAR_IRQ_REG_TIM_CLEAR_IRQ_Msk (0x1UL)       /*!< TIM_CLEAR_IRQ (Bitfield-Mask: 0x01)                   */
/* ====================================================  TIMER3_CTRL_REG  ==================================================== */
#define TIMER3_TIMER3_CTRL_REG_TIM_EDGE_DET_CNT_FALL_EN_Pos (19UL)  /*!< TIM_EDGE_DET_CNT_FALL_EN (Bit 19)                     */
#define TIMER3_TIMER3_CTRL_REG_TIM_EDGE_DET_CNT_FALL_EN_Msk (0x80000UL) /*!< TIM_EDGE_DET_CNT_FALL_EN (Bitfield-Mask: 0x01)    */
#define TIMER3_TIMER3_CTRL_REG_TIM_EDGE_DET_CNT_EN_Pos (18UL)       /*!< TIM_EDGE_DET_CNT_EN (Bit 18)                          */
#define TIMER3_TIMER3_CTRL_REG_TIM_EDGE_DET_CNT_EN_Msk (0x40000UL)  /*!< TIM_EDGE_DET_CNT_EN (Bitfield-Mask: 0x01)             */
#define TIMER3_TIMER3_CTRL_REG_TIM_CLK_EN_Pos (8UL)                 /*!< TIM_CLK_EN (Bit 8)                                    */
#define TIMER3_TIMER3_CTRL_REG_TIM_CLK_EN_Msk (0x100UL)             /*!< TIM_CLK_EN (Bitfield-Mask: 0x01)                      */
#define TIMER3_TIMER3_CTRL_REG_TIM_SYS_CLK_EN_Pos (7UL)             /*!< TIM_SYS_CLK_EN (Bit 7)                                */
#define TIMER3_TIMER3_CTRL_REG_TIM_SYS_CLK_EN_Msk (0x80UL)          /*!< TIM_SYS_CLK_EN (Bitfield-Mask: 0x01)                  */
#define TIMER3_TIMER3_CTRL_REG_TIM_FREE_RUN_MODE_EN_Pos (6UL)       /*!< TIM_FREE_RUN_MODE_EN (Bit 6)                          */
#define TIMER3_TIMER3_CTRL_REG_TIM_FREE_RUN_MODE_EN_Msk (0x40UL)    /*!< TIM_FREE_RUN_MODE_EN (Bitfield-Mask: 0x01)            */
#define TIMER3_TIMER3_CTRL_REG_TIM_IRQ_EN_Pos (5UL)                 /*!< TIM_IRQ_EN (Bit 5)                                    */
#define TIMER3_TIMER3_CTRL_REG_TIM_IRQ_EN_Msk (0x20UL)              /*!< TIM_IRQ_EN (Bitfield-Mask: 0x01)                      */
#define TIMER3_TIMER3_CTRL_REG_TIM_IN2_EVENT_FALL_EN_Pos (4UL)      /*!< TIM_IN2_EVENT_FALL_EN (Bit 4)                         */
#define TIMER3_TIMER3_CTRL_REG_TIM_IN2_EVENT_FALL_EN_Msk (0x10UL)   /*!< TIM_IN2_EVENT_FALL_EN (Bitfield-Mask: 0x01)           */
#define TIMER3_TIMER3_CTRL_REG_TIM_IN1_EVENT_FALL_EN_Pos (3UL)      /*!< TIM_IN1_EVENT_FALL_EN (Bit 3)                         */
#define TIMER3_TIMER3_CTRL_REG_TIM_IN1_EVENT_FALL_EN_Msk (0x8UL)    /*!< TIM_IN1_EVENT_FALL_EN (Bitfield-Mask: 0x01)           */
#define TIMER3_TIMER3_CTRL_REG_TIM_COUNT_DOWN_EN_Pos (2UL)          /*!< TIM_COUNT_DOWN_EN (Bit 2)                             */
#define TIMER3_TIMER3_CTRL_REG_TIM_COUNT_DOWN_EN_Msk (0x4UL)        /*!< TIM_COUNT_DOWN_EN (Bitfield-Mask: 0x01)               */
#define TIMER3_TIMER3_CTRL_REG_TIM_ONESHOT_MODE_EN_Pos (1UL)        /*!< TIM_ONESHOT_MODE_EN (Bit 1)                           */
#define TIMER3_TIMER3_CTRL_REG_TIM_ONESHOT_MODE_EN_Msk (0x2UL)      /*!< TIM_ONESHOT_MODE_EN (Bitfield-Mask: 0x01)             */
#define TIMER3_TIMER3_CTRL_REG_TIM_EN_Pos (0UL)                     /*!< TIM_EN (Bit 0)                                        */
#define TIMER3_TIMER3_CTRL_REG_TIM_EN_Msk (0x1UL)                   /*!< TIM_EN (Bitfield-Mask: 0x01)                          */
/* =================================================  TIMER3_GPIO1_CONF_REG  ================================================= */
#define TIMER3_TIMER3_GPIO1_CONF_REG_TIM_GPIO1_CONF_Pos (0UL)       /*!< TIM_GPIO1_CONF (Bit 0)                                */
#define TIMER3_TIMER3_GPIO1_CONF_REG_TIM_GPIO1_CONF_Msk (0x3fUL)    /*!< TIM_GPIO1_CONF (Bitfield-Mask: 0x3f)                  */
/* =================================================  TIMER3_GPIO2_CONF_REG  ================================================= */
#define TIMER3_TIMER3_GPIO2_CONF_REG_TIM_GPIO2_CONF_Pos (0UL)       /*!< TIM_GPIO2_CONF (Bit 0)                                */
#define TIMER3_TIMER3_GPIO2_CONF_REG_TIM_GPIO2_CONF_Msk (0x3fUL)    /*!< TIM_GPIO2_CONF (Bitfield-Mask: 0x3f)                  */
/* ===============================================  TIMER3_PRESCALER_VAL_REG  ================================================ */
#define TIMER3_TIMER3_PRESCALER_VAL_REG_TIM_PRESCALER_VAL_Pos (0UL) /*!< TIM_PRESCALER_VAL (Bit 0)                             */
#define TIMER3_TIMER3_PRESCALER_VAL_REG_TIM_PRESCALER_VAL_Msk (0x1fUL) /*!< TIM_PRESCALER_VAL (Bitfield-Mask: 0x1f)            */
/* ===============================================  TIMER3_PULSE_CNT_CTRL_REG  =============================================== */
#define TIMER3_TIMER3_PULSE_CNT_CTRL_REG_PULSE_CNT_GPIO_SEL_Pos (24UL) /*!< PULSE_CNT_GPIO_SEL (Bit 24)                        */
#define TIMER3_TIMER3_PULSE_CNT_CTRL_REG_PULSE_CNT_GPIO_SEL_Msk (0x3f000000UL) /*!< PULSE_CNT_GPIO_SEL (Bitfield-Mask: 0x3f)   */
#define TIMER3_TIMER3_PULSE_CNT_CTRL_REG_PULSE_CNT_THRESHOLD_Pos (0UL) /*!< PULSE_CNT_THRESHOLD (Bit 0)                        */
#define TIMER3_TIMER3_PULSE_CNT_CTRL_REG_PULSE_CNT_THRESHOLD_Msk (0xffffffUL) /*!< PULSE_CNT_THRESHOLD (Bitfield-Mask: 0xffffff) */
/* ==================================================  TIMER3_PWM_CTRL_REG  ================================================== */
#define TIMER3_TIMER3_PWM_CTRL_REG_TIM_PWM_DC_Pos (16UL)            /*!< TIM_PWM_DC (Bit 16)                                   */
#define TIMER3_TIMER3_PWM_CTRL_REG_TIM_PWM_DC_Msk (0xffff0000UL)    /*!< TIM_PWM_DC (Bitfield-Mask: 0xffff)                    */
#define TIMER3_TIMER3_PWM_CTRL_REG_TIM_PWM_FREQ_Pos (0UL)           /*!< TIM_PWM_FREQ (Bit 0)                                  */
#define TIMER3_TIMER3_PWM_CTRL_REG_TIM_PWM_FREQ_Msk (0xffffUL)      /*!< TIM_PWM_FREQ (Bitfield-Mask: 0xffff)                  */
/* ==================================================  TIMER3_SETTINGS_REG  ================================================== */
#define TIMER3_TIMER3_SETTINGS_REG_TIM_PRESCALER_Pos (24UL)         /*!< TIM_PRESCALER (Bit 24)                                */
#define TIMER3_TIMER3_SETTINGS_REG_TIM_PRESCALER_Msk (0x1f000000UL) /*!< TIM_PRESCALER (Bitfield-Mask: 0x1f)                   */
#define TIMER3_TIMER3_SETTINGS_REG_TIM_RELOAD_Pos (0UL)             /*!< TIM_RELOAD (Bit 0)                                    */
#define TIMER3_TIMER3_SETTINGS_REG_TIM_RELOAD_Msk (0xffffffUL)      /*!< TIM_RELOAD (Bitfield-Mask: 0xffffff)                  */
/* =================================================  TIMER3_SHOTWIDTH_REG  ================================================== */
#define TIMER3_TIMER3_SHOTWIDTH_REG_TIM_SHOTWIDTH_Pos (0UL)         /*!< TIM_SHOTWIDTH (Bit 0)                                 */
#define TIMER3_TIMER3_SHOTWIDTH_REG_TIM_SHOTWIDTH_Msk (0xffffffUL)  /*!< TIM_SHOTWIDTH (Bitfield-Mask: 0xffffff)               */
/* ===================================================  TIMER3_STATUS_REG  =================================================== */
#define TIMER3_TIMER3_STATUS_REG_TIM_IRQ_PULSE_STATUS_Pos (14UL)    /*!< TIM_IRQ_PULSE_STATUS (Bit 14)                         */
#define TIMER3_TIMER3_STATUS_REG_TIM_IRQ_PULSE_STATUS_Msk (0x4000UL) /*!< TIM_IRQ_PULSE_STATUS (Bitfield-Mask: 0x01)           */
#define TIMER3_TIMER3_STATUS_REG_TIM_SWITCHED_TO_DIVN_CLK_Pos (11UL) /*!< TIM_SWITCHED_TO_DIVN_CLK (Bit 11)                    */
#define TIMER3_TIMER3_STATUS_REG_TIM_SWITCHED_TO_DIVN_CLK_Msk (0x800UL) /*!< TIM_SWITCHED_TO_DIVN_CLK (Bitfield-Mask: 0x01)    */
#define TIMER3_TIMER3_STATUS_REG_TIM_PWM_BUSY_Pos (10UL)            /*!< TIM_PWM_BUSY (Bit 10)                                 */
#define TIMER3_TIMER3_STATUS_REG_TIM_PWM_BUSY_Msk (0x400UL)         /*!< TIM_PWM_BUSY (Bitfield-Mask: 0x01)                    */
#define TIMER3_TIMER3_STATUS_REG_TIM_TIMER_BUSY_Pos (9UL)           /*!< TIM_TIMER_BUSY (Bit 9)                                */
#define TIMER3_TIMER3_STATUS_REG_TIM_TIMER_BUSY_Msk (0x200UL)       /*!< TIM_TIMER_BUSY (Bitfield-Mask: 0x01)                  */
#define TIMER3_TIMER3_STATUS_REG_TIM_IRQ_STATUS_Pos (8UL)           /*!< TIM_IRQ_STATUS (Bit 8)                                */
#define TIMER3_TIMER3_STATUS_REG_TIM_IRQ_STATUS_Msk (0x100UL)       /*!< TIM_IRQ_STATUS (Bitfield-Mask: 0x01)                  */
#define TIMER3_TIMER3_STATUS_REG_TIM_ONESHOT_PHASE_Pos (2UL)        /*!< TIM_ONESHOT_PHASE (Bit 2)                             */
#define TIMER3_TIMER3_STATUS_REG_TIM_ONESHOT_PHASE_Msk (0xcUL)      /*!< TIM_ONESHOT_PHASE (Bitfield-Mask: 0x03)               */
#define TIMER3_TIMER3_STATUS_REG_TIM_IN2_STATE_Pos (1UL)            /*!< TIM_IN2_STATE (Bit 1)                                 */
#define TIMER3_TIMER3_STATUS_REG_TIM_IN2_STATE_Msk (0x2UL)          /*!< TIM_IN2_STATE (Bitfield-Mask: 0x01)                   */
#define TIMER3_TIMER3_STATUS_REG_TIM_IN1_STATE_Pos (0UL)            /*!< TIM_IN1_STATE (Bit 0)                                 */
#define TIMER3_TIMER3_STATUS_REG_TIM_IN1_STATE_Msk (0x1UL)          /*!< TIM_IN1_STATE (Bitfield-Mask: 0x01)                   */
/* =================================================  TIMER3_TIMER_VAL_REG  ================================================== */
#define TIMER3_TIMER3_TIMER_VAL_REG_TIM_TIMER_VALUE_Pos (0UL)       /*!< TIM_TIMER_VALUE (Bit 0)                               */
#define TIMER3_TIMER3_TIMER_VAL_REG_TIM_TIMER_VALUE_Msk (0xffffffUL) /*!< TIM_TIMER_VALUE (Bitfield-Mask: 0xffffff)            */


/* =========================================================================================================================== */
/* ================                                          TIMER4                                           ================ */
/* =========================================================================================================================== */

/* ===============================================  TIMER4_CAPTURE_GPIO1_REG  ================================================ */
#define TIMER4_TIMER4_CAPTURE_GPIO1_REG_TIM_CAPTURE_GPIO1_Pos (0UL) /*!< TIM_CAPTURE_GPIO1 (Bit 0)                             */
#define TIMER4_TIMER4_CAPTURE_GPIO1_REG_TIM_CAPTURE_GPIO1_Msk (0xffffffUL) /*!< TIM_CAPTURE_GPIO1 (Bitfield-Mask: 0xffffff)    */
/* ===============================================  TIMER4_CAPTURE_GPIO2_REG  ================================================ */
#define TIMER4_TIMER4_CAPTURE_GPIO2_REG_TIM_CAPTURE_GPIO2_Pos (0UL) /*!< TIM_CAPTURE_GPIO2 (Bit 0)                             */
#define TIMER4_TIMER4_CAPTURE_GPIO2_REG_TIM_CAPTURE_GPIO2_Msk (0xffffffUL) /*!< TIM_CAPTURE_GPIO2 (Bitfield-Mask: 0xffffff)    */
/* ===============================================  TIMER4_CAPTURE_GPIO3_REG  ================================================ */
#define TIMER4_TIMER4_CAPTURE_GPIO3_REG_TIM_CAPTURE_GPIO3_Pos (0UL) /*!< TIM_CAPTURE_GPIO3 (Bit 0)                             */
#define TIMER4_TIMER4_CAPTURE_GPIO3_REG_TIM_CAPTURE_GPIO3_Msk (0xffffffUL) /*!< TIM_CAPTURE_GPIO3 (Bitfield-Mask: 0xffffff)    */
/* ===============================================  TIMER4_CAPTURE_GPIO4_REG  ================================================ */
#define TIMER4_TIMER4_CAPTURE_GPIO4_REG_TIM_CAPTURE_GPIO4_Pos (0UL) /*!< TIM_CAPTURE_GPIO4 (Bit 0)                             */
#define TIMER4_TIMER4_CAPTURE_GPIO4_REG_TIM_CAPTURE_GPIO4_Msk (0xffffffUL) /*!< TIM_CAPTURE_GPIO4 (Bitfield-Mask: 0xffffff)    */
/* ==============================================  TIMER4_CLEAR_GPIO_EVENT_REG  ============================================== */
#define TIMER4_TIMER4_CLEAR_GPIO_EVENT_REG_TIM_CLEAR_GPIO4_EVENT_Pos (3UL) /*!< TIM_CLEAR_GPIO4_EVENT (Bit 3)                  */
#define TIMER4_TIMER4_CLEAR_GPIO_EVENT_REG_TIM_CLEAR_GPIO4_EVENT_Msk (0x8UL) /*!< TIM_CLEAR_GPIO4_EVENT (Bitfield-Mask: 0x01)  */
#define TIMER4_TIMER4_CLEAR_GPIO_EVENT_REG_TIM_CLEAR_GPIO3_EVENT_Pos (2UL) /*!< TIM_CLEAR_GPIO3_EVENT (Bit 2)                  */
#define TIMER4_TIMER4_CLEAR_GPIO_EVENT_REG_TIM_CLEAR_GPIO3_EVENT_Msk (0x4UL) /*!< TIM_CLEAR_GPIO3_EVENT (Bitfield-Mask: 0x01)  */
#define TIMER4_TIMER4_CLEAR_GPIO_EVENT_REG_TIM_CLEAR_GPIO2_EVENT_Pos (1UL) /*!< TIM_CLEAR_GPIO2_EVENT (Bit 1)                  */
#define TIMER4_TIMER4_CLEAR_GPIO_EVENT_REG_TIM_CLEAR_GPIO2_EVENT_Msk (0x2UL) /*!< TIM_CLEAR_GPIO2_EVENT (Bitfield-Mask: 0x01)  */
#define TIMER4_TIMER4_CLEAR_GPIO_EVENT_REG_TIM_CLEAR_GPIO1_EVENT_Pos (0UL) /*!< TIM_CLEAR_GPIO1_EVENT (Bit 0)                  */
#define TIMER4_TIMER4_CLEAR_GPIO_EVENT_REG_TIM_CLEAR_GPIO1_EVENT_Msk (0x1UL) /*!< TIM_CLEAR_GPIO1_EVENT (Bitfield-Mask: 0x01)  */
/* ==============================================  TIMER4_CLEAR_IRQ_PULSE_REG  =============================================== */
#define TIMER4_TIMER4_CLEAR_IRQ_PULSE_REG_TIM_CLEAR_PULSE_IRQ_Pos (0UL) /*!< TIM_CLEAR_PULSE_IRQ (Bit 0)                       */
#define TIMER4_TIMER4_CLEAR_IRQ_PULSE_REG_TIM_CLEAR_PULSE_IRQ_Msk (0x1UL) /*!< TIM_CLEAR_PULSE_IRQ (Bitfield-Mask: 0x01)       */
/* =================================================  TIMER4_CLEAR_IRQ_REG  ================================================== */
#define TIMER4_TIMER4_CLEAR_IRQ_REG_TIM_CLEAR_IRQ_Pos (0UL)         /*!< TIM_CLEAR_IRQ (Bit 0)                                 */
#define TIMER4_TIMER4_CLEAR_IRQ_REG_TIM_CLEAR_IRQ_Msk (0x1UL)       /*!< TIM_CLEAR_IRQ (Bitfield-Mask: 0x01)                   */
/* ====================================================  TIMER4_CTRL_REG  ==================================================== */
#define TIMER4_TIMER4_CTRL_REG_TIM_SINGLE_EVENT_CAPTURE_Pos (20UL)  /*!< TIM_SINGLE_EVENT_CAPTURE (Bit 20)                     */
#define TIMER4_TIMER4_CTRL_REG_TIM_SINGLE_EVENT_CAPTURE_Msk (0x100000UL) /*!< TIM_SINGLE_EVENT_CAPTURE (Bitfield-Mask: 0x01)   */
#define TIMER4_TIMER4_CTRL_REG_TIM_EDGE_DET_CNT_FALL_EN_Pos (19UL)  /*!< TIM_EDGE_DET_CNT_FALL_EN (Bit 19)                     */
#define TIMER4_TIMER4_CTRL_REG_TIM_EDGE_DET_CNT_FALL_EN_Msk (0x80000UL) /*!< TIM_EDGE_DET_CNT_FALL_EN (Bitfield-Mask: 0x01)    */
#define TIMER4_TIMER4_CTRL_REG_TIM_EDGE_DET_CNT_EN_Pos (18UL)       /*!< TIM_EDGE_DET_CNT_EN (Bit 18)                          */
#define TIMER4_TIMER4_CTRL_REG_TIM_EDGE_DET_CNT_EN_Msk (0x40000UL)  /*!< TIM_EDGE_DET_CNT_EN (Bitfield-Mask: 0x01)             */
#define TIMER4_TIMER4_CTRL_REG_TIM_ONESHOT_SWITCH_Pos (17UL)        /*!< TIM_ONESHOT_SWITCH (Bit 17)                           */
#define TIMER4_TIMER4_CTRL_REG_TIM_ONESHOT_SWITCH_Msk (0x20000UL)   /*!< TIM_ONESHOT_SWITCH (Bitfield-Mask: 0x01)              */
#define TIMER4_TIMER4_CTRL_REG_TIM_ONESHOT_TRIGGER_Pos (15UL)       /*!< TIM_ONESHOT_TRIGGER (Bit 15)                          */
#define TIMER4_TIMER4_CTRL_REG_TIM_ONESHOT_TRIGGER_Msk (0x18000UL)  /*!< TIM_ONESHOT_TRIGGER (Bitfield-Mask: 0x03)             */
#define TIMER4_TIMER4_CTRL_REG_TIM_CAP_GPIO4_IRQ_EN_Pos (14UL)      /*!< TIM_CAP_GPIO4_IRQ_EN (Bit 14)                         */
#define TIMER4_TIMER4_CTRL_REG_TIM_CAP_GPIO4_IRQ_EN_Msk (0x4000UL)  /*!< TIM_CAP_GPIO4_IRQ_EN (Bitfield-Mask: 0x01)            */
#define TIMER4_TIMER4_CTRL_REG_TIM_CAP_GPIO3_IRQ_EN_Pos (13UL)      /*!< TIM_CAP_GPIO3_IRQ_EN (Bit 13)                         */
#define TIMER4_TIMER4_CTRL_REG_TIM_CAP_GPIO3_IRQ_EN_Msk (0x2000UL)  /*!< TIM_CAP_GPIO3_IRQ_EN (Bitfield-Mask: 0x01)            */
#define TIMER4_TIMER4_CTRL_REG_TIM_CAP_GPIO2_IRQ_EN_Pos (12UL)      /*!< TIM_CAP_GPIO2_IRQ_EN (Bit 12)                         */
#define TIMER4_TIMER4_CTRL_REG_TIM_CAP_GPIO2_IRQ_EN_Msk (0x1000UL)  /*!< TIM_CAP_GPIO2_IRQ_EN (Bitfield-Mask: 0x01)            */
#define TIMER4_TIMER4_CTRL_REG_TIM_CAP_GPIO1_IRQ_EN_Pos (11UL)      /*!< TIM_CAP_GPIO1_IRQ_EN (Bit 11)                         */
#define TIMER4_TIMER4_CTRL_REG_TIM_CAP_GPIO1_IRQ_EN_Msk (0x800UL)   /*!< TIM_CAP_GPIO1_IRQ_EN (Bitfield-Mask: 0x01)            */
#define TIMER4_TIMER4_CTRL_REG_TIM_IN4_EVENT_FALL_EN_Pos (10UL)     /*!< TIM_IN4_EVENT_FALL_EN (Bit 10)                        */
#define TIMER4_TIMER4_CTRL_REG_TIM_IN4_EVENT_FALL_EN_Msk (0x400UL)  /*!< TIM_IN4_EVENT_FALL_EN (Bitfield-Mask: 0x01)           */
#define TIMER4_TIMER4_CTRL_REG_TIM_IN3_EVENT_FALL_EN_Pos (9UL)      /*!< TIM_IN3_EVENT_FALL_EN (Bit 9)                         */
#define TIMER4_TIMER4_CTRL_REG_TIM_IN3_EVENT_FALL_EN_Msk (0x200UL)  /*!< TIM_IN3_EVENT_FALL_EN (Bitfield-Mask: 0x01)           */
#define TIMER4_TIMER4_CTRL_REG_TIM_CLK_EN_Pos (8UL)                 /*!< TIM_CLK_EN (Bit 8)                                    */
#define TIMER4_TIMER4_CTRL_REG_TIM_CLK_EN_Msk (0x100UL)             /*!< TIM_CLK_EN (Bitfield-Mask: 0x01)                      */
#define TIMER4_TIMER4_CTRL_REG_TIM_SYS_CLK_EN_Pos (7UL)             /*!< TIM_SYS_CLK_EN (Bit 7)                                */
#define TIMER4_TIMER4_CTRL_REG_TIM_SYS_CLK_EN_Msk (0x80UL)          /*!< TIM_SYS_CLK_EN (Bitfield-Mask: 0x01)                  */
#define TIMER4_TIMER4_CTRL_REG_TIM_FREE_RUN_MODE_EN_Pos (6UL)       /*!< TIM_FREE_RUN_MODE_EN (Bit 6)                          */
#define TIMER4_TIMER4_CTRL_REG_TIM_FREE_RUN_MODE_EN_Msk (0x40UL)    /*!< TIM_FREE_RUN_MODE_EN (Bitfield-Mask: 0x01)            */
#define TIMER4_TIMER4_CTRL_REG_TIM_IRQ_EN_Pos (5UL)                 /*!< TIM_IRQ_EN (Bit 5)                                    */
#define TIMER4_TIMER4_CTRL_REG_TIM_IRQ_EN_Msk (0x20UL)              /*!< TIM_IRQ_EN (Bitfield-Mask: 0x01)                      */
#define TIMER4_TIMER4_CTRL_REG_TIM_IN2_EVENT_FALL_EN_Pos (4UL)      /*!< TIM_IN2_EVENT_FALL_EN (Bit 4)                         */
#define TIMER4_TIMER4_CTRL_REG_TIM_IN2_EVENT_FALL_EN_Msk (0x10UL)   /*!< TIM_IN2_EVENT_FALL_EN (Bitfield-Mask: 0x01)           */
#define TIMER4_TIMER4_CTRL_REG_TIM_IN1_EVENT_FALL_EN_Pos (3UL)      /*!< TIM_IN1_EVENT_FALL_EN (Bit 3)                         */
#define TIMER4_TIMER4_CTRL_REG_TIM_IN1_EVENT_FALL_EN_Msk (0x8UL)    /*!< TIM_IN1_EVENT_FALL_EN (Bitfield-Mask: 0x01)           */
#define TIMER4_TIMER4_CTRL_REG_TIM_COUNT_DOWN_EN_Pos (2UL)          /*!< TIM_COUNT_DOWN_EN (Bit 2)                             */
#define TIMER4_TIMER4_CTRL_REG_TIM_COUNT_DOWN_EN_Msk (0x4UL)        /*!< TIM_COUNT_DOWN_EN (Bitfield-Mask: 0x01)               */
#define TIMER4_TIMER4_CTRL_REG_TIM_ONESHOT_MODE_EN_Pos (1UL)        /*!< TIM_ONESHOT_MODE_EN (Bit 1)                           */
#define TIMER4_TIMER4_CTRL_REG_TIM_ONESHOT_MODE_EN_Msk (0x2UL)      /*!< TIM_ONESHOT_MODE_EN (Bitfield-Mask: 0x01)             */
#define TIMER4_TIMER4_CTRL_REG_TIM_EN_Pos (0UL)                     /*!< TIM_EN (Bit 0)                                        */
#define TIMER4_TIMER4_CTRL_REG_TIM_EN_Msk (0x1UL)                   /*!< TIM_EN (Bitfield-Mask: 0x01)                          */
/* =================================================  TIMER4_GPIO1_CONF_REG  ================================================= */
#define TIMER4_TIMER4_GPIO1_CONF_REG_TIM_GPIO1_CONF_Pos (0UL)       /*!< TIM_GPIO1_CONF (Bit 0)                                */
#define TIMER4_TIMER4_GPIO1_CONF_REG_TIM_GPIO1_CONF_Msk (0x3fUL)    /*!< TIM_GPIO1_CONF (Bitfield-Mask: 0x3f)                  */
/* =================================================  TIMER4_GPIO2_CONF_REG  ================================================= */
#define TIMER4_TIMER4_GPIO2_CONF_REG_TIM_GPIO2_CONF_Pos (0UL)       /*!< TIM_GPIO2_CONF (Bit 0)                                */
#define TIMER4_TIMER4_GPIO2_CONF_REG_TIM_GPIO2_CONF_Msk (0x3fUL)    /*!< TIM_GPIO2_CONF (Bitfield-Mask: 0x3f)                  */
/* =================================================  TIMER4_GPIO3_CONF_REG  ================================================= */
#define TIMER4_TIMER4_GPIO3_CONF_REG_TIM_GPIO3_CONF_Pos (0UL)       /*!< TIM_GPIO3_CONF (Bit 0)                                */
#define TIMER4_TIMER4_GPIO3_CONF_REG_TIM_GPIO3_CONF_Msk (0x3fUL)    /*!< TIM_GPIO3_CONF (Bitfield-Mask: 0x3f)                  */
/* =================================================  TIMER4_GPIO4_CONF_REG  ================================================= */
#define TIMER4_TIMER4_GPIO4_CONF_REG_TIM_GPIO4_CONF_Pos (0UL)       /*!< TIM_GPIO4_CONF (Bit 0)                                */
#define TIMER4_TIMER4_GPIO4_CONF_REG_TIM_GPIO4_CONF_Msk (0x3fUL)    /*!< TIM_GPIO4_CONF (Bitfield-Mask: 0x3f)                  */
/* ==============================================  TIMER4_ONESHOT_TRIGGER_REG  =============================================== */
#define TIMER4_TIMER4_ONESHOT_TRIGGER_REG_TIM_ONESHOT_TRIGGER_SW_Pos (0UL) /*!< TIM_ONESHOT_TRIGGER_SW (Bit 0)                 */
#define TIMER4_TIMER4_ONESHOT_TRIGGER_REG_TIM_ONESHOT_TRIGGER_SW_Msk (0x1UL) /*!< TIM_ONESHOT_TRIGGER_SW (Bitfield-Mask: 0x01) */
/* ===============================================  TIMER4_PRESCALER_VAL_REG  ================================================ */
#define TIMER4_TIMER4_PRESCALER_VAL_REG_TIM_PRESCALER_VAL_Pos (0UL) /*!< TIM_PRESCALER_VAL (Bit 0)                             */
#define TIMER4_TIMER4_PRESCALER_VAL_REG_TIM_PRESCALER_VAL_Msk (0x1fUL) /*!< TIM_PRESCALER_VAL (Bitfield-Mask: 0x1f)            */
/* ===============================================  TIMER4_PULSE_CNT_CTRL_REG  =============================================== */
#define TIMER4_TIMER4_PULSE_CNT_CTRL_REG_PULSE_CNT_GPIO_SEL_Pos (24UL) /*!< PULSE_CNT_GPIO_SEL (Bit 24)                        */
#define TIMER4_TIMER4_PULSE_CNT_CTRL_REG_PULSE_CNT_GPIO_SEL_Msk (0x3f000000UL) /*!< PULSE_CNT_GPIO_SEL (Bitfield-Mask: 0x3f)   */
#define TIMER4_TIMER4_PULSE_CNT_CTRL_REG_PULSE_CNT_THRESHOLD_Pos (0UL) /*!< PULSE_CNT_THRESHOLD (Bit 0)                        */
#define TIMER4_TIMER4_PULSE_CNT_CTRL_REG_PULSE_CNT_THRESHOLD_Msk (0xffffffUL) /*!< PULSE_CNT_THRESHOLD (Bitfield-Mask: 0xffffff) */
/* ==================================================  TIMER4_PWM_CTRL_REG  ================================================== */
#define TIMER4_TIMER4_PWM_CTRL_REG_TIM_PWM_DC_Pos (16UL)            /*!< TIM_PWM_DC (Bit 16)                                   */
#define TIMER4_TIMER4_PWM_CTRL_REG_TIM_PWM_DC_Msk (0xffff0000UL)    /*!< TIM_PWM_DC (Bitfield-Mask: 0xffff)                    */
#define TIMER4_TIMER4_PWM_CTRL_REG_TIM_PWM_FREQ_Pos (0UL)           /*!< TIM_PWM_FREQ (Bit 0)                                  */
#define TIMER4_TIMER4_PWM_CTRL_REG_TIM_PWM_FREQ_Msk (0xffffUL)      /*!< TIM_PWM_FREQ (Bitfield-Mask: 0xffff)                  */
/* ==================================================  TIMER4_SETTINGS_REG  ================================================== */
#define TIMER4_TIMER4_SETTINGS_REG_TIM_PRESCALER_Pos (24UL)         /*!< TIM_PRESCALER (Bit 24)                                */
#define TIMER4_TIMER4_SETTINGS_REG_TIM_PRESCALER_Msk (0x1f000000UL) /*!< TIM_PRESCALER (Bitfield-Mask: 0x1f)                   */
#define TIMER4_TIMER4_SETTINGS_REG_TIM_RELOAD_Pos (0UL)             /*!< TIM_RELOAD (Bit 0)                                    */
#define TIMER4_TIMER4_SETTINGS_REG_TIM_RELOAD_Msk (0xffffffUL)      /*!< TIM_RELOAD (Bitfield-Mask: 0xffffff)                  */
/* =================================================  TIMER4_SHOTWIDTH_REG  ================================================== */
#define TIMER4_TIMER4_SHOTWIDTH_REG_TIM_SHOTWIDTH_Pos (0UL)         /*!< TIM_SHOTWIDTH (Bit 0)                                 */
#define TIMER4_TIMER4_SHOTWIDTH_REG_TIM_SHOTWIDTH_Msk (0xffffffUL)  /*!< TIM_SHOTWIDTH (Bitfield-Mask: 0xffffff)               */
/* ===================================================  TIMER4_STATUS_REG  =================================================== */
#define TIMER4_TIMER4_STATUS_REG_TIM_IRQ_PULSE_STATUS_Pos (14UL)    /*!< TIM_IRQ_PULSE_STATUS (Bit 14)                         */
#define TIMER4_TIMER4_STATUS_REG_TIM_IRQ_PULSE_STATUS_Msk (0x4000UL) /*!< TIM_IRQ_PULSE_STATUS (Bitfield-Mask: 0x01)           */
#define TIMER4_TIMER4_STATUS_REG_TIM_IN4_STATE_Pos (13UL)           /*!< TIM_IN4_STATE (Bit 13)                                */
#define TIMER4_TIMER4_STATUS_REG_TIM_IN4_STATE_Msk (0x2000UL)       /*!< TIM_IN4_STATE (Bitfield-Mask: 0x01)                   */
#define TIMER4_TIMER4_STATUS_REG_TIM_IN3_STATE_Pos (12UL)           /*!< TIM_IN3_STATE (Bit 12)                                */
#define TIMER4_TIMER4_STATUS_REG_TIM_IN3_STATE_Msk (0x1000UL)       /*!< TIM_IN3_STATE (Bitfield-Mask: 0x01)                   */
#define TIMER4_TIMER4_STATUS_REG_TIM_SWITCHED_TO_DIVN_CLK_Pos (11UL) /*!< TIM_SWITCHED_TO_DIVN_CLK (Bit 11)                    */
#define TIMER4_TIMER4_STATUS_REG_TIM_SWITCHED_TO_DIVN_CLK_Msk (0x800UL) /*!< TIM_SWITCHED_TO_DIVN_CLK (Bitfield-Mask: 0x01)    */
#define TIMER4_TIMER4_STATUS_REG_TIM_PWM_BUSY_Pos (10UL)            /*!< TIM_PWM_BUSY (Bit 10)                                 */
#define TIMER4_TIMER4_STATUS_REG_TIM_PWM_BUSY_Msk (0x400UL)         /*!< TIM_PWM_BUSY (Bitfield-Mask: 0x01)                    */
#define TIMER4_TIMER4_STATUS_REG_TIM_TIMER_BUSY_Pos (9UL)           /*!< TIM_TIMER_BUSY (Bit 9)                                */
#define TIMER4_TIMER4_STATUS_REG_TIM_TIMER_BUSY_Msk (0x200UL)       /*!< TIM_TIMER_BUSY (Bitfield-Mask: 0x01)                  */
#define TIMER4_TIMER4_STATUS_REG_TIM_IRQ_STATUS_Pos (8UL)           /*!< TIM_IRQ_STATUS (Bit 8)                                */
#define TIMER4_TIMER4_STATUS_REG_TIM_IRQ_STATUS_Msk (0x100UL)       /*!< TIM_IRQ_STATUS (Bitfield-Mask: 0x01)                  */
#define TIMER4_TIMER4_STATUS_REG_TIM_GPIO4_EVENT_PENDING_Pos (7UL)  /*!< TIM_GPIO4_EVENT_PENDING (Bit 7)                       */
#define TIMER4_TIMER4_STATUS_REG_TIM_GPIO4_EVENT_PENDING_Msk (0x80UL) /*!< TIM_GPIO4_EVENT_PENDING (Bitfield-Mask: 0x01)       */
#define TIMER4_TIMER4_STATUS_REG_TIM_GPIO3_EVENT_PENDING_Pos (6UL)  /*!< TIM_GPIO3_EVENT_PENDING (Bit 6)                       */
#define TIMER4_TIMER4_STATUS_REG_TIM_GPIO3_EVENT_PENDING_Msk (0x40UL) /*!< TIM_GPIO3_EVENT_PENDING (Bitfield-Mask: 0x01)       */
#define TIMER4_TIMER4_STATUS_REG_TIM_GPIO2_EVENT_PENDING_Pos (5UL)  /*!< TIM_GPIO2_EVENT_PENDING (Bit 5)                       */
#define TIMER4_TIMER4_STATUS_REG_TIM_GPIO2_EVENT_PENDING_Msk (0x20UL) /*!< TIM_GPIO2_EVENT_PENDING (Bitfield-Mask: 0x01)       */
#define TIMER4_TIMER4_STATUS_REG_TIM_GPIO1_EVENT_PENDING_Pos (4UL)  /*!< TIM_GPIO1_EVENT_PENDING (Bit 4)                       */
#define TIMER4_TIMER4_STATUS_REG_TIM_GPIO1_EVENT_PENDING_Msk (0x10UL) /*!< TIM_GPIO1_EVENT_PENDING (Bitfield-Mask: 0x01)       */
#define TIMER4_TIMER4_STATUS_REG_TIM_ONESHOT_PHASE_Pos (2UL)        /*!< TIM_ONESHOT_PHASE (Bit 2)                             */
#define TIMER4_TIMER4_STATUS_REG_TIM_ONESHOT_PHASE_Msk (0xcUL)      /*!< TIM_ONESHOT_PHASE (Bitfield-Mask: 0x03)               */
#define TIMER4_TIMER4_STATUS_REG_TIM_IN2_STATE_Pos (1UL)            /*!< TIM_IN2_STATE (Bit 1)                                 */
#define TIMER4_TIMER4_STATUS_REG_TIM_IN2_STATE_Msk (0x2UL)          /*!< TIM_IN2_STATE (Bitfield-Mask: 0x01)                   */
#define TIMER4_TIMER4_STATUS_REG_TIM_IN1_STATE_Pos (0UL)            /*!< TIM_IN1_STATE (Bit 0)                                 */
#define TIMER4_TIMER4_STATUS_REG_TIM_IN1_STATE_Msk (0x1UL)          /*!< TIM_IN1_STATE (Bitfield-Mask: 0x01)                   */
/* =================================================  TIMER4_TIMER_VAL_REG  ================================================== */
#define TIMER4_TIMER4_TIMER_VAL_REG_TIM_TIMER_VALUE_Pos (0UL)       /*!< TIM_TIMER_VALUE (Bit 0)                               */
#define TIMER4_TIMER4_TIMER_VAL_REG_TIM_TIMER_VALUE_Msk (0xffffffUL) /*!< TIM_TIMER_VALUE (Bitfield-Mask: 0xffffff)            */


/* =========================================================================================================================== */
/* ================                                          TIMER5                                           ================ */
/* =========================================================================================================================== */

/* ===============================================  TIMER5_CAPTURE_GPIO1_REG  ================================================ */
#define TIMER5_TIMER5_CAPTURE_GPIO1_REG_TIM_CAPTURE_GPIO1_Pos (0UL) /*!< TIM_CAPTURE_GPIO1 (Bit 0)                             */
#define TIMER5_TIMER5_CAPTURE_GPIO1_REG_TIM_CAPTURE_GPIO1_Msk (0xffffffUL) /*!< TIM_CAPTURE_GPIO1 (Bitfield-Mask: 0xffffff)    */
/* ===============================================  TIMER5_CAPTURE_GPIO2_REG  ================================================ */
#define TIMER5_TIMER5_CAPTURE_GPIO2_REG_TIM_CAPTURE_GPIO2_Pos (0UL) /*!< TIM_CAPTURE_GPIO2 (Bit 0)                             */
#define TIMER5_TIMER5_CAPTURE_GPIO2_REG_TIM_CAPTURE_GPIO2_Msk (0xffffffUL) /*!< TIM_CAPTURE_GPIO2 (Bitfield-Mask: 0xffffff)    */
/* ==============================================  TIMER5_CLEAR_IRQ_PULSE_REG  =============================================== */
#define TIMER5_TIMER5_CLEAR_IRQ_PULSE_REG_TIM_CLEAR_PULSE_IRQ_Pos (0UL) /*!< TIM_CLEAR_PULSE_IRQ (Bit 0)                       */
#define TIMER5_TIMER5_CLEAR_IRQ_PULSE_REG_TIM_CLEAR_PULSE_IRQ_Msk (0x1UL) /*!< TIM_CLEAR_PULSE_IRQ (Bitfield-Mask: 0x01)       */
/* =================================================  TIMER5_CLEAR_IRQ_REG  ================================================== */
#define TIMER5_TIMER5_CLEAR_IRQ_REG_TIM_CLEAR_IRQ_Pos (0UL)         /*!< TIM_CLEAR_IRQ (Bit 0)                                 */
#define TIMER5_TIMER5_CLEAR_IRQ_REG_TIM_CLEAR_IRQ_Msk (0x1UL)       /*!< TIM_CLEAR_IRQ (Bitfield-Mask: 0x01)                   */
/* ====================================================  TIMER5_CTRL_REG  ==================================================== */
#define TIMER5_TIMER5_CTRL_REG_TIM_EDGE_DET_CNT_FALL_EN_Pos (19UL)  /*!< TIM_EDGE_DET_CNT_FALL_EN (Bit 19)                     */
#define TIMER5_TIMER5_CTRL_REG_TIM_EDGE_DET_CNT_FALL_EN_Msk (0x80000UL) /*!< TIM_EDGE_DET_CNT_FALL_EN (Bitfield-Mask: 0x01)    */
#define TIMER5_TIMER5_CTRL_REG_TIM_EDGE_DET_CNT_EN_Pos (18UL)       /*!< TIM_EDGE_DET_CNT_EN (Bit 18)                          */
#define TIMER5_TIMER5_CTRL_REG_TIM_EDGE_DET_CNT_EN_Msk (0x40000UL)  /*!< TIM_EDGE_DET_CNT_EN (Bitfield-Mask: 0x01)             */
#define TIMER5_TIMER5_CTRL_REG_TIM_CLK_EN_Pos (8UL)                 /*!< TIM_CLK_EN (Bit 8)                                    */
#define TIMER5_TIMER5_CTRL_REG_TIM_CLK_EN_Msk (0x100UL)             /*!< TIM_CLK_EN (Bitfield-Mask: 0x01)                      */
#define TIMER5_TIMER5_CTRL_REG_TIM_SYS_CLK_EN_Pos (7UL)             /*!< TIM_SYS_CLK_EN (Bit 7)                                */
#define TIMER5_TIMER5_CTRL_REG_TIM_SYS_CLK_EN_Msk (0x80UL)          /*!< TIM_SYS_CLK_EN (Bitfield-Mask: 0x01)                  */
#define TIMER5_TIMER5_CTRL_REG_TIM_FREE_RUN_MODE_EN_Pos (6UL)       /*!< TIM_FREE_RUN_MODE_EN (Bit 6)                          */
#define TIMER5_TIMER5_CTRL_REG_TIM_FREE_RUN_MODE_EN_Msk (0x40UL)    /*!< TIM_FREE_RUN_MODE_EN (Bitfield-Mask: 0x01)            */
#define TIMER5_TIMER5_CTRL_REG_TIM_IRQ_EN_Pos (5UL)                 /*!< TIM_IRQ_EN (Bit 5)                                    */
#define TIMER5_TIMER5_CTRL_REG_TIM_IRQ_EN_Msk (0x20UL)              /*!< TIM_IRQ_EN (Bitfield-Mask: 0x01)                      */
#define TIMER5_TIMER5_CTRL_REG_TIM_IN2_EVENT_FALL_EN_Pos (4UL)      /*!< TIM_IN2_EVENT_FALL_EN (Bit 4)                         */
#define TIMER5_TIMER5_CTRL_REG_TIM_IN2_EVENT_FALL_EN_Msk (0x10UL)   /*!< TIM_IN2_EVENT_FALL_EN (Bitfield-Mask: 0x01)           */
#define TIMER5_TIMER5_CTRL_REG_TIM_IN1_EVENT_FALL_EN_Pos (3UL)      /*!< TIM_IN1_EVENT_FALL_EN (Bit 3)                         */
#define TIMER5_TIMER5_CTRL_REG_TIM_IN1_EVENT_FALL_EN_Msk (0x8UL)    /*!< TIM_IN1_EVENT_FALL_EN (Bitfield-Mask: 0x01)           */
#define TIMER5_TIMER5_CTRL_REG_TIM_COUNT_DOWN_EN_Pos (2UL)          /*!< TIM_COUNT_DOWN_EN (Bit 2)                             */
#define TIMER5_TIMER5_CTRL_REG_TIM_COUNT_DOWN_EN_Msk (0x4UL)        /*!< TIM_COUNT_DOWN_EN (Bitfield-Mask: 0x01)               */
#define TIMER5_TIMER5_CTRL_REG_TIM_ONESHOT_MODE_EN_Pos (1UL)        /*!< TIM_ONESHOT_MODE_EN (Bit 1)                           */
#define TIMER5_TIMER5_CTRL_REG_TIM_ONESHOT_MODE_EN_Msk (0x2UL)      /*!< TIM_ONESHOT_MODE_EN (Bitfield-Mask: 0x01)             */
#define TIMER5_TIMER5_CTRL_REG_TIM_EN_Pos (0UL)                     /*!< TIM_EN (Bit 0)                                        */
#define TIMER5_TIMER5_CTRL_REG_TIM_EN_Msk (0x1UL)                   /*!< TIM_EN (Bitfield-Mask: 0x01)                          */
/* =================================================  TIMER5_GPIO1_CONF_REG  ================================================= */
#define TIMER5_TIMER5_GPIO1_CONF_REG_TIM_GPIO1_CONF_Pos (0UL)       /*!< TIM_GPIO1_CONF (Bit 0)                                */
#define TIMER5_TIMER5_GPIO1_CONF_REG_TIM_GPIO1_CONF_Msk (0x3fUL)    /*!< TIM_GPIO1_CONF (Bitfield-Mask: 0x3f)                  */
/* =================================================  TIMER5_GPIO2_CONF_REG  ================================================= */
#define TIMER5_TIMER5_GPIO2_CONF_REG_TIM_GPIO2_CONF_Pos (0UL)       /*!< TIM_GPIO2_CONF (Bit 0)                                */
#define TIMER5_TIMER5_GPIO2_CONF_REG_TIM_GPIO2_CONF_Msk (0x3fUL)    /*!< TIM_GPIO2_CONF (Bitfield-Mask: 0x3f)                  */
/* ===============================================  TIMER5_PRESCALER_VAL_REG  ================================================ */
#define TIMER5_TIMER5_PRESCALER_VAL_REG_TIM_PRESCALER_VAL_Pos (0UL) /*!< TIM_PRESCALER_VAL (Bit 0)                             */
#define TIMER5_TIMER5_PRESCALER_VAL_REG_TIM_PRESCALER_VAL_Msk (0x1fUL) /*!< TIM_PRESCALER_VAL (Bitfield-Mask: 0x1f)            */
/* ===============================================  TIMER5_PULSE_CNT_CTRL_REG  =============================================== */
#define TIMER5_TIMER5_PULSE_CNT_CTRL_REG_PULSE_CNT_GPIO_SEL_Pos (24UL) /*!< PULSE_CNT_GPIO_SEL (Bit 24)                        */
#define TIMER5_TIMER5_PULSE_CNT_CTRL_REG_PULSE_CNT_GPIO_SEL_Msk (0x3f000000UL) /*!< PULSE_CNT_GPIO_SEL (Bitfield-Mask: 0x3f)   */
#define TIMER5_TIMER5_PULSE_CNT_CTRL_REG_PULSE_CNT_THRESHOLD_Pos (0UL) /*!< PULSE_CNT_THRESHOLD (Bit 0)                        */
#define TIMER5_TIMER5_PULSE_CNT_CTRL_REG_PULSE_CNT_THRESHOLD_Msk (0xffffffUL) /*!< PULSE_CNT_THRESHOLD (Bitfield-Mask: 0xffffff) */
/* ==================================================  TIMER5_PWM_CTRL_REG  ================================================== */
#define TIMER5_TIMER5_PWM_CTRL_REG_TIM_PWM_DC_Pos (16UL)            /*!< TIM_PWM_DC (Bit 16)                                   */
#define TIMER5_TIMER5_PWM_CTRL_REG_TIM_PWM_DC_Msk (0xffff0000UL)    /*!< TIM_PWM_DC (Bitfield-Mask: 0xffff)                    */
#define TIMER5_TIMER5_PWM_CTRL_REG_TIM_PWM_FREQ_Pos (0UL)           /*!< TIM_PWM_FREQ (Bit 0)                                  */
#define TIMER5_TIMER5_PWM_CTRL_REG_TIM_PWM_FREQ_Msk (0xffffUL)      /*!< TIM_PWM_FREQ (Bitfield-Mask: 0xffff)                  */
/* ==================================================  TIMER5_SETTINGS_REG  ================================================== */
#define TIMER5_TIMER5_SETTINGS_REG_TIM_PRESCALER_Pos (24UL)         /*!< TIM_PRESCALER (Bit 24)                                */
#define TIMER5_TIMER5_SETTINGS_REG_TIM_PRESCALER_Msk (0x1f000000UL) /*!< TIM_PRESCALER (Bitfield-Mask: 0x1f)                   */
#define TIMER5_TIMER5_SETTINGS_REG_TIM_RELOAD_Pos (0UL)             /*!< TIM_RELOAD (Bit 0)                                    */
#define TIMER5_TIMER5_SETTINGS_REG_TIM_RELOAD_Msk (0xffffffUL)      /*!< TIM_RELOAD (Bitfield-Mask: 0xffffff)                  */
/* =================================================  TIMER5_SHOTWIDTH_REG  ================================================== */
#define TIMER5_TIMER5_SHOTWIDTH_REG_TIM_SHOTWIDTH_Pos (0UL)         /*!< TIM_SHOTWIDTH (Bit 0)                                 */
#define TIMER5_TIMER5_SHOTWIDTH_REG_TIM_SHOTWIDTH_Msk (0xffffffUL)  /*!< TIM_SHOTWIDTH (Bitfield-Mask: 0xffffff)               */
/* ===================================================  TIMER5_STATUS_REG  =================================================== */
#define TIMER5_TIMER5_STATUS_REG_TIM_IRQ_PULSE_STATUS_Pos (14UL)    /*!< TIM_IRQ_PULSE_STATUS (Bit 14)                         */
#define TIMER5_TIMER5_STATUS_REG_TIM_IRQ_PULSE_STATUS_Msk (0x4000UL) /*!< TIM_IRQ_PULSE_STATUS (Bitfield-Mask: 0x01)           */
#define TIMER5_TIMER5_STATUS_REG_TIM_SWITCHED_TO_DIVN_CLK_Pos (11UL) /*!< TIM_SWITCHED_TO_DIVN_CLK (Bit 11)                    */
#define TIMER5_TIMER5_STATUS_REG_TIM_SWITCHED_TO_DIVN_CLK_Msk (0x800UL) /*!< TIM_SWITCHED_TO_DIVN_CLK (Bitfield-Mask: 0x01)    */
#define TIMER5_TIMER5_STATUS_REG_TIM_PWM_BUSY_Pos (10UL)            /*!< TIM_PWM_BUSY (Bit 10)                                 */
#define TIMER5_TIMER5_STATUS_REG_TIM_PWM_BUSY_Msk (0x400UL)         /*!< TIM_PWM_BUSY (Bitfield-Mask: 0x01)                    */
#define TIMER5_TIMER5_STATUS_REG_TIM_TIMER_BUSY_Pos (9UL)           /*!< TIM_TIMER_BUSY (Bit 9)                                */
#define TIMER5_TIMER5_STATUS_REG_TIM_TIMER_BUSY_Msk (0x200UL)       /*!< TIM_TIMER_BUSY (Bitfield-Mask: 0x01)                  */
#define TIMER5_TIMER5_STATUS_REG_TIM_IRQ_STATUS_Pos (8UL)           /*!< TIM_IRQ_STATUS (Bit 8)                                */
#define TIMER5_TIMER5_STATUS_REG_TIM_IRQ_STATUS_Msk (0x100UL)       /*!< TIM_IRQ_STATUS (Bitfield-Mask: 0x01)                  */
#define TIMER5_TIMER5_STATUS_REG_TIM_ONESHOT_PHASE_Pos (2UL)        /*!< TIM_ONESHOT_PHASE (Bit 2)                             */
#define TIMER5_TIMER5_STATUS_REG_TIM_ONESHOT_PHASE_Msk (0xcUL)      /*!< TIM_ONESHOT_PHASE (Bitfield-Mask: 0x03)               */
#define TIMER5_TIMER5_STATUS_REG_TIM_IN2_STATE_Pos (1UL)            /*!< TIM_IN2_STATE (Bit 1)                                 */
#define TIMER5_TIMER5_STATUS_REG_TIM_IN2_STATE_Msk (0x2UL)          /*!< TIM_IN2_STATE (Bitfield-Mask: 0x01)                   */
#define TIMER5_TIMER5_STATUS_REG_TIM_IN1_STATE_Pos (0UL)            /*!< TIM_IN1_STATE (Bit 0)                                 */
#define TIMER5_TIMER5_STATUS_REG_TIM_IN1_STATE_Msk (0x1UL)          /*!< TIM_IN1_STATE (Bitfield-Mask: 0x01)                   */
/* =================================================  TIMER5_TIMER_VAL_REG  ================================================== */
#define TIMER5_TIMER5_TIMER_VAL_REG_TIM_TIMER_VALUE_Pos (0UL)       /*!< TIM_TIMER_VALUE (Bit 0)                               */
#define TIMER5_TIMER5_TIMER_VAL_REG_TIM_TIMER_VALUE_Msk (0xffffffUL) /*!< TIM_TIMER_VALUE (Bitfield-Mask: 0xffffff)            */


/* =========================================================================================================================== */
/* ================                                          TIMER6                                           ================ */
/* =========================================================================================================================== */

/* ===============================================  TIMER6_CAPTURE_GPIO1_REG  ================================================ */
#define TIMER6_TIMER6_CAPTURE_GPIO1_REG_TIM_CAPTURE_GPIO1_Pos (0UL) /*!< TIM_CAPTURE_GPIO1 (Bit 0)                             */
#define TIMER6_TIMER6_CAPTURE_GPIO1_REG_TIM_CAPTURE_GPIO1_Msk (0xffffffUL) /*!< TIM_CAPTURE_GPIO1 (Bitfield-Mask: 0xffffff)    */
/* ===============================================  TIMER6_CAPTURE_GPIO2_REG  ================================================ */
#define TIMER6_TIMER6_CAPTURE_GPIO2_REG_TIM_CAPTURE_GPIO2_Pos (0UL) /*!< TIM_CAPTURE_GPIO2 (Bit 0)                             */
#define TIMER6_TIMER6_CAPTURE_GPIO2_REG_TIM_CAPTURE_GPIO2_Msk (0xffffffUL) /*!< TIM_CAPTURE_GPIO2 (Bitfield-Mask: 0xffffff)    */
/* ==============================================  TIMER6_CLEAR_IRQ_PULSE_REG  =============================================== */
#define TIMER6_TIMER6_CLEAR_IRQ_PULSE_REG_TIM_CLEAR_PULSE_IRQ_Pos (0UL) /*!< TIM_CLEAR_PULSE_IRQ (Bit 0)                       */
#define TIMER6_TIMER6_CLEAR_IRQ_PULSE_REG_TIM_CLEAR_PULSE_IRQ_Msk (0x1UL) /*!< TIM_CLEAR_PULSE_IRQ (Bitfield-Mask: 0x01)       */
/* =================================================  TIMER6_CLEAR_IRQ_REG  ================================================== */
#define TIMER6_TIMER6_CLEAR_IRQ_REG_TIM_CLEAR_IRQ_Pos (0UL)         /*!< TIM_CLEAR_IRQ (Bit 0)                                 */
#define TIMER6_TIMER6_CLEAR_IRQ_REG_TIM_CLEAR_IRQ_Msk (0x1UL)       /*!< TIM_CLEAR_IRQ (Bitfield-Mask: 0x01)                   */
/* ====================================================  TIMER6_CTRL_REG  ==================================================== */
#define TIMER6_TIMER6_CTRL_REG_TIM_EDGE_DET_CNT_FALL_EN_Pos (19UL)  /*!< TIM_EDGE_DET_CNT_FALL_EN (Bit 19)                     */
#define TIMER6_TIMER6_CTRL_REG_TIM_EDGE_DET_CNT_FALL_EN_Msk (0x80000UL) /*!< TIM_EDGE_DET_CNT_FALL_EN (Bitfield-Mask: 0x01)    */
#define TIMER6_TIMER6_CTRL_REG_TIM_EDGE_DET_CNT_EN_Pos (18UL)       /*!< TIM_EDGE_DET_CNT_EN (Bit 18)                          */
#define TIMER6_TIMER6_CTRL_REG_TIM_EDGE_DET_CNT_EN_Msk (0x40000UL)  /*!< TIM_EDGE_DET_CNT_EN (Bitfield-Mask: 0x01)             */
#define TIMER6_TIMER6_CTRL_REG_TIM_CLK_EN_Pos (8UL)                 /*!< TIM_CLK_EN (Bit 8)                                    */
#define TIMER6_TIMER6_CTRL_REG_TIM_CLK_EN_Msk (0x100UL)             /*!< TIM_CLK_EN (Bitfield-Mask: 0x01)                      */
#define TIMER6_TIMER6_CTRL_REG_TIM_SYS_CLK_EN_Pos (7UL)             /*!< TIM_SYS_CLK_EN (Bit 7)                                */
#define TIMER6_TIMER6_CTRL_REG_TIM_SYS_CLK_EN_Msk (0x80UL)          /*!< TIM_SYS_CLK_EN (Bitfield-Mask: 0x01)                  */
#define TIMER6_TIMER6_CTRL_REG_TIM_FREE_RUN_MODE_EN_Pos (6UL)       /*!< TIM_FREE_RUN_MODE_EN (Bit 6)                          */
#define TIMER6_TIMER6_CTRL_REG_TIM_FREE_RUN_MODE_EN_Msk (0x40UL)    /*!< TIM_FREE_RUN_MODE_EN (Bitfield-Mask: 0x01)            */
#define TIMER6_TIMER6_CTRL_REG_TIM_IRQ_EN_Pos (5UL)                 /*!< TIM_IRQ_EN (Bit 5)                                    */
#define TIMER6_TIMER6_CTRL_REG_TIM_IRQ_EN_Msk (0x20UL)              /*!< TIM_IRQ_EN (Bitfield-Mask: 0x01)                      */
#define TIMER6_TIMER6_CTRL_REG_TIM_IN2_EVENT_FALL_EN_Pos (4UL)      /*!< TIM_IN2_EVENT_FALL_EN (Bit 4)                         */
#define TIMER6_TIMER6_CTRL_REG_TIM_IN2_EVENT_FALL_EN_Msk (0x10UL)   /*!< TIM_IN2_EVENT_FALL_EN (Bitfield-Mask: 0x01)           */
#define TIMER6_TIMER6_CTRL_REG_TIM_IN1_EVENT_FALL_EN_Pos (3UL)      /*!< TIM_IN1_EVENT_FALL_EN (Bit 3)                         */
#define TIMER6_TIMER6_CTRL_REG_TIM_IN1_EVENT_FALL_EN_Msk (0x8UL)    /*!< TIM_IN1_EVENT_FALL_EN (Bitfield-Mask: 0x01)           */
#define TIMER6_TIMER6_CTRL_REG_TIM_COUNT_DOWN_EN_Pos (2UL)          /*!< TIM_COUNT_DOWN_EN (Bit 2)                             */
#define TIMER6_TIMER6_CTRL_REG_TIM_COUNT_DOWN_EN_Msk (0x4UL)        /*!< TIM_COUNT_DOWN_EN (Bitfield-Mask: 0x01)               */
#define TIMER6_TIMER6_CTRL_REG_TIM_ONESHOT_MODE_EN_Pos (1UL)        /*!< TIM_ONESHOT_MODE_EN (Bit 1)                           */
#define TIMER6_TIMER6_CTRL_REG_TIM_ONESHOT_MODE_EN_Msk (0x2UL)      /*!< TIM_ONESHOT_MODE_EN (Bitfield-Mask: 0x01)             */
#define TIMER6_TIMER6_CTRL_REG_TIM_EN_Pos (0UL)                     /*!< TIM_EN (Bit 0)                                        */
#define TIMER6_TIMER6_CTRL_REG_TIM_EN_Msk (0x1UL)                   /*!< TIM_EN (Bitfield-Mask: 0x01)                          */
/* =================================================  TIMER6_GPIO1_CONF_REG  ================================================= */
#define TIMER6_TIMER6_GPIO1_CONF_REG_TIM_GPIO1_CONF_Pos (0UL)       /*!< TIM_GPIO1_CONF (Bit 0)                                */
#define TIMER6_TIMER6_GPIO1_CONF_REG_TIM_GPIO1_CONF_Msk (0x3fUL)    /*!< TIM_GPIO1_CONF (Bitfield-Mask: 0x3f)                  */
/* =================================================  TIMER6_GPIO2_CONF_REG  ================================================= */
#define TIMER6_TIMER6_GPIO2_CONF_REG_TIM_GPIO2_CONF_Pos (0UL)       /*!< TIM_GPIO2_CONF (Bit 0)                                */
#define TIMER6_TIMER6_GPIO2_CONF_REG_TIM_GPIO2_CONF_Msk (0x3fUL)    /*!< TIM_GPIO2_CONF (Bitfield-Mask: 0x3f)                  */
/* ===============================================  TIMER6_PRESCALER_VAL_REG  ================================================ */
#define TIMER6_TIMER6_PRESCALER_VAL_REG_TIM_PRESCALER_VAL_Pos (0UL) /*!< TIM_PRESCALER_VAL (Bit 0)                             */
#define TIMER6_TIMER6_PRESCALER_VAL_REG_TIM_PRESCALER_VAL_Msk (0x1fUL) /*!< TIM_PRESCALER_VAL (Bitfield-Mask: 0x1f)            */
/* ===============================================  TIMER6_PULSE_CNT_CTRL_REG  =============================================== */
#define TIMER6_TIMER6_PULSE_CNT_CTRL_REG_PULSE_CNT_GPIO_SEL_Pos (24UL) /*!< PULSE_CNT_GPIO_SEL (Bit 24)                        */
#define TIMER6_TIMER6_PULSE_CNT_CTRL_REG_PULSE_CNT_GPIO_SEL_Msk (0x3f000000UL) /*!< PULSE_CNT_GPIO_SEL (Bitfield-Mask: 0x3f)   */
#define TIMER6_TIMER6_PULSE_CNT_CTRL_REG_PULSE_CNT_THRESHOLD_Pos (0UL) /*!< PULSE_CNT_THRESHOLD (Bit 0)                        */
#define TIMER6_TIMER6_PULSE_CNT_CTRL_REG_PULSE_CNT_THRESHOLD_Msk (0xffffffUL) /*!< PULSE_CNT_THRESHOLD (Bitfield-Mask: 0xffffff) */
/* ==================================================  TIMER6_PWM_CTRL_REG  ================================================== */
#define TIMER6_TIMER6_PWM_CTRL_REG_TIM_PWM_DC_Pos (16UL)            /*!< TIM_PWM_DC (Bit 16)                                   */
#define TIMER6_TIMER6_PWM_CTRL_REG_TIM_PWM_DC_Msk (0xffff0000UL)    /*!< TIM_PWM_DC (Bitfield-Mask: 0xffff)                    */
#define TIMER6_TIMER6_PWM_CTRL_REG_TIM_PWM_FREQ_Pos (0UL)           /*!< TIM_PWM_FREQ (Bit 0)                                  */
#define TIMER6_TIMER6_PWM_CTRL_REG_TIM_PWM_FREQ_Msk (0xffffUL)      /*!< TIM_PWM_FREQ (Bitfield-Mask: 0xffff)                  */
/* ==================================================  TIMER6_SETTINGS_REG  ================================================== */
#define TIMER6_TIMER6_SETTINGS_REG_TIM_PRESCALER_Pos (24UL)         /*!< TIM_PRESCALER (Bit 24)                                */
#define TIMER6_TIMER6_SETTINGS_REG_TIM_PRESCALER_Msk (0x1f000000UL) /*!< TIM_PRESCALER (Bitfield-Mask: 0x1f)                   */
#define TIMER6_TIMER6_SETTINGS_REG_TIM_RELOAD_Pos (0UL)             /*!< TIM_RELOAD (Bit 0)                                    */
#define TIMER6_TIMER6_SETTINGS_REG_TIM_RELOAD_Msk (0xffffffUL)      /*!< TIM_RELOAD (Bitfield-Mask: 0xffffff)                  */
/* =================================================  TIMER6_SHOTWIDTH_REG  ================================================== */
#define TIMER6_TIMER6_SHOTWIDTH_REG_TIM_SHOTWIDTH_Pos (0UL)         /*!< TIM_SHOTWIDTH (Bit 0)                                 */
#define TIMER6_TIMER6_SHOTWIDTH_REG_TIM_SHOTWIDTH_Msk (0xffffffUL)  /*!< TIM_SHOTWIDTH (Bitfield-Mask: 0xffffff)               */
/* ===================================================  TIMER6_STATUS_REG  =================================================== */
#define TIMER6_TIMER6_STATUS_REG_TIM_IRQ_PULSE_STATUS_Pos (14UL)    /*!< TIM_IRQ_PULSE_STATUS (Bit 14)                         */
#define TIMER6_TIMER6_STATUS_REG_TIM_IRQ_PULSE_STATUS_Msk (0x4000UL) /*!< TIM_IRQ_PULSE_STATUS (Bitfield-Mask: 0x01)           */
#define TIMER6_TIMER6_STATUS_REG_TIM_SWITCHED_TO_DIVN_CLK_Pos (11UL) /*!< TIM_SWITCHED_TO_DIVN_CLK (Bit 11)                    */
#define TIMER6_TIMER6_STATUS_REG_TIM_SWITCHED_TO_DIVN_CLK_Msk (0x800UL) /*!< TIM_SWITCHED_TO_DIVN_CLK (Bitfield-Mask: 0x01)    */
#define TIMER6_TIMER6_STATUS_REG_TIM_PWM_BUSY_Pos (10UL)            /*!< TIM_PWM_BUSY (Bit 10)                                 */
#define TIMER6_TIMER6_STATUS_REG_TIM_PWM_BUSY_Msk (0x400UL)         /*!< TIM_PWM_BUSY (Bitfield-Mask: 0x01)                    */
#define TIMER6_TIMER6_STATUS_REG_TIM_TIMER_BUSY_Pos (9UL)           /*!< TIM_TIMER_BUSY (Bit 9)                                */
#define TIMER6_TIMER6_STATUS_REG_TIM_TIMER_BUSY_Msk (0x200UL)       /*!< TIM_TIMER_BUSY (Bitfield-Mask: 0x01)                  */
#define TIMER6_TIMER6_STATUS_REG_TIM_IRQ_STATUS_Pos (8UL)           /*!< TIM_IRQ_STATUS (Bit 8)                                */
#define TIMER6_TIMER6_STATUS_REG_TIM_IRQ_STATUS_Msk (0x100UL)       /*!< TIM_IRQ_STATUS (Bitfield-Mask: 0x01)                  */
#define TIMER6_TIMER6_STATUS_REG_TIM_ONESHOT_PHASE_Pos (2UL)        /*!< TIM_ONESHOT_PHASE (Bit 2)                             */
#define TIMER6_TIMER6_STATUS_REG_TIM_ONESHOT_PHASE_Msk (0xcUL)      /*!< TIM_ONESHOT_PHASE (Bitfield-Mask: 0x03)               */
#define TIMER6_TIMER6_STATUS_REG_TIM_IN2_STATE_Pos (1UL)            /*!< TIM_IN2_STATE (Bit 1)                                 */
#define TIMER6_TIMER6_STATUS_REG_TIM_IN2_STATE_Msk (0x2UL)          /*!< TIM_IN2_STATE (Bitfield-Mask: 0x01)                   */
#define TIMER6_TIMER6_STATUS_REG_TIM_IN1_STATE_Pos (0UL)            /*!< TIM_IN1_STATE (Bit 0)                                 */
#define TIMER6_TIMER6_STATUS_REG_TIM_IN1_STATE_Msk (0x1UL)          /*!< TIM_IN1_STATE (Bitfield-Mask: 0x01)                   */
/* =================================================  TIMER6_TIMER_VAL_REG  ================================================== */
#define TIMER6_TIMER6_TIMER_VAL_REG_TIM_TIMER_VALUE_Pos (0UL)       /*!< TIM_TIMER_VALUE (Bit 0)                               */
#define TIMER6_TIMER6_TIMER_VAL_REG_TIM_TIMER_VALUE_Msk (0xffffffUL) /*!< TIM_TIMER_VALUE (Bitfield-Mask: 0xffffff)            */


/* =========================================================================================================================== */
/* ================                                           UART                                            ================ */
/* =========================================================================================================================== */

/* =====================================================  UART_CTR_REG  ====================================================== */
#define UART_UART_CTR_REG_UART_CTR_Pos    (0UL)                     /*!< UART_CTR (Bit 0)                                      */
#define UART_UART_CTR_REG_UART_CTR_Msk    (0xffffffffUL)            /*!< UART_CTR (Bitfield-Mask: 0xffffffff)                  */
/* =====================================================  UART_DLF_REG  ====================================================== */
#define UART_UART_DLF_REG_UART_DLF_Pos    (0UL)                     /*!< UART_DLF (Bit 0)                                      */
#define UART_UART_DLF_REG_UART_DLF_Msk    (0xfUL)                   /*!< UART_DLF (Bitfield-Mask: 0x0f)                        */
/* ====================================================  UART_DMASA_REG  ===================================================== */
#define UART_UART_DMASA_REG_UART_DMASA_Pos (0UL)                    /*!< UART_DMASA (Bit 0)                                    */
#define UART_UART_DMASA_REG_UART_DMASA_Msk (0x1UL)                  /*!< UART_DMASA (Bitfield-Mask: 0x01)                      */
/* =====================================================  UART_HTX_REG  ====================================================== */
#define UART_UART_HTX_REG_UART_HALT_TX_Pos (0UL)                    /*!< UART_HALT_TX (Bit 0)                                  */
#define UART_UART_HTX_REG_UART_HALT_TX_Msk (0x1UL)                  /*!< UART_HALT_TX (Bitfield-Mask: 0x01)                    */
/* ===================================================  UART_IER_DLH_REG  ==================================================== */
#define UART_UART_IER_DLH_REG_PTIME_DLH7_Pos (7UL)                  /*!< PTIME_DLH7 (Bit 7)                                    */
#define UART_UART_IER_DLH_REG_PTIME_DLH7_Msk (0x80UL)               /*!< PTIME_DLH7 (Bitfield-Mask: 0x01)                      */
#define UART_UART_IER_DLH_REG_DLH6_5_Pos  (5UL)                     /*!< DLH6_5 (Bit 5)                                        */
#define UART_UART_IER_DLH_REG_DLH6_5_Msk  (0x60UL)                  /*!< DLH6_5 (Bitfield-Mask: 0x03)                          */
#define UART_UART_IER_DLH_REG_ELCOLR_DLH4_Pos (4UL)                 /*!< ELCOLR_DLH4 (Bit 4)                                   */
#define UART_UART_IER_DLH_REG_ELCOLR_DLH4_Msk (0x10UL)              /*!< ELCOLR_DLH4 (Bitfield-Mask: 0x01)                     */
#define UART_UART_IER_DLH_REG_EDSSI_DLH3_Pos (3UL)                  /*!< EDSSI_DLH3 (Bit 3)                                    */
#define UART_UART_IER_DLH_REG_EDSSI_DLH3_Msk (0x8UL)                /*!< EDSSI_DLH3 (Bitfield-Mask: 0x01)                      */
#define UART_UART_IER_DLH_REG_ELSI_DLH2_Pos (2UL)                   /*!< ELSI_DLH2 (Bit 2)                                     */
#define UART_UART_IER_DLH_REG_ELSI_DLH2_Msk (0x4UL)                 /*!< ELSI_DLH2 (Bitfield-Mask: 0x01)                       */
#define UART_UART_IER_DLH_REG_ETBEI_DLH1_Pos (1UL)                  /*!< ETBEI_DLH1 (Bit 1)                                    */
#define UART_UART_IER_DLH_REG_ETBEI_DLH1_Msk (0x2UL)                /*!< ETBEI_DLH1 (Bitfield-Mask: 0x01)                      */
#define UART_UART_IER_DLH_REG_ERBFI_DLH0_Pos (0UL)                  /*!< ERBFI_DLH0 (Bit 0)                                    */
#define UART_UART_IER_DLH_REG_ERBFI_DLH0_Msk (0x1UL)                /*!< ERBFI_DLH0 (Bitfield-Mask: 0x01)                      */
/* ===================================================  UART_IIR_FCR_REG  ==================================================== */
#define UART_UART_IIR_FCR_REG_IIR_FCR_Pos (0UL)                     /*!< IIR_FCR (Bit 0)                                       */
#define UART_UART_IIR_FCR_REG_IIR_FCR_Msk (0xffUL)                  /*!< IIR_FCR (Bitfield-Mask: 0xff)                         */
/* =====================================================  UART_LCR_REG  ====================================================== */
#define UART_UART_LCR_REG_UART_DLAB_Pos   (7UL)                     /*!< UART_DLAB (Bit 7)                                     */
#define UART_UART_LCR_REG_UART_DLAB_Msk   (0x80UL)                  /*!< UART_DLAB (Bitfield-Mask: 0x01)                       */
#define UART_UART_LCR_REG_UART_BC_Pos     (6UL)                     /*!< UART_BC (Bit 6)                                       */
#define UART_UART_LCR_REG_UART_BC_Msk     (0x40UL)                  /*!< UART_BC (Bitfield-Mask: 0x01)                         */
#define UART_UART_LCR_REG_UART_EPS_Pos    (4UL)                     /*!< UART_EPS (Bit 4)                                      */
#define UART_UART_LCR_REG_UART_EPS_Msk    (0x10UL)                  /*!< UART_EPS (Bitfield-Mask: 0x01)                        */
#define UART_UART_LCR_REG_UART_PEN_Pos    (3UL)                     /*!< UART_PEN (Bit 3)                                      */
#define UART_UART_LCR_REG_UART_PEN_Msk    (0x8UL)                   /*!< UART_PEN (Bitfield-Mask: 0x01)                        */
#define UART_UART_LCR_REG_UART_STOP_Pos   (2UL)                     /*!< UART_STOP (Bit 2)                                     */
#define UART_UART_LCR_REG_UART_STOP_Msk   (0x4UL)                   /*!< UART_STOP (Bitfield-Mask: 0x01)                       */
#define UART_UART_LCR_REG_UART_DLS_Pos    (0UL)                     /*!< UART_DLS (Bit 0)                                      */
#define UART_UART_LCR_REG_UART_DLS_Msk    (0x3UL)                   /*!< UART_DLS (Bitfield-Mask: 0x03)                        */
/* =====================================================  UART_LSR_REG  ====================================================== */
#define UART_UART_LSR_REG_UART_RFE_Pos    (7UL)                     /*!< UART_RFE (Bit 7)                                      */
#define UART_UART_LSR_REG_UART_RFE_Msk    (0x80UL)                  /*!< UART_RFE (Bitfield-Mask: 0x01)                        */
#define UART_UART_LSR_REG_UART_TEMT_Pos   (6UL)                     /*!< UART_TEMT (Bit 6)                                     */
#define UART_UART_LSR_REG_UART_TEMT_Msk   (0x40UL)                  /*!< UART_TEMT (Bitfield-Mask: 0x01)                       */
#define UART_UART_LSR_REG_UART_THRE_Pos   (5UL)                     /*!< UART_THRE (Bit 5)                                     */
#define UART_UART_LSR_REG_UART_THRE_Msk   (0x20UL)                  /*!< UART_THRE (Bitfield-Mask: 0x01)                       */
#define UART_UART_LSR_REG_UART_BI_Pos     (4UL)                     /*!< UART_BI (Bit 4)                                       */
#define UART_UART_LSR_REG_UART_BI_Msk     (0x10UL)                  /*!< UART_BI (Bitfield-Mask: 0x01)                         */
#define UART_UART_LSR_REG_UART_FE_Pos     (3UL)                     /*!< UART_FE (Bit 3)                                       */
#define UART_UART_LSR_REG_UART_FE_Msk     (0x8UL)                   /*!< UART_FE (Bitfield-Mask: 0x01)                         */
#define UART_UART_LSR_REG_UART_PE_Pos     (2UL)                     /*!< UART_PE (Bit 2)                                       */
#define UART_UART_LSR_REG_UART_PE_Msk     (0x4UL)                   /*!< UART_PE (Bitfield-Mask: 0x01)                         */
#define UART_UART_LSR_REG_UART_OE_Pos     (1UL)                     /*!< UART_OE (Bit 1)                                       */
#define UART_UART_LSR_REG_UART_OE_Msk     (0x2UL)                   /*!< UART_OE (Bitfield-Mask: 0x01)                         */
#define UART_UART_LSR_REG_UART_DR_Pos     (0UL)                     /*!< UART_DR (Bit 0)                                       */
#define UART_UART_LSR_REG_UART_DR_Msk     (0x1UL)                   /*!< UART_DR (Bitfield-Mask: 0x01)                         */
/* =====================================================  UART_MCR_REG  ====================================================== */
#define UART_UART_MCR_REG_UART_LB_Pos     (4UL)                     /*!< UART_LB (Bit 4)                                       */
#define UART_UART_MCR_REG_UART_LB_Msk     (0x10UL)                  /*!< UART_LB (Bitfield-Mask: 0x01)                         */
/* =================================================  UART_RBR_THR_DLL_REG  ================================================== */
#define UART_UART_RBR_THR_DLL_REG_RBR_THR_DLL_Pos (0UL)             /*!< RBR_THR_DLL (Bit 0)                                   */
#define UART_UART_RBR_THR_DLL_REG_RBR_THR_DLL_Msk (0xffUL)          /*!< RBR_THR_DLL (Bitfield-Mask: 0xff)                     */
/* =====================================================  UART_RFL_REG  ====================================================== */
#define UART_UART_RFL_REG_UART_RECEIVE_FIFO_LEVEL_Pos (0UL)         /*!< UART_RECEIVE_FIFO_LEVEL (Bit 0)                       */
#define UART_UART_RFL_REG_UART_RECEIVE_FIFO_LEVEL_Msk (0x1fUL)      /*!< UART_RECEIVE_FIFO_LEVEL (Bitfield-Mask: 0x1f)         */
/* =====================================================  UART_SBCR_REG  ===================================================== */
#define UART_UART_SBCR_REG_UART_SHADOW_BREAK_CONTROL_Pos (0UL)      /*!< UART_SHADOW_BREAK_CONTROL (Bit 0)                     */
#define UART_UART_SBCR_REG_UART_SHADOW_BREAK_CONTROL_Msk (0x1UL)    /*!< UART_SHADOW_BREAK_CONTROL (Bitfield-Mask: 0x01)       */
/* =====================================================  UART_SCR_REG  ====================================================== */
#define UART_UART_SCR_REG_UART_SCRATCH_PAD_Pos (0UL)                /*!< UART_SCRATCH_PAD (Bit 0)                              */
#define UART_UART_SCR_REG_UART_SCRATCH_PAD_Msk (0xffUL)             /*!< UART_SCRATCH_PAD (Bitfield-Mask: 0xff)                */
/* ====================================================  UART_SDMAM_REG  ===================================================== */
#define UART_UART_SDMAM_REG_UART_SHADOW_DMA_MODE_Pos (0UL)          /*!< UART_SHADOW_DMA_MODE (Bit 0)                          */
#define UART_UART_SDMAM_REG_UART_SHADOW_DMA_MODE_Msk (0x1UL)        /*!< UART_SHADOW_DMA_MODE (Bitfield-Mask: 0x01)            */
/* =====================================================  UART_SFE_REG  ====================================================== */
#define UART_UART_SFE_REG_UART_SHADOW_FIFO_ENABLE_Pos (0UL)         /*!< UART_SHADOW_FIFO_ENABLE (Bit 0)                       */
#define UART_UART_SFE_REG_UART_SHADOW_FIFO_ENABLE_Msk (0x1UL)       /*!< UART_SHADOW_FIFO_ENABLE (Bitfield-Mask: 0x01)         */
/* ==================================================  UART_SRBR_STHR0_REG  ================================================== */
#define UART_UART_SRBR_STHR0_REG_SRBR_STHRx_Pos (0UL)               /*!< SRBR_STHRx (Bit 0)                                    */
#define UART_UART_SRBR_STHR0_REG_SRBR_STHRx_Msk (0xffUL)            /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =================================================  UART_SRBR_STHR10_REG  ================================================== */
#define UART_UART_SRBR_STHR10_REG_SRBR_STHRx_Pos (0UL)              /*!< SRBR_STHRx (Bit 0)                                    */
#define UART_UART_SRBR_STHR10_REG_SRBR_STHRx_Msk (0xffUL)           /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =================================================  UART_SRBR_STHR11_REG  ================================================== */
#define UART_UART_SRBR_STHR11_REG_SRBR_STHRx_Pos (0UL)              /*!< SRBR_STHRx (Bit 0)                                    */
#define UART_UART_SRBR_STHR11_REG_SRBR_STHRx_Msk (0xffUL)           /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =================================================  UART_SRBR_STHR12_REG  ================================================== */
#define UART_UART_SRBR_STHR12_REG_SRBR_STHRx_Pos (0UL)              /*!< SRBR_STHRx (Bit 0)                                    */
#define UART_UART_SRBR_STHR12_REG_SRBR_STHRx_Msk (0xffUL)           /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =================================================  UART_SRBR_STHR13_REG  ================================================== */
#define UART_UART_SRBR_STHR13_REG_SRBR_STHRx_Pos (0UL)              /*!< SRBR_STHRx (Bit 0)                                    */
#define UART_UART_SRBR_STHR13_REG_SRBR_STHRx_Msk (0xffUL)           /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =================================================  UART_SRBR_STHR14_REG  ================================================== */
#define UART_UART_SRBR_STHR14_REG_SRBR_STHRx_Pos (0UL)              /*!< SRBR_STHRx (Bit 0)                                    */
#define UART_UART_SRBR_STHR14_REG_SRBR_STHRx_Msk (0xffUL)           /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =================================================  UART_SRBR_STHR15_REG  ================================================== */
#define UART_UART_SRBR_STHR15_REG_SRBR_STHRx_Pos (0UL)              /*!< SRBR_STHRx (Bit 0)                                    */
#define UART_UART_SRBR_STHR15_REG_SRBR_STHRx_Msk (0xffUL)           /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* ==================================================  UART_SRBR_STHR1_REG  ================================================== */
#define UART_UART_SRBR_STHR1_REG_SRBR_STHRx_Pos (0UL)               /*!< SRBR_STHRx (Bit 0)                                    */
#define UART_UART_SRBR_STHR1_REG_SRBR_STHRx_Msk (0xffUL)            /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* ==================================================  UART_SRBR_STHR2_REG  ================================================== */
#define UART_UART_SRBR_STHR2_REG_SRBR_STHRx_Pos (0UL)               /*!< SRBR_STHRx (Bit 0)                                    */
#define UART_UART_SRBR_STHR2_REG_SRBR_STHRx_Msk (0xffUL)            /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* ==================================================  UART_SRBR_STHR3_REG  ================================================== */
#define UART_UART_SRBR_STHR3_REG_SRBR_STHRx_Pos (0UL)               /*!< SRBR_STHRx (Bit 0)                                    */
#define UART_UART_SRBR_STHR3_REG_SRBR_STHRx_Msk (0xffUL)            /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* ==================================================  UART_SRBR_STHR4_REG  ================================================== */
#define UART_UART_SRBR_STHR4_REG_SRBR_STHRx_Pos (0UL)               /*!< SRBR_STHRx (Bit 0)                                    */
#define UART_UART_SRBR_STHR4_REG_SRBR_STHRx_Msk (0xffUL)            /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* ==================================================  UART_SRBR_STHR5_REG  ================================================== */
#define UART_UART_SRBR_STHR5_REG_SRBR_STHRx_Pos (0UL)               /*!< SRBR_STHRx (Bit 0)                                    */
#define UART_UART_SRBR_STHR5_REG_SRBR_STHRx_Msk (0xffUL)            /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* ==================================================  UART_SRBR_STHR6_REG  ================================================== */
#define UART_UART_SRBR_STHR6_REG_SRBR_STHRx_Pos (0UL)               /*!< SRBR_STHRx (Bit 0)                                    */
#define UART_UART_SRBR_STHR6_REG_SRBR_STHRx_Msk (0xffUL)            /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* ==================================================  UART_SRBR_STHR7_REG  ================================================== */
#define UART_UART_SRBR_STHR7_REG_SRBR_STHRx_Pos (0UL)               /*!< SRBR_STHRx (Bit 0)                                    */
#define UART_UART_SRBR_STHR7_REG_SRBR_STHRx_Msk (0xffUL)            /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* ==================================================  UART_SRBR_STHR8_REG  ================================================== */
#define UART_UART_SRBR_STHR8_REG_SRBR_STHRx_Pos (0UL)               /*!< SRBR_STHRx (Bit 0)                                    */
#define UART_UART_SRBR_STHR8_REG_SRBR_STHRx_Msk (0xffUL)            /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* ==================================================  UART_SRBR_STHR9_REG  ================================================== */
#define UART_UART_SRBR_STHR9_REG_SRBR_STHRx_Pos (0UL)               /*!< SRBR_STHRx (Bit 0)                                    */
#define UART_UART_SRBR_STHR9_REG_SRBR_STHRx_Msk (0xffUL)            /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =====================================================  UART_SRR_REG  ====================================================== */
#define UART_UART_SRR_REG_UART_XFR_Pos    (2UL)                     /*!< UART_XFR (Bit 2)                                      */
#define UART_UART_SRR_REG_UART_XFR_Msk    (0x4UL)                   /*!< UART_XFR (Bitfield-Mask: 0x01)                        */
#define UART_UART_SRR_REG_UART_RFR_Pos    (1UL)                     /*!< UART_RFR (Bit 1)                                      */
#define UART_UART_SRR_REG_UART_RFR_Msk    (0x2UL)                   /*!< UART_RFR (Bitfield-Mask: 0x01)                        */
#define UART_UART_SRR_REG_UART_UR_Pos     (0UL)                     /*!< UART_UR (Bit 0)                                       */
#define UART_UART_SRR_REG_UART_UR_Msk     (0x1UL)                   /*!< UART_UR (Bitfield-Mask: 0x01)                         */
/* =====================================================  UART_SRT_REG  ====================================================== */
#define UART_UART_SRT_REG_UART_SHADOW_RCVR_TRIGGER_Pos (0UL)        /*!< UART_SHADOW_RCVR_TRIGGER (Bit 0)                      */
#define UART_UART_SRT_REG_UART_SHADOW_RCVR_TRIGGER_Msk (0x3UL)      /*!< UART_SHADOW_RCVR_TRIGGER (Bitfield-Mask: 0x03)        */
/* =====================================================  UART_STET_REG  ===================================================== */
#define UART_UART_STET_REG_UART_SHADOW_TX_EMPTY_TRIGGER_Pos (0UL)   /*!< UART_SHADOW_TX_EMPTY_TRIGGER (Bit 0)                  */
#define UART_UART_STET_REG_UART_SHADOW_TX_EMPTY_TRIGGER_Msk (0x3UL) /*!< UART_SHADOW_TX_EMPTY_TRIGGER (Bitfield-Mask: 0x03)    */
/* =====================================================  UART_TFL_REG  ====================================================== */
#define UART_UART_TFL_REG_UART_TRANSMIT_FIFO_LEVEL_Pos (0UL)        /*!< UART_TRANSMIT_FIFO_LEVEL (Bit 0)                      */
#define UART_UART_TFL_REG_UART_TRANSMIT_FIFO_LEVEL_Msk (0x1fUL)     /*!< UART_TRANSMIT_FIFO_LEVEL (Bitfield-Mask: 0x1f)        */
/* =====================================================  UART_UCV_REG  ====================================================== */
#define UART_UART_UCV_REG_UART_UCV_Pos    (0UL)                     /*!< UART_UCV (Bit 0)                                      */
#define UART_UART_UCV_REG_UART_UCV_Msk    (0xffffffffUL)            /*!< UART_UCV (Bitfield-Mask: 0xffffffff)                  */
/* =====================================================  UART_USR_REG  ====================================================== */
#define UART_UART_USR_REG_UART_RFF_Pos    (4UL)                     /*!< UART_RFF (Bit 4)                                      */
#define UART_UART_USR_REG_UART_RFF_Msk    (0x10UL)                  /*!< UART_RFF (Bitfield-Mask: 0x01)                        */
#define UART_UART_USR_REG_UART_RFNE_Pos   (3UL)                     /*!< UART_RFNE (Bit 3)                                     */
#define UART_UART_USR_REG_UART_RFNE_Msk   (0x8UL)                   /*!< UART_RFNE (Bitfield-Mask: 0x01)                       */
#define UART_UART_USR_REG_UART_TFE_Pos    (2UL)                     /*!< UART_TFE (Bit 2)                                      */
#define UART_UART_USR_REG_UART_TFE_Msk    (0x4UL)                   /*!< UART_TFE (Bitfield-Mask: 0x01)                        */
#define UART_UART_USR_REG_UART_TFNF_Pos   (1UL)                     /*!< UART_TFNF (Bit 1)                                     */
#define UART_UART_USR_REG_UART_TFNF_Msk   (0x2UL)                   /*!< UART_TFNF (Bitfield-Mask: 0x01)                       */
#define UART_UART_USR_REG_UART_BUSY_Pos   (0UL)                     /*!< UART_BUSY (Bit 0)                                     */
#define UART_UART_USR_REG_UART_BUSY_Msk   (0x1UL)                   /*!< UART_BUSY (Bitfield-Mask: 0x01)                       */


/* =========================================================================================================================== */
/* ================                                           UART2                                           ================ */
/* =========================================================================================================================== */

/* =====================================================  UART2_CTR_REG  ===================================================== */
#define UART2_UART2_CTR_REG_UART_CTR_Pos  (0UL)                     /*!< UART_CTR (Bit 0)                                      */
#define UART2_UART2_CTR_REG_UART_CTR_Msk  (0xffffffffUL)            /*!< UART_CTR (Bitfield-Mask: 0xffffffff)                  */
/* =====================================================  UART2_DLF_REG  ===================================================== */
#define UART2_UART2_DLF_REG_UART_DLF_Pos  (0UL)                     /*!< UART_DLF (Bit 0)                                      */
#define UART2_UART2_DLF_REG_UART_DLF_Msk  (0xfUL)                   /*!< UART_DLF (Bitfield-Mask: 0x0f)                        */
/* ====================================================  UART2_DMASA_REG  ==================================================== */
#define UART2_UART2_DMASA_REG_UART_DMASA_Pos (0UL)                  /*!< UART_DMASA (Bit 0)                                    */
#define UART2_UART2_DMASA_REG_UART_DMASA_Msk (0x1UL)                /*!< UART_DMASA (Bitfield-Mask: 0x01)                      */
/* =====================================================  UART2_HTX_REG  ===================================================== */
#define UART2_UART2_HTX_REG_UART_HALT_TX_Pos (0UL)                  /*!< UART_HALT_TX (Bit 0)                                  */
#define UART2_UART2_HTX_REG_UART_HALT_TX_Msk (0x1UL)                /*!< UART_HALT_TX (Bitfield-Mask: 0x01)                    */
/* ===================================================  UART2_IER_DLH_REG  =================================================== */
#define UART2_UART2_IER_DLH_REG_PTIME_DLH7_Pos (7UL)                /*!< PTIME_DLH7 (Bit 7)                                    */
#define UART2_UART2_IER_DLH_REG_PTIME_DLH7_Msk (0x80UL)             /*!< PTIME_DLH7 (Bitfield-Mask: 0x01)                      */
#define UART2_UART2_IER_DLH_REG_DLH6_5_Pos (5UL)                    /*!< DLH6_5 (Bit 5)                                        */
#define UART2_UART2_IER_DLH_REG_DLH6_5_Msk (0x60UL)                 /*!< DLH6_5 (Bitfield-Mask: 0x03)                          */
#define UART2_UART2_IER_DLH_REG_ELCOLR_DLH4_Pos (4UL)               /*!< ELCOLR_DLH4 (Bit 4)                                   */
#define UART2_UART2_IER_DLH_REG_ELCOLR_DLH4_Msk (0x10UL)            /*!< ELCOLR_DLH4 (Bitfield-Mask: 0x01)                     */
#define UART2_UART2_IER_DLH_REG_EDSSI_DLH3_Pos (3UL)                /*!< EDSSI_DLH3 (Bit 3)                                    */
#define UART2_UART2_IER_DLH_REG_EDSSI_DLH3_Msk (0x8UL)              /*!< EDSSI_DLH3 (Bitfield-Mask: 0x01)                      */
#define UART2_UART2_IER_DLH_REG_ELSI_DLH2_Pos (2UL)                 /*!< ELSI_DLH2 (Bit 2)                                     */
#define UART2_UART2_IER_DLH_REG_ELSI_DLH2_Msk (0x4UL)               /*!< ELSI_DLH2 (Bitfield-Mask: 0x01)                       */
#define UART2_UART2_IER_DLH_REG_ETBEI_DLH1_Pos (1UL)                /*!< ETBEI_DLH1 (Bit 1)                                    */
#define UART2_UART2_IER_DLH_REG_ETBEI_DLH1_Msk (0x2UL)              /*!< ETBEI_DLH1 (Bitfield-Mask: 0x01)                      */
#define UART2_UART2_IER_DLH_REG_ERBFI_DLH0_Pos (0UL)                /*!< ERBFI_DLH0 (Bit 0)                                    */
#define UART2_UART2_IER_DLH_REG_ERBFI_DLH0_Msk (0x1UL)              /*!< ERBFI_DLH0 (Bitfield-Mask: 0x01)                      */
/* ===================================================  UART2_IIR_FCR_REG  =================================================== */
#define UART2_UART2_IIR_FCR_REG_IIR_FCR_Pos (0UL)                   /*!< IIR_FCR (Bit 0)                                       */
#define UART2_UART2_IIR_FCR_REG_IIR_FCR_Msk (0xffUL)                /*!< IIR_FCR (Bitfield-Mask: 0xff)                         */
/* =====================================================  UART2_LCR_EXT  ===================================================== */
#define UART2_UART2_LCR_EXT_UART_TRANSMIT_MODE_Pos (3UL)            /*!< UART_TRANSMIT_MODE (Bit 3)                            */
#define UART2_UART2_LCR_EXT_UART_TRANSMIT_MODE_Msk (0x8UL)          /*!< UART_TRANSMIT_MODE (Bitfield-Mask: 0x01)              */
#define UART2_UART2_LCR_EXT_UART_SEND_ADDR_Pos (2UL)                /*!< UART_SEND_ADDR (Bit 2)                                */
#define UART2_UART2_LCR_EXT_UART_SEND_ADDR_Msk (0x4UL)              /*!< UART_SEND_ADDR (Bitfield-Mask: 0x01)                  */
#define UART2_UART2_LCR_EXT_UART_ADDR_MATCH_Pos (1UL)               /*!< UART_ADDR_MATCH (Bit 1)                               */
#define UART2_UART2_LCR_EXT_UART_ADDR_MATCH_Msk (0x2UL)             /*!< UART_ADDR_MATCH (Bitfield-Mask: 0x01)                 */
#define UART2_UART2_LCR_EXT_UART_DLS_E_Pos (0UL)                    /*!< UART_DLS_E (Bit 0)                                    */
#define UART2_UART2_LCR_EXT_UART_DLS_E_Msk (0x1UL)                  /*!< UART_DLS_E (Bitfield-Mask: 0x01)                      */
/* =====================================================  UART2_LCR_REG  ===================================================== */
#define UART2_UART2_LCR_REG_UART_DLAB_Pos (7UL)                     /*!< UART_DLAB (Bit 7)                                     */
#define UART2_UART2_LCR_REG_UART_DLAB_Msk (0x80UL)                  /*!< UART_DLAB (Bitfield-Mask: 0x01)                       */
#define UART2_UART2_LCR_REG_UART_BC_Pos   (6UL)                     /*!< UART_BC (Bit 6)                                       */
#define UART2_UART2_LCR_REG_UART_BC_Msk   (0x40UL)                  /*!< UART_BC (Bitfield-Mask: 0x01)                         */
#define UART2_UART2_LCR_REG_UART_SP_Pos   (5UL)                     /*!< UART_SP (Bit 5)                                       */
#define UART2_UART2_LCR_REG_UART_SP_Msk   (0x20UL)                  /*!< UART_SP (Bitfield-Mask: 0x01)                         */
#define UART2_UART2_LCR_REG_UART_EPS_Pos  (4UL)                     /*!< UART_EPS (Bit 4)                                      */
#define UART2_UART2_LCR_REG_UART_EPS_Msk  (0x10UL)                  /*!< UART_EPS (Bitfield-Mask: 0x01)                        */
#define UART2_UART2_LCR_REG_UART_PEN_Pos  (3UL)                     /*!< UART_PEN (Bit 3)                                      */
#define UART2_UART2_LCR_REG_UART_PEN_Msk  (0x8UL)                   /*!< UART_PEN (Bitfield-Mask: 0x01)                        */
#define UART2_UART2_LCR_REG_UART_STOP_Pos (2UL)                     /*!< UART_STOP (Bit 2)                                     */
#define UART2_UART2_LCR_REG_UART_STOP_Msk (0x4UL)                   /*!< UART_STOP (Bitfield-Mask: 0x01)                       */
#define UART2_UART2_LCR_REG_UART_DLS_Pos  (0UL)                     /*!< UART_DLS (Bit 0)                                      */
#define UART2_UART2_LCR_REG_UART_DLS_Msk  (0x3UL)                   /*!< UART_DLS (Bitfield-Mask: 0x03)                        */
/* =====================================================  UART2_LSR_REG  ===================================================== */
#define UART2_UART2_LSR_REG_UART_ADDR_RCVD_Pos (8UL)                /*!< UART_ADDR_RCVD (Bit 8)                                */
#define UART2_UART2_LSR_REG_UART_ADDR_RCVD_Msk (0x100UL)            /*!< UART_ADDR_RCVD (Bitfield-Mask: 0x01)                  */
#define UART2_UART2_LSR_REG_UART_RFE_Pos  (7UL)                     /*!< UART_RFE (Bit 7)                                      */
#define UART2_UART2_LSR_REG_UART_RFE_Msk  (0x80UL)                  /*!< UART_RFE (Bitfield-Mask: 0x01)                        */
#define UART2_UART2_LSR_REG_UART_TEMT_Pos (6UL)                     /*!< UART_TEMT (Bit 6)                                     */
#define UART2_UART2_LSR_REG_UART_TEMT_Msk (0x40UL)                  /*!< UART_TEMT (Bitfield-Mask: 0x01)                       */
#define UART2_UART2_LSR_REG_UART_THRE_Pos (5UL)                     /*!< UART_THRE (Bit 5)                                     */
#define UART2_UART2_LSR_REG_UART_THRE_Msk (0x20UL)                  /*!< UART_THRE (Bitfield-Mask: 0x01)                       */
#define UART2_UART2_LSR_REG_UART_BI_Pos   (4UL)                     /*!< UART_BI (Bit 4)                                       */
#define UART2_UART2_LSR_REG_UART_BI_Msk   (0x10UL)                  /*!< UART_BI (Bitfield-Mask: 0x01)                         */
#define UART2_UART2_LSR_REG_UART_FE_Pos   (3UL)                     /*!< UART_FE (Bit 3)                                       */
#define UART2_UART2_LSR_REG_UART_FE_Msk   (0x8UL)                   /*!< UART_FE (Bitfield-Mask: 0x01)                         */
#define UART2_UART2_LSR_REG_UART_PE_Pos   (2UL)                     /*!< UART_PE (Bit 2)                                       */
#define UART2_UART2_LSR_REG_UART_PE_Msk   (0x4UL)                   /*!< UART_PE (Bitfield-Mask: 0x01)                         */
#define UART2_UART2_LSR_REG_UART_OE_Pos   (1UL)                     /*!< UART_OE (Bit 1)                                       */
#define UART2_UART2_LSR_REG_UART_OE_Msk   (0x2UL)                   /*!< UART_OE (Bitfield-Mask: 0x01)                         */
#define UART2_UART2_LSR_REG_UART_DR_Pos   (0UL)                     /*!< UART_DR (Bit 0)                                       */
#define UART2_UART2_LSR_REG_UART_DR_Msk   (0x1UL)                   /*!< UART_DR (Bitfield-Mask: 0x01)                         */
/* =====================================================  UART2_MCR_REG  ===================================================== */
#define UART2_UART2_MCR_REG_UART_AFCE_Pos (5UL)                     /*!< UART_AFCE (Bit 5)                                     */
#define UART2_UART2_MCR_REG_UART_AFCE_Msk (0x20UL)                  /*!< UART_AFCE (Bitfield-Mask: 0x01)                       */
#define UART2_UART2_MCR_REG_UART_LB_Pos   (4UL)                     /*!< UART_LB (Bit 4)                                       */
#define UART2_UART2_MCR_REG_UART_LB_Msk   (0x10UL)                  /*!< UART_LB (Bitfield-Mask: 0x01)                         */
#define UART2_UART2_MCR_REG_UART_RTS_Pos  (1UL)                     /*!< UART_RTS (Bit 1)                                      */
#define UART2_UART2_MCR_REG_UART_RTS_Msk  (0x2UL)                   /*!< UART_RTS (Bitfield-Mask: 0x01)                        */
/* =====================================================  UART2_MSR_REG  ===================================================== */
#define UART2_UART2_MSR_REG_UART_CTS_Pos  (4UL)                     /*!< UART_CTS (Bit 4)                                      */
#define UART2_UART2_MSR_REG_UART_CTS_Msk  (0x10UL)                  /*!< UART_CTS (Bitfield-Mask: 0x01)                        */
#define UART2_UART2_MSR_REG_UART_DCTS_Pos (0UL)                     /*!< UART_DCTS (Bit 0)                                     */
#define UART2_UART2_MSR_REG_UART_DCTS_Msk (0x1UL)                   /*!< UART_DCTS (Bitfield-Mask: 0x01)                       */
/* =====================================================  UART2_RAR_REG  ===================================================== */
#define UART2_UART2_RAR_REG_UART_RAR_Pos  (0UL)                     /*!< UART_RAR (Bit 0)                                      */
#define UART2_UART2_RAR_REG_UART_RAR_Msk  (0xffUL)                  /*!< UART_RAR (Bitfield-Mask: 0xff)                        */
/* =================================================  UART2_RBR_THR_DLL_REG  ================================================= */
#define UART2_UART2_RBR_THR_DLL_REG_RBR_THR_9BIT_Pos (8UL)          /*!< RBR_THR_9BIT (Bit 8)                                  */
#define UART2_UART2_RBR_THR_DLL_REG_RBR_THR_9BIT_Msk (0x100UL)      /*!< RBR_THR_9BIT (Bitfield-Mask: 0x01)                    */
#define UART2_UART2_RBR_THR_DLL_REG_RBR_THR_DLL_Pos (0UL)           /*!< RBR_THR_DLL (Bit 0)                                   */
#define UART2_UART2_RBR_THR_DLL_REG_RBR_THR_DLL_Msk (0xffUL)        /*!< RBR_THR_DLL (Bitfield-Mask: 0xff)                     */
/* =====================================================  UART2_RFL_REG  ===================================================== */
#define UART2_UART2_RFL_REG_UART_RECEIVE_FIFO_LEVEL_Pos (0UL)       /*!< UART_RECEIVE_FIFO_LEVEL (Bit 0)                       */
#define UART2_UART2_RFL_REG_UART_RECEIVE_FIFO_LEVEL_Msk (0x1fUL)    /*!< UART_RECEIVE_FIFO_LEVEL (Bitfield-Mask: 0x1f)         */
/* ====================================================  UART2_SBCR_REG  ===================================================== */
#define UART2_UART2_SBCR_REG_UART_SHADOW_BREAK_CONTROL_Pos (0UL)    /*!< UART_SHADOW_BREAK_CONTROL (Bit 0)                     */
#define UART2_UART2_SBCR_REG_UART_SHADOW_BREAK_CONTROL_Msk (0x1UL)  /*!< UART_SHADOW_BREAK_CONTROL (Bitfield-Mask: 0x01)       */
/* =====================================================  UART2_SCR_REG  ===================================================== */
#define UART2_UART2_SCR_REG_UART_SCRATCH_PAD_Pos (0UL)              /*!< UART_SCRATCH_PAD (Bit 0)                              */
#define UART2_UART2_SCR_REG_UART_SCRATCH_PAD_Msk (0xffUL)           /*!< UART_SCRATCH_PAD (Bitfield-Mask: 0xff)                */
/* ====================================================  UART2_SDMAM_REG  ==================================================== */
#define UART2_UART2_SDMAM_REG_UART_SHADOW_DMA_MODE_Pos (0UL)        /*!< UART_SHADOW_DMA_MODE (Bit 0)                          */
#define UART2_UART2_SDMAM_REG_UART_SHADOW_DMA_MODE_Msk (0x1UL)      /*!< UART_SHADOW_DMA_MODE (Bitfield-Mask: 0x01)            */
/* =====================================================  UART2_SFE_REG  ===================================================== */
#define UART2_UART2_SFE_REG_UART_SHADOW_FIFO_ENABLE_Pos (0UL)       /*!< UART_SHADOW_FIFO_ENABLE (Bit 0)                       */
#define UART2_UART2_SFE_REG_UART_SHADOW_FIFO_ENABLE_Msk (0x1UL)     /*!< UART_SHADOW_FIFO_ENABLE (Bitfield-Mask: 0x01)         */
/* =================================================  UART2_SRBR_STHR0_REG  ================================================== */
#define UART2_UART2_SRBR_STHR0_REG_SRBR_STHRx_Pos (0UL)             /*!< SRBR_STHRx (Bit 0)                                    */
#define UART2_UART2_SRBR_STHR0_REG_SRBR_STHRx_Msk (0xffUL)          /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =================================================  UART2_SRBR_STHR10_REG  ================================================= */
#define UART2_UART2_SRBR_STHR10_REG_SRBR_STHRx_Pos (0UL)            /*!< SRBR_STHRx (Bit 0)                                    */
#define UART2_UART2_SRBR_STHR10_REG_SRBR_STHRx_Msk (0xffUL)         /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =================================================  UART2_SRBR_STHR11_REG  ================================================= */
#define UART2_UART2_SRBR_STHR11_REG_SRBR_STHRx_Pos (0UL)            /*!< SRBR_STHRx (Bit 0)                                    */
#define UART2_UART2_SRBR_STHR11_REG_SRBR_STHRx_Msk (0xffUL)         /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =================================================  UART2_SRBR_STHR12_REG  ================================================= */
#define UART2_UART2_SRBR_STHR12_REG_SRBR_STHRx_Pos (0UL)            /*!< SRBR_STHRx (Bit 0)                                    */
#define UART2_UART2_SRBR_STHR12_REG_SRBR_STHRx_Msk (0xffUL)         /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =================================================  UART2_SRBR_STHR13_REG  ================================================= */
#define UART2_UART2_SRBR_STHR13_REG_SRBR_STHRx_Pos (0UL)            /*!< SRBR_STHRx (Bit 0)                                    */
#define UART2_UART2_SRBR_STHR13_REG_SRBR_STHRx_Msk (0xffUL)         /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =================================================  UART2_SRBR_STHR14_REG  ================================================= */
#define UART2_UART2_SRBR_STHR14_REG_SRBR_STHRx_Pos (0UL)            /*!< SRBR_STHRx (Bit 0)                                    */
#define UART2_UART2_SRBR_STHR14_REG_SRBR_STHRx_Msk (0xffUL)         /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =================================================  UART2_SRBR_STHR15_REG  ================================================= */
#define UART2_UART2_SRBR_STHR15_REG_SRBR_STHRx_Pos (0UL)            /*!< SRBR_STHRx (Bit 0)                                    */
#define UART2_UART2_SRBR_STHR15_REG_SRBR_STHRx_Msk (0xffUL)         /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =================================================  UART2_SRBR_STHR1_REG  ================================================== */
#define UART2_UART2_SRBR_STHR1_REG_SRBR_STHRx_Pos (0UL)             /*!< SRBR_STHRx (Bit 0)                                    */
#define UART2_UART2_SRBR_STHR1_REG_SRBR_STHRx_Msk (0xffUL)          /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =================================================  UART2_SRBR_STHR2_REG  ================================================== */
#define UART2_UART2_SRBR_STHR2_REG_SRBR_STHRx_Pos (0UL)             /*!< SRBR_STHRx (Bit 0)                                    */
#define UART2_UART2_SRBR_STHR2_REG_SRBR_STHRx_Msk (0xffUL)          /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =================================================  UART2_SRBR_STHR3_REG  ================================================== */
#define UART2_UART2_SRBR_STHR3_REG_SRBR_STHRx_Pos (0UL)             /*!< SRBR_STHRx (Bit 0)                                    */
#define UART2_UART2_SRBR_STHR3_REG_SRBR_STHRx_Msk (0xffUL)          /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =================================================  UART2_SRBR_STHR4_REG  ================================================== */
#define UART2_UART2_SRBR_STHR4_REG_SRBR_STHRx_Pos (0UL)             /*!< SRBR_STHRx (Bit 0)                                    */
#define UART2_UART2_SRBR_STHR4_REG_SRBR_STHRx_Msk (0xffUL)          /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =================================================  UART2_SRBR_STHR5_REG  ================================================== */
#define UART2_UART2_SRBR_STHR5_REG_SRBR_STHRx_Pos (0UL)             /*!< SRBR_STHRx (Bit 0)                                    */
#define UART2_UART2_SRBR_STHR5_REG_SRBR_STHRx_Msk (0xffUL)          /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =================================================  UART2_SRBR_STHR6_REG  ================================================== */
#define UART2_UART2_SRBR_STHR6_REG_SRBR_STHRx_Pos (0UL)             /*!< SRBR_STHRx (Bit 0)                                    */
#define UART2_UART2_SRBR_STHR6_REG_SRBR_STHRx_Msk (0xffUL)          /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =================================================  UART2_SRBR_STHR7_REG  ================================================== */
#define UART2_UART2_SRBR_STHR7_REG_SRBR_STHRx_Pos (0UL)             /*!< SRBR_STHRx (Bit 0)                                    */
#define UART2_UART2_SRBR_STHR7_REG_SRBR_STHRx_Msk (0xffUL)          /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =================================================  UART2_SRBR_STHR8_REG  ================================================== */
#define UART2_UART2_SRBR_STHR8_REG_SRBR_STHRx_Pos (0UL)             /*!< SRBR_STHRx (Bit 0)                                    */
#define UART2_UART2_SRBR_STHR8_REG_SRBR_STHRx_Msk (0xffUL)          /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =================================================  UART2_SRBR_STHR9_REG  ================================================== */
#define UART2_UART2_SRBR_STHR9_REG_SRBR_STHRx_Pos (0UL)             /*!< SRBR_STHRx (Bit 0)                                    */
#define UART2_UART2_SRBR_STHR9_REG_SRBR_STHRx_Msk (0xffUL)          /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =====================================================  UART2_SRR_REG  ===================================================== */
#define UART2_UART2_SRR_REG_UART_XFR_Pos  (2UL)                     /*!< UART_XFR (Bit 2)                                      */
#define UART2_UART2_SRR_REG_UART_XFR_Msk  (0x4UL)                   /*!< UART_XFR (Bitfield-Mask: 0x01)                        */
#define UART2_UART2_SRR_REG_UART_RFR_Pos  (1UL)                     /*!< UART_RFR (Bit 1)                                      */
#define UART2_UART2_SRR_REG_UART_RFR_Msk  (0x2UL)                   /*!< UART_RFR (Bitfield-Mask: 0x01)                        */
#define UART2_UART2_SRR_REG_UART_UR_Pos   (0UL)                     /*!< UART_UR (Bit 0)                                       */
#define UART2_UART2_SRR_REG_UART_UR_Msk   (0x1UL)                   /*!< UART_UR (Bitfield-Mask: 0x01)                         */
/* ====================================================  UART2_SRTS_REG  ===================================================== */
#define UART2_UART2_SRTS_REG_UART_SHADOW_REQUEST_TO_SEND_Pos (0UL)  /*!< UART_SHADOW_REQUEST_TO_SEND (Bit 0)                   */
#define UART2_UART2_SRTS_REG_UART_SHADOW_REQUEST_TO_SEND_Msk (0x1UL) /*!< UART_SHADOW_REQUEST_TO_SEND (Bitfield-Mask: 0x01)    */
/* =====================================================  UART2_SRT_REG  ===================================================== */
#define UART2_UART2_SRT_REG_UART_SHADOW_RCVR_TRIGGER_Pos (0UL)      /*!< UART_SHADOW_RCVR_TRIGGER (Bit 0)                      */
#define UART2_UART2_SRT_REG_UART_SHADOW_RCVR_TRIGGER_Msk (0x3UL)    /*!< UART_SHADOW_RCVR_TRIGGER (Bitfield-Mask: 0x03)        */
/* ====================================================  UART2_STET_REG  ===================================================== */
#define UART2_UART2_STET_REG_UART_SHADOW_TX_EMPTY_TRIGGER_Pos (0UL) /*!< UART_SHADOW_TX_EMPTY_TRIGGER (Bit 0)                  */
#define UART2_UART2_STET_REG_UART_SHADOW_TX_EMPTY_TRIGGER_Msk (0x3UL) /*!< UART_SHADOW_TX_EMPTY_TRIGGER (Bitfield-Mask: 0x03)  */
/* =====================================================  UART2_TAR_REG  ===================================================== */
#define UART2_UART2_TAR_REG_UART_TAR_Pos  (0UL)                     /*!< UART_TAR (Bit 0)                                      */
#define UART2_UART2_TAR_REG_UART_TAR_Msk  (0xffUL)                  /*!< UART_TAR (Bitfield-Mask: 0xff)                        */
/* =====================================================  UART2_TFL_REG  ===================================================== */
#define UART2_UART2_TFL_REG_UART_TRANSMIT_FIFO_LEVEL_Pos (0UL)      /*!< UART_TRANSMIT_FIFO_LEVEL (Bit 0)                      */
#define UART2_UART2_TFL_REG_UART_TRANSMIT_FIFO_LEVEL_Msk (0x1fUL)   /*!< UART_TRANSMIT_FIFO_LEVEL (Bitfield-Mask: 0x1f)        */
/* =====================================================  UART2_UCV_REG  ===================================================== */
#define UART2_UART2_UCV_REG_UART_UCV_Pos  (0UL)                     /*!< UART_UCV (Bit 0)                                      */
#define UART2_UART2_UCV_REG_UART_UCV_Msk  (0xffffffffUL)            /*!< UART_UCV (Bitfield-Mask: 0xffffffff)                  */
/* =====================================================  UART2_USR_REG  ===================================================== */
#define UART2_UART2_USR_REG_UART_RFF_Pos  (4UL)                     /*!< UART_RFF (Bit 4)                                      */
#define UART2_UART2_USR_REG_UART_RFF_Msk  (0x10UL)                  /*!< UART_RFF (Bitfield-Mask: 0x01)                        */
#define UART2_UART2_USR_REG_UART_RFNE_Pos (3UL)                     /*!< UART_RFNE (Bit 3)                                     */
#define UART2_UART2_USR_REG_UART_RFNE_Msk (0x8UL)                   /*!< UART_RFNE (Bitfield-Mask: 0x01)                       */
#define UART2_UART2_USR_REG_UART_TFE_Pos  (2UL)                     /*!< UART_TFE (Bit 2)                                      */
#define UART2_UART2_USR_REG_UART_TFE_Msk  (0x4UL)                   /*!< UART_TFE (Bitfield-Mask: 0x01)                        */
#define UART2_UART2_USR_REG_UART_TFNF_Pos (1UL)                     /*!< UART_TFNF (Bit 1)                                     */
#define UART2_UART2_USR_REG_UART_TFNF_Msk (0x2UL)                   /*!< UART_TFNF (Bitfield-Mask: 0x01)                       */
#define UART2_UART2_USR_REG_UART_BUSY_Pos (0UL)                     /*!< UART_BUSY (Bit 0)                                     */
#define UART2_UART2_USR_REG_UART_BUSY_Msk (0x1UL)                   /*!< UART_BUSY (Bitfield-Mask: 0x01)                       */


/* =========================================================================================================================== */
/* ================                                           UART3                                           ================ */
/* =========================================================================================================================== */

/* ===================================================  UART3_CONFIG_REG  ==================================================== */
#define UART3_UART3_CONFIG_REG_ISO7816_SCRATCH_PAD_Pos (3UL)        /*!< ISO7816_SCRATCH_PAD (Bit 3)                           */
#define UART3_UART3_CONFIG_REG_ISO7816_SCRATCH_PAD_Msk (0xf8UL)     /*!< ISO7816_SCRATCH_PAD (Bitfield-Mask: 0x1f)             */
#define UART3_UART3_CONFIG_REG_ISO7816_ENABLE_Pos (2UL)             /*!< ISO7816_ENABLE (Bit 2)                                */
#define UART3_UART3_CONFIG_REG_ISO7816_ENABLE_Msk (0x4UL)           /*!< ISO7816_ENABLE (Bitfield-Mask: 0x01)                  */
#define UART3_UART3_CONFIG_REG_ISO7816_ERR_SIG_EN_Pos (1UL)         /*!< ISO7816_ERR_SIG_EN (Bit 1)                            */
#define UART3_UART3_CONFIG_REG_ISO7816_ERR_SIG_EN_Msk (0x2UL)       /*!< ISO7816_ERR_SIG_EN (Bitfield-Mask: 0x01)              */
#define UART3_UART3_CONFIG_REG_ISO7816_CONVENTION_Pos (0UL)         /*!< ISO7816_CONVENTION (Bit 0)                            */
#define UART3_UART3_CONFIG_REG_ISO7816_CONVENTION_Msk (0x1UL)       /*!< ISO7816_CONVENTION (Bitfield-Mask: 0x01)              */
/* ====================================================  UART3_CTRL_REG  ===================================================== */
#define UART3_UART3_CTRL_REG_ISO7816_AUTO_GT_Pos (11UL)             /*!< ISO7816_AUTO_GT (Bit 11)                              */
#define UART3_UART3_CTRL_REG_ISO7816_AUTO_GT_Msk (0x800UL)          /*!< ISO7816_AUTO_GT (Bitfield-Mask: 0x01)                 */
#define UART3_UART3_CTRL_REG_ISO7816_ERR_TX_VALUE_IRQMASK_Pos (10UL) /*!< ISO7816_ERR_TX_VALUE_IRQMASK (Bit 10)                */
#define UART3_UART3_CTRL_REG_ISO7816_ERR_TX_VALUE_IRQMASK_Msk (0x400UL) /*!< ISO7816_ERR_TX_VALUE_IRQMASK (Bitfield-Mask: 0x01) */
#define UART3_UART3_CTRL_REG_ISO7816_ERR_TX_TIME_IRQMASK_Pos (9UL)  /*!< ISO7816_ERR_TX_TIME_IRQMASK (Bit 9)                   */
#define UART3_UART3_CTRL_REG_ISO7816_ERR_TX_TIME_IRQMASK_Msk (0x200UL) /*!< ISO7816_ERR_TX_TIME_IRQMASK (Bitfield-Mask: 0x01)  */
#define UART3_UART3_CTRL_REG_ISO7816_TIM_EXPIRED_IRQMASK_Pos (8UL)  /*!< ISO7816_TIM_EXPIRED_IRQMASK (Bit 8)                   */
#define UART3_UART3_CTRL_REG_ISO7816_TIM_EXPIRED_IRQMASK_Msk (0x100UL) /*!< ISO7816_TIM_EXPIRED_IRQMASK (Bitfield-Mask: 0x01)  */
#define UART3_UART3_CTRL_REG_ISO7816_CLK_STATUS_Pos (7UL)           /*!< ISO7816_CLK_STATUS (Bit 7)                            */
#define UART3_UART3_CTRL_REG_ISO7816_CLK_STATUS_Msk (0x80UL)        /*!< ISO7816_CLK_STATUS (Bitfield-Mask: 0x01)              */
#define UART3_UART3_CTRL_REG_ISO7816_CLK_LEVEL_Pos (6UL)            /*!< ISO7816_CLK_LEVEL (Bit 6)                             */
#define UART3_UART3_CTRL_REG_ISO7816_CLK_LEVEL_Msk (0x40UL)         /*!< ISO7816_CLK_LEVEL (Bitfield-Mask: 0x01)               */
#define UART3_UART3_CTRL_REG_ISO7816_CLK_EN_Pos (5UL)               /*!< ISO7816_CLK_EN (Bit 5)                                */
#define UART3_UART3_CTRL_REG_ISO7816_CLK_EN_Msk (0x20UL)            /*!< ISO7816_CLK_EN (Bitfield-Mask: 0x01)                  */
#define UART3_UART3_CTRL_REG_ISO7816_CLK_DIV_Pos (0UL)              /*!< ISO7816_CLK_DIV (Bit 0)                               */
#define UART3_UART3_CTRL_REG_ISO7816_CLK_DIV_Msk (0x1fUL)           /*!< ISO7816_CLK_DIV (Bitfield-Mask: 0x1f)                 */
/* =====================================================  UART3_CTR_REG  ===================================================== */
#define UART3_UART3_CTR_REG_UART_CTR_Pos  (0UL)                     /*!< UART_CTR (Bit 0)                                      */
#define UART3_UART3_CTR_REG_UART_CTR_Msk  (0xffffffffUL)            /*!< UART_CTR (Bitfield-Mask: 0xffffffff)                  */
/* =====================================================  UART3_DLF_REG  ===================================================== */
#define UART3_UART3_DLF_REG_UART_DLF_Pos  (0UL)                     /*!< UART_DLF (Bit 0)                                      */
#define UART3_UART3_DLF_REG_UART_DLF_Msk  (0xfUL)                   /*!< UART_DLF (Bitfield-Mask: 0x0f)                        */
/* ====================================================  UART3_DMASA_REG  ==================================================== */
#define UART3_UART3_DMASA_REG_UART_DMASA_Pos (0UL)                  /*!< UART_DMASA (Bit 0)                                    */
#define UART3_UART3_DMASA_REG_UART_DMASA_Msk (0x1UL)                /*!< UART_DMASA (Bitfield-Mask: 0x01)                      */
/* ==================================================  UART3_ERR_CTRL_REG  =================================================== */
#define UART3_UART3_ERR_CTRL_REG_ISO7816_ERR_PULSE_WIDTH_Pos (4UL)  /*!< ISO7816_ERR_PULSE_WIDTH (Bit 4)                       */
#define UART3_UART3_ERR_CTRL_REG_ISO7816_ERR_PULSE_WIDTH_Msk (0x1f0UL) /*!< ISO7816_ERR_PULSE_WIDTH (Bitfield-Mask: 0x1f)      */
#define UART3_UART3_ERR_CTRL_REG_ISO7816_ERR_PULSE_OFFSET_Pos (0UL) /*!< ISO7816_ERR_PULSE_OFFSET (Bit 0)                      */
#define UART3_UART3_ERR_CTRL_REG_ISO7816_ERR_PULSE_OFFSET_Msk (0xfUL) /*!< ISO7816_ERR_PULSE_OFFSET (Bitfield-Mask: 0x0f)      */
/* =====================================================  UART3_HTX_REG  ===================================================== */
#define UART3_UART3_HTX_REG_UART_HALT_TX_Pos (0UL)                  /*!< UART_HALT_TX (Bit 0)                                  */
#define UART3_UART3_HTX_REG_UART_HALT_TX_Msk (0x1UL)                /*!< UART_HALT_TX (Bitfield-Mask: 0x01)                    */
/* ===================================================  UART3_IER_DLH_REG  =================================================== */
#define UART3_UART3_IER_DLH_REG_PTIME_DLH7_Pos (7UL)                /*!< PTIME_DLH7 (Bit 7)                                    */
#define UART3_UART3_IER_DLH_REG_PTIME_DLH7_Msk (0x80UL)             /*!< PTIME_DLH7 (Bitfield-Mask: 0x01)                      */
#define UART3_UART3_IER_DLH_REG_DLH6_5_Pos (5UL)                    /*!< DLH6_5 (Bit 5)                                        */
#define UART3_UART3_IER_DLH_REG_DLH6_5_Msk (0x60UL)                 /*!< DLH6_5 (Bitfield-Mask: 0x03)                          */
#define UART3_UART3_IER_DLH_REG_ELCOLR_DLH4_Pos (4UL)               /*!< ELCOLR_DLH4 (Bit 4)                                   */
#define UART3_UART3_IER_DLH_REG_ELCOLR_DLH4_Msk (0x10UL)            /*!< ELCOLR_DLH4 (Bitfield-Mask: 0x01)                     */
#define UART3_UART3_IER_DLH_REG_EDSSI_DLH3_Pos (3UL)                /*!< EDSSI_DLH3 (Bit 3)                                    */
#define UART3_UART3_IER_DLH_REG_EDSSI_DLH3_Msk (0x8UL)              /*!< EDSSI_DLH3 (Bitfield-Mask: 0x01)                      */
#define UART3_UART3_IER_DLH_REG_ELSI_DLH2_Pos (2UL)                 /*!< ELSI_DLH2 (Bit 2)                                     */
#define UART3_UART3_IER_DLH_REG_ELSI_DLH2_Msk (0x4UL)               /*!< ELSI_DLH2 (Bitfield-Mask: 0x01)                       */
#define UART3_UART3_IER_DLH_REG_ETBEI_DLH1_Pos (1UL)                /*!< ETBEI_DLH1 (Bit 1)                                    */
#define UART3_UART3_IER_DLH_REG_ETBEI_DLH1_Msk (0x2UL)              /*!< ETBEI_DLH1 (Bitfield-Mask: 0x01)                      */
#define UART3_UART3_IER_DLH_REG_ERBFI_DLH0_Pos (0UL)                /*!< ERBFI_DLH0 (Bit 0)                                    */
#define UART3_UART3_IER_DLH_REG_ERBFI_DLH0_Msk (0x1UL)              /*!< ERBFI_DLH0 (Bitfield-Mask: 0x01)                      */
/* ===================================================  UART3_IIR_FCR_REG  =================================================== */
#define UART3_UART3_IIR_FCR_REG_IIR_FCR_Pos (0UL)                   /*!< IIR_FCR (Bit 0)                                       */
#define UART3_UART3_IIR_FCR_REG_IIR_FCR_Msk (0xffUL)                /*!< IIR_FCR (Bitfield-Mask: 0xff)                         */
/* =================================================  UART3_IRQ_STATUS_REG  ================================================== */
#define UART3_UART3_IRQ_STATUS_REG_ISO7816_ERR_TX_VALUE_IRQ_Pos (2UL) /*!< ISO7816_ERR_TX_VALUE_IRQ (Bit 2)                    */
#define UART3_UART3_IRQ_STATUS_REG_ISO7816_ERR_TX_VALUE_IRQ_Msk (0x4UL) /*!< ISO7816_ERR_TX_VALUE_IRQ (Bitfield-Mask: 0x01)    */
#define UART3_UART3_IRQ_STATUS_REG_ISO7816_ERR_TX_TIME_IRQ_Pos (1UL) /*!< ISO7816_ERR_TX_TIME_IRQ (Bit 1)                      */
#define UART3_UART3_IRQ_STATUS_REG_ISO7816_ERR_TX_TIME_IRQ_Msk (0x2UL) /*!< ISO7816_ERR_TX_TIME_IRQ (Bitfield-Mask: 0x01)      */
#define UART3_UART3_IRQ_STATUS_REG_ISO7816_TIM_EXPIRED_IRQ_Pos (0UL) /*!< ISO7816_TIM_EXPIRED_IRQ (Bit 0)                      */
#define UART3_UART3_IRQ_STATUS_REG_ISO7816_TIM_EXPIRED_IRQ_Msk (0x1UL) /*!< ISO7816_TIM_EXPIRED_IRQ (Bitfield-Mask: 0x01)      */
/* =====================================================  UART3_LCR_EXT  ===================================================== */
#define UART3_UART3_LCR_EXT_UART_TRANSMIT_MODE_Pos (3UL)            /*!< UART_TRANSMIT_MODE (Bit 3)                            */
#define UART3_UART3_LCR_EXT_UART_TRANSMIT_MODE_Msk (0x8UL)          /*!< UART_TRANSMIT_MODE (Bitfield-Mask: 0x01)              */
#define UART3_UART3_LCR_EXT_UART_SEND_ADDR_Pos (2UL)                /*!< UART_SEND_ADDR (Bit 2)                                */
#define UART3_UART3_LCR_EXT_UART_SEND_ADDR_Msk (0x4UL)              /*!< UART_SEND_ADDR (Bitfield-Mask: 0x01)                  */
#define UART3_UART3_LCR_EXT_UART_ADDR_MATCH_Pos (1UL)               /*!< UART_ADDR_MATCH (Bit 1)                               */
#define UART3_UART3_LCR_EXT_UART_ADDR_MATCH_Msk (0x2UL)             /*!< UART_ADDR_MATCH (Bitfield-Mask: 0x01)                 */
#define UART3_UART3_LCR_EXT_UART_DLS_E_Pos (0UL)                    /*!< UART_DLS_E (Bit 0)                                    */
#define UART3_UART3_LCR_EXT_UART_DLS_E_Msk (0x1UL)                  /*!< UART_DLS_E (Bitfield-Mask: 0x01)                      */
/* =====================================================  UART3_LCR_REG  ===================================================== */
#define UART3_UART3_LCR_REG_UART_DLAB_Pos (7UL)                     /*!< UART_DLAB (Bit 7)                                     */
#define UART3_UART3_LCR_REG_UART_DLAB_Msk (0x80UL)                  /*!< UART_DLAB (Bitfield-Mask: 0x01)                       */
#define UART3_UART3_LCR_REG_UART_BC_Pos   (6UL)                     /*!< UART_BC (Bit 6)                                       */
#define UART3_UART3_LCR_REG_UART_BC_Msk   (0x40UL)                  /*!< UART_BC (Bitfield-Mask: 0x01)                         */
#define UART3_UART3_LCR_REG_UART_SP_Pos   (5UL)                     /*!< UART_SP (Bit 5)                                       */
#define UART3_UART3_LCR_REG_UART_SP_Msk   (0x20UL)                  /*!< UART_SP (Bitfield-Mask: 0x01)                         */
#define UART3_UART3_LCR_REG_UART_EPS_Pos  (4UL)                     /*!< UART_EPS (Bit 4)                                      */
#define UART3_UART3_LCR_REG_UART_EPS_Msk  (0x10UL)                  /*!< UART_EPS (Bitfield-Mask: 0x01)                        */
#define UART3_UART3_LCR_REG_UART_PEN_Pos  (3UL)                     /*!< UART_PEN (Bit 3)                                      */
#define UART3_UART3_LCR_REG_UART_PEN_Msk  (0x8UL)                   /*!< UART_PEN (Bitfield-Mask: 0x01)                        */
#define UART3_UART3_LCR_REG_UART_STOP_Pos (2UL)                     /*!< UART_STOP (Bit 2)                                     */
#define UART3_UART3_LCR_REG_UART_STOP_Msk (0x4UL)                   /*!< UART_STOP (Bitfield-Mask: 0x01)                       */
#define UART3_UART3_LCR_REG_UART_DLS_Pos  (0UL)                     /*!< UART_DLS (Bit 0)                                      */
#define UART3_UART3_LCR_REG_UART_DLS_Msk  (0x3UL)                   /*!< UART_DLS (Bitfield-Mask: 0x03)                        */
/* =====================================================  UART3_LSR_REG  ===================================================== */
#define UART3_UART3_LSR_REG_UART_ADDR_RCVD_Pos (8UL)                /*!< UART_ADDR_RCVD (Bit 8)                                */
#define UART3_UART3_LSR_REG_UART_ADDR_RCVD_Msk (0x100UL)            /*!< UART_ADDR_RCVD (Bitfield-Mask: 0x01)                  */
#define UART3_UART3_LSR_REG_UART_RFE_Pos  (7UL)                     /*!< UART_RFE (Bit 7)                                      */
#define UART3_UART3_LSR_REG_UART_RFE_Msk  (0x80UL)                  /*!< UART_RFE (Bitfield-Mask: 0x01)                        */
#define UART3_UART3_LSR_REG_UART_TEMT_Pos (6UL)                     /*!< UART_TEMT (Bit 6)                                     */
#define UART3_UART3_LSR_REG_UART_TEMT_Msk (0x40UL)                  /*!< UART_TEMT (Bitfield-Mask: 0x01)                       */
#define UART3_UART3_LSR_REG_UART_THRE_Pos (5UL)                     /*!< UART_THRE (Bit 5)                                     */
#define UART3_UART3_LSR_REG_UART_THRE_Msk (0x20UL)                  /*!< UART_THRE (Bitfield-Mask: 0x01)                       */
#define UART3_UART3_LSR_REG_UART_BI_Pos   (4UL)                     /*!< UART_BI (Bit 4)                                       */
#define UART3_UART3_LSR_REG_UART_BI_Msk   (0x10UL)                  /*!< UART_BI (Bitfield-Mask: 0x01)                         */
#define UART3_UART3_LSR_REG_UART_FE_Pos   (3UL)                     /*!< UART_FE (Bit 3)                                       */
#define UART3_UART3_LSR_REG_UART_FE_Msk   (0x8UL)                   /*!< UART_FE (Bitfield-Mask: 0x01)                         */
#define UART3_UART3_LSR_REG_UART_PE_Pos   (2UL)                     /*!< UART_PE (Bit 2)                                       */
#define UART3_UART3_LSR_REG_UART_PE_Msk   (0x4UL)                   /*!< UART_PE (Bitfield-Mask: 0x01)                         */
#define UART3_UART3_LSR_REG_UART_OE_Pos   (1UL)                     /*!< UART_OE (Bit 1)                                       */
#define UART3_UART3_LSR_REG_UART_OE_Msk   (0x2UL)                   /*!< UART_OE (Bitfield-Mask: 0x01)                         */
#define UART3_UART3_LSR_REG_UART_DR_Pos   (0UL)                     /*!< UART_DR (Bit 0)                                       */
#define UART3_UART3_LSR_REG_UART_DR_Msk   (0x1UL)                   /*!< UART_DR (Bitfield-Mask: 0x01)                         */
/* =====================================================  UART3_MCR_REG  ===================================================== */
#define UART3_UART3_MCR_REG_UART_AFCE_Pos (5UL)                     /*!< UART_AFCE (Bit 5)                                     */
#define UART3_UART3_MCR_REG_UART_AFCE_Msk (0x20UL)                  /*!< UART_AFCE (Bitfield-Mask: 0x01)                       */
#define UART3_UART3_MCR_REG_UART_LB_Pos   (4UL)                     /*!< UART_LB (Bit 4)                                       */
#define UART3_UART3_MCR_REG_UART_LB_Msk   (0x10UL)                  /*!< UART_LB (Bitfield-Mask: 0x01)                         */
#define UART3_UART3_MCR_REG_UART_RTS_Pos  (1UL)                     /*!< UART_RTS (Bit 1)                                      */
#define UART3_UART3_MCR_REG_UART_RTS_Msk  (0x2UL)                   /*!< UART_RTS (Bitfield-Mask: 0x01)                        */
/* =====================================================  UART3_MSR_REG  ===================================================== */
#define UART3_UART3_MSR_REG_UART_CTS_Pos  (4UL)                     /*!< UART_CTS (Bit 4)                                      */
#define UART3_UART3_MSR_REG_UART_CTS_Msk  (0x10UL)                  /*!< UART_CTS (Bitfield-Mask: 0x01)                        */
#define UART3_UART3_MSR_REG_UART_DCTS_Pos (0UL)                     /*!< UART_DCTS (Bit 0)                                     */
#define UART3_UART3_MSR_REG_UART_DCTS_Msk (0x1UL)                   /*!< UART_DCTS (Bitfield-Mask: 0x01)                       */
/* =====================================================  UART3_RAR_REG  ===================================================== */
#define UART3_UART3_RAR_REG_UART_RAR_Pos  (0UL)                     /*!< UART_RAR (Bit 0)                                      */
#define UART3_UART3_RAR_REG_UART_RAR_Msk  (0xffUL)                  /*!< UART_RAR (Bitfield-Mask: 0xff)                        */
/* =================================================  UART3_RBR_THR_DLL_REG  ================================================= */
#define UART3_UART3_RBR_THR_DLL_REG_RBR_THR_9BIT_Pos (8UL)          /*!< RBR_THR_9BIT (Bit 8)                                  */
#define UART3_UART3_RBR_THR_DLL_REG_RBR_THR_9BIT_Msk (0x100UL)      /*!< RBR_THR_9BIT (Bitfield-Mask: 0x01)                    */
#define UART3_UART3_RBR_THR_DLL_REG_RBR_THR_DLL_Pos (0UL)           /*!< RBR_THR_DLL (Bit 0)                                   */
#define UART3_UART3_RBR_THR_DLL_REG_RBR_THR_DLL_Msk (0xffUL)        /*!< RBR_THR_DLL (Bitfield-Mask: 0xff)                     */
/* =====================================================  UART3_RFL_REG  ===================================================== */
#define UART3_UART3_RFL_REG_UART_RECEIVE_FIFO_LEVEL_Pos (0UL)       /*!< UART_RECEIVE_FIFO_LEVEL (Bit 0)                       */
#define UART3_UART3_RFL_REG_UART_RECEIVE_FIFO_LEVEL_Msk (0x1fUL)    /*!< UART_RECEIVE_FIFO_LEVEL (Bitfield-Mask: 0x1f)         */
/* ====================================================  UART3_SBCR_REG  ===================================================== */
#define UART3_UART3_SBCR_REG_UART_SHADOW_BREAK_CONTROL_Pos (0UL)    /*!< UART_SHADOW_BREAK_CONTROL (Bit 0)                     */
#define UART3_UART3_SBCR_REG_UART_SHADOW_BREAK_CONTROL_Msk (0x1UL)  /*!< UART_SHADOW_BREAK_CONTROL (Bitfield-Mask: 0x01)       */
/* ====================================================  UART3_SDMAM_REG  ==================================================== */
#define UART3_UART3_SDMAM_REG_UART_SHADOW_DMA_MODE_Pos (0UL)        /*!< UART_SHADOW_DMA_MODE (Bit 0)                          */
#define UART3_UART3_SDMAM_REG_UART_SHADOW_DMA_MODE_Msk (0x1UL)      /*!< UART_SHADOW_DMA_MODE (Bitfield-Mask: 0x01)            */
/* =====================================================  UART3_SFE_REG  ===================================================== */
#define UART3_UART3_SFE_REG_UART_SHADOW_FIFO_ENABLE_Pos (0UL)       /*!< UART_SHADOW_FIFO_ENABLE (Bit 0)                       */
#define UART3_UART3_SFE_REG_UART_SHADOW_FIFO_ENABLE_Msk (0x1UL)     /*!< UART_SHADOW_FIFO_ENABLE (Bitfield-Mask: 0x01)         */
/* =================================================  UART3_SRBR_STHR0_REG  ================================================== */
#define UART3_UART3_SRBR_STHR0_REG_SRBR_STHRx_Pos (0UL)             /*!< SRBR_STHRx (Bit 0)                                    */
#define UART3_UART3_SRBR_STHR0_REG_SRBR_STHRx_Msk (0xffUL)          /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =================================================  UART3_SRBR_STHR10_REG  ================================================= */
#define UART3_UART3_SRBR_STHR10_REG_SRBR_STHRx_Pos (0UL)            /*!< SRBR_STHRx (Bit 0)                                    */
#define UART3_UART3_SRBR_STHR10_REG_SRBR_STHRx_Msk (0xffUL)         /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =================================================  UART3_SRBR_STHR11_REG  ================================================= */
#define UART3_UART3_SRBR_STHR11_REG_SRBR_STHRx_Pos (0UL)            /*!< SRBR_STHRx (Bit 0)                                    */
#define UART3_UART3_SRBR_STHR11_REG_SRBR_STHRx_Msk (0xffUL)         /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =================================================  UART3_SRBR_STHR12_REG  ================================================= */
#define UART3_UART3_SRBR_STHR12_REG_SRBR_STHRx_Pos (0UL)            /*!< SRBR_STHRx (Bit 0)                                    */
#define UART3_UART3_SRBR_STHR12_REG_SRBR_STHRx_Msk (0xffUL)         /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =================================================  UART3_SRBR_STHR13_REG  ================================================= */
#define UART3_UART3_SRBR_STHR13_REG_SRBR_STHRx_Pos (0UL)            /*!< SRBR_STHRx (Bit 0)                                    */
#define UART3_UART3_SRBR_STHR13_REG_SRBR_STHRx_Msk (0xffUL)         /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =================================================  UART3_SRBR_STHR14_REG  ================================================= */
#define UART3_UART3_SRBR_STHR14_REG_SRBR_STHRx_Pos (0UL)            /*!< SRBR_STHRx (Bit 0)                                    */
#define UART3_UART3_SRBR_STHR14_REG_SRBR_STHRx_Msk (0xffUL)         /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =================================================  UART3_SRBR_STHR15_REG  ================================================= */
#define UART3_UART3_SRBR_STHR15_REG_SRBR_STHRx_Pos (0UL)            /*!< SRBR_STHRx (Bit 0)                                    */
#define UART3_UART3_SRBR_STHR15_REG_SRBR_STHRx_Msk (0xffUL)         /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =================================================  UART3_SRBR_STHR1_REG  ================================================== */
#define UART3_UART3_SRBR_STHR1_REG_SRBR_STHRx_Pos (0UL)             /*!< SRBR_STHRx (Bit 0)                                    */
#define UART3_UART3_SRBR_STHR1_REG_SRBR_STHRx_Msk (0xffUL)          /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =================================================  UART3_SRBR_STHR2_REG  ================================================== */
#define UART3_UART3_SRBR_STHR2_REG_SRBR_STHRx_Pos (0UL)             /*!< SRBR_STHRx (Bit 0)                                    */
#define UART3_UART3_SRBR_STHR2_REG_SRBR_STHRx_Msk (0xffUL)          /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =================================================  UART3_SRBR_STHR3_REG  ================================================== */
#define UART3_UART3_SRBR_STHR3_REG_SRBR_STHRx_Pos (0UL)             /*!< SRBR_STHRx (Bit 0)                                    */
#define UART3_UART3_SRBR_STHR3_REG_SRBR_STHRx_Msk (0xffUL)          /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =================================================  UART3_SRBR_STHR4_REG  ================================================== */
#define UART3_UART3_SRBR_STHR4_REG_SRBR_STHRx_Pos (0UL)             /*!< SRBR_STHRx (Bit 0)                                    */
#define UART3_UART3_SRBR_STHR4_REG_SRBR_STHRx_Msk (0xffUL)          /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =================================================  UART3_SRBR_STHR5_REG  ================================================== */
#define UART3_UART3_SRBR_STHR5_REG_SRBR_STHRx_Pos (0UL)             /*!< SRBR_STHRx (Bit 0)                                    */
#define UART3_UART3_SRBR_STHR5_REG_SRBR_STHRx_Msk (0xffUL)          /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =================================================  UART3_SRBR_STHR6_REG  ================================================== */
#define UART3_UART3_SRBR_STHR6_REG_SRBR_STHRx_Pos (0UL)             /*!< SRBR_STHRx (Bit 0)                                    */
#define UART3_UART3_SRBR_STHR6_REG_SRBR_STHRx_Msk (0xffUL)          /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =================================================  UART3_SRBR_STHR7_REG  ================================================== */
#define UART3_UART3_SRBR_STHR7_REG_SRBR_STHRx_Pos (0UL)             /*!< SRBR_STHRx (Bit 0)                                    */
#define UART3_UART3_SRBR_STHR7_REG_SRBR_STHRx_Msk (0xffUL)          /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =================================================  UART3_SRBR_STHR8_REG  ================================================== */
#define UART3_UART3_SRBR_STHR8_REG_SRBR_STHRx_Pos (0UL)             /*!< SRBR_STHRx (Bit 0)                                    */
#define UART3_UART3_SRBR_STHR8_REG_SRBR_STHRx_Msk (0xffUL)          /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =================================================  UART3_SRBR_STHR9_REG  ================================================== */
#define UART3_UART3_SRBR_STHR9_REG_SRBR_STHRx_Pos (0UL)             /*!< SRBR_STHRx (Bit 0)                                    */
#define UART3_UART3_SRBR_STHR9_REG_SRBR_STHRx_Msk (0xffUL)          /*!< SRBR_STHRx (Bitfield-Mask: 0xff)                      */
/* =====================================================  UART3_SRR_REG  ===================================================== */
#define UART3_UART3_SRR_REG_UART_XFR_Pos  (2UL)                     /*!< UART_XFR (Bit 2)                                      */
#define UART3_UART3_SRR_REG_UART_XFR_Msk  (0x4UL)                   /*!< UART_XFR (Bitfield-Mask: 0x01)                        */
#define UART3_UART3_SRR_REG_UART_RFR_Pos  (1UL)                     /*!< UART_RFR (Bit 1)                                      */
#define UART3_UART3_SRR_REG_UART_RFR_Msk  (0x2UL)                   /*!< UART_RFR (Bitfield-Mask: 0x01)                        */
#define UART3_UART3_SRR_REG_UART_UR_Pos   (0UL)                     /*!< UART_UR (Bit 0)                                       */
#define UART3_UART3_SRR_REG_UART_UR_Msk   (0x1UL)                   /*!< UART_UR (Bitfield-Mask: 0x01)                         */
/* ====================================================  UART3_SRTS_REG  ===================================================== */
#define UART3_UART3_SRTS_REG_UART_SHADOW_REQUEST_TO_SEND_Pos (0UL)  /*!< UART_SHADOW_REQUEST_TO_SEND (Bit 0)                   */
#define UART3_UART3_SRTS_REG_UART_SHADOW_REQUEST_TO_SEND_Msk (0x1UL) /*!< UART_SHADOW_REQUEST_TO_SEND (Bitfield-Mask: 0x01)    */
/* =====================================================  UART3_SRT_REG  ===================================================== */
#define UART3_UART3_SRT_REG_UART_SHADOW_RCVR_TRIGGER_Pos (0UL)      /*!< UART_SHADOW_RCVR_TRIGGER (Bit 0)                      */
#define UART3_UART3_SRT_REG_UART_SHADOW_RCVR_TRIGGER_Msk (0x3UL)    /*!< UART_SHADOW_RCVR_TRIGGER (Bitfield-Mask: 0x03)        */
/* ====================================================  UART3_STET_REG  ===================================================== */
#define UART3_UART3_STET_REG_UART_SHADOW_TX_EMPTY_TRIGGER_Pos (0UL) /*!< UART_SHADOW_TX_EMPTY_TRIGGER (Bit 0)                  */
#define UART3_UART3_STET_REG_UART_SHADOW_TX_EMPTY_TRIGGER_Msk (0x3UL) /*!< UART_SHADOW_TX_EMPTY_TRIGGER (Bitfield-Mask: 0x03)  */
/* =====================================================  UART3_TAR_REG  ===================================================== */
#define UART3_UART3_TAR_REG_UART_TAR_Pos  (0UL)                     /*!< UART_TAR (Bit 0)                                      */
#define UART3_UART3_TAR_REG_UART_TAR_Msk  (0xffUL)                  /*!< UART_TAR (Bitfield-Mask: 0xff)                        */
/* =====================================================  UART3_TFL_REG  ===================================================== */
#define UART3_UART3_TFL_REG_UART_TRANSMIT_FIFO_LEVEL_Pos (0UL)      /*!< UART_TRANSMIT_FIFO_LEVEL (Bit 0)                      */
#define UART3_UART3_TFL_REG_UART_TRANSMIT_FIFO_LEVEL_Msk (0x1fUL)   /*!< UART_TRANSMIT_FIFO_LEVEL (Bitfield-Mask: 0x1f)        */
/* ====================================================  UART3_TIMER_REG  ==================================================== */
#define UART3_UART3_TIMER_REG_ISO7816_TIM_MODE_Pos (17UL)           /*!< ISO7816_TIM_MODE (Bit 17)                             */
#define UART3_UART3_TIMER_REG_ISO7816_TIM_MODE_Msk (0x20000UL)      /*!< ISO7816_TIM_MODE (Bitfield-Mask: 0x01)                */
#define UART3_UART3_TIMER_REG_ISO7816_TIM_EN_Pos (16UL)             /*!< ISO7816_TIM_EN (Bit 16)                               */
#define UART3_UART3_TIMER_REG_ISO7816_TIM_EN_Msk (0x10000UL)        /*!< ISO7816_TIM_EN (Bitfield-Mask: 0x01)                  */
#define UART3_UART3_TIMER_REG_ISO7816_TIM_MAX_Pos (0UL)             /*!< ISO7816_TIM_MAX (Bit 0)                               */
#define UART3_UART3_TIMER_REG_ISO7816_TIM_MAX_Msk (0xffffUL)        /*!< ISO7816_TIM_MAX (Bitfield-Mask: 0xffff)               */
/* =====================================================  UART3_UCV_REG  ===================================================== */
#define UART3_UART3_UCV_REG_UART_UCV_Pos  (0UL)                     /*!< UART_UCV (Bit 0)                                      */
#define UART3_UART3_UCV_REG_UART_UCV_Msk  (0xffffffffUL)            /*!< UART_UCV (Bitfield-Mask: 0xffffffff)                  */
/* =====================================================  UART3_USR_REG  ===================================================== */
#define UART3_UART3_USR_REG_UART_RFF_Pos  (4UL)                     /*!< UART_RFF (Bit 4)                                      */
#define UART3_UART3_USR_REG_UART_RFF_Msk  (0x10UL)                  /*!< UART_RFF (Bitfield-Mask: 0x01)                        */
#define UART3_UART3_USR_REG_UART_RFNE_Pos (3UL)                     /*!< UART_RFNE (Bit 3)                                     */
#define UART3_UART3_USR_REG_UART_RFNE_Msk (0x8UL)                   /*!< UART_RFNE (Bitfield-Mask: 0x01)                       */
#define UART3_UART3_USR_REG_UART_TFE_Pos  (2UL)                     /*!< UART_TFE (Bit 2)                                      */
#define UART3_UART3_USR_REG_UART_TFE_Msk  (0x4UL)                   /*!< UART_TFE (Bitfield-Mask: 0x01)                        */
#define UART3_UART3_USR_REG_UART_TFNF_Pos (1UL)                     /*!< UART_TFNF (Bit 1)                                     */
#define UART3_UART3_USR_REG_UART_TFNF_Msk (0x2UL)                   /*!< UART_TFNF (Bitfield-Mask: 0x01)                       */
#define UART3_UART3_USR_REG_UART_BUSY_Pos (0UL)                     /*!< UART_BUSY (Bit 0)                                     */
#define UART3_UART3_USR_REG_UART_BUSY_Msk (0x1UL)                   /*!< UART_BUSY (Bitfield-Mask: 0x01)                       */


/* =========================================================================================================================== */
/* ================                                            USB                                            ================ */
/* =========================================================================================================================== */

/* =====================================================  USB_ALTEV_REG  ===================================================== */
#define USB_USB_ALTEV_REG_USB_RESUME_Pos  (7UL)                     /*!< USB_RESUME (Bit 7)                                    */
#define USB_USB_ALTEV_REG_USB_RESUME_Msk  (0x80UL)                  /*!< USB_RESUME (Bitfield-Mask: 0x01)                      */
#define USB_USB_ALTEV_REG_USB_RESET_Pos   (6UL)                     /*!< USB_RESET (Bit 6)                                     */
#define USB_USB_ALTEV_REG_USB_RESET_Msk   (0x40UL)                  /*!< USB_RESET (Bitfield-Mask: 0x01)                       */
#define USB_USB_ALTEV_REG_USB_SD5_Pos     (5UL)                     /*!< USB_SD5 (Bit 5)                                       */
#define USB_USB_ALTEV_REG_USB_SD5_Msk     (0x20UL)                  /*!< USB_SD5 (Bitfield-Mask: 0x01)                         */
#define USB_USB_ALTEV_REG_USB_SD3_Pos     (4UL)                     /*!< USB_SD3 (Bit 4)                                       */
#define USB_USB_ALTEV_REG_USB_SD3_Msk     (0x10UL)                  /*!< USB_SD3 (Bitfield-Mask: 0x01)                         */
#define USB_USB_ALTEV_REG_USB_EOP_Pos     (3UL)                     /*!< USB_EOP (Bit 3)                                       */
#define USB_USB_ALTEV_REG_USB_EOP_Msk     (0x8UL)                   /*!< USB_EOP (Bitfield-Mask: 0x01)                         */
/* ====================================================  USB_ALTMSK_REG  ===================================================== */
#define USB_USB_ALTMSK_REG_USB_M_RESUME_Pos (7UL)                   /*!< USB_M_RESUME (Bit 7)                                  */
#define USB_USB_ALTMSK_REG_USB_M_RESUME_Msk (0x80UL)                /*!< USB_M_RESUME (Bitfield-Mask: 0x01)                    */
#define USB_USB_ALTMSK_REG_USB_M_RESET_Pos (6UL)                    /*!< USB_M_RESET (Bit 6)                                   */
#define USB_USB_ALTMSK_REG_USB_M_RESET_Msk (0x40UL)                 /*!< USB_M_RESET (Bitfield-Mask: 0x01)                     */
#define USB_USB_ALTMSK_REG_USB_M_SD5_Pos  (5UL)                     /*!< USB_M_SD5 (Bit 5)                                     */
#define USB_USB_ALTMSK_REG_USB_M_SD5_Msk  (0x20UL)                  /*!< USB_M_SD5 (Bitfield-Mask: 0x01)                       */
#define USB_USB_ALTMSK_REG_USB_M_SD3_Pos  (4UL)                     /*!< USB_M_SD3 (Bit 4)                                     */
#define USB_USB_ALTMSK_REG_USB_M_SD3_Msk  (0x10UL)                  /*!< USB_M_SD3 (Bitfield-Mask: 0x01)                       */
#define USB_USB_ALTMSK_REG_USB_M_EOP_Pos  (3UL)                     /*!< USB_M_EOP (Bit 3)                                     */
#define USB_USB_ALTMSK_REG_USB_M_EOP_Msk  (0x8UL)                   /*!< USB_M_EOP (Bitfield-Mask: 0x01)                       */
/* =================================================  USB_CHARGER_STAT_REG  ================================================== */
#define USB_USB_CHARGER_STAT_REG_USB_DM_VAL2_Pos (5UL)              /*!< USB_DM_VAL2 (Bit 5)                                   */
#define USB_USB_CHARGER_STAT_REG_USB_DM_VAL2_Msk (0x20UL)           /*!< USB_DM_VAL2 (Bitfield-Mask: 0x01)                     */
#define USB_USB_CHARGER_STAT_REG_USB_DP_VAL2_Pos (4UL)              /*!< USB_DP_VAL2 (Bit 4)                                   */
#define USB_USB_CHARGER_STAT_REG_USB_DP_VAL2_Msk (0x10UL)           /*!< USB_DP_VAL2 (Bitfield-Mask: 0x01)                     */
#define USB_USB_CHARGER_STAT_REG_USB_DM_VAL_Pos (3UL)               /*!< USB_DM_VAL (Bit 3)                                    */
#define USB_USB_CHARGER_STAT_REG_USB_DM_VAL_Msk (0x8UL)             /*!< USB_DM_VAL (Bitfield-Mask: 0x01)                      */
#define USB_USB_CHARGER_STAT_REG_USB_DP_VAL_Pos (2UL)               /*!< USB_DP_VAL (Bit 2)                                    */
#define USB_USB_CHARGER_STAT_REG_USB_DP_VAL_Msk (0x4UL)             /*!< USB_DP_VAL (Bitfield-Mask: 0x01)                      */
#define USB_USB_CHARGER_STAT_REG_USB_CHG_DET_Pos (1UL)              /*!< USB_CHG_DET (Bit 1)                                   */
#define USB_USB_CHARGER_STAT_REG_USB_CHG_DET_Msk (0x2UL)            /*!< USB_CHG_DET (Bitfield-Mask: 0x01)                     */
#define USB_USB_CHARGER_STAT_REG_USB_DCP_DET_Pos (0UL)              /*!< USB_DCP_DET (Bit 0)                                   */
#define USB_USB_CHARGER_STAT_REG_USB_DCP_DET_Msk (0x1UL)            /*!< USB_DCP_DET (Bitfield-Mask: 0x01)                     */
/* ===================================================  USB_DMA_CTRL_REG  ==================================================== */
#define USB_USB_DMA_CTRL_REG_USB_DMA_EN_Pos (6UL)                   /*!< USB_DMA_EN (Bit 6)                                    */
#define USB_USB_DMA_CTRL_REG_USB_DMA_EN_Msk (0x40UL)                /*!< USB_DMA_EN (Bitfield-Mask: 0x01)                      */
#define USB_USB_DMA_CTRL_REG_USB_DMA_TX_Pos (3UL)                   /*!< USB_DMA_TX (Bit 3)                                    */
#define USB_USB_DMA_CTRL_REG_USB_DMA_TX_Msk (0x38UL)                /*!< USB_DMA_TX (Bitfield-Mask: 0x07)                      */
#define USB_USB_DMA_CTRL_REG_USB_DMA_RX_Pos (0UL)                   /*!< USB_DMA_RX (Bit 0)                                    */
#define USB_USB_DMA_CTRL_REG_USB_DMA_RX_Msk (0x7UL)                 /*!< USB_DMA_RX (Bitfield-Mask: 0x07)                      */
/* ====================================================  USB_EP0_NAK_REG  ==================================================== */
#define USB_USB_EP0_NAK_REG_USB_EP0_OUTNAK_Pos (1UL)                /*!< USB_EP0_OUTNAK (Bit 1)                                */
#define USB_USB_EP0_NAK_REG_USB_EP0_OUTNAK_Msk (0x2UL)              /*!< USB_EP0_OUTNAK (Bitfield-Mask: 0x01)                  */
#define USB_USB_EP0_NAK_REG_USB_EP0_INNAK_Pos (0UL)                 /*!< USB_EP0_INNAK (Bit 0)                                 */
#define USB_USB_EP0_NAK_REG_USB_EP0_INNAK_Msk (0x1UL)               /*!< USB_EP0_INNAK (Bitfield-Mask: 0x01)                   */
/* =====================================================  USB_EPC0_REG  ====================================================== */
#define USB_USB_EPC0_REG_USB_STALL_Pos    (7UL)                     /*!< USB_STALL (Bit 7)                                     */
#define USB_USB_EPC0_REG_USB_STALL_Msk    (0x80UL)                  /*!< USB_STALL (Bitfield-Mask: 0x01)                       */
#define USB_USB_EPC0_REG_USB_DEF_Pos      (6UL)                     /*!< USB_DEF (Bit 6)                                       */
#define USB_USB_EPC0_REG_USB_DEF_Msk      (0x40UL)                  /*!< USB_DEF (Bitfield-Mask: 0x01)                         */
#define USB_USB_EPC0_REG_USB_EP_Pos       (0UL)                     /*!< USB_EP (Bit 0)                                        */
#define USB_USB_EPC0_REG_USB_EP_Msk       (0xfUL)                   /*!< USB_EP (Bitfield-Mask: 0x0f)                          */
/* =====================================================  USB_EPC1_REG  ====================================================== */
#define USB_USB_EPC1_REG_USB_STALL_Pos    (7UL)                     /*!< USB_STALL (Bit 7)                                     */
#define USB_USB_EPC1_REG_USB_STALL_Msk    (0x80UL)                  /*!< USB_STALL (Bitfield-Mask: 0x01)                       */
#define USB_USB_EPC1_REG_USB_ISO_Pos      (5UL)                     /*!< USB_ISO (Bit 5)                                       */
#define USB_USB_EPC1_REG_USB_ISO_Msk      (0x20UL)                  /*!< USB_ISO (Bitfield-Mask: 0x01)                         */
#define USB_USB_EPC1_REG_USB_EP_EN_Pos    (4UL)                     /*!< USB_EP_EN (Bit 4)                                     */
#define USB_USB_EPC1_REG_USB_EP_EN_Msk    (0x10UL)                  /*!< USB_EP_EN (Bitfield-Mask: 0x01)                       */
#define USB_USB_EPC1_REG_USB_EP_Pos       (0UL)                     /*!< USB_EP (Bit 0)                                        */
#define USB_USB_EPC1_REG_USB_EP_Msk       (0xfUL)                   /*!< USB_EP (Bitfield-Mask: 0x0f)                          */
/* =====================================================  USB_EPC2_REG  ====================================================== */
#define USB_USB_EPC2_REG_USB_STALL_Pos    (7UL)                     /*!< USB_STALL (Bit 7)                                     */
#define USB_USB_EPC2_REG_USB_STALL_Msk    (0x80UL)                  /*!< USB_STALL (Bitfield-Mask: 0x01)                       */
#define USB_USB_EPC2_REG_USB_ISO_Pos      (5UL)                     /*!< USB_ISO (Bit 5)                                       */
#define USB_USB_EPC2_REG_USB_ISO_Msk      (0x20UL)                  /*!< USB_ISO (Bitfield-Mask: 0x01)                         */
#define USB_USB_EPC2_REG_USB_EP_EN_Pos    (4UL)                     /*!< USB_EP_EN (Bit 4)                                     */
#define USB_USB_EPC2_REG_USB_EP_EN_Msk    (0x10UL)                  /*!< USB_EP_EN (Bitfield-Mask: 0x01)                       */
#define USB_USB_EPC2_REG_USB_EP_Pos       (0UL)                     /*!< USB_EP (Bit 0)                                        */
#define USB_USB_EPC2_REG_USB_EP_Msk       (0xfUL)                   /*!< USB_EP (Bitfield-Mask: 0x0f)                          */
/* =====================================================  USB_EPC3_REG  ====================================================== */
#define USB_USB_EPC3_REG_USB_STALL_Pos    (7UL)                     /*!< USB_STALL (Bit 7)                                     */
#define USB_USB_EPC3_REG_USB_STALL_Msk    (0x80UL)                  /*!< USB_STALL (Bitfield-Mask: 0x01)                       */
#define USB_USB_EPC3_REG_USB_ISO_Pos      (5UL)                     /*!< USB_ISO (Bit 5)                                       */
#define USB_USB_EPC3_REG_USB_ISO_Msk      (0x20UL)                  /*!< USB_ISO (Bitfield-Mask: 0x01)                         */
#define USB_USB_EPC3_REG_USB_EP_EN_Pos    (4UL)                     /*!< USB_EP_EN (Bit 4)                                     */
#define USB_USB_EPC3_REG_USB_EP_EN_Msk    (0x10UL)                  /*!< USB_EP_EN (Bitfield-Mask: 0x01)                       */
#define USB_USB_EPC3_REG_USB_EP_Pos       (0UL)                     /*!< USB_EP (Bit 0)                                        */
#define USB_USB_EPC3_REG_USB_EP_Msk       (0xfUL)                   /*!< USB_EP (Bitfield-Mask: 0x0f)                          */
/* =====================================================  USB_EPC4_REG  ====================================================== */
#define USB_USB_EPC4_REG_USB_STALL_Pos    (7UL)                     /*!< USB_STALL (Bit 7)                                     */
#define USB_USB_EPC4_REG_USB_STALL_Msk    (0x80UL)                  /*!< USB_STALL (Bitfield-Mask: 0x01)                       */
#define USB_USB_EPC4_REG_USB_ISO_Pos      (5UL)                     /*!< USB_ISO (Bit 5)                                       */
#define USB_USB_EPC4_REG_USB_ISO_Msk      (0x20UL)                  /*!< USB_ISO (Bitfield-Mask: 0x01)                         */
#define USB_USB_EPC4_REG_USB_EP_EN_Pos    (4UL)                     /*!< USB_EP_EN (Bit 4)                                     */
#define USB_USB_EPC4_REG_USB_EP_EN_Msk    (0x10UL)                  /*!< USB_EP_EN (Bitfield-Mask: 0x01)                       */
#define USB_USB_EPC4_REG_USB_EP_Pos       (0UL)                     /*!< USB_EP (Bit 0)                                        */
#define USB_USB_EPC4_REG_USB_EP_Msk       (0xfUL)                   /*!< USB_EP (Bitfield-Mask: 0x0f)                          */
/* =====================================================  USB_EPC5_REG  ====================================================== */
#define USB_USB_EPC5_REG_USB_STALL_Pos    (7UL)                     /*!< USB_STALL (Bit 7)                                     */
#define USB_USB_EPC5_REG_USB_STALL_Msk    (0x80UL)                  /*!< USB_STALL (Bitfield-Mask: 0x01)                       */
#define USB_USB_EPC5_REG_USB_ISO_Pos      (5UL)                     /*!< USB_ISO (Bit 5)                                       */
#define USB_USB_EPC5_REG_USB_ISO_Msk      (0x20UL)                  /*!< USB_ISO (Bitfield-Mask: 0x01)                         */
#define USB_USB_EPC5_REG_USB_EP_EN_Pos    (4UL)                     /*!< USB_EP_EN (Bit 4)                                     */
#define USB_USB_EPC5_REG_USB_EP_EN_Msk    (0x10UL)                  /*!< USB_EP_EN (Bitfield-Mask: 0x01)                       */
#define USB_USB_EPC5_REG_USB_EP_Pos       (0UL)                     /*!< USB_EP (Bit 0)                                        */
#define USB_USB_EPC5_REG_USB_EP_Msk       (0xfUL)                   /*!< USB_EP (Bitfield-Mask: 0x0f)                          */
/* =====================================================  USB_EPC6_REG  ====================================================== */
#define USB_USB_EPC6_REG_USB_STALL_Pos    (7UL)                     /*!< USB_STALL (Bit 7)                                     */
#define USB_USB_EPC6_REG_USB_STALL_Msk    (0x80UL)                  /*!< USB_STALL (Bitfield-Mask: 0x01)                       */
#define USB_USB_EPC6_REG_USB_ISO_Pos      (5UL)                     /*!< USB_ISO (Bit 5)                                       */
#define USB_USB_EPC6_REG_USB_ISO_Msk      (0x20UL)                  /*!< USB_ISO (Bitfield-Mask: 0x01)                         */
#define USB_USB_EPC6_REG_USB_EP_EN_Pos    (4UL)                     /*!< USB_EP_EN (Bit 4)                                     */
#define USB_USB_EPC6_REG_USB_EP_EN_Msk    (0x10UL)                  /*!< USB_EP_EN (Bitfield-Mask: 0x01)                       */
#define USB_USB_EPC6_REG_USB_EP_Pos       (0UL)                     /*!< USB_EP (Bit 0)                                        */
#define USB_USB_EPC6_REG_USB_EP_Msk       (0xfUL)                   /*!< USB_EP (Bitfield-Mask: 0x0f)                          */
/* ======================================================  USB_FAR_REG  ====================================================== */
#define USB_USB_FAR_REG_USB_AD_EN_Pos     (7UL)                     /*!< USB_AD_EN (Bit 7)                                     */
#define USB_USB_FAR_REG_USB_AD_EN_Msk     (0x80UL)                  /*!< USB_AD_EN (Bitfield-Mask: 0x01)                       */
#define USB_USB_FAR_REG_USB_AD_Pos        (0UL)                     /*!< USB_AD (Bit 0)                                        */
#define USB_USB_FAR_REG_USB_AD_Msk        (0x7fUL)                  /*!< USB_AD (Bitfield-Mask: 0x7f)                          */
/* ======================================================  USB_FNH_REG  ====================================================== */
#define USB_USB_FNH_REG_USB_MF_Pos        (7UL)                     /*!< USB_MF (Bit 7)                                        */
#define USB_USB_FNH_REG_USB_MF_Msk        (0x80UL)                  /*!< USB_MF (Bitfield-Mask: 0x01)                          */
#define USB_USB_FNH_REG_USB_UL_Pos        (6UL)                     /*!< USB_UL (Bit 6)                                        */
#define USB_USB_FNH_REG_USB_UL_Msk        (0x40UL)                  /*!< USB_UL (Bitfield-Mask: 0x01)                          */
#define USB_USB_FNH_REG_USB_RFC_Pos       (5UL)                     /*!< USB_RFC (Bit 5)                                       */
#define USB_USB_FNH_REG_USB_RFC_Msk       (0x20UL)                  /*!< USB_RFC (Bitfield-Mask: 0x01)                         */
#define USB_USB_FNH_REG_USB_FN_10_8_Pos   (0UL)                     /*!< USB_FN_10_8 (Bit 0)                                   */
#define USB_USB_FNH_REG_USB_FN_10_8_Msk   (0x7UL)                   /*!< USB_FN_10_8 (Bitfield-Mask: 0x07)                     */
/* ======================================================  USB_FNL_REG  ====================================================== */
#define USB_USB_FNL_REG_USB_FN_Pos        (0UL)                     /*!< USB_FN (Bit 0)                                        */
#define USB_USB_FNL_REG_USB_FN_Msk        (0xffUL)                  /*!< USB_FN (Bitfield-Mask: 0xff)                          */
/* =====================================================  USB_FWEV_REG  ====================================================== */
#define USB_USB_FWEV_REG_USB_RXWARN31_Pos (4UL)                     /*!< USB_RXWARN31 (Bit 4)                                  */
#define USB_USB_FWEV_REG_USB_RXWARN31_Msk (0x70UL)                  /*!< USB_RXWARN31 (Bitfield-Mask: 0x07)                    */
#define USB_USB_FWEV_REG_USB_TXWARN31_Pos (0UL)                     /*!< USB_TXWARN31 (Bit 0)                                  */
#define USB_USB_FWEV_REG_USB_TXWARN31_Msk (0x7UL)                   /*!< USB_TXWARN31 (Bitfield-Mask: 0x07)                    */
/* =====================================================  USB_FWMSK_REG  ===================================================== */
#define USB_USB_FWMSK_REG_USB_M_RXWARN31_Pos (4UL)                  /*!< USB_M_RXWARN31 (Bit 4)                                */
#define USB_USB_FWMSK_REG_USB_M_RXWARN31_Msk (0x70UL)               /*!< USB_M_RXWARN31 (Bitfield-Mask: 0x07)                  */
#define USB_USB_FWMSK_REG_USB_M_TXWARN31_Pos (0UL)                  /*!< USB_M_TXWARN31 (Bit 0)                                */
#define USB_USB_FWMSK_REG_USB_M_TXWARN31_Msk (0x7UL)                /*!< USB_M_TXWARN31 (Bitfield-Mask: 0x07)                  */
/* =====================================================  USB_MAEV_REG  ====================================================== */
#define USB_USB_MAEV_REG_USB_CH_EV_Pos    (11UL)                    /*!< USB_CH_EV (Bit 11)                                    */
#define USB_USB_MAEV_REG_USB_CH_EV_Msk    (0x800UL)                 /*!< USB_CH_EV (Bitfield-Mask: 0x01)                       */
#define USB_USB_MAEV_REG_USB_EP0_NAK_Pos  (10UL)                    /*!< USB_EP0_NAK (Bit 10)                                  */
#define USB_USB_MAEV_REG_USB_EP0_NAK_Msk  (0x400UL)                 /*!< USB_EP0_NAK (Bitfield-Mask: 0x01)                     */
#define USB_USB_MAEV_REG_USB_EP0_RX_Pos   (9UL)                     /*!< USB_EP0_RX (Bit 9)                                    */
#define USB_USB_MAEV_REG_USB_EP0_RX_Msk   (0x200UL)                 /*!< USB_EP0_RX (Bitfield-Mask: 0x01)                      */
#define USB_USB_MAEV_REG_USB_EP0_TX_Pos   (8UL)                     /*!< USB_EP0_TX (Bit 8)                                    */
#define USB_USB_MAEV_REG_USB_EP0_TX_Msk   (0x100UL)                 /*!< USB_EP0_TX (Bitfield-Mask: 0x01)                      */
#define USB_USB_MAEV_REG_USB_INTR_Pos     (7UL)                     /*!< USB_INTR (Bit 7)                                      */
#define USB_USB_MAEV_REG_USB_INTR_Msk     (0x80UL)                  /*!< USB_INTR (Bitfield-Mask: 0x01)                        */
#define USB_USB_MAEV_REG_USB_RX_EV_Pos    (6UL)                     /*!< USB_RX_EV (Bit 6)                                     */
#define USB_USB_MAEV_REG_USB_RX_EV_Msk    (0x40UL)                  /*!< USB_RX_EV (Bitfield-Mask: 0x01)                       */
#define USB_USB_MAEV_REG_USB_ULD_Pos      (5UL)                     /*!< USB_ULD (Bit 5)                                       */
#define USB_USB_MAEV_REG_USB_ULD_Msk      (0x20UL)                  /*!< USB_ULD (Bitfield-Mask: 0x01)                         */
#define USB_USB_MAEV_REG_USB_NAK_Pos      (4UL)                     /*!< USB_NAK (Bit 4)                                       */
#define USB_USB_MAEV_REG_USB_NAK_Msk      (0x10UL)                  /*!< USB_NAK (Bitfield-Mask: 0x01)                         */
#define USB_USB_MAEV_REG_USB_FRAME_Pos    (3UL)                     /*!< USB_FRAME (Bit 3)                                     */
#define USB_USB_MAEV_REG_USB_FRAME_Msk    (0x8UL)                   /*!< USB_FRAME (Bitfield-Mask: 0x01)                       */
#define USB_USB_MAEV_REG_USB_TX_EV_Pos    (2UL)                     /*!< USB_TX_EV (Bit 2)                                     */
#define USB_USB_MAEV_REG_USB_TX_EV_Msk    (0x4UL)                   /*!< USB_TX_EV (Bitfield-Mask: 0x01)                       */
#define USB_USB_MAEV_REG_USB_ALT_Pos      (1UL)                     /*!< USB_ALT (Bit 1)                                       */
#define USB_USB_MAEV_REG_USB_ALT_Msk      (0x2UL)                   /*!< USB_ALT (Bitfield-Mask: 0x01)                         */
#define USB_USB_MAEV_REG_USB_WARN_Pos     (0UL)                     /*!< USB_WARN (Bit 0)                                      */
#define USB_USB_MAEV_REG_USB_WARN_Msk     (0x1UL)                   /*!< USB_WARN (Bitfield-Mask: 0x01)                        */
/* =====================================================  USB_MAMSK_REG  ===================================================== */
#define USB_USB_MAMSK_REG_USB_M_CH_EV_Pos (11UL)                    /*!< USB_M_CH_EV (Bit 11)                                  */
#define USB_USB_MAMSK_REG_USB_M_CH_EV_Msk (0x800UL)                 /*!< USB_M_CH_EV (Bitfield-Mask: 0x01)                     */
#define USB_USB_MAMSK_REG_USB_M_EP0_NAK_Pos (10UL)                  /*!< USB_M_EP0_NAK (Bit 10)                                */
#define USB_USB_MAMSK_REG_USB_M_EP0_NAK_Msk (0x400UL)               /*!< USB_M_EP0_NAK (Bitfield-Mask: 0x01)                   */
#define USB_USB_MAMSK_REG_USB_M_EP0_RX_Pos (9UL)                    /*!< USB_M_EP0_RX (Bit 9)                                  */
#define USB_USB_MAMSK_REG_USB_M_EP0_RX_Msk (0x200UL)                /*!< USB_M_EP0_RX (Bitfield-Mask: 0x01)                    */
#define USB_USB_MAMSK_REG_USB_M_EP0_TX_Pos (8UL)                    /*!< USB_M_EP0_TX (Bit 8)                                  */
#define USB_USB_MAMSK_REG_USB_M_EP0_TX_Msk (0x100UL)                /*!< USB_M_EP0_TX (Bitfield-Mask: 0x01)                    */
#define USB_USB_MAMSK_REG_USB_M_INTR_Pos  (7UL)                     /*!< USB_M_INTR (Bit 7)                                    */
#define USB_USB_MAMSK_REG_USB_M_INTR_Msk  (0x80UL)                  /*!< USB_M_INTR (Bitfield-Mask: 0x01)                      */
#define USB_USB_MAMSK_REG_USB_M_RX_EV_Pos (6UL)                     /*!< USB_M_RX_EV (Bit 6)                                   */
#define USB_USB_MAMSK_REG_USB_M_RX_EV_Msk (0x40UL)                  /*!< USB_M_RX_EV (Bitfield-Mask: 0x01)                     */
#define USB_USB_MAMSK_REG_USB_M_ULD_Pos   (5UL)                     /*!< USB_M_ULD (Bit 5)                                     */
#define USB_USB_MAMSK_REG_USB_M_ULD_Msk   (0x20UL)                  /*!< USB_M_ULD (Bitfield-Mask: 0x01)                       */
#define USB_USB_MAMSK_REG_USB_M_NAK_Pos   (4UL)                     /*!< USB_M_NAK (Bit 4)                                     */
#define USB_USB_MAMSK_REG_USB_M_NAK_Msk   (0x10UL)                  /*!< USB_M_NAK (Bitfield-Mask: 0x01)                       */
#define USB_USB_MAMSK_REG_USB_M_FRAME_Pos (3UL)                     /*!< USB_M_FRAME (Bit 3)                                   */
#define USB_USB_MAMSK_REG_USB_M_FRAME_Msk (0x8UL)                   /*!< USB_M_FRAME (Bitfield-Mask: 0x01)                     */
#define USB_USB_MAMSK_REG_USB_M_TX_EV_Pos (2UL)                     /*!< USB_M_TX_EV (Bit 2)                                   */
#define USB_USB_MAMSK_REG_USB_M_TX_EV_Msk (0x4UL)                   /*!< USB_M_TX_EV (Bitfield-Mask: 0x01)                     */
#define USB_USB_MAMSK_REG_USB_M_ALT_Pos   (1UL)                     /*!< USB_M_ALT (Bit 1)                                     */
#define USB_USB_MAMSK_REG_USB_M_ALT_Msk   (0x2UL)                   /*!< USB_M_ALT (Bitfield-Mask: 0x01)                       */
#define USB_USB_MAMSK_REG_USB_M_WARN_Pos  (0UL)                     /*!< USB_M_WARN (Bit 0)                                    */
#define USB_USB_MAMSK_REG_USB_M_WARN_Msk  (0x1UL)                   /*!< USB_M_WARN (Bitfield-Mask: 0x01)                      */
/* =====================================================  USB_MCTRL_REG  ===================================================== */
#define USB_USB_MCTRL_REG_LSMODE_Pos      (4UL)                     /*!< LSMODE (Bit 4)                                        */
#define USB_USB_MCTRL_REG_LSMODE_Msk      (0x10UL)                  /*!< LSMODE (Bitfield-Mask: 0x01)                          */
#define USB_USB_MCTRL_REG_USB_NAT_Pos     (3UL)                     /*!< USB_NAT (Bit 3)                                       */
#define USB_USB_MCTRL_REG_USB_NAT_Msk     (0x8UL)                   /*!< USB_NAT (Bitfield-Mask: 0x01)                         */
#define USB_USB_MCTRL_REG_USB_DBG_Pos     (1UL)                     /*!< USB_DBG (Bit 1)                                       */
#define USB_USB_MCTRL_REG_USB_DBG_Msk     (0x2UL)                   /*!< USB_DBG (Bitfield-Mask: 0x01)                         */
#define USB_USB_MCTRL_REG_USBEN_Pos       (0UL)                     /*!< USBEN (Bit 0)                                         */
#define USB_USB_MCTRL_REG_USBEN_Msk       (0x1UL)                   /*!< USBEN (Bitfield-Mask: 0x01)                           */
/* =====================================================  USB_NAKEV_REG  ===================================================== */
#define USB_USB_NAKEV_REG_USB_OUT31_Pos   (4UL)                     /*!< USB_OUT31 (Bit 4)                                     */
#define USB_USB_NAKEV_REG_USB_OUT31_Msk   (0x70UL)                  /*!< USB_OUT31 (Bitfield-Mask: 0x07)                       */
#define USB_USB_NAKEV_REG_USB_IN31_Pos    (0UL)                     /*!< USB_IN31 (Bit 0)                                      */
#define USB_USB_NAKEV_REG_USB_IN31_Msk    (0x7UL)                   /*!< USB_IN31 (Bitfield-Mask: 0x07)                        */
/* ====================================================  USB_NAKMSK_REG  ===================================================== */
#define USB_USB_NAKMSK_REG_USB_M_OUT31_Pos (4UL)                    /*!< USB_M_OUT31 (Bit 4)                                   */
#define USB_USB_NAKMSK_REG_USB_M_OUT31_Msk (0x70UL)                 /*!< USB_M_OUT31 (Bitfield-Mask: 0x07)                     */
#define USB_USB_NAKMSK_REG_USB_M_IN31_Pos (0UL)                     /*!< USB_M_IN31 (Bit 0)                                    */
#define USB_USB_NAKMSK_REG_USB_M_IN31_Msk (0x7UL)                   /*!< USB_M_IN31 (Bitfield-Mask: 0x07)                      */
/* =====================================================  USB_NFSR_REG  ====================================================== */
#define USB_USB_NFSR_REG_USB_NFS_Pos      (0UL)                     /*!< USB_NFS (Bit 0)                                       */
#define USB_USB_NFSR_REG_USB_NFS_Msk      (0x3UL)                   /*!< USB_NFS (Bitfield-Mask: 0x03)                         */
/* =====================================================  USB_RXC0_REG  ====================================================== */
#define USB_USB_RXC0_REG_USB_FLUSH_Pos    (3UL)                     /*!< USB_FLUSH (Bit 3)                                     */
#define USB_USB_RXC0_REG_USB_FLUSH_Msk    (0x8UL)                   /*!< USB_FLUSH (Bitfield-Mask: 0x01)                       */
#define USB_USB_RXC0_REG_USB_IGN_SETUP_Pos (2UL)                    /*!< USB_IGN_SETUP (Bit 2)                                 */
#define USB_USB_RXC0_REG_USB_IGN_SETUP_Msk (0x4UL)                  /*!< USB_IGN_SETUP (Bitfield-Mask: 0x01)                   */
#define USB_USB_RXC0_REG_USB_IGN_OUT_Pos  (1UL)                     /*!< USB_IGN_OUT (Bit 1)                                   */
#define USB_USB_RXC0_REG_USB_IGN_OUT_Msk  (0x2UL)                   /*!< USB_IGN_OUT (Bitfield-Mask: 0x01)                     */
#define USB_USB_RXC0_REG_USB_RX_EN_Pos    (0UL)                     /*!< USB_RX_EN (Bit 0)                                     */
#define USB_USB_RXC0_REG_USB_RX_EN_Msk    (0x1UL)                   /*!< USB_RX_EN (Bitfield-Mask: 0x01)                       */
/* =====================================================  USB_RXC1_REG  ====================================================== */
#define USB_USB_RXC1_REG_USB_RFWL_Pos     (5UL)                     /*!< USB_RFWL (Bit 5)                                      */
#define USB_USB_RXC1_REG_USB_RFWL_Msk     (0x60UL)                  /*!< USB_RFWL (Bitfield-Mask: 0x03)                        */
#define USB_USB_RXC1_REG_USB_FLUSH_Pos    (3UL)                     /*!< USB_FLUSH (Bit 3)                                     */
#define USB_USB_RXC1_REG_USB_FLUSH_Msk    (0x8UL)                   /*!< USB_FLUSH (Bitfield-Mask: 0x01)                       */
#define USB_USB_RXC1_REG_USB_IGN_SETUP_Pos (2UL)                    /*!< USB_IGN_SETUP (Bit 2)                                 */
#define USB_USB_RXC1_REG_USB_IGN_SETUP_Msk (0x4UL)                  /*!< USB_IGN_SETUP (Bitfield-Mask: 0x01)                   */
#define USB_USB_RXC1_REG_USB_RX_EN_Pos    (0UL)                     /*!< USB_RX_EN (Bit 0)                                     */
#define USB_USB_RXC1_REG_USB_RX_EN_Msk    (0x1UL)                   /*!< USB_RX_EN (Bitfield-Mask: 0x01)                       */
/* =====================================================  USB_RXC2_REG  ====================================================== */
#define USB_USB_RXC2_REG_USB_RFWL_Pos     (5UL)                     /*!< USB_RFWL (Bit 5)                                      */
#define USB_USB_RXC2_REG_USB_RFWL_Msk     (0x60UL)                  /*!< USB_RFWL (Bitfield-Mask: 0x03)                        */
#define USB_USB_RXC2_REG_USB_FLUSH_Pos    (3UL)                     /*!< USB_FLUSH (Bit 3)                                     */
#define USB_USB_RXC2_REG_USB_FLUSH_Msk    (0x8UL)                   /*!< USB_FLUSH (Bitfield-Mask: 0x01)                       */
#define USB_USB_RXC2_REG_USB_IGN_SETUP_Pos (2UL)                    /*!< USB_IGN_SETUP (Bit 2)                                 */
#define USB_USB_RXC2_REG_USB_IGN_SETUP_Msk (0x4UL)                  /*!< USB_IGN_SETUP (Bitfield-Mask: 0x01)                   */
#define USB_USB_RXC2_REG_USB_RX_EN_Pos    (0UL)                     /*!< USB_RX_EN (Bit 0)                                     */
#define USB_USB_RXC2_REG_USB_RX_EN_Msk    (0x1UL)                   /*!< USB_RX_EN (Bitfield-Mask: 0x01)                       */
/* =====================================================  USB_RXC3_REG  ====================================================== */
#define USB_USB_RXC3_REG_USB_RFWL_Pos     (5UL)                     /*!< USB_RFWL (Bit 5)                                      */
#define USB_USB_RXC3_REG_USB_RFWL_Msk     (0x60UL)                  /*!< USB_RFWL (Bitfield-Mask: 0x03)                        */
#define USB_USB_RXC3_REG_USB_FLUSH_Pos    (3UL)                     /*!< USB_FLUSH (Bit 3)                                     */
#define USB_USB_RXC3_REG_USB_FLUSH_Msk    (0x8UL)                   /*!< USB_FLUSH (Bitfield-Mask: 0x01)                       */
#define USB_USB_RXC3_REG_USB_IGN_SETUP_Pos (2UL)                    /*!< USB_IGN_SETUP (Bit 2)                                 */
#define USB_USB_RXC3_REG_USB_IGN_SETUP_Msk (0x4UL)                  /*!< USB_IGN_SETUP (Bitfield-Mask: 0x01)                   */
#define USB_USB_RXC3_REG_USB_RX_EN_Pos    (0UL)                     /*!< USB_RX_EN (Bit 0)                                     */
#define USB_USB_RXC3_REG_USB_RX_EN_Msk    (0x1UL)                   /*!< USB_RX_EN (Bitfield-Mask: 0x01)                       */
/* =====================================================  USB_RXD0_REG  ====================================================== */
#define USB_USB_RXD0_REG_USB_RXFD_Pos     (0UL)                     /*!< USB_RXFD (Bit 0)                                      */
#define USB_USB_RXD0_REG_USB_RXFD_Msk     (0xffUL)                  /*!< USB_RXFD (Bitfield-Mask: 0xff)                        */
/* =====================================================  USB_RXD1_REG  ====================================================== */
#define USB_USB_RXD1_REG_USB_RXFD_Pos     (0UL)                     /*!< USB_RXFD (Bit 0)                                      */
#define USB_USB_RXD1_REG_USB_RXFD_Msk     (0xffUL)                  /*!< USB_RXFD (Bitfield-Mask: 0xff)                        */
/* =====================================================  USB_RXD2_REG  ====================================================== */
#define USB_USB_RXD2_REG_USB_RXFD_Pos     (0UL)                     /*!< USB_RXFD (Bit 0)                                      */
#define USB_USB_RXD2_REG_USB_RXFD_Msk     (0xffUL)                  /*!< USB_RXFD (Bitfield-Mask: 0xff)                        */
/* =====================================================  USB_RXD3_REG  ====================================================== */
#define USB_USB_RXD3_REG_USB_RXFD_Pos     (0UL)                     /*!< USB_RXFD (Bit 0)                                      */
#define USB_USB_RXD3_REG_USB_RXFD_Msk     (0xffUL)                  /*!< USB_RXFD (Bitfield-Mask: 0xff)                        */
/* =====================================================  USB_RXEV_REG  ====================================================== */
#define USB_USB_RXEV_REG_USB_RXOVRRN31_Pos (4UL)                    /*!< USB_RXOVRRN31 (Bit 4)                                 */
#define USB_USB_RXEV_REG_USB_RXOVRRN31_Msk (0x70UL)                 /*!< USB_RXOVRRN31 (Bitfield-Mask: 0x07)                   */
#define USB_USB_RXEV_REG_USB_RXFIFO31_Pos (0UL)                     /*!< USB_RXFIFO31 (Bit 0)                                  */
#define USB_USB_RXEV_REG_USB_RXFIFO31_Msk (0x7UL)                   /*!< USB_RXFIFO31 (Bitfield-Mask: 0x07)                    */
/* =====================================================  USB_RXMSK_REG  ===================================================== */
#define USB_USB_RXMSK_REG_USB_M_RXOVRRN31_Pos (4UL)                 /*!< USB_M_RXOVRRN31 (Bit 4)                               */
#define USB_USB_RXMSK_REG_USB_M_RXOVRRN31_Msk (0x70UL)              /*!< USB_M_RXOVRRN31 (Bitfield-Mask: 0x07)                 */
#define USB_USB_RXMSK_REG_USB_M_RXFIFO31_Pos (0UL)                  /*!< USB_M_RXFIFO31 (Bit 0)                                */
#define USB_USB_RXMSK_REG_USB_M_RXFIFO31_Msk (0x7UL)                /*!< USB_M_RXFIFO31 (Bitfield-Mask: 0x07)                  */
/* =====================================================  USB_RXS0_REG  ====================================================== */
#define USB_USB_RXS0_REG_USB_SETUP_Pos    (13UL)                    /*!< USB_SETUP (Bit 13)                                    */
#define USB_USB_RXS0_REG_USB_SETUP_Msk    (0x2000UL)                /*!< USB_SETUP (Bitfield-Mask: 0x01)                       */
#define USB_USB_RXS0_REG_USB_TOGGLE_RX0_Pos (12UL)                  /*!< USB_TOGGLE_RX0 (Bit 12)                               */
#define USB_USB_RXS0_REG_USB_TOGGLE_RX0_Msk (0x1000UL)              /*!< USB_TOGGLE_RX0 (Bitfield-Mask: 0x01)                  */
#define USB_USB_RXS0_REG_USB_RX_LAST_Pos  (11UL)                    /*!< USB_RX_LAST (Bit 11)                                  */
#define USB_USB_RXS0_REG_USB_RX_LAST_Msk  (0x800UL)                 /*!< USB_RX_LAST (Bitfield-Mask: 0x01)                     */
#define USB_USB_RXS0_REG_USB_RCOUNT_Pos   (0UL)                     /*!< USB_RCOUNT (Bit 0)                                    */
#define USB_USB_RXS0_REG_USB_RCOUNT_Msk   (0x7ffUL)                 /*!< USB_RCOUNT (Bitfield-Mask: 0x7ff)                     */
/* =====================================================  USB_RXS1_REG  ====================================================== */
#define USB_USB_RXS1_REG_USB_RXFULL_Pos   (15UL)                    /*!< USB_RXFULL (Bit 15)                                   */
#define USB_USB_RXS1_REG_USB_RXFULL_Msk   (0x8000UL)                /*!< USB_RXFULL (Bitfield-Mask: 0x01)                      */
#define USB_USB_RXS1_REG_USB_RX_ERR_Pos   (14UL)                    /*!< USB_RX_ERR (Bit 14)                                   */
#define USB_USB_RXS1_REG_USB_RX_ERR_Msk   (0x4000UL)                /*!< USB_RX_ERR (Bitfield-Mask: 0x01)                      */
#define USB_USB_RXS1_REG_USB_SETUP_Pos    (13UL)                    /*!< USB_SETUP (Bit 13)                                    */
#define USB_USB_RXS1_REG_USB_SETUP_Msk    (0x2000UL)                /*!< USB_SETUP (Bitfield-Mask: 0x01)                       */
#define USB_USB_RXS1_REG_USB_TOGGLE_RX_Pos (12UL)                   /*!< USB_TOGGLE_RX (Bit 12)                                */
#define USB_USB_RXS1_REG_USB_TOGGLE_RX_Msk (0x1000UL)               /*!< USB_TOGGLE_RX (Bitfield-Mask: 0x01)                   */
#define USB_USB_RXS1_REG_USB_RX_LAST_Pos  (11UL)                    /*!< USB_RX_LAST (Bit 11)                                  */
#define USB_USB_RXS1_REG_USB_RX_LAST_Msk  (0x800UL)                 /*!< USB_RX_LAST (Bitfield-Mask: 0x01)                     */
#define USB_USB_RXS1_REG_USB_RCOUNT_Pos   (0UL)                     /*!< USB_RCOUNT (Bit 0)                                    */
#define USB_USB_RXS1_REG_USB_RCOUNT_Msk   (0x7ffUL)                 /*!< USB_RCOUNT (Bitfield-Mask: 0x7ff)                     */
/* =====================================================  USB_RXS2_REG  ====================================================== */
#define USB_USB_RXS2_REG_USB_RXFULL_Pos   (15UL)                    /*!< USB_RXFULL (Bit 15)                                   */
#define USB_USB_RXS2_REG_USB_RXFULL_Msk   (0x8000UL)                /*!< USB_RXFULL (Bitfield-Mask: 0x01)                      */
#define USB_USB_RXS2_REG_USB_RX_ERR_Pos   (14UL)                    /*!< USB_RX_ERR (Bit 14)                                   */
#define USB_USB_RXS2_REG_USB_RX_ERR_Msk   (0x4000UL)                /*!< USB_RX_ERR (Bitfield-Mask: 0x01)                      */
#define USB_USB_RXS2_REG_USB_SETUP_Pos    (13UL)                    /*!< USB_SETUP (Bit 13)                                    */
#define USB_USB_RXS2_REG_USB_SETUP_Msk    (0x2000UL)                /*!< USB_SETUP (Bitfield-Mask: 0x01)                       */
#define USB_USB_RXS2_REG_USB_TOGGLE_RX_Pos (12UL)                   /*!< USB_TOGGLE_RX (Bit 12)                                */
#define USB_USB_RXS2_REG_USB_TOGGLE_RX_Msk (0x1000UL)               /*!< USB_TOGGLE_RX (Bitfield-Mask: 0x01)                   */
#define USB_USB_RXS2_REG_USB_RX_LAST_Pos  (11UL)                    /*!< USB_RX_LAST (Bit 11)                                  */
#define USB_USB_RXS2_REG_USB_RX_LAST_Msk  (0x800UL)                 /*!< USB_RX_LAST (Bitfield-Mask: 0x01)                     */
#define USB_USB_RXS2_REG_USB_RCOUNT_Pos   (0UL)                     /*!< USB_RCOUNT (Bit 0)                                    */
#define USB_USB_RXS2_REG_USB_RCOUNT_Msk   (0x7ffUL)                 /*!< USB_RCOUNT (Bitfield-Mask: 0x7ff)                     */
/* =====================================================  USB_RXS3_REG  ====================================================== */
#define USB_USB_RXS3_REG_USB_RXFULL_Pos   (15UL)                    /*!< USB_RXFULL (Bit 15)                                   */
#define USB_USB_RXS3_REG_USB_RXFULL_Msk   (0x8000UL)                /*!< USB_RXFULL (Bitfield-Mask: 0x01)                      */
#define USB_USB_RXS3_REG_USB_RX_ERR_Pos   (14UL)                    /*!< USB_RX_ERR (Bit 14)                                   */
#define USB_USB_RXS3_REG_USB_RX_ERR_Msk   (0x4000UL)                /*!< USB_RX_ERR (Bitfield-Mask: 0x01)                      */
#define USB_USB_RXS3_REG_USB_SETUP_Pos    (13UL)                    /*!< USB_SETUP (Bit 13)                                    */
#define USB_USB_RXS3_REG_USB_SETUP_Msk    (0x2000UL)                /*!< USB_SETUP (Bitfield-Mask: 0x01)                       */
#define USB_USB_RXS3_REG_USB_TOGGLE_RX_Pos (12UL)                   /*!< USB_TOGGLE_RX (Bit 12)                                */
#define USB_USB_RXS3_REG_USB_TOGGLE_RX_Msk (0x1000UL)               /*!< USB_TOGGLE_RX (Bitfield-Mask: 0x01)                   */
#define USB_USB_RXS3_REG_USB_RX_LAST_Pos  (11UL)                    /*!< USB_RX_LAST (Bit 11)                                  */
#define USB_USB_RXS3_REG_USB_RX_LAST_Msk  (0x800UL)                 /*!< USB_RX_LAST (Bitfield-Mask: 0x01)                     */
#define USB_USB_RXS3_REG_USB_RCOUNT_Pos   (0UL)                     /*!< USB_RCOUNT (Bit 0)                                    */
#define USB_USB_RXS3_REG_USB_RCOUNT_Msk   (0x7ffUL)                 /*!< USB_RCOUNT (Bitfield-Mask: 0x7ff)                     */
/* ======================================================  USB_TCR_REG  ====================================================== */
#define USB_USB_TCR_REG_USB_VADJ_Pos      (5UL)                     /*!< USB_VADJ (Bit 5)                                      */
#define USB_USB_TCR_REG_USB_VADJ_Msk      (0xe0UL)                  /*!< USB_VADJ (Bitfield-Mask: 0x07)                        */
#define USB_USB_TCR_REG_USB_CADJ_Pos      (0UL)                     /*!< USB_CADJ (Bit 0)                                      */
#define USB_USB_TCR_REG_USB_CADJ_Msk      (0x1fUL)                  /*!< USB_CADJ (Bitfield-Mask: 0x1f)                        */
/* =====================================================  USB_TXC0_REG  ====================================================== */
#define USB_USB_TXC0_REG_USB_IGN_IN_Pos   (4UL)                     /*!< USB_IGN_IN (Bit 4)                                    */
#define USB_USB_TXC0_REG_USB_IGN_IN_Msk   (0x10UL)                  /*!< USB_IGN_IN (Bitfield-Mask: 0x01)                      */
#define USB_USB_TXC0_REG_USB_FLUSH_Pos    (3UL)                     /*!< USB_FLUSH (Bit 3)                                     */
#define USB_USB_TXC0_REG_USB_FLUSH_Msk    (0x8UL)                   /*!< USB_FLUSH (Bitfield-Mask: 0x01)                       */
#define USB_USB_TXC0_REG_USB_TOGGLE_TX0_Pos (2UL)                   /*!< USB_TOGGLE_TX0 (Bit 2)                                */
#define USB_USB_TXC0_REG_USB_TOGGLE_TX0_Msk (0x4UL)                 /*!< USB_TOGGLE_TX0 (Bitfield-Mask: 0x01)                  */
#define USB_USB_TXC0_REG_USB_TX_EN_Pos    (0UL)                     /*!< USB_TX_EN (Bit 0)                                     */
#define USB_USB_TXC0_REG_USB_TX_EN_Msk    (0x1UL)                   /*!< USB_TX_EN (Bitfield-Mask: 0x01)                       */
/* =====================================================  USB_TXC1_REG  ====================================================== */
#define USB_USB_TXC1_REG_USB_IGN_ISOMSK_Pos (7UL)                   /*!< USB_IGN_ISOMSK (Bit 7)                                */
#define USB_USB_TXC1_REG_USB_IGN_ISOMSK_Msk (0x80UL)                /*!< USB_IGN_ISOMSK (Bitfield-Mask: 0x01)                  */
#define USB_USB_TXC1_REG_USB_TFWL_Pos     (5UL)                     /*!< USB_TFWL (Bit 5)                                      */
#define USB_USB_TXC1_REG_USB_TFWL_Msk     (0x60UL)                  /*!< USB_TFWL (Bitfield-Mask: 0x03)                        */
#define USB_USB_TXC1_REG_USB_RFF_Pos      (4UL)                     /*!< USB_RFF (Bit 4)                                       */
#define USB_USB_TXC1_REG_USB_RFF_Msk      (0x10UL)                  /*!< USB_RFF (Bitfield-Mask: 0x01)                         */
#define USB_USB_TXC1_REG_USB_FLUSH_Pos    (3UL)                     /*!< USB_FLUSH (Bit 3)                                     */
#define USB_USB_TXC1_REG_USB_FLUSH_Msk    (0x8UL)                   /*!< USB_FLUSH (Bitfield-Mask: 0x01)                       */
#define USB_USB_TXC1_REG_USB_TOGGLE_TX_Pos (2UL)                    /*!< USB_TOGGLE_TX (Bit 2)                                 */
#define USB_USB_TXC1_REG_USB_TOGGLE_TX_Msk (0x4UL)                  /*!< USB_TOGGLE_TX (Bitfield-Mask: 0x01)                   */
#define USB_USB_TXC1_REG_USB_LAST_Pos     (1UL)                     /*!< USB_LAST (Bit 1)                                      */
#define USB_USB_TXC1_REG_USB_LAST_Msk     (0x2UL)                   /*!< USB_LAST (Bitfield-Mask: 0x01)                        */
#define USB_USB_TXC1_REG_USB_TX_EN_Pos    (0UL)                     /*!< USB_TX_EN (Bit 0)                                     */
#define USB_USB_TXC1_REG_USB_TX_EN_Msk    (0x1UL)                   /*!< USB_TX_EN (Bitfield-Mask: 0x01)                       */
/* =====================================================  USB_TXC2_REG  ====================================================== */
#define USB_USB_TXC2_REG_USB_IGN_ISOMSK_Pos (7UL)                   /*!< USB_IGN_ISOMSK (Bit 7)                                */
#define USB_USB_TXC2_REG_USB_IGN_ISOMSK_Msk (0x80UL)                /*!< USB_IGN_ISOMSK (Bitfield-Mask: 0x01)                  */
#define USB_USB_TXC2_REG_USB_TFWL_Pos     (5UL)                     /*!< USB_TFWL (Bit 5)                                      */
#define USB_USB_TXC2_REG_USB_TFWL_Msk     (0x60UL)                  /*!< USB_TFWL (Bitfield-Mask: 0x03)                        */
#define USB_USB_TXC2_REG_USB_RFF_Pos      (4UL)                     /*!< USB_RFF (Bit 4)                                       */
#define USB_USB_TXC2_REG_USB_RFF_Msk      (0x10UL)                  /*!< USB_RFF (Bitfield-Mask: 0x01)                         */
#define USB_USB_TXC2_REG_USB_FLUSH_Pos    (3UL)                     /*!< USB_FLUSH (Bit 3)                                     */
#define USB_USB_TXC2_REG_USB_FLUSH_Msk    (0x8UL)                   /*!< USB_FLUSH (Bitfield-Mask: 0x01)                       */
#define USB_USB_TXC2_REG_USB_TOGGLE_TX_Pos (2UL)                    /*!< USB_TOGGLE_TX (Bit 2)                                 */
#define USB_USB_TXC2_REG_USB_TOGGLE_TX_Msk (0x4UL)                  /*!< USB_TOGGLE_TX (Bitfield-Mask: 0x01)                   */
#define USB_USB_TXC2_REG_USB_LAST_Pos     (1UL)                     /*!< USB_LAST (Bit 1)                                      */
#define USB_USB_TXC2_REG_USB_LAST_Msk     (0x2UL)                   /*!< USB_LAST (Bitfield-Mask: 0x01)                        */
#define USB_USB_TXC2_REG_USB_TX_EN_Pos    (0UL)                     /*!< USB_TX_EN (Bit 0)                                     */
#define USB_USB_TXC2_REG_USB_TX_EN_Msk    (0x1UL)                   /*!< USB_TX_EN (Bitfield-Mask: 0x01)                       */
/* =====================================================  USB_TXC3_REG  ====================================================== */
#define USB_USB_TXC3_REG_USB_IGN_ISOMSK_Pos (7UL)                   /*!< USB_IGN_ISOMSK (Bit 7)                                */
#define USB_USB_TXC3_REG_USB_IGN_ISOMSK_Msk (0x80UL)                /*!< USB_IGN_ISOMSK (Bitfield-Mask: 0x01)                  */
#define USB_USB_TXC3_REG_USB_TFWL_Pos     (5UL)                     /*!< USB_TFWL (Bit 5)                                      */
#define USB_USB_TXC3_REG_USB_TFWL_Msk     (0x60UL)                  /*!< USB_TFWL (Bitfield-Mask: 0x03)                        */
#define USB_USB_TXC3_REG_USB_RFF_Pos      (4UL)                     /*!< USB_RFF (Bit 4)                                       */
#define USB_USB_TXC3_REG_USB_RFF_Msk      (0x10UL)                  /*!< USB_RFF (Bitfield-Mask: 0x01)                         */
#define USB_USB_TXC3_REG_USB_FLUSH_Pos    (3UL)                     /*!< USB_FLUSH (Bit 3)                                     */
#define USB_USB_TXC3_REG_USB_FLUSH_Msk    (0x8UL)                   /*!< USB_FLUSH (Bitfield-Mask: 0x01)                       */
#define USB_USB_TXC3_REG_USB_TOGGLE_TX_Pos (2UL)                    /*!< USB_TOGGLE_TX (Bit 2)                                 */
#define USB_USB_TXC3_REG_USB_TOGGLE_TX_Msk (0x4UL)                  /*!< USB_TOGGLE_TX (Bitfield-Mask: 0x01)                   */
#define USB_USB_TXC3_REG_USB_LAST_Pos     (1UL)                     /*!< USB_LAST (Bit 1)                                      */
#define USB_USB_TXC3_REG_USB_LAST_Msk     (0x2UL)                   /*!< USB_LAST (Bitfield-Mask: 0x01)                        */
#define USB_USB_TXC3_REG_USB_TX_EN_Pos    (0UL)                     /*!< USB_TX_EN (Bit 0)                                     */
#define USB_USB_TXC3_REG_USB_TX_EN_Msk    (0x1UL)                   /*!< USB_TX_EN (Bitfield-Mask: 0x01)                       */
/* =====================================================  USB_TXD0_REG  ====================================================== */
#define USB_USB_TXD0_REG_USB_TXFD_Pos     (0UL)                     /*!< USB_TXFD (Bit 0)                                      */
#define USB_USB_TXD0_REG_USB_TXFD_Msk     (0xffUL)                  /*!< USB_TXFD (Bitfield-Mask: 0xff)                        */
/* =====================================================  USB_TXD1_REG  ====================================================== */
#define USB_USB_TXD1_REG_USB_TXFD_Pos     (0UL)                     /*!< USB_TXFD (Bit 0)                                      */
#define USB_USB_TXD1_REG_USB_TXFD_Msk     (0xffUL)                  /*!< USB_TXFD (Bitfield-Mask: 0xff)                        */
/* =====================================================  USB_TXD2_REG  ====================================================== */
#define USB_USB_TXD2_REG_USB_TXFD_Pos     (0UL)                     /*!< USB_TXFD (Bit 0)                                      */
#define USB_USB_TXD2_REG_USB_TXFD_Msk     (0xffUL)                  /*!< USB_TXFD (Bitfield-Mask: 0xff)                        */
/* =====================================================  USB_TXD3_REG  ====================================================== */
#define USB_USB_TXD3_REG_USB_TXFD_Pos     (0UL)                     /*!< USB_TXFD (Bit 0)                                      */
#define USB_USB_TXD3_REG_USB_TXFD_Msk     (0xffUL)                  /*!< USB_TXFD (Bitfield-Mask: 0xff)                        */
/* =====================================================  USB_TXEV_REG  ====================================================== */
#define USB_USB_TXEV_REG_USB_TXUDRRN31_Pos (4UL)                    /*!< USB_TXUDRRN31 (Bit 4)                                 */
#define USB_USB_TXEV_REG_USB_TXUDRRN31_Msk (0x70UL)                 /*!< USB_TXUDRRN31 (Bitfield-Mask: 0x07)                   */
#define USB_USB_TXEV_REG_USB_TXFIFO31_Pos (0UL)                     /*!< USB_TXFIFO31 (Bit 0)                                  */
#define USB_USB_TXEV_REG_USB_TXFIFO31_Msk (0x7UL)                   /*!< USB_TXFIFO31 (Bitfield-Mask: 0x07)                    */
/* =====================================================  USB_TXMSK_REG  ===================================================== */
#define USB_USB_TXMSK_REG_USB_M_TXUDRRN31_Pos (4UL)                 /*!< USB_M_TXUDRRN31 (Bit 4)                               */
#define USB_USB_TXMSK_REG_USB_M_TXUDRRN31_Msk (0x70UL)              /*!< USB_M_TXUDRRN31 (Bitfield-Mask: 0x07)                 */
#define USB_USB_TXMSK_REG_USB_M_TXFIFO31_Pos (0UL)                  /*!< USB_M_TXFIFO31 (Bit 0)                                */
#define USB_USB_TXMSK_REG_USB_M_TXFIFO31_Msk (0x7UL)                /*!< USB_M_TXFIFO31 (Bitfield-Mask: 0x07)                  */
/* =====================================================  USB_TXS0_REG  ====================================================== */
#define USB_USB_TXS0_REG_USB_ACK_STAT_Pos (12UL)                    /*!< USB_ACK_STAT (Bit 12)                                 */
#define USB_USB_TXS0_REG_USB_ACK_STAT_Msk (0x1000UL)                /*!< USB_ACK_STAT (Bitfield-Mask: 0x01)                    */
#define USB_USB_TXS0_REG_USB_TX_DONE_Pos  (11UL)                    /*!< USB_TX_DONE (Bit 11)                                  */
#define USB_USB_TXS0_REG_USB_TX_DONE_Msk  (0x800UL)                 /*!< USB_TX_DONE (Bitfield-Mask: 0x01)                     */
#define USB_USB_TXS0_REG_USB_TCOUNT_Pos   (0UL)                     /*!< USB_TCOUNT (Bit 0)                                    */
#define USB_USB_TXS0_REG_USB_TCOUNT_Msk   (0x7ffUL)                 /*!< USB_TCOUNT (Bitfield-Mask: 0x7ff)                     */
/* =====================================================  USB_TXS1_REG  ====================================================== */
#define USB_USB_TXS1_REG_USB_TX_URUN_Pos  (13UL)                    /*!< USB_TX_URUN (Bit 13)                                  */
#define USB_USB_TXS1_REG_USB_TX_URUN_Msk  (0x2000UL)                /*!< USB_TX_URUN (Bitfield-Mask: 0x01)                     */
#define USB_USB_TXS1_REG_USB_ACK_STAT_Pos (12UL)                    /*!< USB_ACK_STAT (Bit 12)                                 */
#define USB_USB_TXS1_REG_USB_ACK_STAT_Msk (0x1000UL)                /*!< USB_ACK_STAT (Bitfield-Mask: 0x01)                    */
#define USB_USB_TXS1_REG_USB_TX_DONE_Pos  (11UL)                    /*!< USB_TX_DONE (Bit 11)                                  */
#define USB_USB_TXS1_REG_USB_TX_DONE_Msk  (0x800UL)                 /*!< USB_TX_DONE (Bitfield-Mask: 0x01)                     */
#define USB_USB_TXS1_REG_USB_TCOUNT_Pos   (0UL)                     /*!< USB_TCOUNT (Bit 0)                                    */
#define USB_USB_TXS1_REG_USB_TCOUNT_Msk   (0x7ffUL)                 /*!< USB_TCOUNT (Bitfield-Mask: 0x7ff)                     */
/* =====================================================  USB_TXS2_REG  ====================================================== */
#define USB_USB_TXS2_REG_USB_TX_URUN_Pos  (13UL)                    /*!< USB_TX_URUN (Bit 13)                                  */
#define USB_USB_TXS2_REG_USB_TX_URUN_Msk  (0x2000UL)                /*!< USB_TX_URUN (Bitfield-Mask: 0x01)                     */
#define USB_USB_TXS2_REG_USB_ACK_STAT_Pos (12UL)                    /*!< USB_ACK_STAT (Bit 12)                                 */
#define USB_USB_TXS2_REG_USB_ACK_STAT_Msk (0x1000UL)                /*!< USB_ACK_STAT (Bitfield-Mask: 0x01)                    */
#define USB_USB_TXS2_REG_USB_TX_DONE_Pos  (11UL)                    /*!< USB_TX_DONE (Bit 11)                                  */
#define USB_USB_TXS2_REG_USB_TX_DONE_Msk  (0x800UL)                 /*!< USB_TX_DONE (Bitfield-Mask: 0x01)                     */
#define USB_USB_TXS2_REG_USB_TCOUNT_Pos   (0UL)                     /*!< USB_TCOUNT (Bit 0)                                    */
#define USB_USB_TXS2_REG_USB_TCOUNT_Msk   (0x7ffUL)                 /*!< USB_TCOUNT (Bitfield-Mask: 0x7ff)                     */
/* =====================================================  USB_TXS3_REG  ====================================================== */
#define USB_USB_TXS3_REG_USB_TX_URUN_Pos  (13UL)                    /*!< USB_TX_URUN (Bit 13)                                  */
#define USB_USB_TXS3_REG_USB_TX_URUN_Msk  (0x2000UL)                /*!< USB_TX_URUN (Bitfield-Mask: 0x01)                     */
#define USB_USB_TXS3_REG_USB_ACK_STAT_Pos (12UL)                    /*!< USB_ACK_STAT (Bit 12)                                 */
#define USB_USB_TXS3_REG_USB_ACK_STAT_Msk (0x1000UL)                /*!< USB_ACK_STAT (Bitfield-Mask: 0x01)                    */
#define USB_USB_TXS3_REG_USB_TX_DONE_Pos  (11UL)                    /*!< USB_TX_DONE (Bit 11)                                  */
#define USB_USB_TXS3_REG_USB_TX_DONE_Msk  (0x800UL)                 /*!< USB_TX_DONE (Bitfield-Mask: 0x01)                     */
#define USB_USB_TXS3_REG_USB_TCOUNT_Pos   (0UL)                     /*!< USB_TCOUNT (Bit 0)                                    */
#define USB_USB_TXS3_REG_USB_TCOUNT_Msk   (0x7ffUL)                 /*!< USB_TCOUNT (Bitfield-Mask: 0x7ff)                     */
/* ======================================================  USB_UTR_REG  ====================================================== */
#define USB_USB_UTR_REG_USB_DIAG_Pos      (7UL)                     /*!< USB_DIAG (Bit 7)                                      */
#define USB_USB_UTR_REG_USB_DIAG_Msk      (0x80UL)                  /*!< USB_DIAG (Bitfield-Mask: 0x01)                        */
#define USB_USB_UTR_REG_USB_NCRC_Pos      (6UL)                     /*!< USB_NCRC (Bit 6)                                      */
#define USB_USB_UTR_REG_USB_NCRC_Msk      (0x40UL)                  /*!< USB_NCRC (Bitfield-Mask: 0x01)                        */
#define USB_USB_UTR_REG_USB_SF_Pos        (5UL)                     /*!< USB_SF (Bit 5)                                        */
#define USB_USB_UTR_REG_USB_SF_Msk        (0x20UL)                  /*!< USB_SF (Bitfield-Mask: 0x01)                          */
#define USB_USB_UTR_REG_USB_UTR_RES_Pos   (0UL)                     /*!< USB_UTR_RES (Bit 0)                                   */
#define USB_USB_UTR_REG_USB_UTR_RES_Msk   (0x1fUL)                  /*!< USB_UTR_RES (Bitfield-Mask: 0x1f)                     */
/* ====================================================  USB_UX20CDR_REG  ==================================================== */
#define USB_USB_UX20CDR_REG_RPU_TEST7_Pos (7UL)                     /*!< RPU_TEST7 (Bit 7)                                     */
#define USB_USB_UX20CDR_REG_RPU_TEST7_Msk (0x80UL)                  /*!< RPU_TEST7 (Bitfield-Mask: 0x01)                       */
#define USB_USB_UX20CDR_REG_RPU_TEST_SW2_Pos (6UL)                  /*!< RPU_TEST_SW2 (Bit 6)                                  */
#define USB_USB_UX20CDR_REG_RPU_TEST_SW2_Msk (0x40UL)               /*!< RPU_TEST_SW2 (Bitfield-Mask: 0x01)                    */
#define USB_USB_UX20CDR_REG_RPU_TEST_SW1_Pos (5UL)                  /*!< RPU_TEST_SW1 (Bit 5)                                  */
#define USB_USB_UX20CDR_REG_RPU_TEST_SW1_Msk (0x20UL)               /*!< RPU_TEST_SW1 (Bitfield-Mask: 0x01)                    */
#define USB_USB_UX20CDR_REG_RPU_TEST_EN_Pos (4UL)                   /*!< RPU_TEST_EN (Bit 4)                                   */
#define USB_USB_UX20CDR_REG_RPU_TEST_EN_Msk (0x10UL)                /*!< RPU_TEST_EN (Bitfield-Mask: 0x01)                     */
#define USB_USB_UX20CDR_REG_RPU_TEST_SW1DM_Pos (2UL)                /*!< RPU_TEST_SW1DM (Bit 2)                                */
#define USB_USB_UX20CDR_REG_RPU_TEST_SW1DM_Msk (0x4UL)              /*!< RPU_TEST_SW1DM (Bitfield-Mask: 0x01)                  */
#define USB_USB_UX20CDR_REG_RPU_RCDELAY_Pos (1UL)                   /*!< RPU_RCDELAY (Bit 1)                                   */
#define USB_USB_UX20CDR_REG_RPU_RCDELAY_Msk (0x2UL)                 /*!< RPU_RCDELAY (Bitfield-Mask: 0x01)                     */
#define USB_USB_UX20CDR_REG_RPU_SSPROTEN_Pos (0UL)                  /*!< RPU_SSPROTEN (Bit 0)                                  */
#define USB_USB_UX20CDR_REG_RPU_SSPROTEN_Msk (0x1UL)                /*!< RPU_SSPROTEN (Bitfield-Mask: 0x01)                    */
/* ====================================================  USB_XCVDIAG_REG  ==================================================== */
#define USB_USB_XCVDIAG_REG_USB_VPIN_Pos  (7UL)                     /*!< USB_VPIN (Bit 7)                                      */
#define USB_USB_XCVDIAG_REG_USB_VPIN_Msk  (0x80UL)                  /*!< USB_VPIN (Bitfield-Mask: 0x01)                        */
#define USB_USB_XCVDIAG_REG_USB_VMIN_Pos  (6UL)                     /*!< USB_VMIN (Bit 6)                                      */
#define USB_USB_XCVDIAG_REG_USB_VMIN_Msk  (0x40UL)                  /*!< USB_VMIN (Bitfield-Mask: 0x01)                        */
#define USB_USB_XCVDIAG_REG_USB_RCV_Pos   (5UL)                     /*!< USB_RCV (Bit 5)                                       */
#define USB_USB_XCVDIAG_REG_USB_RCV_Msk   (0x20UL)                  /*!< USB_RCV (Bitfield-Mask: 0x01)                         */
#define USB_USB_XCVDIAG_REG_USB_XCV_TXEN_Pos (3UL)                  /*!< USB_XCV_TXEN (Bit 3)                                  */
#define USB_USB_XCVDIAG_REG_USB_XCV_TXEN_Msk (0x8UL)                /*!< USB_XCV_TXEN (Bitfield-Mask: 0x01)                    */
#define USB_USB_XCVDIAG_REG_USB_XCV_TXn_Pos (2UL)                   /*!< USB_XCV_TXn (Bit 2)                                   */
#define USB_USB_XCVDIAG_REG_USB_XCV_TXn_Msk (0x4UL)                 /*!< USB_XCV_TXn (Bitfield-Mask: 0x01)                     */
#define USB_USB_XCVDIAG_REG_USB_XCV_TXp_Pos (1UL)                   /*!< USB_XCV_TXp (Bit 1)                                   */
#define USB_USB_XCVDIAG_REG_USB_XCV_TXp_Msk (0x2UL)                 /*!< USB_XCV_TXp (Bitfield-Mask: 0x01)                     */
#define USB_USB_XCVDIAG_REG_USB_XCV_TEST_Pos (0UL)                  /*!< USB_XCV_TEST (Bit 0)                                  */
#define USB_USB_XCVDIAG_REG_USB_XCV_TEST_Msk (0x1UL)                /*!< USB_XCV_TEST (Bitfield-Mask: 0x01)                    */


/* =========================================================================================================================== */
/* ================                                            VAD                                            ================ */
/* =========================================================================================================================== */

/* =====================================================  VAD_CTRL0_REG  ===================================================== */
#define VAD_VAD_CTRL0_REG_VAD_VTRACK_Pos  (6UL)                     /*!< VAD_VTRACK (Bit 6)                                    */
#define VAD_VAD_CTRL0_REG_VAD_VTRACK_Msk  (0xc0UL)                  /*!< VAD_VTRACK (Bitfield-Mask: 0x03)                      */
#define VAD_VAD_CTRL0_REG_VAD_NTRACK_Pos  (3UL)                     /*!< VAD_NTRACK (Bit 3)                                    */
#define VAD_VAD_CTRL0_REG_VAD_NTRACK_Msk  (0x38UL)                  /*!< VAD_NTRACK (Bitfield-Mask: 0x07)                      */
#define VAD_VAD_CTRL0_REG_VAD_PWR_LVL_SNSTVTY_Pos (0UL)             /*!< VAD_PWR_LVL_SNSTVTY (Bit 0)                           */
#define VAD_VAD_CTRL0_REG_VAD_PWR_LVL_SNSTVTY_Msk (0x7UL)           /*!< VAD_PWR_LVL_SNSTVTY (Bitfield-Mask: 0x07)             */
/* =====================================================  VAD_CTRL1_REG  ===================================================== */
#define VAD_VAD_CTRL1_REG_VAD_MINDELAY_Pos (3UL)                    /*!< VAD_MINDELAY (Bit 3)                                  */
#define VAD_VAD_CTRL1_REG_VAD_MINDELAY_Msk (0x18UL)                 /*!< VAD_MINDELAY (Bitfield-Mask: 0x03)                    */
#define VAD_VAD_CTRL1_REG_VAD_MINEVENT_Pos (0UL)                    /*!< VAD_MINEVENT (Bit 0)                                  */
#define VAD_VAD_CTRL1_REG_VAD_MINEVENT_Msk (0x7UL)                  /*!< VAD_MINEVENT (Bitfield-Mask: 0x07)                    */
/* =====================================================  VAD_CTRL2_REG  ===================================================== */
#define VAD_VAD_CTRL2_REG_VAD_NFI_DET_Pos (0UL)                     /*!< VAD_NFI_DET (Bit 0)                                   */
#define VAD_VAD_CTRL2_REG_VAD_NFI_DET_Msk (0x3fUL)                  /*!< VAD_NFI_DET (Bitfield-Mask: 0x3f)                     */
/* =====================================================  VAD_CTRL3_REG  ===================================================== */
#define VAD_VAD_CTRL3_REG_VAD_SB_Pos      (7UL)                     /*!< VAD_SB (Bit 7)                                        */
#define VAD_VAD_CTRL3_REG_VAD_SB_Msk      (0x80UL)                  /*!< VAD_SB (Bitfield-Mask: 0x01)                          */
#define VAD_VAD_CTRL3_REG_VAD_SLEEP_Pos   (6UL)                     /*!< VAD_SLEEP (Bit 6)                                     */
#define VAD_VAD_CTRL3_REG_VAD_SLEEP_Msk   (0x40UL)                  /*!< VAD_SLEEP (Bitfield-Mask: 0x01)                       */
#define VAD_VAD_CTRL3_REG_VAD_MCLK_DIV_Pos (3UL)                    /*!< VAD_MCLK_DIV (Bit 3)                                  */
#define VAD_VAD_CTRL3_REG_VAD_MCLK_DIV_Msk (0x38UL)                 /*!< VAD_MCLK_DIV (Bitfield-Mask: 0x07)                    */
/* =====================================================  VAD_CTRL4_REG  ===================================================== */
#define VAD_VAD_CTRL4_REG_VAD_IRQ_MODE_Pos (2UL)                    /*!< VAD_IRQ_MODE (Bit 2)                                  */
#define VAD_VAD_CTRL4_REG_VAD_IRQ_MODE_Msk (0x4UL)                  /*!< VAD_IRQ_MODE (Bitfield-Mask: 0x01)                    */
#define VAD_VAD_CTRL4_REG_VAD_IRQ_FLAG_Pos (1UL)                    /*!< VAD_IRQ_FLAG (Bit 1)                                  */
#define VAD_VAD_CTRL4_REG_VAD_IRQ_FLAG_Msk (0x2UL)                  /*!< VAD_IRQ_FLAG (Bitfield-Mask: 0x01)                    */
/* ====================================================  VAD_STATUS_REG  ===================================================== */
#define VAD_VAD_STATUS_REG_VAD_NFI_RD_Pos (0UL)                     /*!< VAD_NFI_RD (Bit 0)                                    */
#define VAD_VAD_STATUS_REG_VAD_NFI_RD_Msk (0x3fUL)                  /*!< VAD_NFI_RD (Bitfield-Mask: 0x3f)                      */


/* =========================================================================================================================== */
/* ================                                          WAKEUP                                           ================ */
/* =========================================================================================================================== */

/* ===================================================  WKUP_CLEAR_P0_REG  =================================================== */
#define WAKEUP_WKUP_CLEAR_P0_REG_WKUP_CLEAR_P0_Pos (0UL)            /*!< WKUP_CLEAR_P0 (Bit 0)                                 */
#define WAKEUP_WKUP_CLEAR_P0_REG_WKUP_CLEAR_P0_Msk (0xffffffffUL)   /*!< WKUP_CLEAR_P0 (Bitfield-Mask: 0xffffffff)             */
/* ===================================================  WKUP_CLEAR_P1_REG  =================================================== */
#define WAKEUP_WKUP_CLEAR_P1_REG_WKUP_CLEAR_P1_Pos (0UL)            /*!< WKUP_CLEAR_P1 (Bit 0)                                 */
#define WAKEUP_WKUP_CLEAR_P1_REG_WKUP_CLEAR_P1_Msk (0xffffffffUL)   /*!< WKUP_CLEAR_P1 (Bitfield-Mask: 0xffffffff)             */
/* ===================================================  WKUP_CLEAR_P2_REG  =================================================== */
#define WAKEUP_WKUP_CLEAR_P2_REG_WKUP_CLEAR_P2_Pos (0UL)            /*!< WKUP_CLEAR_P2 (Bit 0)                                 */
#define WAKEUP_WKUP_CLEAR_P2_REG_WKUP_CLEAR_P2_Msk (0x7fffUL)       /*!< WKUP_CLEAR_P2 (Bitfield-Mask: 0x7fff)                 */
/* =====================================================  WKUP_CTRL_REG  ===================================================== */
#define WAKEUP_WKUP_CTRL_REG_WKUP_ENABLE_IRQ_Pos (7UL)              /*!< WKUP_ENABLE_IRQ (Bit 7)                               */
#define WAKEUP_WKUP_CTRL_REG_WKUP_ENABLE_IRQ_Msk (0x80UL)           /*!< WKUP_ENABLE_IRQ (Bitfield-Mask: 0x01)                 */
#define WAKEUP_WKUP_CTRL_REG_WKUP_SFT_KEYHIT_Pos (6UL)              /*!< WKUP_SFT_KEYHIT (Bit 6)                               */
#define WAKEUP_WKUP_CTRL_REG_WKUP_SFT_KEYHIT_Msk (0x40UL)           /*!< WKUP_SFT_KEYHIT (Bitfield-Mask: 0x01)                 */
#define WAKEUP_WKUP_CTRL_REG_WKUP_DEB_VALUE_Pos (0UL)               /*!< WKUP_DEB_VALUE (Bit 0)                                */
#define WAKEUP_WKUP_CTRL_REG_WKUP_DEB_VALUE_Msk (0x3fUL)            /*!< WKUP_DEB_VALUE (Bitfield-Mask: 0x3f)                  */
/* ====================================================  WKUP_POL_P0_REG  ==================================================== */
#define WAKEUP_WKUP_POL_P0_REG_WKUP_POL_P0_Pos (0UL)                /*!< WKUP_POL_P0 (Bit 0)                                   */
#define WAKEUP_WKUP_POL_P0_REG_WKUP_POL_P0_Msk (0xffffffffUL)       /*!< WKUP_POL_P0 (Bitfield-Mask: 0xffffffff)               */
/* ====================================================  WKUP_POL_P1_REG  ==================================================== */
#define WAKEUP_WKUP_POL_P1_REG_WKUP_POL_P1_Pos (0UL)                /*!< WKUP_POL_P1 (Bit 0)                                   */
#define WAKEUP_WKUP_POL_P1_REG_WKUP_POL_P1_Msk (0xffffffffUL)       /*!< WKUP_POL_P1 (Bitfield-Mask: 0xffffffff)               */
/* ====================================================  WKUP_POL_P2_REG  ==================================================== */
#define WAKEUP_WKUP_POL_P2_REG_WKUP_POL_P2_Pos (0UL)                /*!< WKUP_POL_P2 (Bit 0)                                   */
#define WAKEUP_WKUP_POL_P2_REG_WKUP_POL_P2_Msk (0x7fffUL)           /*!< WKUP_POL_P2 (Bitfield-Mask: 0x7fff)                   */
/* ==================================================  WKUP_RESET_IRQ_REG  =================================================== */
#define WAKEUP_WKUP_RESET_IRQ_REG_WKUP_IRQ_RST_Pos (0UL)            /*!< WKUP_IRQ_RST (Bit 0)                                  */
#define WAKEUP_WKUP_RESET_IRQ_REG_WKUP_IRQ_RST_Msk (0xffffUL)       /*!< WKUP_IRQ_RST (Bitfield-Mask: 0xffff)                  */
/* =================================================  WKUP_SEL1_GPIO_P0_REG  ================================================= */
#define WAKEUP_WKUP_SEL1_GPIO_P0_REG_WKUP_SEL1_GPIO_P0_Pos (0UL)    /*!< WKUP_SEL1_GPIO_P0 (Bit 0)                             */
#define WAKEUP_WKUP_SEL1_GPIO_P0_REG_WKUP_SEL1_GPIO_P0_Msk (0xffffffffUL) /*!< WKUP_SEL1_GPIO_P0 (Bitfield-Mask: 0xffffffff)   */
/* =================================================  WKUP_SEL1_GPIO_P1_REG  ================================================= */
#define WAKEUP_WKUP_SEL1_GPIO_P1_REG_WKUP_SEL1_GPIO_P1_Pos (0UL)    /*!< WKUP_SEL1_GPIO_P1 (Bit 0)                             */
#define WAKEUP_WKUP_SEL1_GPIO_P1_REG_WKUP_SEL1_GPIO_P1_Msk (0xffffffffUL) /*!< WKUP_SEL1_GPIO_P1 (Bitfield-Mask: 0xffffffff)   */
/* =================================================  WKUP_SEL1_GPIO_P2_REG  ================================================= */
#define WAKEUP_WKUP_SEL1_GPIO_P2_REG_WKUP_SEL1_GPIO_P2_Pos (0UL)    /*!< WKUP_SEL1_GPIO_P2 (Bit 0)                             */
#define WAKEUP_WKUP_SEL1_GPIO_P2_REG_WKUP_SEL1_GPIO_P2_Msk (0x7fffUL) /*!< WKUP_SEL1_GPIO_P2 (Bitfield-Mask: 0x7fff)           */
/* ==================================================  WKUP_SELECT_P0_REG  =================================================== */
#define WAKEUP_WKUP_SELECT_P0_REG_WKUP_SELECT_P0_Pos (0UL)          /*!< WKUP_SELECT_P0 (Bit 0)                                */
#define WAKEUP_WKUP_SELECT_P0_REG_WKUP_SELECT_P0_Msk (0xffffffffUL) /*!< WKUP_SELECT_P0 (Bitfield-Mask: 0xffffffff)            */
/* ==================================================  WKUP_SELECT_P1_REG  =================================================== */
#define WAKEUP_WKUP_SELECT_P1_REG_WKUP_SELECT_P1_Pos (0UL)          /*!< WKUP_SELECT_P1 (Bit 0)                                */
#define WAKEUP_WKUP_SELECT_P1_REG_WKUP_SELECT_P1_Msk (0xffffffffUL) /*!< WKUP_SELECT_P1 (Bitfield-Mask: 0xffffffff)            */
/* ==================================================  WKUP_SELECT_P2_REG  =================================================== */
#define WAKEUP_WKUP_SELECT_P2_REG_WKUP_SELECT_P2_Pos (0UL)          /*!< WKUP_SELECT_P2 (Bit 0)                                */
#define WAKEUP_WKUP_SELECT_P2_REG_WKUP_SELECT_P2_Msk (0x7fffUL)     /*!< WKUP_SELECT_P2 (Bitfield-Mask: 0x7fff)                */
/* =================================================  WKUP_SEL_GPIO_P0_REG  ================================================== */
#define WAKEUP_WKUP_SEL_GPIO_P0_REG_WKUP_SEL_GPIO_P0_Pos (0UL)      /*!< WKUP_SEL_GPIO_P0 (Bit 0)                              */
#define WAKEUP_WKUP_SEL_GPIO_P0_REG_WKUP_SEL_GPIO_P0_Msk (0xffffffffUL) /*!< WKUP_SEL_GPIO_P0 (Bitfield-Mask: 0xffffffff)      */
/* =================================================  WKUP_SEL_GPIO_P1_REG  ================================================== */
#define WAKEUP_WKUP_SEL_GPIO_P1_REG_WKUP_SEL_GPIO_P1_Pos (0UL)      /*!< WKUP_SEL_GPIO_P1 (Bit 0)                              */
#define WAKEUP_WKUP_SEL_GPIO_P1_REG_WKUP_SEL_GPIO_P1_Msk (0xffffffffUL) /*!< WKUP_SEL_GPIO_P1 (Bitfield-Mask: 0xffffffff)      */
/* =================================================  WKUP_SEL_GPIO_P2_REG  ================================================== */
#define WAKEUP_WKUP_SEL_GPIO_P2_REG_WKUP_SEL_GPIO_P2_Pos (0UL)      /*!< WKUP_SEL_GPIO_P2 (Bit 0)                              */
#define WAKEUP_WKUP_SEL_GPIO_P2_REG_WKUP_SEL_GPIO_P2_Msk (0x7fffUL) /*!< WKUP_SEL_GPIO_P2 (Bitfield-Mask: 0x7fff)              */
/* ==================================================  WKUP_STATUS_P0_REG  =================================================== */
#define WAKEUP_WKUP_STATUS_P0_REG_WKUP_STAT_P0_Pos (0UL)            /*!< WKUP_STAT_P0 (Bit 0)                                  */
#define WAKEUP_WKUP_STATUS_P0_REG_WKUP_STAT_P0_Msk (0xffffffffUL)   /*!< WKUP_STAT_P0 (Bitfield-Mask: 0xffffffff)              */
/* ==================================================  WKUP_STATUS_P1_REG  =================================================== */
#define WAKEUP_WKUP_STATUS_P1_REG_WKUP_STAT_P1_Pos (0UL)            /*!< WKUP_STAT_P1 (Bit 0)                                  */
#define WAKEUP_WKUP_STATUS_P1_REG_WKUP_STAT_P1_Msk (0xffffffffUL)   /*!< WKUP_STAT_P1 (Bitfield-Mask: 0xffffffff)              */
/* ==================================================  WKUP_STATUS_P2_REG  =================================================== */
#define WAKEUP_WKUP_STATUS_P2_REG_WKUP_STAT_P2_Pos (0UL)            /*!< WKUP_STAT_P2 (Bit 0)                                  */
#define WAKEUP_WKUP_STATUS_P2_REG_WKUP_STAT_P2_Msk (0x7fffUL)       /*!< WKUP_STAT_P2 (Bitfield-Mask: 0x7fff)                  */

/** @} */ /* End of group PosMask_peripherals */


#ifdef __cplusplus
}
#endif

#endif /* DA1470X_H */


/** @} */ /* End of group DA1470x */

/** @} */ /* End of group PLA_BSP_REGISTERS */
